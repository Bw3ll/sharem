dict5_ntdll = {'NtClearEvent': (1, ['HANDLE'], ['EventHandle'], 'NTSTATUS'), 'NtCreateEvent': (5, ['PHANDLE', 'EVENT_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'EVENT_TYPE', 'BOOLEAN'], ['EventHandle', 'DesiredAccess', 'ObjectAttributes', 'EventType', 'InitialState'], 'NTSTATUS'), 'NtCreateEventPair': (3, ['PHANDLE', 'ACCESS_MASK', 'POBJECT_ATTRIBUTES'], ['EventPairHandle', 'DesiredAccess', 'ObjectAttributes'], 'NTSTATUS'), 'NtCreateKeyedEvent': (4, ['PHANDLE', 'EVENT_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'ULONG'], ['KeyedEventHandle', 'DesiredAccess', 'ObjectAttributes', 'Flags'], 'NTSTATUS'), 'NtCreateMutant': (4, ['PHANDLE', 'MUTANT_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'BOOLEAN'], ['MutantHandle', 'DesiredAccess', 'ObjectAttributes', 'InitialOwner'], 'NTSTATUS'), 'NtCreateSemaphore': (5, ['PHANDLE', 'SEMAPHORE_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'LONG', 'LONG'], ['SemaphoreHandle', 'DesiredAccess', 'ObjectAttributes', 'InitialCount', 'MaximumCount'], 'NTSTATUS'), 'NtCreateTimer': (4, ['PHANDLE', 'ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'TIMER_TYPE'], ['TimerHandle', 'DesiredAccess', 'ObjectAttributes', 'TimerType'], 'NTSTATUS'), 'NtOpenEvent': (3, ['PHANDLE', 'EVENT_ACCESS_MASK', 'POBJECT_ATTRIBUTES'], ['EventHandle', 'DesiredAccess', 'ObjectAttributes'], 'NTSTATUS'), 'NtOpenKeyedEvent': (3, ['PHANDLE', 'EVENT_ACCESS_MASK', 'POBJECT_ATTRIBUTES'], ['EventHandle', 'DesiredAccess', 'ObjectAttributes'], 'NTSTATUS'), 'NtOpenEventPair': (3, ['PHANDLE', 'ACCESS_MASK', 'POBJECT_ATTRIBUTES'], ['EventPairHandle', 'DesiredAccess', 'ObjectAttributes'], 'NTSTATUS'), 'NtOpenMutant': (3, ['PHANDLE', 'MUTANT_ACCESS_MASK', 'POBJECT_ATTRIBUTES'], ['MutantHandle', 'DesiredAccess', 'ObjectAttributes'], 'NTSTATUS'), 'NtOpenSemaphore': (3, ['PHANDLE', 'SEMAPHORE_ACCESS_MASK', 'POBJECT_ATTRIBUTES'], ['SemaphoreHandle', 'DesiredAcces', 'ObjectAttributes'], 'NTSTATUS'), 'NtOpenTimer': (3, ['PHANDLE', 'ACCESS_MASK', 'POBJECT_ATTRIBUTES'], ['TimerHandle', 'DesiredAccess', 'ObjectAttributes'], 'NTSTATUS'), 'NtPulseEvent': (2, ['HANDLE', 'PLONG'], ['EventHandle', 'PulseCount'], 'NTSTATUS'), 'NtQueryEvent': (5, ['HANDLE', 'EVENT_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['EventHandle', 'EventInformationClass', 'EventInformation', 'EventInformationLength', 'ReturnLength'], 'NTSTATUS'), 'NtQueryMutant': (5, ['HANDLE', 'MUTANT_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['MutantHandle', 'MutantInformationClass', 'MutantInformation', 'Length', 'ResultLength'], 'NTSTATUS'), 'NtQuerySemaphore': (5, ['HANDLE', 'SEMAPHORE_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['SemaphoreHandle', 'SemaphoreInformationClass', 'SemaphoreInformation', 'Length', 'ReturnLength'], 'NTSTATUS'), 'NtQueryTimer': (5, ['HANDLE', 'TIMER_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['TimerHandle', 'TimerInformationClass', 'TimerInformation', 'Length', 'ResultLength'], 'NTSTATUS'), 'NtReleaseMutant': (2, ['HANDLE', 'PLONG'], ['MutantHandle', 'ReleaseCount'], 'NTSTATUS'), 'NtReleaseKeyedEvent': (4, ['HANDLE', 'PVOID', 'BOOLEAN', 'PLARGE_INTEGER'], ['EventHandle', 'Key', 'Alertable', 'Timeout'], 'NTSTATUS'), 'NtReleaseSemaphore': (3, ['HANDLE', 'LONG', 'PLONG'], ['SemaphoreHandle', 'ReleaseCount', 'PreviousCount'], 'NTSTATUS'), 'NtResetEvent': (2, ['HANDLE', 'PLONG'], ['EventHandle', 'NumberOfWaitingThreads'], 'NTSTATUS'), 'NtSetEvent': (2, ['HANDLE', 'PLONG'], ['EventHandle', 'PreviousState'], 'NTSTATUS'), 'NtSetEventBoostPriority': (1, ['HANDLE'], ['EventHandle'], 'NTSTATUS'), 'NtSetHighEventPair': (1, ['HANDLE'], ['EventPairHandle'], 'NTSTATUS'), 'NtSetHighWaitLowEventPair': (1, ['HANDLE'], ['EventPairHandle'], 'NTSTATUS'), 'NtSetLowEventPair': (1, ['HANDLE'], ['EventPair'], 'NTSTATUS'), 'NtSetLowWaitHighEventPair': (1, ['HANDLE'], ['EventPair'], 'NTSTATUS'), 'NtSetTimer': (7, ['HANDLE', 'PLARGE_INTEGER', 'PTIMER_APC_ROUTINE', 'PVOID', 'BOOLEAN', 'LONG', 'PBOOLEAN'], ['TimerHandle', 'DueTime', 'TimerApcRoutine', 'TimerContext', 'WakeTimer', 'Period', 'PreviousState'], 'NTSTATUS'), 'NtCancelTimer': (2, ['HANDLE', 'PBOOLEAN'], ['TimerHandle', 'CurrentState'], 'NTSTATUS'), 'NtWaitForKeyedEvent': (4, ['HANDLE', 'PVOID', 'BOOLEAN', 'PLARGE_INTEGER'], ['EventHandle', 'Key', 'Alertable', 'Timeout'], 'NTSTATUS'), 'NtWaitHighEventPair': (1, ['HANDLE'], ['EventPairHandle'], 'NTSTATUS'), 'NtWaitLowEventPair': (1, ['HANDLE'], ['EventPairHandle'], 'NTSTATUS'), 'NtTraceEvent': (4, ['ULONG', 'ULONG', 'ULONG', 'PEVENT_TRACE_HEADER'], ['TraceHandle', 'Flags', 'TraceHeaderLength', 'TraceHeader'], 'NTSTATUS'), 'NtSignalAndWaitForSingleObject': (4, ['HANDLE', 'HANDLE', 'BOOLEAN', 'PLARGE_INTEGER'], ['SignalObject', 'WaitObject', 'Alertable', 'Time'], '[NT_WAIT_RESULT]'), 'NtWaitForMultipleObjects': (5, ['ULONG', 'HANDLE ', 'WAIT_TYPE', 'BOOLEAN', 'PLARGE_INTEGER'], ['Count', 'Object', 'WaitType', 'Alertable', 'Time'], '[NT_WAIT_RESULT]'), 'NtWaitForMultipleObjects32': (5, ['ULONG', 'PLONG', 'WAIT_TYPE', 'BOOLEAN', 'PLARGE_INTEGER'], ['ObjectCount', 'Handles', 'WaitType', 'Alertable', 'TimeOut'], '[NT_WAIT_RESULT]'), 'NtWaitForSingleObject': (3, ['HANDLE', 'BOOLEAN', 'PLARGE_INTEGER'], ['Object', 'Alertable', 'Time'], '[NT_WAIT_RESULT]'), 'NtCompressKey': (1, ['HANDLE'], ['Key'], 'NTSTATUS'), 'NtCreateKey': (7, ['PHANDLE', 'REGISTRY_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'ULONG', 'PUNICODE_STRING', 'ULONG', 'REGDISPOSITION-PULONG'], ['KeyHandle', 'DesiredAccess', 'ObjectAttributes', 'TitleIndex', 'Class', 'CreateOptions', 'Disposition'], 'NTSTATUS'), 'NtCreateKeyTransacted': (8, ['PHANDLE', 'REGISTRY_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'ULONG', 'PUNICODE_STRING', 'ULONG', 'HANDLE', 'REGDISPOSITION-PULONG'], ['KeyHandle', 'DesiredAccess', 'ObjectAttributes', 'TitleIndex', 'Class', 'CreateOptions', 'TransactionHandle', 'Disposition'], 'NTSTATUS'), 'NtDeleteKey': (1, ['HANDLE'], ['KeyHandle'], 'NTSTATUS'), 'NtDeleteValueKey': (2, ['HANDLE', 'PUNICODE_STRING'], ['KeyHandle', 'ValueName'], 'NTSTATUS'), 'NtEnumerateKey': (6, ['HANDLE', 'ULONG', 'KEY_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['KeyHandle', 'Index', 'KeyInformationClass', 'KeyInformation', 'Length', 'ResultLength'], 'NTSTATUS'), 'NtEnumerateValueKey': (6, ['HANDLE', 'ULONG', 'KEY_VALUE_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['KeyHandle', 'Index', 'KeyValueInformationClass', 'KeyValueInformation', 'Length', 'ResultLength'], 'NTSTATUS'), 'NtFlushKey': (1, ['HANDLE'], ['KeyHandle'], 'NTSTATUS'), 'NtInitializeRegistry': (1, ['USHORT'], ['Flag'], 'NTSTATUS'), 'NtLoadKey': (2, ['POBJECT_ATTRIBUTES', 'POBJECT_ATTRIBUTES'], ['KeyObjectAttributes', 'FileObjectAttributes'], 'NTSTATUS'), 'NtLoadKey2': (3, ['POBJECT_ATTRIBUTES', 'POBJECT_ATTRIBUTES', 'ULONG'], ['KeyObjectAttributes', 'FileObjectAttributes', 'Flags'], 'NTSTATUS'), 'NtLockRegistryKey': (1, ['HANDLE'], ['KeyHandle'], 'NTSTATUS'), 'NtNotifyChangeKey': (10, ['HANDLE', 'HANDLE', 'PIO_APC_ROUTINE', 'PVOID', 'PIO_STATUS_BLOCK', 'REG_NOTIFY_CHANGE_FLAGS', 'BOOLEAN', 'PVOID', 'ULONG', 'BOOLEAN'], ['KeyHandle', 'Event', 'ApcRoutine', 'ApcContext', 'IoStatusBlock', 'CompletionFilter', 'Asynchroneous', 'ChangeBuffer', 'Length', 'WatchSubtree'], 'NTSTATUS'), 'NtNotifyChangeMultipleKeys': (12, ['HANDLE', 'ULONG', 'OBJECT_ATTRIBUTES ', 'HANDLE', 'PIO_APC_ROUTINE', 'PVOID', 'PIO_STATUS_BLOCK', 'REG_NOTIFY_CHANGE_FLAGS', 'BOOLEAN', 'PVOID', 'ULONG', 'BOOLEAN'], ['MasterKeyHandle', 'Count', 'SubordinateObjects', 'Event', 'ApcRoutine', 'ApcContext', 'IoStatusBlock', 'CompletionFilter', 'WatchTree', 'Buffer', 'Length', 'Asynchronous'], 'NTSTATUS'), 'NtOpenKey': (3, ['PHANDLE', 'REGISTRY_ACCESS_MASK', 'POBJECT_ATTRIBUTES'], ['KeyHandle', 'DesiredAccess', 'ObjectAttributes'], 'NTSTATUS'), 'NtOpenKeyEx': (4, ['PHANDLE', 'REGISTRY_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'ULONG'], ['KeyHandle', 'DesiredAccess', 'ObjectAttributes', 'OpenOptions'], 'NTSTATUS'), 'NtOpenKeyTransacted': (4, ['PHANDLE', 'REGISTRY_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'HANDLE'], ['KeyHandle', 'DesiredAccess', 'ObjectAttributes', 'TransactionHandle'], 'NTSTATUS'), 'NtOpenKeyTransactedEx': (5, ['PHANDLE', 'REGISTRY_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'ULONG', 'HANDLE'], ['KeyHandle', 'DesiredAccess', 'ObjectAttributes', 'OpenOptions', 'TransactionHandle'], 'NTSTATUS'), 'NtQueryKey': (5, ['HANDLE', 'KEY_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['KeyHandle', 'KeyInformationClass', 'KeyInformation', 'Length', 'ResultLength'], 'NTSTATUS'), 'NtQueryMultipleValueKey': (6, ['HANDLE', 'PKEY_VALUE_ENTRY', 'ULONG', 'PVOID', 'PULONG', 'PULONG'], ['KeyHandle', 'ValueList', 'NumberOfValues', 'Buffer', 'Length', 'ReturnLength'], 'NTSTATUS'), 'NtQueryOpenSubKeys': (2, ['POBJECT_ATTRIBUTES', 'PULONG'], ['TargetKey', 'HandleCount'], 'NTSTATUS'), 'NtQueryOpenSubKeysEx': (4, ['POBJECT_ATTRIBUTES', 'ULONG', 'PVOID', 'PULONG'], ['TargetKey', 'BufferLength', 'Buffer', 'RequiredSize'], 'NTSTATUS'), 'NtQueryValueKey': (6, ['HANDLE', 'PUNICODE_STRING', 'KEY_VALUE_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['KeyHandle', 'ValueName', 'KeyValueInformationClass', 'KeyValueInformation', 'Length', 'ResultLength'], 'NTSTATUS'), 'NtRenameKey': (2, ['HANDLE', 'PUNICODE_STRING'], ['KeyHandle', 'ReplacementName'], 'NTSTATUS'), 'NtReplaceKey': (3, ['POBJECT_ATTRIBUTES', 'HANDLE', 'POBJECT_ATTRIBUTES'], ['ObjectAttributes', 'Key', 'ReplacedObjectAttributes'], 'NTSTATUS'), 'NtRestoreKey': (3, ['HANDLE', 'HANDLE', 'ULONG'], ['KeyHandle', 'FileHandle', 'RestoreFlags'], 'NTSTATUS'), 'NtSaveKey': (2, ['HANDLE', 'HANDLE'], ['KeyHandle', 'FileHandle'], 'NTSTATUS'), 'NtSaveKeyEx': (3, ['HANDLE', 'HANDLE', 'ULONG'], ['KeyHandle', 'FileHandle', 'Flags'], 'NTSTATUS'), 'NtSaveMergedKeys': (3, ['HANDLE', 'HANDLE', 'HANDLE'], ['HighPrecedenceKeyHandle', 'LowPrecedenceKeyHandle', 'FileHandle'], 'NTSTATUS'), 'NtSetInformationKey': (4, ['HANDLE', 'KEY_SET_INFORMATION_CLASS', 'PVOID', 'ULONG'], ['KeyHandle', 'KeyInformationClass', 'KeyInformation', 'KeyInformationLength'], 'NTSTATUS'), 'NtSetValueKey': (6, ['HANDLE', 'PUNICODE_STRING', 'ULONG', 'ULONG', 'PVOID', 'ULONG'], ['KeyHandle', 'ValueName', 'TitleIndex', 'Type', 'Data', 'DataSize'], 'NTSTATUS'), 'NtUnloadKey': (1, ['POBJECT_ATTRIBUTES'], ['KeyObjectAttributes'], 'NTSTATUS'), 'NtUnloadKey2': (2, ['POBJECT_ATTRIBUTES', 'ULONG'], ['TargetKey', 'Flags'], 'NTSTATUS'), 'NtUnloadKeyEx': (2, ['POBJECT_ATTRIBUTES', 'HANDLE'], ['TargetKey', 'Event'], 'NTSTATUS'), 'NtCompactKeys': (2, ['ULONG', 'HANDLE'], ['NrOfKeys', 'KeysArray'], 'NTSTATUS'), 'NtFreezeRegistry': (1, ['USHORT'], ['TimeOutInSeconds'], 'NTSTATUS'), 'NtThawRegistry': (0, [], [], 'NTSTATUS'), 'NtAddAtom': (3, ['PWSTR', 'ULONG', 'PRTL_ATOM'], ['AtomName', 'AtomNameLength', 'Atom'], 'NTSTATUS'), 'NtDeleteAtom': (1, ['RTL_ATOM'], ['Atom'], 'NTSTATUS'), 'NtFindAtom': (3, ['PWSTR', 'ULONG', 'PRTL_ATOM'], ['AtomName', 'AtomNameLength', 'Atom'], 'NTSTATUS'), 'NtQueryInformationAtom': (5, ['RTL_ATOM', 'ATOM_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['Atom', 'AtomInformationClass', 'AtomInformation', 'AtomInformationLength', 'ReturnLength'], 'NTSTATUS'), 'NtQueryDefaultLocale': (2, ['BOOLEAN', 'PLCID'], ['UserProfile', 'DefaultLocaleId'], 'NTSTATUS'), 'NtQueryDefaultUILanguage': (1, ['LANGID*'], ['LanguageId'], 'NTSTATUS'), 'NtQueryInstallUILanguage': (1, ['LANGID*'], ['LanguageId'], 'NTSTATUS'), 'NtSetDefaultLocale': (2, ['BOOLEAN', 'LCID'], ['UserProfile', 'DefaultLocaleId'], 'NTSTATUS'), 'NtSetDefaultUILanguage': (1, ['LANGID'], ['LanguageId'], 'NTSTATUS'), 'CsrAllocateCaptureBuffer': (2, ['ULONG', 'ULONG'], ['ArgumentCount', 'BufferSize'], 'PVOID'), 'CsrAllocateMessagePointer': (3, ['CSR_CAPTURE_BUFFER*', 'ULONG', 'PVOID*'], ['CaptureBuffer', 'MessageLength', 'CaptureData'], 'ULONG'), 'CsrCaptureMessageBuffer': (4, ['CSR_CAPTURE_BUFFER*', 'PVOID', 'ULONG', 'PVOID*'], ['CaptureBuffer', 'MessageString', 'StringLength', 'CapturedData'], 'VOID'), 'CsrClientConnectToServer': (5, ['PWSTR', 'ULONG', 'PVOID', 'PULONG', 'PBOOLEAN'], ['ObjectDirectory', 'ServerId', 'ConnectionInfo', 'ConnectionInfoSize', 'ServerToServerCall'], 'NTSTATUS'), 'CsrClientCallServer': (4, ['CSR_API_MESSAGE*', 'CSR_CAPTURE_BUFFER*', 'ULONG', 'ULONG'], ['Request', 'CaptureBuffer', 'ApiNumber', 'RequestLength'], 'NTSTATUS'), 'CsrIdentifyAlertableThread': (0, [], [], 'NTSTATUS'), 'CsrFreeCaptureBuffer': (1, ['CSR_CAPTURE_BUFFER*'], ['CaptureBuffer'], 'VOID'), 'CsrGetProcessId': (0, [], [], 'HANDLE'), 'CsrNewThread': (0, [], [], 'NTSTATUS'), 'CsrSetPriorityClass': (2, ['HANDLE', 'PULONG'], ['Process', 'PriorityClass'], 'NTSTATUS'), 'CsrProbeForRead': (3, ['PVOID', 'ULONG', 'ULONG'], ['Address', 'Length', 'Alignment'], 'VOID'), 'CsrProbeForWrite': (3, ['PVOID', 'ULONG', 'ULONG'], ['Address', 'Length', 'Alignment'], 'VOID'), 'DbgUserBreakPoint': (0, [], [], 'VOID'), 'DbgPrint': (1, ['PCCH'], ['Format'], '[NTSTATUS_ULONG]'), 'DbgPrintEx': (3, ['ULONG', 'ULONG', 'PCCH'], ['ComponentId', 'Level', 'Format'], '[NTSTATUS_ULONG]'), 'DbgPrompt': (3, ['PCCH', 'PCH', 'ULONG'], ['Prompt', 'Response', 'MaximumResponseLength'], '[NTSTATUS_ULONG]'), 'DbgBreakPoint': (0, [], [], 'VOID'), 'DbgLoadImageSymbols': (3, ['PANSI_STRING', 'PVOID', 'ULONG_PTR'], ['Name', 'Base', 'ProcessId'], 'NTSTATUS'), 'DbgUnLoadImageSymbols': (3, ['PANSI_STRING', 'PVOID', 'ULONG_PTR'], ['Name', 'Base', 'ProcessId'], 'VOID'), 'DbgBreakPointWithStatus': (1, ['ULONG'], ['Status'], 'VOID'), 'DbgUiConnectToDbg': (0, [], [], 'NTSTATUS'), 'DbgUiContinue': (2, ['PCLIENT_ID', 'NTSTATUS'], ['ClientId', 'ContinueStatus'], 'NTSTATUS'), 'DbgUiDebugActiveProcess': (1, ['HANDLE'], ['Process'], 'NTSTATUS'), 'DbgUiStopDebugging': (1, ['HANDLE'], ['Process'], 'NTSTATUS'), 'DbgUiWaitStateChange': (2, ['PDBGUI_WAIT_STATE_CHANGE', 'PLARGE_INTEGER'], ['DbgUiWaitStateCange', 'TimeOut'], 'NTSTATUS'), 'DbgUiConvertStateChangeStructure': (2, ['PDBGUI_WAIT_STATE_CHANGE', 'PVOID'], ['WaitStateChange', 'DebugEvent'], 'NTSTATUS'), 'DbgUiRemoteBreakin': (0, [], [], 'VOID'), 'DbgUiIssueRemoteBreakin': (1, ['HANDLE'], ['Process'], 'NTSTATUS'), 'DbgUiGetThreadDebugObject': (0, [], [], 'HANDLE'), 'vDbgPrintEx': (4, ['ULONG', 'ULONG', 'PCH', 'VA_LIST'], ['ComponentId', 'Level', 'Format', 'arglist'], '[NTSTATUS_ULONG]'), 'vDbgPrintExWithPrefix': (5, ['PCH', 'ULONG', 'ULONG', 'PCH', 'VA_LIST'], ['Prefix', 'ComponentId', 'Level', 'Format', 'arglist'], '[NTSTATUS_ULONG]'), 'DbgQueryDebugFilterState': (2, ['ULONG', 'ULONG'], ['ComponentId', 'Level'], 'NTSTATUS'), 'DbgSetDebugFilterState': (3, ['ULONG', 'ULONG', 'BOOLEAN'], ['ComponentId', 'Level', 'State'], 'NTSTATUS'), 'LdrAccessResource': (4, ['HMODULE-PVOID', 'PIMAGE_RESOURCE_DATA_ENTRY', 'PVOID*', 'PULONG'], ['BaseAddress', 'ResourceDataEntry', 'Resource', 'Size'], 'NTSTATUS'), 'LdrFindResource_U': (4, ['HMODULE-PVOID', 'PLDR_RESOURCE_INFO', 'ULONG', 'PIMAGE_RESOURCE_DATA_ENTRY*'], ['BaseAddress', 'ResourceInfo', 'Level', 'ResourceDataEntry'], 'NTSTATUS'), 'LdrFindResourceDirectory_U': (4, ['HMODULE-PVOID', 'PLDR_RESOURCE_INFO', 'ULONG', 'PIMAGE_RESOURCE_DIRECTORY*'], ['BaseAddress', 'ResourceInfo', 'Level', 'ResourceDirectory'], 'NTSTATUS'), 'LdrUnloadAlternateResourceModule': (1, ['HMODULE-PVOID'], ['BaseAddress'], 'BOOLEAN'), 'LdrRelocateImage': (5, ['PVOID', 'PUCHAR', 'ULONG', 'ULONG', 'ULONG'], ['NewBase', 'LoaderName', 'Success', 'Conflict', 'Invalid'], '[NTSTATUS_ULONG]'), 'LdrLockLoaderLock': (3, ['LDR_LOCK_LOADER_LOCK_FLAG', 'LDR_LOCK_LOADER_LOCK_DISPOSITION*', 'PULONG'], ['Flags', 'Disposition', 'Cookie'], 'NTSTATUS'), 'LdrUnlockLoaderLock': (2, ['LDR_UNLOCK_LOADER_LOCK_FLAG', 'ULONG'], ['Flags', 'Cookie'], 'NTSTATUS'), 'LdrVerifyMappedImageMatchesChecksum': (3, ['HMODULE-PVOID', 'ULONG', 'ULONG'], ['BaseAddress', 'NumberOfBytes', 'FileLength'], 'BOOLEAN'), 'LdrAddRefDll': (2, ['LDR_ADDREF_DLL_FLAGS', 'HMODULE-PVOID'], ['Flags', 'BaseAddress'], 'NTSTATUS'), 'LdrDisableThreadCalloutsForDll': (1, ['HMODULE-PVOID'], ['BaseAddress'], 'NTSTATUS'), 'LdrGetDllHandle': (4, ['PWSTR', 'PULONG', 'PUNICODE_STRING', 'HMODULE*'], ['DllPath', 'DllCharacteristics', 'DllName', 'DllHandle'], 'NTSTATUS'), 'LdrGetDllHandleEx': (5, ['LDR_GET_DLL_HANDLE_EX_FLAGS', 'PWSTR', 'PULONG', 'PUNICODE_STRING', 'HMODULE*'], ['Flags', 'DllPath', 'DllCharacteristics', 'DllName', 'DllHandle'], 'NTSTATUS'), 'LdrFindEntryForAddress': (2, ['PVOID', 'PLDR_DATA_TABLE_ENTRY*'], ['Address', 'Module'], 'NTSTATUS'), 'LdrGetProcedureAddress': (4, ['HMODULE', 'PANSI_STRING', 'ULONG', 'PVOID*'], ['BaseAddress', 'Name', 'Ordinal', 'ProcedureAddress'], 'NTSTATUS'), 'LdrInitializeThunk': (4, ['ULONG', 'ULONG', 'ULONG', 'ULONG'], ['Unknown1', 'Unknown2', 'Unknown3', 'Unknown4'], 'VOID'), 'LdrLoadDll': (4, ['PWSTR', 'IMAGE_FILE_CHARACTERISTICS_ULONG*', 'PUNICODE_STRING', 'HMODULE-PVOID*'], ['SearchPath', 'DllCharacteristics', 'Name', 'BaseAddress'], 'NTSTATUS'), 'LdrProcessRelocationBlock': (4, ['ULONG_PTR', 'ULONG', 'PUSHORT', 'LONG_PTR'], ['Address', 'Count', 'TypeOffset', 'Delta'], 'PIMAGE_BASE_RELOCATION'), 'LdrQueryImageFileExecutionOptions': (6, ['PUNICODE_STRING', 'PCWSTR', 'ULONG', 'PVOID', 'ULONG', 'PULONG'], ['SubKey', 'ValueName', 'ValueSize', 'Buffer', 'BufferSize', 'RetunedLength'], 'NTSTATUS'), 'LdrQueryProcessModuleInformation': (3, ['PRTL_PROCESS_MODULES', 'ULONG', 'PULONG'], ['ModuleInformation', 'Size', 'ReturnedSize'], 'NTSTATUS'), 'LdrShutdownThread': (0, [], [], 'NTSTATUS'), 'LdrUnloadDll': (1, ['HMODULE-PVOID'], ['BaseAddress'], 'NTSTATUS'), 'LdrVerifyImageMatchesChecksum': (4, ['HANDLE', 'PLDR_CALLBACK', 'PVOID', 'IMAGE_FILE_CHARACTERISTICS_SHORT'], ['FileHandle', 'Callback', 'CallbackContext', 'ImageCharacteristics'], 'NTSTATUS'), 'LdrRelocateImageWithBias': (6, ['PVOID', 'LONGLONG', 'PCCH', 'ULONG', 'ULONG', 'ULONG'], ['NewAddress', 'AdditionalBias', 'LoaderName', 'Success', 'Conflict', 'Invalid'], '[NTSTATUS_ULONG]'), 'LdrResFindResourceDirectory': (7, ['HMODULE-PVOID', 'PVOID', 'PVOID', 'PVOID*', 'PVOID', 'PVOID', 'PVOID'], ['BaseAddress', 'Unknown1', 'Unknown2', 'ResourceDirectory', 'Unknown3', 'Unknown4', 'Unknown5'], 'NTSTATUS'), 'NtAccessCheck': (8, ['PSECURITY_DESCRIPTOR', 'HANDLE', 'ACCESS_MASK', 'PGENERIC_MAPPING', 'PPRIVILEGE_SET', 'PULONG', 'PACCESS_MASK', 'PNTSTATUS'], ['SecurityDescriptor', 'ClientToken', 'DesiredAccess', 'GenericMapping', 'PrivilegeSet', 'ReturnLength', 'GrantedAccess', 'AccessStatus'], 'NTSTATUS'), 'NtAccessCheckByType': (11, ['PSECURITY_DESCRIPTOR', 'PSID', 'HANDLE', 'ACCESS_MASK', 'POBJECT_TYPE_LIST', 'ULONG', 'PGENERIC_MAPPING', 'PPRIVILEGE_SET', 'ULONG', 'PACCESS_MASK', 'PNTSTATUS'], ['SecurityDescriptor', 'PrincipalSelfSid', 'ClientToken', 'DesiredAccess', 'ObjectTypeList', 'ObjectTypeLength', 'GenericMapping', 'PrivilegeSet', 'PrivilegeSetLength', 'GrantedAccess', 'AccessStatus'], 'NTSTATUS'), 'NtAccessCheckByTypeResultList': (11, ['PSECURITY_DESCRIPTOR', 'PSID', 'HANDLE', 'ACCESS_MASK', 'POBJECT_TYPE_LIST', 'ULONG', 'PGENERIC_MAPPING', 'PPRIVILEGE_SET', 'ULONG', 'PACCESS_MASK', 'PNTSTATUS'], ['SecurityDescriptor', 'PrincipalSelfSid', 'ClientToken', 'DesiredAccess', 'ObjectTypeList', 'ObjectTypeLength', 'GenericMapping', 'PrivilegeSet', 'PrivilegeSetLength', 'GrantedAccess', 'AccessStatus'], 'NTSTATUS'), 'NtAccessCheckAndAuditAlarm': (11, ['PUNICODE_STRING', 'PVOID', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PSECURITY_DESCRIPTOR', 'ACCESS_MASK', 'PGENERIC_MAPPING', 'BOOLEAN', 'PACCESS_MASK', 'PNTSTATUS', 'PBOOLEAN'], ['SubsystemName', 'HandleId', 'ObjectTypeName', 'ObjectName', 'SecurityDescriptor', 'DesiredAccess', 'GenericMapping', 'ObjectCreation', 'GrantedAccess', 'AccessStatus', 'GenerateOnClose'], 'NTSTATUS'), 'NtOpenThreadToken': (4, ['THREADHANDLE', 'TOKEN_ACCESS_MASK', 'BOOLEAN', 'PHANDLE'], ['ThreadHandle', 'DesiredAccess', 'OpenAsSelf', 'TokenHandle'], 'NTSTATUS'), 'NtOpenThreadTokenEx': (5, ['THREADHANDLE', 'TOKEN_ACCESS_MASK', 'BOOLEAN', 'ULONG', 'PHANDLE'], ['ThreadHandle', 'DesiredAccess', 'OpenAsSelf', 'HandleAttributes', 'TokenHandle'], 'NTSTATUS'), 'NtAdjustGroupsToken': (6, ['HANDLE', 'BOOLEAN', 'PTOKEN_GROUPS', 'ULONG', 'PTOKEN_GROUPS', 'PULONG'], ['TokenHandle', 'ResetToDefault', 'NewState', 'BufferLength', 'PreviousState', 'ReturnLength'], 'NTSTATUS'), 'NtAdjustPrivilegesToken': (6, ['HANDLE', 'BOOLEAN', 'PTOKEN_PRIVILEGES', 'ULONG', 'PTOKEN_PRIVILEGES', 'PULONG'], ['TokenHandle', 'DisableAllPrivileges', 'NewState', 'BufferLength', 'PreviousState', 'ReturnLength'], 'NTSTATUS'), 'NtCompareTokens': (3, ['HANDLE', 'HANDLE', 'PBOOLEAN'], ['FirstTokenHandle', 'SecondTokenHandle', 'Equal'], 'NTSTATUS'), 'NtCreateToken': (13, ['PHANDLE', 'TOKEN_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'TOKEN_TYPE', 'PLUID', 'PLARGE_INTEGER', 'PTOKEN_USER', 'PTOKEN_GROUPS', 'PTOKEN_PRIVILEGES', 'PTOKEN_OWNER', 'PTOKEN_PRIMARY_GROUP', 'PTOKEN_DEFAULT_DACL', 'PTOKEN_SOURCE'], ['TokenHandle', 'DesiredAccess', 'ObjectAttributes', 'TokenType', 'AuthenticationId', 'ExpirationTime', 'TokenUser', 'TokenGroups', 'TokenPrivileges', 'TokenOwner', 'TokenPrimaryGroup', 'TokenDefaultDacl', 'TokenSource'], 'NTSTATUS'), 'NtDuplicateToken': (6, ['HANDLE', 'TOKEN_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'BOOLEAN', 'TOKEN_TYPE', 'PHANDLE'], ['ExistingTokenHandle', 'DesiredAccess', 'ObjectAttributes', 'EffectiveOnly', 'TokenType', 'NewTokenHandle'], 'NTSTATUS'), 'NtImpersonateAnonymousToken': (1, ['HANDLE'], ['Thread'], 'NTSTATUS'), 'NtOpenObjectAuditAlarm': (12, ['PUNICODE_STRING', 'PVOID', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PSECURITY_DESCRIPTOR', 'HANDLE', 'ULONG', 'ULONG', 'PPRIVILEGE_SET', 'BOOLEAN', 'BOOLEAN', 'PBOOLEAN'], ['SubsystemName', 'HandleId', 'ObjectTypeName', 'ObjectName', 'SecurityDescriptor', 'ClientToken', 'DesiredAccess', 'GrantedAccess', 'Privileges', 'ObjectCreation', 'AccessGranted', 'GenerateOnClose'], 'NTSTATUS'), 'NtCloseObjectAuditAlarm': (3, ['PUNICODE_STRING', 'PVOID', 'BOOLEAN'], ['SubsystemName', 'HandleId', 'GenerateOnClose'], 'NTSTATUS'), 'NtDeleteObjectAuditAlarm': (3, ['PUNICODE_STRING', 'PVOID', 'BOOLEAN'], ['SubsystemName', 'HandleId', 'GenerateOnClose'], 'NTSTATUS'), 'NtOpenProcessToken': (3, ['PROCESSHANDLE', 'TOKEN_ACCESS_MASK', 'PHANDLE'], ['ProcessHandle', 'DesiredAccess', 'TokenHandle'], 'NTSTATUS'), 'NtOpenProcessTokenEx': (4, ['PROCESSHANDLE', 'TOKEN_ACCESS_MASK', 'ULONG', 'PHANDLE'], ['ProcessHandle', 'DesiredAccess', 'HandleAttributes', 'TokenHandle'], 'NTSTATUS'), 'NtPrivilegeCheck': (3, ['HANDLE', 'PPRIVILEGE_SET', 'PBOOLEAN'], ['ClientToken', 'RequiredPrivileges', 'Result'], 'NTSTATUS'), 'NtPrivilegedServiceAuditAlarm': (5, ['PUNICODE_STRING', 'PUNICODE_STRING', 'HANDLE', 'PPRIVILEGE_SET', 'BOOLEAN'], ['SubsystemName', 'ServiceName', 'ClientToken', 'Privileges', 'AccessGranted'], 'NTSTATUS'), 'NtPrivilegeObjectAuditAlarm': (6, ['PUNICODE_STRING', 'PVOID', 'HANDLE', 'ULONG', 'PPRIVILEGE_SET', 'BOOLEAN'], ['SubsystemName', 'HandleId', 'ClientToken', 'DesiredAccess', 'Privileges', 'AccessGranted'], 'NTSTATUS'), 'NtQueryInformationToken': (5, ['HANDLE', 'TOKEN_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['TokenHandle', 'TokenInformationClass', 'TokenInformation', 'TokenInformationLength', 'ReturnLength'], 'NTSTATUS'), 'NtAccessCheckByTypeAndAuditAlarm': (16, ['PUNICODE_STRING', 'HANDLE', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PSECURITY_DESCRIPTOR', 'PSID', 'ACCESS_MASK', 'AUDIT_EVENT_TYPE', 'ULONG', 'POBJECT_TYPE_LIST', 'ULONG', 'PGENERIC_MAPPING', 'BOOLEAN', 'PACCESS_MASK', 'PNTSTATUS', 'PBOOLEAN'], ['SubsystemName', 'HandleId', 'ObjectTypeName', 'ObjectName', 'SecurityDescriptor', 'PrincipalSelfSid', 'DesiredAccess', 'AuditType', 'Flags', 'ObjectTypeList', 'ObjectTypeLength', 'GenericMapping', 'ObjectCreation', 'GrantedAccess', 'AccessStatus', 'GenerateOnClose'], 'NTSTATUS'), 'NtAccessCheckByTypeResultListAndAuditAlarm': (16, ['PUNICODE_STRING', 'HANDLE', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PSECURITY_DESCRIPTOR', 'PSID', 'ACCESS_MASK', 'AUDIT_EVENT_TYPE', 'ULONG', 'POBJECT_TYPE_LIST', 'ULONG', 'PGENERIC_MAPPING', 'BOOLEAN', 'PACCESS_MASK', 'PNTSTATUS', 'PBOOLEAN'], ['SubsystemName', 'HandleId', 'ObjectTypeName', 'ObjectName', 'SecurityDescriptor', 'PrincipalSelfSid', 'DesiredAccess', 'AuditType', 'Flags', 'ObjectTypeList', 'ObjectTypeLength', 'GenericMapping', 'ObjectCreation', 'GrantedAccess', 'AccessStatus', 'GenerateOnClose'], 'NTSTATUS'), 'NtAccessCheckByTypeResultListAndAuditAlarmByHandle': (17, ['PUNICODE_STRING', 'HANDLE', 'HANDLE', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PSECURITY_DESCRIPTOR', 'PSID', 'ACCESS_MASK', 'AUDIT_EVENT_TYPE', 'ULONG', 'POBJECT_TYPE_LIST', 'ULONG', 'PGENERIC_MAPPING', 'BOOLEAN', 'PACCESS_MASK', 'PNTSTATUS', 'PBOOLEAN'], ['SubsystemName', 'HandleId', 'ClientToken', 'ObjectTypeName', 'ObjectName', 'SecurityDescriptor', 'PrincipalSelfSid', 'DesiredAccess', 'AuditType', 'Flags', 'ObjectTypeList', 'ObjectTypeLength', 'GenericMapping', 'ObjectCreation', 'GrantedAccess', 'AccessStatus', 'GenerateOnClose'], 'NTSTATUS'), 'NtSetInformationToken': (4, ['HANDLE', 'TOKEN_INFORMATION_CLASS', 'PVOID', 'ULONG'], ['TokenHandle', 'TokenInformationClass', 'TokenInformation', 'TokenInformationLength'], 'NTSTATUS'), 'NtImpersonateThread': (3, ['THREADHANDLE', 'HANDLE', 'PSECURITY_QUALITY_OF_SERVICE'], ['ThreadHandle', 'ThreadToImpersonate', 'SecurityQualityOfService'], 'NTSTATUS'), 'NtCreateProcess': (8, ['PHANDLE', 'ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'HANDLE', 'BOOLEAN', 'HANDLE', 'HANDLE', 'HANDLE'], ['ProcessHandle', 'DesiredAccess', 'ObjectAttributes', 'ParentProcess', 'InheritObjectTable', 'SectionHandle', 'DebugPort', 'ExceptionPort'], 'NTSTATUS'), 'NtCreateProcessEx': (9, ['PHANDLE', 'ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'HANDLE', 'ULONG', 'HANDLE', 'HANDLE', 'HANDLE', 'BOOLEAN'], ['ProcessHandle', 'DesiredAccess', 'ObjectAttributes', 'ParentProcess', 'Flags', 'SectionHandle', 'DebugPort', 'ExceptionPort', 'InJob'], 'NTSTATUS'), 'NtCreateThread': (8, ['PHANDLE', 'THREAD_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'PROCESSHANDLE', 'PCLIENT_ID', 'PCONTEXT', 'PINITIAL_TEB', 'BOOLEAN'], ['ThreadHandle', 'DesiredAccess', 'ObjectAttributes', 'ProcessHandle', 'ClientId', 'ThreadContext', 'UserStack', 'CreateSuspended'], 'NTSTATUS'), 'NtCreateThreadEx': (11, ['PHANDLE', 'THREAD_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'PROCESSHANDLE', 'PTHREAD_START_ROUTINE', 'PVOID', 'BOOLEAN', 'ULONG', 'SIZE_T', 'SIZE_T', 'PTHREADEX_DATA'], ['ThreadHandle', 'DesiredAccess', 'ObjectAttributes', 'ProcessHandle', 'StartAddress', 'Parameter', 'CreateSuspended', 'StackZeroBits', 'StackCommit', 'StackReserve', 'pThreadExData'], 'NTSTATUS'), 'NtOpenJobObject': (3, ['PHANDLE', 'ACCESS_MASK', 'POBJECT_ATTRIBUTES'], ['JobHandle', 'DesiredAccess', 'ObjectAttributes'], 'NTSTATUS'), 'NtAssignProcessToJobObject': (2, ['HANDLE', 'PROCESSHANDLE'], ['JobHandle', 'ProcessHandle'], 'NTSTATUS'), 'NtCreateJobObject': (3, ['PHANDLE', 'ACCESS_MASK', 'POBJECT_ATTRIBUTES'], ['JobHandle', 'DesiredAccess', 'ObjectAttributes'], 'NTSTATUS'), 'NtCreateJobSet': (3, ['ULONG', 'PJOB_SET_ARRAY', 'ULONG'], ['NumJob', 'UserJobSet', 'Flags'], 'NTSTATUS'), 'NtQueryInformationJobObject': (5, ['HANDLE', 'JOBOBJECTINFOCLASS', 'PVOID', 'ULONG', 'PULONG'], ['JobHandle', 'JobInformationClass', 'JobInformation', 'JobInformationLength', 'ReturnLength'], 'NTSTATUS'), 'NtQueryInformationProcess': (5, ['PROCESSHANDLE', 'PROCESSINFOCLASS', 'PVOID', 'ULONG', 'PULONG'], ['ProcessHandle', 'ProcessInformationClass', 'ProcessInformation', 'ProcessInformationLength', 'ReturnLength'], 'NTSTATUS'), 'NtQueryInformationThread': (5, ['THREADHANDLE', 'THREADINFOCLASS', 'PVOID', 'ULONG', 'PULONG'], ['ThreadHandle', 'ThreadInformationClass', 'ThreadInformation', 'ThreadInformationLength', 'ReturnLength'], 'NTSTATUS'), 'NtSetInformationJobObject': (4, ['HANDLE', 'JOBOBJECTINFOCLASS', 'PVOID', 'ULONG'], ['JobHandle', 'JobInformationClass', 'JobInformation', 'JobInformationLength'], 'NTSTATUS'), 'NtSetInformationProcess': (4, ['PROCESSHANDLE', 'PROCESSINFOCLASS', 'PVOID', 'ULONG'], ['ProcessHandle', 'ProcessInformationClass', 'ProcessInformation', 'ProcessInformationLength'], 'NTSTATUS'), 'NtSetInformationThread': (4, ['THREADHANDLE', 'THREADINFOCLASS', 'PVOID', 'ULONG'], ['ThreadHandle', 'ThreadInformationClass', 'ThreadInformation', 'ThreadInformationLength'], 'NTSTATUS'), 'NtSuspendProcess': (1, ['PROCESSHANDLE'], ['ProcessHandle'], 'NTSTATUS'), 'NtSuspendThread': (2, ['THREADHANDLE', 'PULONG'], ['ThreadHandle', 'PreviousSuspendCount'], 'NTSTATUS'), 'NtTerminateThread': (2, ['THREADHANDLE', 'NTSTATUS'], ['ThreadHandle', 'ExitStatus'], 'NTSTATUS'), 'NtTerminateJobObject': (2, ['HANDLE', 'NTSTATUS'], ['JobHandle', 'ExitStatus'], 'NTSTATUS'), 'NtIsProcessInJob': (2, ['PROCESSHANDLE', 'HANDLE'], ['ProcessHandle', 'JobHandle'], 'NTSTATUS'), 'NtOpenProcess': (4, ['PHANDLE', 'PROCESS_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'PCLIENT_ID'], ['ProcessHandle', 'DesiredAccess', 'ObjectAttributes', 'ClientId'], 'NTSTATUS'), 'NtOpenThread': (4, ['PHANDLE', 'THREAD_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'PCLIENT_ID'], ['ThreadHandle', 'DesiredAccess', 'ObjectAttributes', 'ClientId'], 'NTSTATUS'), 'NtResumeThread': (2, ['THREADHANDLE', 'PULONG'], ['ThreadHandle', 'SuspendCount'], 'NTSTATUS'), 'NtResumeProcess': (1, ['PROCESSHANDLE'], ['ProcessHandle'], 'NTSTATUS'), 'NtDelayExecution': (2, ['BOOLEAN', 'PLARGE_INTEGER'], ['Alertable', 'DelayInterval'], 'NTSTATUS'), 'NtYieldExecution': (0, [], [], 'NTSTATUS'), 'NtAlertResumeThread': (2, ['THREADHANDLE', 'PULONG'], ['ThreadHandle', 'SuspendCount'], 'NTSTATUS'), 'NtAlertThread': (1, ['THREADHANDLE'], ['ThreadHandle'], 'NTSTATUS'), 'NtQueueApcThread': (5, ['THREADHANDLE', 'PIO_APC_ROUTINE', 'PVOID', 'PIO_STATUS_BLOCK', 'ULONG'], ['ThreadHandle', 'ApcRoutine', 'ApcRoutineContext', 'ApcStatusBlock', 'ApcReserved'], 'NTSTATUS'), 'NtCurrentTeb': (0, [], [], 'PTEB'), 'NtSetHighWaitLowThread': (0, [], [], 'NTSTATUS'), 'NtSetLowWaitHighThread': (0, [], [], 'NTSTATUS'), 'NtGetCurrentProcessorNumber': (0, [], [], 'ULONG'), 'NtTestAlert': (0, [], [], 'NTSTATUS'), 'NtCreateUserProcess': (11, ['PHANDLE', 'PHANDLE', 'PROCESS_ACCESS_MASK', 'THREAD_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'POBJECT_ATTRIBUTES', 'ULONG', 'ULONG', 'PRTL_USER_PROCESS_PARAMETERS', 'PVOID', 'PVOID'], ['ProcessHandle', 'ThreadHandle', 'ProcessDesiredAccess', 'ThreadDesiredAccess', 'ProcessObjectAttributes', 'ThreadObjectAttributes', 'CreateProcessFlags', 'CreateThreadFlags', 'ProcessParameters', 'Unknown', 'AttributeList'], 'NTSTATUS'), 'NtEnumerateSystemEnvironmentValuesEx': (3, ['ULONG', 'PVOID', 'ULONG'], ['InformationClass', 'Buffer', 'BufferLength'], 'NTSTATUS'), 'NtQuerySystemEnvironmentValue': (4, ['PUNICODE_STRING', 'PWSTR', 'ULONG', 'PULONG'], ['Name', 'Value', 'Length', 'ReturnLength'], 'NTSTATUS'), 'NtQuerySystemEnvironmentValueEx': (5, ['PUNICODE_STRING', 'LPGUID', 'PVOID', 'PULONG', 'PULONG'], ['VariableName', 'VendorGuid', 'Value', 'ReturnLength', 'Attributes'], 'NTSTATUS'), 'NtSetSystemEnvironmentValue': (2, ['PUNICODE_STRING', 'PUNICODE_STRING'], ['VariableName', 'Value'], 'NTSTATUS'), 'NtSetSystemEnvironmentValueEx': (2, ['PUNICODE_STRING', 'LPGUID'], ['VariableName', 'VendorGuid'], 'NTSTATUS'), 'NtAllocateVirtualMemory': (6, ['PROCESSHANDLE', 'PVOID*', 'ULONG_PTR', 'PSIZE_T', 'MEMORYALLOCATIONFLAGS', 'NTPROTECTIONFLAGS'], ['ProcessHandle', 'BaseAddress', 'ZeroBits', 'RegionSize', 'AllocationType', 'Protect'], 'NTSTATUS'), 'NtFlushVirtualMemory': (4, ['PROCESSHANDLE', 'PVOID*', 'PSIZE_T', 'PIO_STATUS_BLOCK'], ['ProcessHandle', 'BaseAddress', 'RegionSize', 'IoStatus'], 'NTSTATUS'), 'NtFreeVirtualMemory': (4, ['PROCESSHANDLE', 'PVOID*', 'PSIZE_T', 'MEMORYALLOCATIONFLAGS'], ['ProcessHandle', 'BaseAddress', 'RegionSize', 'FreeType'], 'NTSTATUS'), 'NtLockVirtualMemory': (4, ['PROCESSHANDLE', 'PVOID', 'SIZE_T', 'PSIZE_T'], ['ProcessHandle', 'BaseAddress', 'NumberOfBytesToLock', 'NumberOfBytesLocked'], 'NTSTATUS'), 'NtProtectVirtualMemory': (5, ['PROCESSHANDLE', 'PVOID*', 'SIZE_T*', 'NTPROTECTIONFLAGS', 'NTPROTECTIONFLAGS*'], ['ProcessHandle', 'BaseAddress', 'NumberOfBytesToProtect', 'NewAccessProtection', 'OldAccessProtection'], 'NTSTATUS'), 'NtQueryVirtualMemory': (6, ['PROCESSHANDLE', 'PVOID', 'MEMORY_INFORMATION_CLASS', 'PVOID', 'SIZE_T', 'PSIZE_T'], ['ProcessHandle', 'Address', 'VirtualMemoryInformationClass', 'VirtualMemoryInformation', 'Length', 'ResultLength'], 'NTSTATUS'), 'NtReadVirtualMemory': (5, ['PROCESSHANDLE', 'PVOID', 'PVOID', 'SIZE_T', 'PSIZE_T'], ['ProcessHandle', 'BaseAddress', 'Buffer', 'NumberOfBytesToRead', 'NumberOfBytesRead'], 'NTSTATUS'), 'NtUnlockVirtualMemory': (4, ['PROCESSHANDLE', 'PVOID', 'SIZE_T', 'PSIZE_T'], ['ProcessHandle', 'BaseAddress', 'NumberOfBytesToUnlock', 'NumberOfBytesUnlocked'], 'NTSTATUS'), 'NtWriteVirtualMemory': (5, ['PROCESSHANDLE', 'PVOID', 'PVOID', 'SIZE_T', 'PSIZE_T'], ['ProcessHandle', 'BaseAddress', 'Buffer', 'NumberOfBytesToWrite', 'NumberOfBytesWritten'], 'NTSTATUS'), 'NtAllocateUserPhysicalPages': (3, ['PROCESSHANDLE', 'PULONG_PTR', 'PULONG_PTR'], ['ProcessHandle', 'NumberOfPages', 'UserPfnArray'], 'NTSTATUS'), 'NtFreeUserPhysicalPages': (3, ['PROCESSHANDLE', 'PULONG_PTR', 'PULONG_PTR'], ['ProcessHandle', 'NumberOfPages', 'UserPfnArray'], 'NTSTATUS'), 'NtMapUserPhysicalPages': (3, ['PVOID', 'ULONG_PTR', 'PULONG_PTR'], ['VirtualAddresses', 'NumberOfPages', 'UserPfnArray'], 'NTSTATUS'), 'NtMapUserPhysicalPagesScatter': (3, ['PVOID*', 'ULONG_PTR', 'PULONG_PTR'], ['VirtualAddresses', 'NumberOfPages', 'UserPfnArray'], 'NTSTATUS'), 'NtGetWriteWatch': (7, ['PROCESSHANDLE', 'ULONG', 'PVOID', 'SIZE_T', 'PVOID*', 'PULONG_PTR', 'PULONG'], ['ProcessHandle', 'Flags', 'BaseAddress', 'RegionSize', 'UserAddressArray', 'EntriesInUserAddressArray', 'Granularity'], 'NTSTATUS'), 'NtResetWriteWatch': (3, ['PROCESSHANDLE', 'PVOID', 'SIZE_T'], ['ProcessHandle', 'BaseAddress', 'RegionSize'], 'NTSTATUS'), 'NtCancelIoFile': (2, ['HANDLE', 'PIO_STATUS_BLOCK'], ['FileHandle', 'IoStatusBlock'], 'NTSTATUS'), 'NtCreateFile': (11, ['PHANDLE', 'FILE_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'PIO_STATUS_BLOCK', 'PLARGE_INTEGER', 'FILE_ATTRIBUTES_ULONG', 'FILE_SHARE_MODE', 'NTCREATEDISPOSITION', 'NTCREATEOPTIONS', 'PVOID', 'ULONG'], ['FileHandle', 'DesiredAccess', 'ObjectAttributes', 'IoStatusBlock', 'AllocationSize', 'FileAttributes', 'ShareAccess', 'CreateDisposition', 'CreateOptions', 'EaBuffer', 'EaLength'], 'NTSTATUS'), 'NtCreateIoCompletion': (4, ['PHANDLE', 'IO_COMPLETION_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'ULONG'], ['IoCompletionHandle', 'DesiredAccess', 'ObjectAttributes', 'NumberOfConcurrentThreads'], 'NTSTATUS'), 'NtOpenFile': (6, ['PHANDLE', 'FILE_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'PIO_STATUS_BLOCK', 'FILE_SHARE_MODE', 'NTCREATEOPTIONS'], ['FileHandle', 'DesiredAccess', 'ObjectAttributes', 'IoStatusBlock', 'ShareAccess', 'OpenOptions'], 'NTSTATUS'), 'NtOpenIoCompletion': (3, ['PHANDLE', 'IO_COMPLETION_ACCESS_MASK', 'POBJECT_ATTRIBUTES'], ['CompetionPort', 'DesiredAccess', 'ObjectAttributes'], 'NTSTATUS'), 'NtQueryIoCompletion': (5, ['HANDLE', 'IO_COMPLETION_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['IoCompletionHandle', 'IoCompletionInformationClass', 'IoCompletionInformation', 'IoCompletionInformationLength', 'ResultLength'], 'NTSTATUS'), 'NtRemoveIoCompletion': (5, ['HANDLE', 'PVOID*', 'PVOID*', 'PIO_STATUS_BLOCK', 'PLARGE_INTEGER'], ['IoCompletionHandle', 'CompletionKey', 'CompletionContext', 'IoStatusBlock', 'Timeout'], 'NTSTATUS'), 'NtSetIoCompletion': (5, ['HANDLE', 'PVOID', 'PVOID', 'NTSTATUS', 'ULONG'], ['IoCompletionPortHandle', 'CompletionKey', 'CompletionContext', 'CompletionStatus', 'CompletionInformation'], 'NTSTATUS'), 'NtCreateSymbolicLinkObject': (4, ['PHANDLE', 'ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'PUNICODE_STRING'], ['SymbolicLinkHandle', 'DesiredAccess', 'ObjectAttributes', 'Name'], 'NTSTATUS'), 'NtOpenSymbolicLinkObject': (3, ['PHANDLE', 'ACCESS_MASK', 'POBJECT_ATTRIBUTES'], ['SymbolicLinkHandle', 'DesiredAccess', 'ObjectAttributes'], 'NTSTATUS'), 'NtQuerySymbolicLinkObject': (3, ['HANDLE', 'PUNICODE_STRING', 'PULONG'], ['SymLinkObjHandle', 'LinkTarget', 'DataWritten'], 'NTSTATUS'), 'NtDeleteFile': (1, ['POBJECT_ATTRIBUTES'], ['ObjectAttributes'], 'NTSTATUS'), 'NtQueryFullAttributesFile': (2, ['POBJECT_ATTRIBUTES', 'PFILE_NETWORK_OPEN_INFORMATION'], ['ObjectAttributes', 'FileInformation'], 'NTSTATUS'), 'NtQueryInformationFile': (5, ['HANDLE', 'PIO_STATUS_BLOCK', 'PVOID', 'ULONG', 'FILE_INFORMATION_CLASS'], ['FileHandle', 'IoStatusBlock', 'FileInformation', 'Length', 'FileInformationClass'], 'NTSTATUS'), 'NtLockFile': (10, ['HANDLE', 'HANDLE', 'PIO_APC_ROUTINE', 'PVOID', 'PIO_STATUS_BLOCK', 'PLARGE_INTEGER', 'PLARGE_INTEGER', 'ULONG', 'BOOLEAN', 'BOOLEAN'], ['FileHandle', 'Event', 'ApcRoutine', 'ApcContext', 'IoStatusBlock', 'ByteOffset', 'Length', 'Key', 'FailImmediatedly', 'ExclusiveLock'], 'NTSTATUS'), 'NtUnlockFile': (5, ['HANDLE', 'PIO_STATUS_BLOCK', 'PLARGE_INTEGER', 'PLARGE_INTEGER', 'ULONG'], ['FileHandle', 'IoStatusBlock', 'ByteOffset', 'Lenght', 'Key'], 'NTSTATUS'), 'NtWriteFile': (9, ['HANDLE', 'HANDLE', 'PIO_APC_ROUTINE', 'PVOID', 'PIO_STATUS_BLOCK', 'PVOID', 'ULONG', 'PLARGE_INTEGER', 'PULONG'], ['FileHandle', 'Event', 'ApcRoutine', 'ApcContext', 'IoStatusBlock', 'Buffer', 'Length', 'ByteOffset', 'Key'], 'NTSTATUS'), 'NtWriteFileGather': (9, ['HANDLE', 'HANDLE', 'PIO_APC_ROUTINE', 'PVOID', 'PIO_STATUS_BLOCK', 'FILE_SEGMENT_ELEMENT', 'ULONG', 'PLARGE_INTEGER', 'PULONG'], ['FileHandle', 'Event', 'ApcRoutine', 'ApcContext', 'IoStatusBlock', 'BufferDescription', 'BufferLength', 'ByteOffset', 'Key'], 'NTSTATUS'), 'NtReadFile': (9, ['HANDLE', 'HANDLE', 'PIO_APC_ROUTINE', 'PVOID', 'PIO_STATUS_BLOCK', 'PVOID', 'ULONG', 'PLARGE_INTEGER', 'PULONG'], ['FileHandle', 'Event', 'UserApcRoutine', 'UserApcContext', 'IoStatusBlock', 'Buffer', 'BufferLength', 'ByteOffset', 'Key'], 'NTSTATUS'), 'NtReadFileScatter': (9, ['HANDLE', 'HANDLE', 'PIO_APC_ROUTINE', 'PVOID', 'PIO_STATUS_BLOCK', 'FILE_SEGMENT_ELEMENT', 'ULONG', 'PLARGE_INTEGER', 'PULONG'], ['FileHandle', 'Event', 'UserApcRoutine', 'UserApcContext', 'UserIoStatusBlock', 'BufferDescription', 'BufferLength', 'ByteOffset', 'Key'], 'NTSTATUS'), 'NtFlushBuffersFile': (2, ['HANDLE', 'PIO_STATUS_BLOCK'], ['FileHandle', 'IoStatusBlock'], 'NTSTATUS'), 'NtFlushBuffersFileEx': (3, ['HANDLE', 'FLUSH_FLAGS', 'PIO_STATUS_BLOCK'], ['FileHandle', 'Flags', 'IoStatusBlock'], 'NTSTATUS'), 'NtSetInformationFile': (5, ['HANDLE', 'PIO_STATUS_BLOCK', 'PVOID', 'ULONG', 'FILE_INFORMATION_CLASS'], ['FileHandle', 'IoStatusBlock', 'FileInformation', 'Length', 'FileInformationClass'], 'NTSTATUS'), 'NtQueryAttributesFile': (2, ['POBJECT_ATTRIBUTES', 'PFILE_BASIC_INFORMATION'], ['ObjectAttributes', 'FileInformation'], 'NTSTATUS'), 'NtQueryEaFile': (9, ['HANDLE', 'PIO_STATUS_BLOCK', 'PVOID', 'ULONG', 'BOOLEAN', 'PVOID', 'ULONG', 'PULONG', 'BOOLEAN'], ['FileHandle', 'IoStatusBlock', 'Buffer', 'Length', 'ReturnSingleEntry', 'EaList', 'EaListLength', 'EaIndex', 'RestartScan'], 'NTSTATUS'), 'NtSetEaFile': (4, ['HANDLE', 'PIO_STATUS_BLOCK', 'PVOID', 'ULONG'], ['FileHandle', 'IoStatusBlock', 'EaBuffer', 'EaBufferSize'], 'NTSTATUS'), 'NtQueryQuotaInformationFile': (9, ['HANDLE', 'PIO_STATUS_BLOCK', 'PVOID', 'ULONG', 'BOOLEAN', 'PVOID', 'ULONG', 'PSID', 'BOOLEAN'], ['FileHandle', 'IoStatusBlock', 'Buffer', 'Length', 'ReturnSingleEntry', 'SidList', 'SidListLength', 'StartSid', 'RestartScan'], 'NTSTATUS'), 'NtSetQuotaInformationFile': (4, ['HANDLE', 'PIO_STATUS_BLOCK', 'PVOID', 'ULONG'], ['FileHandle', 'IoStatusBlock', 'Buffer', 'BufferLength'], 'NTSTATUS'), 'NtCreatePagingFile': (4, ['PUNICODE_STRING', 'PLARGE_INTEGER', 'PLARGE_INTEGER', 'ULONG'], ['FileName', 'InitialSize', 'MaxiumSize', 'Reserved'], 'NTSTATUS'), 'NtTranslateFilePath': (4, ['PFILE_PATH', 'ULONG', 'PFILE_PATH', 'ULONG'], ['InputFilePath', 'OutputType', 'OutputFilePath', 'OutputFilePathLength'], 'NTSTATUS'), 'NtCreateDirectoryObject': (3, ['PHANDLE', 'DIRECTORY_ACCESS_MASK', 'POBJECT_ATTRIBUTES'], ['DirectoryHandle', 'DesiredAccess', 'ObjectAttributes'], 'NTSTATUS'), 'NtOpenDirectoryObject': (3, ['PHANDLE', 'DIRECTORY_ACCESS_MASK', 'POBJECT_ATTRIBUTES'], ['FileHandle', 'DesiredAccess', 'ObjectAttributes'], 'NTSTATUS'), 'NtQueryDirectoryObject': (7, ['HANDLE', 'PVOID', 'ULONG', 'BOOLEAN', 'BOOLEAN', 'PULONG', 'PULONG'], ['DirectoryHandle', 'Buffer', 'BufferLength', 'ReturnSingleEntry', 'RestartScan', 'Context', 'ReturnLength'], 'NTSTATUS'), 'NtNotifyChangeDirectoryFile': (9, ['HANDLE', 'HANDLE', 'PIO_APC_ROUTINE', 'PVOID', 'PIO_STATUS_BLOCK', 'PVOID', 'ULONG', 'FILE_NOTIFY_CHANGE_FLAGS', 'BOOLEAN'], ['FileHandle', 'Event', 'ApcRoutine', 'ApcContext', 'IoStatusBlock', 'Buffer', 'BufferSize', 'CompletionFilter', 'WatchTree'], 'NTSTATUS'), 'NtQueryDirectoryFile': (11, ['HANDLE', 'HANDLE', 'PIO_APC_ROUTINE', 'PVOID', 'PIO_STATUS_BLOCK', 'PVOID', 'ULONG', 'FILE_INFORMATION_CLASS', 'BOOLEAN', 'PUNICODE_STRING', 'BOOLEAN'], ['FileHandle', 'Event', 'ApcRoutine', 'ApcContext', 'IoStatusBlock', 'FileInformation', 'Length', 'FileInformationClass', 'ReturnSingleEntry', 'FileName', 'RestartScan'], 'NTSTATUS'), 'NtQueryOleDirectoryFile': (11, ['HANDLE', 'HANDLE', 'PIO_APC_ROUTINE', 'PVOID', 'PIO_STATUS_BLOCK', 'PVOID', 'ULONG', 'FILE_INFORMATION_CLASS', 'BOOLEAN', 'PUNICODE_STRING', 'BOOLEAN'], ['FileHandle', 'Event', 'ApcRoutine', 'ApcContext', 'IoStatusBlock', 'FileInformation', 'Length', 'FileInformationClass', 'ReturnSingleEntry', 'FileMask', 'RestartScan'], 'NTSTATUS'), 'NtQueryVolumeInformationFile': (5, ['HANDLE', 'PIO_STATUS_BLOCK', 'PVOID', 'ULONG', 'FS_INFORMATION_CLASS'], ['FileHandle', 'IoStatusBlock', 'FsInformation', 'Length', 'FsInformationClass'], 'NTSTATUS'), 'NtSetVolumeInformationFile': (5, ['HANDLE', 'PIO_STATUS_BLOCK', 'PVOID', 'ULONG', 'FS_INFORMATION_CLASS'], ['FileHandle', 'IoStatusBlock', 'FsInformation', 'Length', 'FsInformationClass'], 'NTSTATUS'), 'NtCreateSection': (7, ['PHANDLE', 'SECTION_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'PLARGE_INTEGER', 'NTPROTECTIONFLAGS', 'SECTION_ALLOCATION', 'HANDLE'], ['SectionHandle', 'DesiredAccess', 'ObjectAttributes', 'MaximumSize', 'SectionPageProtection', 'AllocationAttributes', 'FileHandle'], 'NTSTATUS'), 'NtExtendSection': (2, ['HANDLE', 'PLARGE_INTEGER'], ['SectionHandle', 'NewMaximumSize'], 'NTSTATUS'), 'NtMapViewOfSection': (10, ['HANDLE', 'PROCESSHANDLE', 'PVOID*', 'ULONG_PTR', 'SIZE_T', 'PLARGE_INTEGER', 'PSIZE_T', 'SECTION_INHERIT', 'MEMORYALLOCATIONFLAGS', 'NTPROTECTIONFLAGS'], ['SectionHandle', 'ProcessHandle', 'BaseAddress', 'ZeroBits', 'CommitSize', 'SectionOffset', 'ViewSize', 'InheritDisposition', 'AllocationType', 'AccessProtection'], 'NTSTATUS'), 'NtOpenSection': (3, ['PHANDLE', 'SECTION_ACCESS_MASK', 'POBJECT_ATTRIBUTES'], ['SectionHandle', 'DesiredAccess', 'ObjectAttributes'], 'NTSTATUS'), 'NtQuerySection': (5, ['HANDLE', 'SECTION_INFORMATION_CLASS', 'PVOID', 'SIZE_T', 'PSIZE_T'], ['SectionHandle', 'SectionInformationClass', 'SectionInformation', 'Length', 'ResultLength'], 'NTSTATUS'), 'NtUnmapViewOfSection': (2, ['PROCESSHANDLE', 'PVOID'], ['ProcessHandle', 'BaseAddress'], 'NTSTATUS'), 'NtAcceptConnectPort': (6, ['PHANDLE', 'PVOID', 'PPORT_MESSAGE', 'BOOLEAN', 'PPORT_VIEW', 'PREMOTE_PORT_VIEW'], ['PortHandle', 'PortContext', 'ConnectionRequest', 'AcceptConnection', 'ServerView', 'ClientView'], 'NTSTATUS'), 'NtCompleteConnectPort': (1, ['HANDLE'], ['PortHandle'], 'NTSTATUS'), 'NtConnectPort': (8, ['PHANDLE', 'PUNICODE_STRING', 'PSECURITY_QUALITY_OF_SERVICE', 'PPORT_VIEW', 'PREMOTE_PORT_VIEW', 'PULONG', 'PVOID', 'PULONG'], ['PortHandle', 'PortName', 'SecurityQos', 'ClientView', 'ServerView', 'MaxMessageLength', 'ConnectionInformation', 'ConnectionInformationLength'], 'NTSTATUS'), 'NtCreatePort': (5, ['PHANDLE', 'POBJECT_ATTRIBUTES', 'ULONG', 'ULONG', 'ULONG'], ['PortHandle', 'ObjectAttributes', 'MaxConnectionInfoLength', 'MaxMessageLength', 'MaxPoolUsage'], 'NTSTATUS'), 'NtCreateWaitablePort': (5, ['PHANDLE', 'POBJECT_ATTRIBUTES', 'ULONG', 'ULONG', 'ULONG'], ['PortHandle', 'ObjectAttributes', 'MaxConnectInfoLength', 'MaxDataLength', 'NPMessageQueueSize'], 'NTSTATUS'), 'NtImpersonateClientOfPort': (2, ['HANDLE', 'PPORT_MESSAGE'], ['PortHandle', 'ClientMessage'], 'NTSTATUS'), 'NtListenPort': (2, ['HANDLE', 'PPORT_MESSAGE'], ['PortHandle', 'ConnectionRequest'], 'NTSTATUS'), 'NtQueryInformationPort': (5, ['HANDLE', 'PORT_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['PortHandle', 'PortInformationClass', 'PortInformation', 'PortInformationLength', 'ReturnLength'], 'NTSTATUS'), 'NtQueryPortInformationProcess': (0, [], [], 'NTSTATUS'), 'NtReadRequestData': (6, ['HANDLE', 'PPORT_MESSAGE', 'ULONG', 'PVOID', 'ULONG', 'PULONG'], ['PortHandle', 'Message', 'Index', 'Buffer', 'BufferLength', 'ReturnLength'], 'NTSTATUS'), 'NtReplyPort': (2, ['HANDLE', 'PPORT_MESSAGE'], ['PortHandle', 'LpcReply'], 'NTSTATUS'), 'NtReplyWaitReceivePort': (4, ['HANDLE', 'PVOID*', 'PPORT_MESSAGE', 'PPORT_MESSAGE'], ['PortHandle', 'PortContext', 'ReplyMessage', 'ReceiveMessage'], 'NTSTATUS'), 'NtReplyWaitReceivePortEx': (5, ['HANDLE', 'PVOID*', 'PPORT_MESSAGE', 'PPORT_MESSAGE', 'PLARGE_INTEGER'], ['PortHandle', 'PortContext', 'ReplyMessage', 'ReceiveMessage', 'Timeout'], 'NTSTATUS'), 'NtReplyWaitReplyPort': (2, ['HANDLE', 'PPORT_MESSAGE'], ['PortHandle', 'ReplyMessage'], 'NTSTATUS'), 'NtRequestPort': (2, ['HANDLE', 'PPORT_MESSAGE'], ['PortHandle', 'LpcMessage'], 'NTSTATUS'), 'NtRequestWaitReplyPort': (3, ['HANDLE', 'PPORT_MESSAGE', 'PPORT_MESSAGE'], ['PortHandle', 'LpcReply', 'LpcRequest'], 'NTSTATUS'), 'NtSecureConnectPort': (9, ['PHANDLE', 'PUNICODE_STRING', 'PSECURITY_QUALITY_OF_SERVICE', 'PPORT_VIEW', 'PSID', 'PREMOTE_PORT_VIEW', 'PULONG', 'PVOID', 'PULONG'], ['PortHandle', 'PortName', 'SecurityQos', 'ClientView', 'Sid', 'ServerView', 'MaxMessageLength', 'ConnectionInformation', 'ConnectionInformationLength'], 'NTSTATUS'), 'NtWriteRequestData': (6, ['HANDLE', 'PPORT_MESSAGE', 'ULONG', 'PVOID', 'ULONG', 'PULONG'], ['PortHandle', 'Message', 'Index', 'Buffer', 'BufferLength', 'ReturnLength'], 'NTSTATUS'), 'NtSetDefaultHardErrorPort': (1, ['HANDLE'], ['PortHandle'], 'NTSTATUS'), 'NtRegisterThreadTerminatePort': (1, ['HANDLE'], ['TerminationPort'], 'NTSTATUS'), 'NtAddBootEntry': (2, ['PBOOT_ENTRY', 'ULONG'], ['BootEntry', 'Id'], 'NTSTATUS'), 'NtAddDriverEntry': (2, ['PEFI_DRIVER_ENTRY', 'ULONG'], ['BootEntry', 'Id'], 'NTSTATUS'), 'NtDeleteDriverEntry': (1, ['ULONG'], ['Id'], 'NTSTATUS'), 'NtDeleteBootEntry': (1, ['ULONG'], ['Id'], 'NTSTATUS'), 'NtEnumerateBootEntries': (2, ['PVOID', 'PULONG'], ['Buffer', 'BufferLength'], 'NTSTATUS'), 'NtEnumerateDriverEntries': (2, ['PVOID', 'PULONG'], ['Buffer', 'BufferLength'], 'NTSTATUS'), 'NtLoadDriver': (1, ['PUNICODE_STRING'], ['DriverServiceName'], 'NTSTATUS'), 'NtModifyBootEntry': (1, ['PBOOT_ENTRY'], ['BootEntry'], 'NTSTATUS'), 'NtModifyDriverEntry': (1, ['PEFI_DRIVER_ENTRY'], ['DriverEntry'], 'NTSTATUS'), 'NtQueryDriverEntryOrder': (2, ['PULONG', 'PULONG'], ['Ids', 'Count'], 'NTSTATUS'), 'NtQueryBootEntryOrder': (2, ['PULONG', 'PULONG'], ['Ids', 'Count'], 'NTSTATUS'), 'NtQueryBootOptions': (2, ['PBOOT_OPTIONS', 'PULONG'], ['BootOptions', 'BootOptionsLength'], 'NTSTATUS'), 'NtSetBootEntryOrder': (2, ['PULONG', 'PULONG'], ['Ids', 'Count'], 'NTSTATUS'), 'NtSetBootOptions': (2, ['PBOOT_OPTIONS', 'ULONG'], ['BootOptions', 'FieldsToChange'], 'NTSTATUS'), 'NtSetDriverEntryOrder': (2, ['PULONG', 'PULONG'], ['Ids', 'Count'], 'NTSTATUS'), 'NtUnloadDriver': (1, ['PUNICODE_STRING'], ['DriverServiceName'], 'NTSTATUS'), 'NtCreateProfile': (9, ['PHANDLE', 'HANDLE', 'PVOID', 'ULONG', 'ULONG', 'PVOID', 'ULONG', 'KPROFILE_SOURCE', 'KAFFINITY'], ['ProfileHandle', 'Process', 'ImageBase', 'ImageSize', 'BucketSize', 'Buffer', 'BufferSize', 'ProfileSource', 'Affinity'], 'NTSTATUS'), 'NtQueryIntervalProfile': (2, ['KPROFILE_SOURCE', 'PULONG'], ['ProfileSource', 'Interval'], 'NTSTATUS'), 'NtSetIntervalProfile': (2, ['ULONG', 'KPROFILE_SOURCE'], ['Interval', 'Source'], 'NTSTATUS'), 'NtStartProfile': (1, ['HANDLE'], ['ProfileHandle'], 'NTSTATUS'), 'NtStopProfile': (1, ['HANDLE'], ['ProfileHandle'], 'NTSTATUS'), 'NtDebugActiveProcess': (2, ['HANDLE', 'HANDLE'], ['Process', 'DebugObject'], 'NTSTATUS'), 'NtDebugContinue': (3, ['HANDLE', 'PCLIENT_ID', 'NTSTATUS'], ['DebugObject', 'AppClientId', 'ContinueStatus'], 'NTSTATUS'), 'NtWaitForDebugEvent': (4, ['HANDLE', 'BOOLEAN', 'PLARGE_INTEGER', 'PDBGUI_WAIT_STATE_CHANGE'], ['DebugObject', 'Alertable', 'Timeout', 'StateChange'], 'NTSTATUS'), 'NtRemoveProcessDebug': (2, ['HANDLE', 'HANDLE'], ['Process', 'DebugObject'], 'NTSTATUS'), 'NtSetInformationDebugObject': (5, ['HANDLE', 'DEBUGOBJECTINFOCLASS', 'PVOID', 'ULONG', 'PULONG'], ['DebugObject', 'InformationClass', 'Information', 'InformationLength', 'ReturnLength'], 'NTSTATUS'), 'NtCreateDebugObject': (4, ['PHANDLE', 'DEBUG_OBJECT_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'BOOLEAN'], ['DebugHandle', 'DesiredAccess', 'ObjectAttributes', 'KillProcessOnExit'], 'NTSTATUS'), 'NtGetContextThread': (2, ['THREADHANDLE', 'PCONTEXT'], ['ThreadHandle', 'pContext'], 'NTSTATUS'), 'NtSetContextThread': (2, ['THREADHANDLE', 'PCONTEXT'], ['ThreadHandle', 'Context'], 'NTSTATUS'), 'NtContinue': (2, ['PCONTEXT', 'BOOLEAN'], ['ThreadContext', 'RaiseAlert'], 'NTSTATUS'), 'NtFlushInstructionCache': (3, ['PROCESSHANDLE', 'PVOID', 'ULONG'], ['ProcessHandle', 'BaseAddress', 'NumberOfBytesToFlush'], 'NTSTATUS'), 'NtFlushWriteBuffer': (0, [], [], 'NTSTATUS'), 'NtSystemDebugControl': (6, ['SYSDBG_COMMAND', 'PVOID', 'ULONG', 'PVOID', 'ULONG', 'PULONG'], ['ControlCode', 'InputBuffer', 'InputBufferLength', 'OutputBuffer', 'OutputBufferLength', 'ReturnLength'], 'NTSTATUS'), 'NtQuerySystemTime': (1, ['PLARGE_INTEGER'], ['SystemTime'], 'NTSTATUS'), 'NtSetSystemTime': (2, ['PLARGE_INTEGER', 'PLARGE_INTEGER'], ['SystemTime', 'PreviousTime'], 'NTSTATUS'), 'NtGetTickCount': (0, [], [], 'ULONG'), 'NtAllocateLocallyUniqueId': (1, ['LUID*'], ['LocallyUniqueId'], 'NTSTATUS'), 'NtAllocateUuids': (4, ['PULARGE_INTEGER', 'PULONG', 'PULONG', 'PUCHAR'], ['Time', 'Range', 'Sequence', 'Seed'], 'NTSTATUS'), 'NtSetUuidSeed': (1, ['PUCHAR'], ['UuidSeed'], 'NTSTATUS'), 'NtQueryDebugFilterState': (2, ['ULONG', 'ULONG'], ['ComponentId', 'Level'], 'NTSTATUS'), 'NtSetDebugFilterState': (3, ['ULONG', 'ULONG', 'BOOLEAN'], ['ComponentId', 'Level', 'State'], 'NTSTATUS'), 'NtApphelpCacheControl': (2, ['APPHELPCACHESERVICECLASS', 'PVOID'], ['Service', 'ServiceData'], 'NTSTATUS'), 'NtAreMappedFilesTheSame': (2, ['PVOID', 'PVOID'], ['File1MappedAsAnImage', 'File2MappedAsFile'], 'NTSTATUS'), 'NtShutdownSystem': (1, ['SHUTDOWN_ACTION'], ['Action'], 'NTSTATUS'), 'NtPowerInformation': (5, ['POWER_INFORMATION_LEVEL', 'PVOID', 'ULONG', 'PVOID', 'ULONG'], ['PowerInformationLevel', 'InputBuffer', 'InputBufferLength', 'OutputBuffer', 'OutputBufferLength'], 'NTSTATUS'), 'NtSetSystemPowerState': (3, ['POWER_ACTION', 'SYSTEM_POWER_STATE', 'ULONG'], ['SystemAction', 'MinSystemState', 'Flags'], 'NTSTATUS'), 'NtDisplayString': (1, ['PUNICODE_STRING'], ['DisplayString'], 'NTSTATUS'), 'NtInitiatePowerAction': (4, ['POWER_ACTION', 'SYSTEM_POWER_STATE', 'ULONG', 'BOOLEAN'], ['SystemAction', 'MinSystemState', 'Flags', 'Asynchronous'], 'NTSTATUS'), 'NtQueryPerformanceCounter': (2, ['PLARGE_INTEGER', 'PLARGE_INTEGER'], ['PerformanceCounter', 'PerformanceFrequency'], 'NTSTATUS'), 'NtQueryTimerResolution': (3, ['PULONG', 'PULONG', 'PULONG'], ['MinimumResolution', 'MaximumResolution', 'CurrentResolution'], 'NTSTATUS'), 'NtCreateMailslotFile': (8, ['PHANDLE', 'ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'PIO_STATUS_BLOCK', 'ULONG', 'FILE_SHARE_MODE', 'ULONG', 'PLARGE_INTEGER'], ['MailSlotFileHandle', 'DesiredAccess', 'ObjectAttributes', 'IoStatusBlock', 'FileAttributes', 'ShareAccess', 'MaxMessageSize', 'TimeOut'], 'NTSTATUS'), 'NtCreateNamedPipeFile': (14, ['PHANDLE', 'PIPE_ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'PIO_STATUS_BLOCK', 'FILE_SHARE_MODE', 'NTCREATEDISPOSITION', 'NTCREATEOPTIONS', 'ULONG', 'ULONG', 'ULONG', 'ULONG', 'ULONG', 'ULONG', 'PLARGE_INTEGER'], ['NamedPipeFileHandle', 'DesiredAccess', 'ObjectAttributes', 'IoStatusBlock', 'ShareAccess', 'CreateDisposition', 'CreateOptions', 'WriteModeMessage', 'ReadModeMessage', 'NonBlocking', 'MaxInstances', 'InBufferSize', 'OutBufferSize', 'DefaultTimeOut'], 'NTSTATUS'), 'NtDeviceIoControlFile': (10, ['HANDLE', 'HANDLE', 'PIO_APC_ROUTINE', 'PVOID', 'PIO_STATUS_BLOCK', 'IOCTL', 'PVOID', 'ULONG', 'PVOID', 'ULONG'], ['DeviceHandle', 'Event', 'UserApcRoutine', 'UserApcContext', 'IoStatusBlock', 'IoControlCode', 'InputBuffer', 'InputBufferSize', 'OutputBuffer', 'OutputBufferSize'], 'NTSTATUS'), 'NtFsControlFile': (10, ['HANDLE', 'HANDLE', 'PIO_APC_ROUTINE', 'PVOID', 'PIO_STATUS_BLOCK', 'ULONG', 'PVOID', 'ULONG', 'PVOID', 'ULONG'], ['DeviceHandle', 'Event', 'ApcRoutine', 'ApcContext', 'IoStatusBlock', 'IoControlCode', 'InputBuffer', 'InputBufferSize', 'OutputBuffer', 'OutputBufferSize'], 'NTSTATUS'), 'NtPlugPlayControl': (3, ['PLUGPLAY_CONTROL_CLASS', 'PVOID', 'ULONG'], ['PlugPlayControlClass', 'Buffer', 'BufferSize'], 'NTSTATUS'), 'NtGetPlugPlayEvent': (4, ['ULONG', 'ULONG', 'PPLUGPLAY_EVENT_BLOCK', 'ULONG'], ['Reserved1', 'Reserved2', 'Buffer', 'BufferSize'], 'NTSTATUS'), 'NtLockProductActivationKeys': (2, ['PULONG', 'PULONG'], ['pPrivateVer', 'pSafeMode'], 'NTSTATUS'), 'NtSetTimerResolution': (3, ['ULONG', 'BOOLEAN', 'PULONG'], ['DesiredResolution', 'SetResolution', 'CurrentResolution'], 'NTSTATUS'), 'NtQuerySystemInformation': (4, ['SYSTEM_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['SystemInformationClass', 'SystemInformation', 'Length', 'ResultLength'], 'NTSTATUS'), 'NtSetSystemInformation': (3, ['SYSTEM_INFORMATION_CLASS', 'PVOID', 'ULONG'], ['SystemInformationClass', 'SystemInformation', 'SystemInformationLength'], 'NTSTATUS'), 'NtRaiseHardError': (6, ['NTSTATUS', 'ULONG', 'ULONG', 'PULONG_PTR', 'ULONG', 'PULONG'], ['ErrorStatus', 'NumberOfParameters', 'UnicodeStringParameterMask', 'Parameters', 'ValidResponseOptions', 'Response'], 'NTSTATUS'), 'NtClose': (1, ['HANDLE'], ['Handle'], 'NTSTATUS'), 'NtDuplicateObject': (7, ['PROCESSHANDLE', 'HANDLE', 'PROCESSHANDLE', 'PHANDLE', 'ACCESS_MASK', 'ULONG', 'ULONG'], ['SourceProcessHandle', 'SourceHandle', 'TargetProcessHandle', 'TargetHandle', 'DesiredAccess', 'HandleAttributes', 'Options'], 'NTSTATUS'), 'NtMakePermanentObject': (1, ['HANDLE'], ['Object'], 'NTSTATUS'), 'NtMakeTemporaryObject': (1, ['HANDLE'], ['Handle'], 'NTSTATUS'), 'NtQueryObject': (5, ['HANDLE', 'OBJECT_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['ObjectHandle', 'ObjectInformationClass', 'ObjectInformation', 'Length', 'ResultLength'], 'NTSTATUS'), 'NtQuerySecurityObject': (5, ['HANDLE', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR', 'ULONG', 'PULONG'], ['Handle', 'SecurityInformation', 'SecurityDescriptor', 'Length', 'ResultLength'], 'NTSTATUS'), 'NtSetInformationObject': (4, ['HANDLE', 'OBJECT_INFORMATION_CLASS', 'PVOID', 'ULONG'], ['ObjectHandle', 'ObjectInformationClass', 'ObjectInformation', 'Length'], 'NTSTATUS'), 'NtSetSecurityObject': (3, ['HANDLE', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR'], ['Handle', 'SecurityInformation', 'SecurityDescriptor'], 'NTSTATUS'), 'RtlAppendPathElement': (3, ['RTL_APE_FLAGS', 'PRTL_UNICODE_STRING_BUFFER', 'PCUNICODE_STRING'], ['flags', 'pStrBuffer', 'pAddend'], 'NTSTATUS'), 'RtlCopyMappedMemory': (3, ['VOID*', 'CONST VOID*', 'SIZE_T'], ['pDest', 'pSrc', 'bytesToCopy'], 'NTSTATUS'), 'RtlDumpResource': (1, ['PRTL_RESOURCE'], ['pResource'], 'VOID'), 'RtlGetLengthWithoutLastFullDosOrNtPathElement': (3, ['ULONG', 'PUNICODE_STRING', 'PULONG'], ['flags', 'pStr', 'pOutLen'], 'NTSTATUS'), 'RtlMultiAppendUnicodeStringBuffer': (3, ['PRTL_UNICODE_STRING_BUFFER', 'ULONG', 'PCUNICODE_STRING'], ['pStrBuffer', 'numAddends', 'pAddends'], 'NTSTATUS'), 'RtlTraceDatabaseAdd': (4, ['PRTL_TRACE_DATABASE', 'ULONG', 'PVOID*', 'PRTL_TRACE_BLOCK*'], ['pDatabase', 'numFrames', 'ppFrames', 'ppBlock'], 'BOOLEAN'), 'RtlTraceDatabaseCreate': (5, ['ULONG', 'SIZE_T', 'ULONG', 'ULONG', 'PRTL_TRACE_HASH_FUNCTION'], ['buckets', 'maximumSize', 'flags', 'tag', 'pfnHash'], 'PRTL_TRACE_DATABASE'), 'RtlTraceDatabaseDestroy': (1, ['PRTL_TRACE_DATABASE'], ['pDatabase'], 'BOOLEAN'), 'RtlTraceDatabaseEnumerate': (3, ['PRTL_TRACE_DATABASE', 'PRTL_TRACE_ENUM', 'PRTL_TRACE_BLOCK*'], ['pDatabase', 'pEnumData', 'ppBlock'], 'BOOLEAN'), 'RtlTraceDatabaseFind': (4, ['PRTL_TRACE_DATABASE', 'ULONG', 'PVOID*', 'PRTL_TRACE_BLOCK*'], ['pDatabase', 'numFrames', 'ppFrames', 'ppBlock'], 'BOOLEAN'), 'RtlTraceDatabaseLock': (1, ['PRTL_TRACE_DATABASE'], ['pDatabase'], 'BOOLEAN'), 'RtlTraceDatabaseUnlock': (1, ['PRTL_TRACE_DATABASE'], ['pDatabase'], 'BOOLEAN'), 'RtlTraceDatabaseValidate': (1, ['PRTL_TRACE_DATABASE'], ['pDatabase'], 'BOOLEAN'), 'RtlpEnsureBufferSize': (3, ['ULONG', 'PRTL_BUFFER', 'SIZE_T'], ['flags', 'pBuffer', 'requiredSize'], 'NTSTATUS'), 'LdrRegisterDllNotification': (4, ['ULONG', 'PLDR_DLL_NOTIFICATION_FUNCTION', 'PVOID', 'PVOID*'], ['Flags', 'NotificationFunction', 'Context', 'Cookie'], 'NTSTATUS'), 'LdrUnregisterDllNotification': (1, ['PVOID'], ['Cookie'], 'NTSTATUS'), 'RtlExtendedIntegerMultiply': (2, ['LARGE_INTEGER', 'LONG'], ['Multiplicand', 'Multiplier'], 'LARGE_INTEGER'), 'RtlExtendedLargeIntegerDivide': (3, ['LARGE_INTEGER', 'ULONG', 'PULONG'], ['Dividend', 'Divisor', 'Remainder'], 'LARGE_INTEGER'), 'RtlAddGrowableFunctionTable': (6, ['PVOID*', 'PRUNTIME_FUNCTION', 'ULONG', 'ULONG', 'ULONG_PTR', 'ULONG_PTR'], ['DynamicTable', 'FunctionTable', 'EntryCount', 'MaximumEntryCount', 'RangeBase', 'RangeEnd'], 'NTSTATUS'), 'RtlDeleteGrowableFunctionTable': (1, ['PVOID'], ['DynamicTable'], 'VOID'), 'RtlGrowFunctionTable': (2, ['PVOID', 'ULONG'], ['DynamicTable', 'NewEntryCount'], 'VOID'), 'RtlGetFunctionTableListHead': (0, [], [], 'PLIST_ENTRY'), 'RtlSetUnhandledExceptionFilter': (1, ['PVOID'], ['TopLevelExceptionFilter'], 'PVOID'), 'RtlDispatchException': (2, ['PEXCEPTION_RECORD', 'PCONTEXT'], ['ExceptionRecord', 'Context'], 'BOOLEAN'), 'RtlRaiseStatus': (1, ['NTSTATUS'], ['Status'], 'VOID'), 'RtlUnhandledExceptionFilter': (1, ['EXCEPTION_POINTERS*'], ['ExceptionInfo'], 'LONG'), 'RtlWalkFrameChain': (3, ['PVOID*', 'ULONG', 'ULONG'], ['Callers', 'Count', 'Flags'], 'ULONG'), 'RtlLogStackBackTrace': (0, [], [], 'USHORT'), 'RtlFirstEntrySList': (1, ['PSLIST_HEADER'], ['ListHead'], 'PSLIST_ENTRY'), 'RtlInitializeSListHead': (1, ['PSLIST_HEADER'], ['ListHead'], 'void'), 'RtlInterlockedFlushSList': (1, ['PSLIST_HEADER'], ['ListHead'], 'PSLIST_ENTRY'), 'RtlInterlockedPopEntrySList': (1, ['PSLIST_HEADER'], ['ListHead'], 'PSLIST_ENTRY'), 'RtlInterlockedPushEntrySList': (2, ['PSLIST_HEADER', 'PSLIST_ENTRY'], ['ListHead', 'ListEntry'], 'PSLIST_ENTRY'), 'RtlQueryDepthSList': (1, ['PSLIST_HEADER'], ['ListHead'], 'WORD'), 'NtCreateTransactionManager': (6, ['PHANDLE', 'ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'PUNICODE_STRING', 'ULONG', 'ULONG'], ['TmHandle', 'DesiredAccess', 'ObjectAttributes', 'LogFileName', 'CreateOptions', 'CommitStrength'], 'NTSTATUS'), 'NtOpenTransactionManager': (6, ['PHANDLE', 'ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'PUNICODE_STRING', 'LPGUID', 'ULONG'], ['TmHandle', 'DesiredAccess', 'ObjectAttributes', 'LogFileName', 'TmIdentity', 'OpenOptions'], 'NTSTATUS'), 'NtQueryInformationTransactionManager': (5, ['HANDLE', 'TRANSACTIONMANAGER_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['TransactionManagerHandle', 'TransactionManagerInformationClass', 'TransactionManagerInformation', 'TransactionManagerInformationLength', 'ReturnLength'], 'NTSTATUS'), 'NtRecoverTransactionManager': (1, ['HANDLE'], ['TransactionManagerHandle'], 'NTSTATUS'), 'NtRenameTransactionManager': (2, ['PUNICODE_STRING', 'LPGUID'], ['LogFileName', 'ExistingTransactionManagerGuid'], 'NTSTATUS'), 'NtRollforwardTransactionManager': (2, ['HANDLE', 'PLARGE_INTEGER'], ['TransactionManagerHandle', 'TmVirtualClock'], 'NTSTATUS'), 'NtSetInformationTransactionManager': (4, ['HANDLE', 'TRANSACTIONMANAGER_INFORMATION_CLASS', 'PVOID', 'ULONG'], ['TransactionManagerHandle', 'TransactionManagerInformationClass', 'TransactionManagerInformation', 'TransactionManagerInformationLength'], 'NTSTATUS'), 'NtCommitTransaction': (2, ['HANDLE', 'BOOLEAN'], ['TransactionHandle', 'Wait'], 'NTSTATUS'), 'NtCreateTransaction': (10, ['PHANDLE', 'ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'LPGUID', 'HANDLE', 'ULONG', 'ULONG', 'ULONG', 'PLARGE_INTEGER', 'PUNICODE_STRING'], ['TransactionHandle', 'DesiredAccess', 'ObjectAttributes', 'Uow', 'TmHandle', 'CreateOptions', 'IsolationLevel', 'IsolationFlags', 'Timeout', 'Description'], 'NTSTATUS'), 'NtEnumerateTransactionObject': (5, ['HANDLE', 'KTMOBJECT_TYPE', 'PKTMOBJECT_CURSOR', 'ULONG', 'PULONG'], ['RootObjectHandle', 'QueryType', 'ObjectCursor', 'ObjectCursorLength', 'ReturnLength'], 'NTSTATUS'), 'NtOpenTransaction': (5, ['PHANDLE', 'ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'LPGUID', 'HANDLE'], ['TransactionHandle', 'DesiredAccess', 'ObjectAttributes', 'Uow', 'TmHandle'], 'NTSTATUS'), 'NtQueryInformationTransaction': (5, ['HANDLE', 'TRANSACTION_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['TransactionHandle', 'TransactionInformationClass', 'TransactionInformation', 'TransactionInformationLength', 'ReturnLength'], 'NTSTATUS'), 'NtRollbackTransaction': (2, ['HANDLE', 'BOOLEAN'], ['TransactionHandle', 'Wait'], 'NTSTATUS'), 'NtSetInformationTransaction': (4, ['HANDLE', 'TRANSACTION_INFORMATION_CLASS', 'PVOID', 'ULONG'], ['TransactionHandle', 'TransactionInformationClass', 'TransactionInformation', 'TransactionInformationLength'], 'NTSTATUS'), 'NtFreezeTransactions': (2, ['PLARGE_INTEGER', 'PLARGE_INTEGER'], ['FreezeTimeout', 'ThawTimeout'], 'NTSTATUS'), 'NtThawTransactions': (0, [], [], 'NTSTATUS'), 'NtCommitComplete': (2, ['HANDLE', 'PLARGE_INTEGER'], ['EnlistmentHandle', 'TmVirtualClock'], 'NTSTATUS'), 'NtCommitEnlistment': (2, ['HANDLE', 'PLARGE_INTEGER'], ['EnlistmentHandle', 'TmVirtualClock'], 'NTSTATUS'), 'NtCreateEnlistment': (8, ['PHANDLE', 'ACCESS_MASK', 'HANDLE', 'HANDLE', 'POBJECT_ATTRIBUTES', 'ULONG', 'NOTIFICATION_MASK', 'PVOID'], ['EnlistmentHandle', 'DesiredAccess', 'ResourceManagerHandle', 'TransactionHandle', 'ObjectAttributes', 'CreateOptions', 'NotificationMask', 'EnlistmentKey'], 'NTSTATUS'), 'NtOpenEnlistment': (5, ['PHANDLE', 'ACCESS_MASK', 'HANDLE', 'LPGUID', 'POBJECT_ATTRIBUTES'], ['EnlistmentHandle', 'DesiredAccess', 'RmHandle', 'EnlistmentGuid', 'ObjectAttributes'], 'NTSTATUS'), 'NtPrepareComplete': (2, ['HANDLE', 'PLARGE_INTEGER'], ['EnlistmentHandle', 'TmVirtualClock'], 'NTSTATUS'), 'NtPrePrepareComplete': (2, ['HANDLE', 'PLARGE_INTEGER'], ['EnlistmentHandle', 'TmVirtualClock'], 'NTSTATUS'), 'NtPrepareEnlistment': (2, ['HANDLE', 'PLARGE_INTEGER'], ['EnlistmentHandle', 'TmVirtualClock'], 'NTSTATUS'), 'NtPrePrepareEnlistment': (2, ['HANDLE', 'PLARGE_INTEGER'], ['EnlistmentHandle', 'TmVirtualClock'], 'NTSTATUS'), 'NtQueryInformationEnlistment': (5, ['HANDLE', 'ENLISTMENT_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['EnlistmentHandle', 'EnlistmentInformationClass', 'EnlistmentInformation', 'EnlistmentInformationLength', 'ReturnLength'], 'NTSTATUS'), 'NtReadOnlyEnlistment': (2, ['HANDLE', 'PLARGE_INTEGER'], ['EnlistmentHandle', 'TmVirtualClock'], 'NTSTATUS'), 'NtRecoverEnlistment': (2, ['HANDLE', 'PVOID'], ['EnlistmentHandle', 'EnlistmentKey'], 'NTSTATUS'), 'NtRollbackComplete': (2, ['HANDLE', 'PLARGE_INTEGER'], ['EnlistmentHandle', 'TmVirtualClock'], 'NTSTATUS'), 'NtRollbackEnlistment': (2, ['HANDLE', 'PLARGE_INTEGER'], ['EnlistmentHandle', 'TmVirtualClock'], 'NTSTATUS'), 'NtSetInformationEnlistment': (4, ['HANDLE', 'ENLISTMENT_INFORMATION_CLASS', 'PVOID', 'ULONG'], ['EnlistmentHandle', 'EnlistmentInformationClass', 'EnlistmentInformation', 'EnlistmentInformationLength'], 'NTSTATUS'), 'NtSinglePhaseReject': (2, ['HANDLE', 'PLARGE_INTEGER'], ['EnlistmentHandle', 'TmVirtualClock'], 'NTSTATUS'), 'NtCreateResourceManager': (7, ['PHANDLE', 'ACCESS_MASK', 'HANDLE', 'LPGUID', 'POBJECT_ATTRIBUTES', 'ULONG', 'PUNICODE_STRING'], ['ResourceManagerHandle', 'DesiredAccess', 'TmHandle', 'ResourceManagerGuid', 'ObjectAttributes', 'CreateOptions', 'Description'], 'NTSTATUS'), 'NtGetNotificationResourceManager': (7, ['HANDLE', 'PTRANSACTION_NOTIFICATION', 'ULONG', 'PLARGE_INTEGER', 'PULONG', 'ULONG', 'ULONG_PTR'], ['ResourceManagerHandle', 'TransactionNotification', 'NotificationLength', 'Timeout', 'ReturnLength', 'Asynchronous', 'AsynchronousContext'], 'NTSTATUS'), 'NtOpenResourceManager': (5, ['PHANDLE', 'ACCESS_MASK', 'HANDLE', 'LPGUID', 'POBJECT_ATTRIBUTES'], ['ResourceManagerHandle', 'DesiredAccess', 'TmHandle', 'ResourceManagerGuid', 'ObjectAttributes'], 'NTSTATUS'), 'NtQueryInformationResourceManager': (5, ['HANDLE', 'RESOURCEMANAGER_INFORMATION_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['ResourceManagerHandle', 'ResourceManagerInformationClass', 'ResourceManagerInformation', 'ResourceManagerInformationLength', 'ReturnLength'], 'NTSTATUS'), 'NtRecoverResourceManager': (1, ['HANDLE'], ['ResourceManagerHandle'], 'NTSTATUS'), 'NtSetInformationResourceManager': (4, ['HANDLE', 'RESOURCEMANAGER_INFORMATION_CLASS', 'PVOID', 'ULONG'], ['ResourceManagerHandle', 'ResourceManagerInformationClass', 'ResourceManagerInformation', 'ResourceManagerInformationLength'], 'NTSTATUS'), 'RtlInitializeGenericTableAvl': (5, ['PRTL_AVL_TABLE', 'PRTL_AVL_COMPARE_ROUTINE', 'PRTL_AVL_ALLOCATE_ROUTINE', 'PRTL_AVL_FREE_ROUTINE', 'PVOID'], ['Table', 'CompareRoutine', 'AllocateRoutine', 'FreeRoutine', 'TableContext'], 'VOID'), 'RtlInsertElementGenericTableAvl': (4, ['PRTL_AVL_TABLE', 'PVOID', 'CLONG', 'PBOOLEAN'], ['Table', 'Buffer', 'BufferSize', 'NewElement'], 'PVOID'), 'RtlInsertElementGenericTableFullAvl': (6, ['PRTL_AVL_TABLE', 'PVOID', 'CLONG', 'PBOOLEAN', 'PVOID', 'TABLE_SEARCH_RESULT'], ['Table', 'Buffer', 'BufferSize', 'NewElement', 'NodeOrParent', 'SearchResult'], 'PVOID'), 'RtlDeleteElementGenericTableAvl': (2, ['PRTL_AVL_TABLE', 'PVOID'], ['Table', 'Buffer'], 'BOOLEAN'), 'RtlLookupElementGenericTableAvl': (2, ['PRTL_AVL_TABLE', 'PVOID'], ['Table', 'Buffer'], 'PVOID'), 'RtlLookupElementGenericTableFullAvl': (4, ['PRTL_AVL_TABLE', 'PVOID', 'PVOID*', 'TABLE_SEARCH_RESULT*'], ['Table', 'Buffer', 'NodeOrParent', 'SearchResult'], 'PVOID'), 'RtlEnumerateGenericTableAvl': (2, ['PRTL_AVL_TABLE', 'BOOLEAN'], ['Table', 'Restart'], 'PVOID'), 'RtlEnumerateGenericTableWithoutSplayingAvl': (2, ['PRTL_AVL_TABLE', 'PVOID*'], ['Table', 'RestartKey'], 'PVOID'), 'RtlLookupFirstMatchingElementGenericTableAvl': (3, ['PRTL_AVL_TABLE', 'PVOID', 'PVOID*'], ['Table', 'Buffer', 'RestartKey'], 'PVOID'), 'RtlEnumerateGenericTableLikeADirectory': (7, ['PRTL_AVL_TABLE', 'PRTL_AVL_MATCH_FUNCTION', 'PVOID', 'ULONG', 'PVOID*', 'PULONG', 'PVOID'], ['Table', 'MatchFunction', 'MatchData', 'NextFlag', 'RestartKey', 'DeleteCount', 'Buffer'], 'PVOID'), 'RtlGetElementGenericTableAvl': (2, ['PRTL_AVL_TABLE', 'ULONG'], ['Table', 'I'], 'PVOID'), 'RtlNumberGenericTableElementsAvl': (1, ['PRTL_AVL_TABLE'], ['Table'], 'ULONG'), 'RtlIsGenericTableEmptyAvl': (1, ['PRTL_AVL_TABLE'], ['Table'], 'BOOLEAN'), 'RtlSplay': (1, ['PRTL_SPLAY_LINKS'], ['Links'], 'PRTL_SPLAY_LINKS'), 'RtlDelete': (1, ['PRTL_SPLAY_LINKS'], ['Links'], 'PRTL_SPLAY_LINKS'), 'RtlDeleteNoSplay': (2, ['PRTL_SPLAY_LINKS', 'PRTL_SPLAY_LINKS*'], ['Links', 'Root'], 'VOID'), 'RtlSubtreeSuccessor': (1, ['PRTL_SPLAY_LINKS'], ['Links'], 'PRTL_SPLAY_LINKS'), 'RtlSubtreePredecessor': (1, ['PRTL_SPLAY_LINKS'], ['Links'], 'PRTL_SPLAY_LINKS'), 'RtlRealSuccessor': (1, ['PRTL_SPLAY_LINKS'], ['Links'], 'PRTL_SPLAY_LINKS'), 'RtlRealPredecessor': (1, ['PRTL_SPLAY_LINKS'], ['Links'], 'PRTL_SPLAY_LINKS'), 'RtlInitializeGenericTable': (5, ['PRTL_GENERIC_TABLE', 'PRTL_GENERIC_COMPARE_ROUTINE', 'PRTL_GENERIC_ALLOCATE_ROUTINE', 'PRTL_GENERIC_FREE_ROUTINE', 'PVOID'], ['Table', 'CompareRoutine', 'AllocateRoutine', 'FreeRoutine', 'TableContext'], 'VOID'), 'RtlInsertElementGenericTable': (4, ['PRTL_GENERIC_TABLE', 'PVOID', 'ULONG', 'PBOOLEAN'], ['Table', 'Buffer', 'BufferSize', 'NewElement'], 'PVOID'), 'RtlInsertElementGenericTableFull': (6, ['PRTL_GENERIC_TABLE', 'PVOID', 'ULONG', 'PBOOLEAN', 'PVOID', 'TABLE_SEARCH_RESULT'], ['Table', 'Buffer', 'BufferSize', 'NewElement', 'NodeOrParent', 'SearchResult'], 'PVOID'), 'RtlDeleteElementGenericTable': (2, ['PRTL_GENERIC_TABLE', 'PVOID'], ['Table', 'Buffer'], 'BOOLEAN'), 'RtlLookupElementGenericTable': (2, ['PRTL_GENERIC_TABLE', 'PVOID'], ['Table', 'Buffer'], 'PVOID'), 'RtlLookupElementGenericTableFull': (4, ['PRTL_GENERIC_TABLE', 'PVOID', 'PVOID*', 'TABLE_SEARCH_RESULT*'], ['Table', 'Buffer', 'NodeOrParent', 'SearchResult'], 'PVOID'), 'RtlEnumerateGenericTable': (2, ['PRTL_GENERIC_TABLE', 'BOOLEAN'], ['Table', 'Restart'], 'PVOID'), 'RtlEnumerateGenericTableWithoutSplaying': (2, ['PRTL_GENERIC_TABLE', 'PVOID*'], ['Table', 'RestartKey'], 'PVOID'), 'RtlGetElementGenericTable': (2, ['PRTL_GENERIC_TABLE', 'ULONG'], ['Table', 'I'], 'PVOID'), 'RtlNumberGenericTableElements': (1, ['PRTL_GENERIC_TABLE'], ['Table'], 'ULONG'), 'RtlIsGenericTableEmpty': (1, ['PRTL_GENERIC_TABLE'], ['Table'], 'BOOLEAN'), 'RtlRbInsertNodeEx': (4, ['PRTL_RB_TREE', 'PRTL_BALANCED_NODE', 'BOOLEAN', 'PRTL_BALANCED_NODE'], ['Tree', 'Parent', 'Right', 'Node'], 'VOID'), 'RtlRbRemoveNode': (2, ['PRTL_RB_TREE', 'PRTL_BALANCED_NODE'], ['Tree', 'Node'], 'VOID'), 'RtlCreateHashTable': (3, ['PRTL_DYNAMIC_HASH_TABLE*', 'ULONG', 'ULONG'], ['HashTable', 'Shift', 'Flags'], 'BOOLEAN'), 'RtlDeleteHashTable': (1, ['PRTL_DYNAMIC_HASH_TABLE'], ['HashTable'], 'VOID'), 'RtlInsertEntryHashTable': (4, ['PRTL_DYNAMIC_HASH_TABLE', 'PRTL_DYNAMIC_HASH_TABLE_ENTRY', 'ULONG_PTR', 'PRTL_DYNAMIC_HASH_TABLE_CONTEXT'], ['HashTable', 'Entry', 'Signature', 'Context'], 'BOOLEAN'), 'RtlRemoveEntryHashTable': (3, ['PRTL_DYNAMIC_HASH_TABLE', 'PRTL_DYNAMIC_HASH_TABLE_ENTRY', 'PRTL_DYNAMIC_HASH_TABLE_CONTEXT'], ['HashTable', 'Entry', 'Context'], 'BOOLEAN'), 'RtlLookupEntryHashTable': (3, ['PRTL_DYNAMIC_HASH_TABLE', 'ULONG_PTR', 'PRTL_DYNAMIC_HASH_TABLE_CONTEXT'], ['HashTable', 'Signature', 'Context'], 'PRTL_DYNAMIC_HASH_TABLE_ENTRY'), 'RtlGetNextEntryHashTable': (2, ['PRTL_DYNAMIC_HASH_TABLE', 'PRTL_DYNAMIC_HASH_TABLE_CONTEXT'], ['HashTable', 'Context'], 'PRTL_DYNAMIC_HASH_TABLE_ENTRY'), 'RtlInitEnumerationHashTable': (2, ['PRTL_DYNAMIC_HASH_TABLE', 'PRTL_DYNAMIC_HASH_TABLE_ENUMERATOR'], ['HashTable', 'Enumerator'], 'BOOLEAN'), 'RtlEnumerateEntryHashTable': (2, ['PRTL_DYNAMIC_HASH_TABLE', 'PRTL_DYNAMIC_HASH_TABLE_ENUMERATOR'], ['HashTable', 'Enumerator'], 'PRTL_DYNAMIC_HASH_TABLE_ENTRY'), 'RtlEndEnumerationHashTable': (2, ['PRTL_DYNAMIC_HASH_TABLE', 'PRTL_DYNAMIC_HASH_TABLE_ENUMERATOR'], ['HashTable', 'Enumerator'], 'VOID'), 'RtlInitWeakEnumerationHashTable': (2, ['PRTL_DYNAMIC_HASH_TABLE', 'PRTL_DYNAMIC_HASH_TABLE_ENUMERATOR'], ['HashTable', 'Enumerator'], 'BOOLEAN'), 'RtlWeaklyEnumerateEntryHashTable': (2, ['PRTL_DYNAMIC_HASH_TABLE', 'PRTL_DYNAMIC_HASH_TABLE_ENUMERATOR'], ['HashTable', 'Enumerator'], 'PRTL_DYNAMIC_HASH_TABLE_ENTRY'), 'RtlEndWeakEnumerationHashTable': (2, ['PRTL_DYNAMIC_HASH_TABLE', 'PRTL_DYNAMIC_HASH_TABLE_ENUMERATOR'], ['HashTable', 'Enumerator'], 'VOID'), 'RtlExpandHashTable': (1, ['PRTL_DYNAMIC_HASH_TABLE'], ['HashTable'], 'BOOLEAN'), 'RtlContractHashTable': (1, ['PRTL_DYNAMIC_HASH_TABLE'], ['HashTable'], 'BOOLEAN'), 'RtlInitializeCriticalSection': (1, ['PRTL_CRITICAL_SECTION'], ['CriticalSection'], 'NTSTATUS'), 'RtlInitializeCriticalSectionAndSpinCount': (2, ['PRTL_CRITICAL_SECTION', 'ULONG'], ['CriticalSection', 'SpinCount'], 'NTSTATUS'), 'RtlDeleteCriticalSection': (1, ['PRTL_CRITICAL_SECTION'], ['CriticalSection'], 'NTSTATUS'), 'RtlEnterCriticalSection': (1, ['PRTL_CRITICAL_SECTION'], ['CriticalSection'], 'NTSTATUS'), 'RtlLeaveCriticalSection': (1, ['PRTL_CRITICAL_SECTION'], ['CriticalSection'], 'NTSTATUS'), 'RtlTryEnterCriticalSection': (1, ['PRTL_CRITICAL_SECTION'], ['CriticalSection'], 'BOOLEAN'), 'RtlIsCriticalSectionLocked': (1, ['PRTL_CRITICAL_SECTION'], ['CriticalSection'], 'LOGICAL'), 'RtlIsCriticalSectionLockedByThread': (1, ['PRTL_CRITICAL_SECTION'], ['CriticalSection'], 'LOGICAL'), 'RtlGetCriticalSectionRecursionCount': (1, ['PRTL_CRITICAL_SECTION'], ['CriticalSection'], 'ULONG'), 'RtlSetCriticalSectionSpinCount': (2, ['PRTL_CRITICAL_SECTION', 'ULONG'], ['CriticalSection', 'SpinCount'], 'ULONG'), 'RtlQueryCriticalSectionOwner': (1, ['HANDLE'], ['EventHandle'], 'HANDLE'), 'RtlCheckForOrphanedCriticalSections': (1, ['HANDLE'], ['hThread'], 'VOID'), 'RtlpUnWaitCriticalSection': (1, ['PRTL_CRITICAL_SECTION'], ['CriticalSection'], 'VOID'), 'RtlpWaitForCriticalSection': (1, ['PRTL_CRITICAL_SECTION'], ['CriticalSection'], 'NTSTATUS'), 'RtlInitializeResource': (1, ['PRTL_RESOURCE'], ['pResource'], 'VOID'), 'RtlDeleteResource': (1, ['PRTL_RESOURCE'], ['pResource'], 'VOID'), 'RtlAcquireResourceShared': (2, ['PRTL_RESOURCE', 'BOOLEAN'], ['pResource', 'bWaitForAccess'], 'BOOLEAN'), 'RtlAcquireResourceExclusive': (2, ['PRTL_RESOURCE', 'BOOLEAN'], ['pResource', 'bWaitForAccess'], 'BOOLEAN'), 'RtlReleaseResource': (1, ['PRTL_RESOURCE'], ['pResource'], 'VOID'), 'RtlConvertSharedToExclusive': (1, ['PRTL_RESOURCE'], ['Resource'], 'VOID'), 'RtlConvertExclusiveToShared': (1, ['PRTL_RESOURCE'], ['Resource'], 'VOID'), 'RtlInitializeSRWLock': (1, ['PRTL_SRWLOCK'], ['SRWLock'], 'VOID'), 'RtlAcquireSRWLockExclusive': (1, ['PRTL_SRWLOCK'], ['SRWLock'], 'VOID'), 'RtlAcquireSRWLockShared': (1, ['PRTL_SRWLOCK'], ['SRWLock'], 'VOID'), 'RtlReleaseSRWLockExclusive': (1, ['PRTL_SRWLOCK'], ['SRWLock'], 'VOID'), 'RtlReleaseSRWLockShared': (1, ['PRTL_SRWLOCK'], ['SRWLock'], 'VOID'), 'RtlTryAcquireSRWLockExclusive': (1, ['PRTL_SRWLOCK'], ['SRWLock'], 'BOOLEAN'), 'RtlTryAcquireSRWLockShared': (1, ['PRTL_SRWLOCK'], ['SRWLock'], 'BOOLEAN'), 'RtlAcquireReleaseSRWLockExclusive': (1, ['PRTL_SRWLOCK'], ['SRWLock'], 'VOID'), 'RtlInitializeConditionVariable': (1, ['PRTL_CONDITION_VARIABLE'], ['ConditionVariable'], 'VOID'), 'RtlSleepConditionVariableCS': (3, ['PRTL_CONDITION_VARIABLE', 'PRTL_CRITICAL_SECTION', 'PLARGE_INTEGER'], ['ConditionVariable', 'CriticalSection', 'Timeout'], 'NTSTATUS'), 'RtlSleepConditionVariableSRW': (4, ['PRTL_CONDITION_VARIABLE', 'PRTL_SRWLOCK', 'PLARGE_INTEGER', 'ULONG'], ['ConditionVariable', 'SRWLock', 'Timeout', 'Flags'], 'NTSTATUS'), 'RtlWakeConditionVariable': (1, ['PRTL_CONDITION_VARIABLE'], ['ConditionVariable'], 'VOID'), 'RtlWakeAllConditionVariable': (1, ['PRTL_CONDITION_VARIABLE'], ['ConditionVariable'], 'VOID'), 'RtlInitBarrier': (3, ['PRTL_BARRIER', 'ULONG', 'ULONG'], ['Barrier', 'TotalThreads', 'SpinCount'], 'NTSTATUS'), 'RtlDeleteBarrier': (1, ['PRTL_BARRIER'], ['Barrier'], 'NTSTATUS'), 'RtlBarrier': (2, ['PRTL_BARRIER', 'ULONG'], ['Barrier', 'Flags'], 'BOOLEAN'), 'RtlBarrierForDelete': (2, ['PRTL_BARRIER', 'ULONG'], ['Barrier', 'Flags'], 'BOOLEAN'), 'RtlInitString': (2, ['PSTRING', 'PCSZ'], ['DestinationString', 'SourceString'], 'VOID'), 'RtlInitAnsiString': (2, ['PANSI_STRING', 'PCSZ'], ['DestinationString', 'SourceString'], 'VOID'), 'RtlInitAnsiStringEx': (2, ['PANSI_STRING', 'PCSZ'], ['DestinationString', 'SourceString'], 'NTSTATUS'), 'RtlFreeAnsiString': (1, ['PANSI_STRING'], ['AnsiString'], 'VOID'), 'RtlFreeOemString': (1, ['POEM_STRING'], ['OemString'], 'VOID'), 'RtlCopyString': (2, ['PSTRING', 'CONST STRING*'], ['DestinationString', 'SourceString'], 'VOID'), 'RtlUpperChar': (1, ['CHAR'], ['Source'], 'CHAR'), 'RtlCompareString': (3, ['CONST STRING*', 'CONST STRING*', 'BOOLEAN'], ['String1', 'String2', 'CaseInSensitive'], 'LONG'), 'RtlEqualString': (3, ['CONST STRING*', 'CONST STRING*', 'BOOLEAN'], ['String1', 'String2', 'CaseInSensitive'], 'BOOLEAN'), 'RtlPrefixString': (3, ['PCANSI_STRING', 'PCANSI_STRING', 'BOOLEAN'], ['String1', 'String2', 'CaseInsensitive'], 'BOOLEAN'), 'RtlAppendStringToString': (2, ['PSTRING', 'CONST STRING*'], ['Destination', 'Source'], 'NTSTATUS'), 'RtlAppendAsciizToString': (2, ['PSTRING', 'PSTR'], ['Destination', 'Source'], 'NTSTATUS'), 'RtlUpperString': (2, ['PSTRING', 'CONST STRING*'], ['DestinationString', 'SourceString'], 'VOID'), 'RtlInitUnicodeString': (2, ['PUNICODE_STRING', 'PCWSTR'], ['DestinationString', 'SourceString'], 'VOID'), 'RtlInitUnicodeStringEx': (2, ['PUNICODE_STRING', 'PCWSTR'], ['DestinationString', 'SourceString'], 'NTSTATUS'), 'RtlCreateUnicodeString': (2, ['PUNICODE_STRING', 'PCWSTR'], ['DestinationString', 'SourceString'], 'BOOLEAN'), 'RtlCreateUnicodeStringFromAsciiz': (2, ['PUNICODE_STRING', 'PCSZ'], ['Destination', 'Source'], 'BOOLEAN'), 'RtlFreeUnicodeString': (1, ['PUNICODE_STRING'], ['UnicodeString'], 'VOID'), 'RtlDuplicateUnicodeString': (3, ['RTL_DUPLICATE_UNICODE_STRING_FLAGS', 'PCUNICODE_STRING', 'PUNICODE_STRING'], ['Flags', 'SourceString', 'DestinationString'], 'NTSTATUS'), 'RtlCopyUnicodeString': (2, ['PUNICODE_STRING', 'PCUNICODE_STRING'], ['DestinationString', 'SourceString'], 'VOID'), 'RtlUpcaseUnicodeChar': (1, ['WCHAR'], ['Source'], 'WCHAR'), 'RtlDowncaseUnicodeChar': (1, ['WCHAR'], ['Source'], 'WCHAR'), 'RtlCompareUnicodeString': (3, ['PCUNICODE_STRING', 'PCUNICODE_STRING', 'BOOLEAN'], ['String1', 'String2', 'CaseInsensitive'], 'LONG'), 'RtlCompareUnicodeStrings': (5, ['PWCH', 'SIZE_T', 'PWCH', 'SIZE_T', 'BOOLEAN'], ['String1', 'String1Length', 'String2', 'String2Length', 'CaseInSensitive'], 'LONG'), 'RtlEqualUnicodeString': (3, ['PCUNICODE_STRING', 'PCUNICODE_STRING', 'BOOLEAN'], ['String1', 'String2', 'CaseInsensitive'], 'BOOLEAN'), 'RtlHashUnicodeString': (4, ['CONST UNICODE_STRING*', 'BOOLEAN', 'HASH_STRING_ALGORITHM', 'PULONG'], ['String', 'CaseInSensitive', 'HashAlgorithm', 'HashValue'], 'NTSTATUS'), 'RtlValidateUnicodeString': (2, ['ULONG', 'PCUNICODE_STRING'], ['Flags', 'String'], 'NTSTATUS'), 'RtlPrefixUnicodeString': (3, ['PCUNICODE_STRING', 'PCUNICODE_STRING', 'BOOLEAN'], ['String1', 'String2', 'CaseInsensitive'], 'BOOLEAN'), 'RtlFindCharInUnicodeString': (4, ['RTL_FIND_CHAR_IN_UNICODE_STRING_FLAGS', 'PUNICODE_STRING', 'PCUNICODE_STRING', 'PUSHORT'], ['Flags', 'SearchString', 'MatchString', 'Position'], 'NTSTATUS'), 'RtlAppendUnicodeStringToString': (2, ['PUNICODE_STRING', 'PCUNICODE_STRING'], ['Destination', 'Source'], 'NTSTATUS'), 'RtlAppendUnicodeToString': (2, ['PUNICODE_STRING', 'PCWSTR'], ['Destination', 'Source'], 'NTSTATUS'), 'RtlUpcaseUnicodeString': (3, ['PUNICODE_STRING', 'PCUNICODE_STRING', 'BOOLEAN'], ['DestinationString', 'SourceString', 'AllocateDestinationString'], 'NTSTATUS'), 'RtlDowncaseUnicodeString': (3, ['PUNICODE_STRING', 'PCUNICODE_STRING', 'BOOLEAN'], ['UniDest', 'UniSource', 'AllocateDestinationString'], 'NTSTATUS'), 'RtlEraseUnicodeString': (1, ['PUNICODE_STRING'], ['String'], 'VOID'), 'RtlAnsiStringToUnicodeString': (3, ['PUNICODE_STRING', 'PCANSI_STRING', 'BOOLEAN'], ['DestinationString', 'SourceString', 'AllocateDestinationString'], 'NTSTATUS'), 'RtlUnicodeStringToAnsiString': (3, ['PANSI_STRING', 'PCUNICODE_STRING', 'BOOLEAN'], ['DestinationString', 'SourceString', 'AllocateDestinationString'], 'NTSTATUS'), 'RtlAnsiCharToUnicodeChar': (1, ['PUCHAR*'], ['SourceCharacter'], 'WCHAR'), 'RtlUpcaseUnicodeStringToAnsiString': (3, ['PANSI_STRING', 'PUNICODE_STRING', 'BOOLEAN'], ['DestinationString', 'SourceString', 'AllocateDestinationString'], 'NTSTATUS'), 'RtlOemStringToUnicodeString': (3, ['PUNICODE_STRING', 'PCOEM_STRING', 'BOOLEAN'], ['DestinationString', 'SourceString', 'AllocateDestinationString'], 'NTSTATUS'), 'RtlUnicodeStringToOemString': (3, ['POEM_STRING', 'PCUNICODE_STRING', 'BOOLEAN'], ['DestinationString', 'SourceString', 'AllocateDestinationString'], 'NTSTATUS'), 'RtlUpcaseUnicodeStringToOemString': (3, ['POEM_STRING', 'PCUNICODE_STRING', 'BOOLEAN'], ['DestinationString', 'SourceString', 'AllocateDestinationString'], 'NTSTATUS'), 'RtlUnicodeStringToCountedOemString': (3, ['POEM_STRING', 'PCUNICODE_STRING', 'BOOLEAN'], ['DestinationString', 'SourceString', 'AllocateDestinationString'], 'NTSTATUS'), 'RtlUpcaseUnicodeStringToCountedOemString': (3, ['POEM_STRING', 'PCUNICODE_STRING', 'BOOLEAN'], ['DestinationString', 'SourceString', 'AllocateDestinationString'], 'NTSTATUS'), 'RtlMultiByteToUnicodeN': (5, ['PWCHAR', 'ULONG', 'PULONG', 'PCSTR', 'ULONG'], ['UnicodeString', 'UnicodeSize', 'ResultSize', 'MbString', 'MbSize'], 'NTSTATUS'), 'RtlMultiByteToUnicodeSize': (3, ['PULONG', 'PCSTR', 'ULONG'], ['UnicodeSize', 'MbString', 'MbSize'], 'NTSTATUS'), 'RtlUnicodeToMultiByteN': (5, ['PCHAR', 'ULONG', 'PULONG', 'PWCHAR', 'ULONG'], ['MbString', 'MbSize', 'ResultSize', 'UnicodeString', 'UnicodeSize'], 'NTSTATUS'), 'RtlUnicodeToMultiByteSize': (3, ['PULONG', 'PWCHAR', 'ULONG'], ['MbSize', 'UnicodeString', 'UnicodeSize'], 'NTSTATUS'), 'RtlUpcaseUnicodeToMultiByteN': (5, ['PCHAR', 'ULONG', 'PULONG', 'PWCHAR', 'ULONG'], ['MbString', 'MbSize', 'ResultSize', 'UnicodeString', 'UnicodeSize'], 'NTSTATUS'), 'RtlOemToUnicodeN': (5, ['PWSTR', 'ULONG', 'PULONG', 'PCHAR', 'ULONG'], ['UnicodeString', 'MaxBytesInUnicodeString', 'BytesInUnicodeString', 'OemString', 'BytesInOemString'], 'NTSTATUS'), 'RtlUnicodeToOemN': (5, ['PCHAR', 'ULONG', 'PULONG', 'PWCHAR', 'ULONG'], ['OemString', 'OemSize', 'ResultSize', 'UnicodeString', 'UnicodeSize'], 'NTSTATUS'), 'RtlUpcaseUnicodeToOemN': (5, ['PCHAR', 'ULONG', 'PULONG', 'PWCHAR', 'ULONG'], ['OemString', 'OemSize', 'ResultSize', 'UnicodeString', 'UnicodeSize'], 'NTSTATUS'), 'RtlConsoleMultiByteToUnicodeN': (6, ['PWCH', 'ULONG', 'PULONG', 'PCH', 'ULONG', 'PULONG'], ['UnicodeString', 'MaxBytesInUnicodeString', 'BytesInUnicodeString', 'MultiByteString', 'BytesInMultiByteString', 'pdwSpecialChar'], 'NTSTATUS'), 'RtlUTF8ToUnicodeN': (5, ['PWSTR', 'ULONG', 'PULONG', 'PCCH', 'ULONG'], ['UnicodeStringDestination', 'UnicodeStringMaxByteCount', 'UnicodeStringActualByteCount', 'UTF8StringSource', 'UTF8StringByteCount'], 'NTSTATUS'), 'RtlUnicodeToUTF8N': (5, ['PCHAR', 'ULONG', 'PULONG', 'PCWCH', 'ULONG'], ['UTF8StringDestination', 'UTF8StringMaxByteCount', 'UTF8StringActualByteCount', 'UnicodeStringSource', 'UnicodeStringByteCount'], 'NTSTATUS'), 'RtlCustomCPToUnicodeN': (6, ['PCPTABLEINFO', 'PWCH', 'ULONG', 'PULONG', 'PCH', 'ULONG'], ['CustomCP', 'UnicodeString', 'MaxBytesInUnicodeString', 'BytesInUnicodeString', 'CustomCPString', 'BytesInCustomCPString'], 'NTSTATUS'), 'RtlUnicodeToCustomCPN': (6, ['PCPTABLEINFO', 'PCH', 'ULONG', 'PULONG', 'PWCH', 'ULONG'], ['CustomCP', 'CustomCPString', 'MaxBytesInCustomCPString', 'BytesInCustomCPString', 'UnicodeString', 'BytesInUnicodeString'], 'NTSTATUS'), 'RtlUpcaseUnicodeToCustomCPN': (6, ['PCPTABLEINFO', 'PCH', 'ULONG', 'PULONG', 'PWCH', 'ULONG'], ['CustomCP', 'CustomCPString', 'MaxBytesInCustomCPString', 'BytesInCustomCPString', 'UnicodeString', 'BytesInUnicodeString'], 'NTSTATUS'), 'RtlInitCodePageTable': (2, ['PUSHORT', 'PCPTABLEINFO'], ['TableBase', 'CodePageTable'], 'VOID'), 'RtlInitNlsTables': (4, ['PUSHORT', 'PUSHORT', 'PUSHORT', 'PNLSTABLEINFO'], ['AnsiTableBase', 'OemTableBase', 'CaseTableBase', 'NlsTable'], 'VOID'), 'RtlResetRtlTranslations': (1, ['PNLSTABLEINFO'], ['NlsTable'], 'VOID'), 'RtlIsTextUnicode': (3, ['PVOID', 'INT', 'ISTEXTUNICODEFLAGS*'], ['Buffer', 'Length', 'Flags'], 'BOOLEAN'), 'RtlNormalizeString': (5, ['ULONG', 'PCWSTR', 'LONG', 'PWSTR', 'PLONG'], ['NormForm', 'SourceString', 'SourceStringLength', 'DestinationString', 'DestinationStringLength'], 'NTSTATUS'), 'RtlIsNormalizedString': (4, ['ULONG', 'PCWSTR', 'LONG', 'PBOOLEAN'], ['NormForm', 'SourceString', 'SourceStringLength', 'Normalized'], 'NTSTATUS'), 'RtlIsNameInExpression': (4, ['PUNICODE_STRING', 'PUNICODE_STRING', 'BOOLEAN', 'PWCH'], ['Expression', 'Name', 'IgnoreCase', 'UpcaseTable'], 'BOOLEAN'), 'RtlEqualDomainName': (2, ['PUNICODE_STRING', 'PUNICODE_STRING'], ['String1', 'String2'], 'BOOLEAN'), 'RtlEqualComputerName': (2, ['PUNICODE_STRING', 'PUNICODE_STRING'], ['String1', 'String2'], 'BOOLEAN'), 'RtlDnsHostNameToComputerName': (3, ['PUNICODE_STRING', 'PCUNICODE_STRING', 'BOOLEAN'], ['ComputerNameString', 'DnsHostNameString', 'AllocateComputerNameString'], 'NTSTATUS'), 'RtlStringFromGUID': (2, ['REFGUID', 'PUNICODE_STRING'], ['Guid', 'GuidString'], 'NTSTATUS'), 'RtlGUIDFromString': (2, ['PCUNICODE_STRING', 'GUID*'], ['GuidString', 'Guid'], 'NTSTATUS'), 'RtlCompareAltitudes': (2, ['PUNICODE_STRING', 'PUNICODE_STRING'], ['Altitude1', 'Altitude2'], 'LONG'), 'RtlxUnicodeStringToAnsiSize': (1, ['PCUNICODE_STRING'], ['UnicodeString'], 'ULONG'), 'RtlxUnicodeStringToOemSize': (1, ['PCUNICODE_STRING'], ['UnicodeString'], 'ULONG'), 'RtlxOemStringToUnicodeSize': (1, ['PCOEM_STRING'], ['OemString'], 'ULONG'), 'RtlxAnsiStringToUnicodeSize': (1, ['PCANSI_STRING'], ['AnsiString'], 'ULONG'), 'RtlGetDefaultCodePage': (2, ['PUSHORT', 'PUSHORT'], ['AnsiCodePage', 'OemCodePage'], 'VOID'), 'RtlAnsiStringToUnicodeSize': (1, ['PANSI_STRING'], ['AnsiString'], 'ULONG'), 'RtlUnicodeStringToAnsiSize': (1, ['PUNICODE_STRING'], ['UnicodeString'], 'ULONG'), 'RtlOemStringToCountedUnicodeString': (3, ['PUNICODE_STRING', 'PCOEM_STRING', 'BOOLEAN'], ['DestinationString', 'SourceString', 'AllocateDestinationString'], 'NTSTATUS'), 'PfxInitialize': (1, ['PPREFIX_TABLE'], ['PrefixTable'], 'VOID'), 'PfxInsertPrefix': (3, ['PPREFIX_TABLE', 'PSTRING', 'PPREFIX_TABLE_ENTRY'], ['PrefixTable', 'Prefix', 'PrefixTableEntry'], 'BOOLEAN'), 'PfxRemovePrefix': (2, ['PPREFIX_TABLE', 'PPREFIX_TABLE_ENTRY'], ['PrefixTable', 'PrefixTableEntry'], 'VOID'), 'PfxFindPrefix': (2, ['PPREFIX_TABLE', 'PSTRING'], ['PrefixTable', 'FullName'], 'PPREFIX_TABLE_ENTRY'), 'RtlInitializeUnicodePrefix': (1, ['PUNICODE_PREFIX_TABLE'], ['PrefixTable'], 'VOID'), 'RtlInsertUnicodePrefix': (3, ['PUNICODE_PREFIX_TABLE', 'PUNICODE_STRING', 'PUNICODE_PREFIX_TABLE_ENTRY'], ['PrefixTable', 'Prefix', 'PrefixTableEntry'], 'BOOLEAN'), 'RtlRemoveUnicodePrefix': (2, ['PUNICODE_PREFIX_TABLE', 'PUNICODE_PREFIX_TABLE_ENTRY'], ['PrefixTable', 'PrefixTableEntry'], 'VOID'), 'RtlFindUnicodePrefix': (3, ['PUNICODE_PREFIX_TABLE', 'PUNICODE_STRING', 'ULONG'], ['PrefixTable', 'FullName', 'CaseInsensitiveIndex'], 'PUNICODE_PREFIX_TABLE_ENTRY'), 'RtlNextUnicodePrefix': (2, ['PUNICODE_PREFIX_TABLE', 'BOOLEAN'], ['PrefixTable', 'Restart'], 'PUNICODE_PREFIX_TABLE_ENTRY'), 'RtlGetCompressionWorkSpaceSize': (3, ['USHORT', 'PULONG', 'PULONG'], ['CompressionFormatAndEngine', 'CompressBufferWorkSpaceSize', 'CompressFragmentWorkSpaceSize'], 'NTSTATUS'), 'RtlCompressBuffer': (8, ['USHORT', 'PUCHAR', 'ULONG', 'PUCHAR', 'ULONG', 'ULONG', 'PULONG', 'PVOID'], ['CompressionFormatAndEngine', 'UncompressedBuffer', 'UncompressedBufferSize', 'CompressedBuffer', 'CompressedBufferSize', 'UncompressedChunkSize', 'FinalCompressedSize', 'WorkSpace'], 'NTSTATUS'), 'RtlDecompressBuffer': (6, ['USHORT', 'PUCHAR', 'ULONG', 'PUCHAR', 'ULONG', 'PULONG'], ['CompressionFormat', 'UncompressedBuffer', 'UncompressedBufferSize', 'CompressedBuffer', 'CompressedBufferSize', 'FinalUncompressedSize'], 'NTSTATUS'), 'RtlDecompressBufferEx': (7, ['USHORT', 'PUCHAR', 'ULONG', 'PUCHAR', 'ULONG', 'PULONG', 'PVOID'], ['CompressionFormat', 'UncompressedBuffer', 'UncompressedBufferSize', 'CompressedBuffer', 'CompressedBufferSize', 'FinalUncompressedSize', 'WorkSpace'], 'NTSTATUS'), 'RtlDecompressFragment': (8, ['USHORT', 'PUCHAR', 'ULONG', 'PUCHAR', 'ULONG', 'ULONG', 'PULONG', 'PVOID'], ['CompressionFormat', 'UncompressedFragment', 'UncompressedFragmentSize', 'CompressedBuffer', 'CompressedBufferSize', 'FragmentOffset', 'FinalUncompressedSize', 'WorkSpace'], 'NTSTATUS'), 'RtlDescribeChunk': (5, ['USHORT', 'PUCHAR*', 'PUCHAR', 'PUCHAR*', 'PULONG'], ['CompressionFormat', 'CompressedBuffer', 'EndOfCompressedBufferPlus1', 'ChunkBuffer', 'ChunkSize'], 'NTSTATUS'), 'RtlReserveChunk': (5, ['USHORT', 'PUCHAR*', 'PUCHAR', 'PUCHAR*', 'ULONG'], ['CompressionFormat', 'CompressedBuffer', 'EndOfCompressedBufferPlus1', 'ChunkBuffer', 'ChunkSize'], 'NTSTATUS'), 'RtlDecompressChunks': (7, ['PUCHAR', 'ULONG', 'PUCHAR', 'ULONG', 'PUCHAR', 'ULONG', 'PCOMPRESSED_DATA_INFO'], ['UncompressedBuffer', 'UncompressedBufferSize', 'CompressedBuffer', 'CompressedBufferSize', 'CompressedTail', 'CompressedTailSize', 'CompressedDataInfo'], 'NTSTATUS'), 'RtlCompressChunks': (7, ['PUCHAR', 'ULONG', 'PUCHAR', 'ULONG', 'PCOMPRESSED_DATA_INFO', 'ULONG', 'PVOID'], ['UncompressedBuffer', 'UncompressedBufferSize', 'CompressedBuffer', 'CompressedBufferSize', 'CompressedDataInfo', 'CompressedDataInfoLength', 'WorkSpace'], 'NTSTATUS'), 'RtlConvertLCIDToString': (5, ['LCID', 'ULONG', 'ULONG', 'PWSTR', 'ULONG'], ['LcidValue', 'Base', 'Padding', 'pResultBuf', 'Size'], 'NTSTATUS'), 'RtlIsValidLocaleName': (2, ['PWSTR', 'ULONG'], ['LocaleName', 'Flags'], 'BOOLEAN'), 'RtlGetParentLocaleName': (4, ['PWSTR', 'PUNICODE_STRING', 'ULONG', 'BOOLEAN'], ['LocaleName', 'ParentLocaleName', 'Flags', 'AllocateDestinationString'], 'NTSTATUS'), 'RtlLcidToLocaleName': (4, ['LCID', 'PUNICODE_STRING', 'ULONG', 'BOOLEAN'], ['lcid', 'LocaleName', 'Flags', 'AllocateDestinationString'], 'NTSTATUS'), 'RtlLocaleNameToLcid': (3, ['PWSTR', 'PLCID', 'ULONG'], ['LocaleName', 'lcid', 'Flags'], 'NTSTATUS'), 'RtlLCIDToCultureName': (2, ['LCID', 'PUNICODE_STRING'], ['Lcid', 'String'], 'BOOLEAN'), 'RtlCultureNameToLCID': (2, ['PUNICODE_STRING', 'PLCID'], ['String', 'Lcid'], 'BOOLEAN'), 'RtlCleanUpTEBLangLists': (0, [], [], 'VOID'), 'RtlGetLocaleFileMappingAddress': (3, ['PVOID*', 'PLCID', 'PLARGE_INTEGER'], ['BaseAddress', 'DefaultLocaleId', 'DefaultCasingTableSize'], 'NTSTATUS'), 'RtlAcquirePebLock': (0, [], [], 'VOID'), 'RtlReleasePebLock': (0, [], [], 'VOID'), 'RtlTryAcquirePebLock': (0, [], [], 'LOGICAL'), 'RtlAllocateFromPeb': (2, ['ULONG', 'PVOID*'], ['Size', 'Block'], 'NTSTATUS'), 'RtlFreeToPeb': (2, ['PVOID', 'ULONG'], ['Block', 'Size'], 'NTSTATUS'), 'RtlGetCurrentPeb': (0, [], [], 'PPEB'), 'RtlCreateProcessParameters': (10, ['PRTL_USER_PROCESS_PARAMETERS*', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PWSTR', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING'], ['ProcessParameters', 'ImagePathName', 'DllPath', 'CurrentDirectory', 'CommandLine', 'Environment', 'WindowTitle', 'DesktopInfo', 'ShellInfo', 'RuntimeInfo'], 'NTSTATUS'), 'RtlCreateProcessParametersEx': (11, ['PRTL_USER_PROCESS_PARAMETERS*', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PVOID', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING', 'ULONG'], ['pProcessParameters', 'ImagePathName', 'DllPath', 'CurrentDirectory', 'CommandLine', 'Environment', 'WindowTitle', 'DesktopInfo', 'ShellInfo', 'RuntimeData', 'Flags'], 'NTSTATUS'), 'RtlDestroyProcessParameters': (1, ['PRTL_USER_PROCESS_PARAMETERS'], ['ProcessParameters'], 'NTSTATUS'), 'RtlNormalizeProcessParams': (1, ['PRTL_USER_PROCESS_PARAMETERS'], ['ProcessParameters'], 'PRTL_USER_PROCESS_PARAMETERS'), 'RtlDeNormalizeProcessParams': (1, ['PRTL_USER_PROCESS_PARAMETERS'], ['ProcessParameters'], 'PRTL_USER_PROCESS_PARAMETERS'), 'RtlCreateUserProcess': (10, ['PUNICODE_STRING', 'ULONG', 'PRTL_USER_PROCESS_PARAMETERS', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR', 'HANDLE', 'BOOLEAN', 'HANDLE', 'HANDLE', 'PRTL_USER_PROCESS_INFORMATION'], ['ImageFileName', 'Attributes', 'ProcessParameters', 'ProcessSecutityDescriptor', 'ThreadSecurityDescriptor', 'ParentProcess', 'CurrentDirectory', 'DebugPort', 'ExceptionPort', 'ProcessInfo'], 'NTSTATUS'), 'RtlExitUserProcess': (1, ['NTSTATUS'], ['ExitStatus'], 'VOID'), 'RtlCloneUserProcess': (5, ['RTL_CLONE_PROCESS_FLAGS', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR', 'HANDLE', 'PRTL_USER_PROCESS_INFORMATION'], ['ProcessFlags', 'ProcessSecurityDescriptor', 'ThreadSecurityDescriptor', 'DebugPort', 'ProcessInformation'], 'NTSTATUS'), 'RtlUpdateClonedCriticalSection': (1, ['PRTL_CRITICAL_SECTION'], ['CriticalSection'], 'VOID'), 'RtlUpdateClonedSRWLock': (2, ['PRTL_SRWLOCK', 'LOGICAL'], ['SRWLock', 'Shared'], 'VOID'), 'RtlCreateProcessReflection': (6, ['HANDLE', 'ULONG', 'PVOID', 'PVOID', 'HANDLE', 'PRTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION'], ['ProcessHandle', 'Flags', 'StartRoutine', 'StartContext', 'EventHandle', 'ReflectionInformation'], 'NTSTATUS'), 'RtlSetProcessIsCritical': (3, ['BOOLEAN', 'PBOOLEAN', 'BOOLEAN'], ['NewValue', 'OldValue', 'IsWinlogon'], 'VOID'), 'RtlSetThreadIsCritical': (3, ['BOOLEAN', 'PBOOLEAN', 'BOOLEAN'], ['NewValue', 'OldValue', 'CheckFlag'], 'NTSTATUS'), 'RtlCreateUserThread': (10, ['PROCESSHANDLE', 'PSECURITY_DESCRIPTOR', 'BOOLEAN', 'ULONG', 'SIZE_T', 'SIZE_T', 'PTHREAD_START_ROUTINE', 'PVOID', 'PHANDLE', 'PCLIENT_ID'], ['ProcessHandle', 'SecurityDescriptor', 'CreateSuspended', 'StackZeroBits', 'StackReserve', 'StackCommit', 'StartAddress', 'Parameter', 'ThreadHandle', 'ClientId'], 'NTSTATUS'), 'RtlExitUserThread': (1, ['NTSTATUS'], ['Status'], 'VOID'), 'RtlCreateUserStack': (6, ['SIZE_T', 'SIZE_T', 'ULONG_PTR', 'SIZE_T', 'ULONG_PTR', 'PINITIAL_TEB'], ['CommittedStackSize', 'MaximumStackSize', 'ZeroBits', 'PageSize', 'ReserveAlignment', 'InitialTeb'], 'NTSTATUS'), 'RtlInitializeContext': (5, ['PROCESSHANDLE', 'PCONTEXT', 'PVOID', 'PTHREAD_START_ROUTINE', 'PINITIAL_TEB'], ['ProcessHandle', 'ThreadContext', 'ThreadStartParam', 'ThreadStartAddress', 'InitialTeb'], 'VOID'), 'RtlRemoteCall': (7, ['HANDLE', 'HANDLE', 'PVOID', 'ULONG', 'PULONG', 'BOOLEAN', 'BOOLEAN'], ['Process', 'Thread', 'CallSite', 'ArgumentCount', 'Arguments', 'PassContext', 'AlreadySuspended'], 'NTSTATUS'), 'RtlWow64GetThreadContext': (2, ['HANDLE', 'PWOW64_CONTEXT'], ['ThreadHandle', 'ThreadContext'], 'NTSTATUS'), 'RtlWow64SetThreadContext': (2, ['HANDLE', 'PWOW64_CONTEXT'], ['ThreadHandle', 'ThreadContext'], 'NTSTATUS'), 'RtlLockCurrentThread': (0, [], [], 'NTSTATUS'), 'RtlUnlockCurrentThread': (0, [], [], 'NTSTATUS'), 'RtlPcToFileHeader': (2, ['PVOID', 'PVOID*'], ['PcValue', 'BaseOfImage'], 'PVOID'), 'RtlImageNtHeader': (1, ['HMODULE-PVOID'], ['BaseAddress'], 'PIMAGE_NT_HEADERS'), 'RtlImageNtHeaderEx': (4, ['RTL_IMAGE_NT_HEADER_EX_FLAGS', 'HMODULE-PVOID', 'ULONGLONG', 'PIMAGE_NT_HEADERS*'], ['Flags', 'BaseAddress', 'Size', 'NtHeader'], 'NTSTATUS'), 'RtlAddressInSectionTable': (3, ['PIMAGE_NT_HEADERS', 'PVOID', 'ULONG'], ['NtHeaders', 'BaseOfImage', 'VirtualAddress'], 'PVOID'), 'RtlSectionTableFromVirtualAddress': (3, ['PIMAGE_NT_HEADERS', 'PVOID', 'ULONG'], ['NtHeaders', 'BaseOfImage', 'VirtualAddress'], 'PIMAGE_SECTION_HEADER'), 'RtlImageDirectoryEntryToData': (4, ['HMODULE-PVOID', 'BOOLEAN', 'USHORT', 'PULONG'], ['BaseAddress', 'MappedAsImage', 'Directory', 'Size'], 'PVOID'), 'RtlImageRvaToSection': (3, ['PIMAGE_NT_HEADERS', 'PVOID', 'ULONG'], ['NtHeader', 'BaseAddress', 'Rva'], 'PIMAGE_SECTION_HEADER'), 'RtlImageRvaToVa': (4, ['PIMAGE_NT_HEADERS', 'PVOID', 'ULONG', 'PIMAGE_SECTION_HEADER*'], ['NtHeader', 'BaseAddress', 'Rva', 'SectionHeader'], 'PVOID'), 'RtlCompareMemoryUlong': (3, ['PVOID', 'SIZE_T', 'ULONG'], ['Source', 'Length', 'Pattern'], 'SIZE_T'), 'RtlFillMemoryUlong': (3, ['PVOID', 'ULONG', 'ULONG'], ['Destination', 'Length', 'Fill'], 'VOID'), 'RtlFillMemoryUlonglong': (3, ['PVOID', 'SIZE_T', 'ULONGLONG'], ['Destination', 'Length', 'Pattern'], 'VOID'), 'RtlCompareMemory': (3, ['CONST VOID*', 'CONST VOID*', 'SIZE_T'], ['Source1', 'Source2', 'Length'], 'SIZE_T'), 'RtlCopyMemory': (3, ['VOID*', 'CONST VOID*', 'SIZE_T'], ['Destination', 'Source', 'Length'], 'VOID'), 'RtlMoveMemory': (3, ['VOID*', 'CONST VOID*', 'SIZE_T'], ['Destination', 'Source', 'Length'], 'VOID'), 'RtlZeroMemory': (2, ['VOID*', 'SIZE_T'], ['Destination', 'Length'], 'VOID'), 'RtlCreateEnvironment': (2, ['BOOLEAN', 'PWSTR*'], ['Inherit', 'Environment'], 'NTSTATUS'), 'RtlCreateEnvironmentEx': (3, ['PVOID', 'PVOID*', 'RTL_CREATE_ENVIRONMENT_EX_FLAGS'], ['SourceEnv', 'Environment', 'Flags'], 'NTSTATUS'), 'RtlDestroyEnvironment': (1, ['PWSTR'], ['Environment'], 'VOID'), 'RtlSetCurrentEnvironment': (2, ['PVOID', 'PVOID*'], ['NewEnvironment', 'OldEnvironment'], 'VOID'), 'RtlSetEnvironmentVar': (5, ['PWSTR*', 'PWSTR', 'SIZE_T', 'PWSTR', 'SIZE_T'], ['Environment', 'Name', 'NameLength', 'Value', 'ValueLength'], 'NTSTATUS'), 'RtlSetEnvironmentVariable': (3, ['PWSTR*', 'PUNICODE_STRING', 'PUNICODE_STRING'], ['Environment', 'Name', 'Value'], 'NTSTATUS'), 'RtlQueryEnvironmentVariable': (6, ['PVOID', 'PWSTR', 'SIZE_T', 'PWSTR', 'SIZE_T', 'PSIZE_T'], ['Environment', 'Name', 'NameLength', 'Value', 'ValueLength', 'ReturnLength'], 'NTSTATUS'), 'RtlQueryEnvironmentVariable_U': (3, ['PWSTR', 'PUNICODE_STRING', 'PUNICODE_STRING'], ['Environment', 'Name', 'Value'], 'NTSTATUS'), 'RtlExpandEnvironmentStrings': (6, ['PVOID', 'PWSTR', 'SIZE_T', 'PWSTR', 'SIZE_T', 'PSIZE_T'], ['Environment', 'Src', 'SrcLength', 'Dst', 'DstLength', 'ReturnLength'], 'NTSTATUS'), 'RtlExpandEnvironmentStrings_U': (4, ['PWSTR', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PULONG'], ['Environment', 'Source', 'Destination', 'Length'], 'NTSTATUS'), 'RtlSetEnvironmentStrings': (2, ['PWCHAR', 'SIZE_T'], ['NewEnvironment', 'NewEnvironmentSize'], 'NTSTATUS'), 'RtlGenerate8dot3Name': (4, ['PUNICODE_STRING', 'BOOLEAN', 'PGENERATE_NAME_CONTEXT', 'PUNICODE_STRING'], ['Name', 'AllowExtendedCharacters', 'Context', 'Name8dot3'], 'VOID'), 'RtlDetermineDosPathNameType_U': (1, ['PCWSTR'], ['Path'], 'RTL_PATH_TYPE'), 'RtlIsDosDeviceName_U': (1, ['PWSTR'], ['Name'], 'ULONG'), 'RtlIsDosDeviceName_Ustr': (1, ['PUNICODE_STRING'], ['Name'], 'ULONG'), 'RtlGetFullPathName_U': (4, ['PCWSTR', 'ULONG', 'PWSTR', 'PWSTR*'], ['FileName', 'Size', 'Buffer', 'ShortName'], 'ULONG'), 'RtlGetFullPathName_UEx': (5, ['PWSTR', 'ULONG', 'PWSTR', 'PWSTR*', 'RTL_PATH_TYPE*'], ['FileName', 'BufferLength', 'Buffer', 'FilePart', 'InputPathType'], 'NTSTATUS'), 'RtlGetFullPathName_UstrEx': (8, ['PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING*', 'SIZE_T*', 'PBOOLEAN', 'RTL_PATH_TYPE*', 'SIZE_T*'], ['FileName', 'StaticString', 'DynamicString', 'StringUsed', 'FilePartPrefixCch', 'NameInvalid', 'InputPathType', 'BytesRequired'], 'NTSTATUS'), 'RtlGetCurrentDirectory_U': (2, ['ULONG', 'PWSTR'], ['MaximumLength', 'Buffer'], 'ULONG'), 'RtlSetCurrentDirectory_U': (1, ['PUNICODE_STRING'], ['name'], 'NTSTATUS'), 'RtlGetLongestNtPathLength': (0, [], [], 'ULONG'), 'RtlDosPathNameToNtPathName_U': (4, ['PCWSTR', 'PUNICODE_STRING', 'PCWSTR*', 'CURDIR*'], ['DosPathName', 'NtPathName', 'NtFileNamePart', 'DirectoryInfo'], 'BOOLEAN'), 'RtlDosPathNameToNtPathName_U_WithStatus': (4, ['PWSTR', 'PUNICODE_STRING', 'PWSTR*', 'PRTL_RELATIVE_NAME_U'], ['DosFileName', 'NtFileName', 'FilePart', 'RelativeName'], 'NTSTATUS'), 'RtlDosPathNameToRelativeNtPathName_U': (4, ['PWSTR', 'PUNICODE_STRING', 'PWSTR*', 'PRTL_RELATIVE_NAME_U'], ['DosFileName', 'NtFileName', 'FilePart', 'RelativeName'], 'BOOLEAN'), 'RtlDosPathNameToRelativeNtPathName_U_WithStatus': (4, ['PWSTR', 'PUNICODE_STRING', 'PWSTR*', 'PRTL_RELATIVE_NAME_U'], ['DosFileName', 'NtFileName', 'FilePart', 'RelativeName'], 'NTSTATUS'), 'RtlReleaseRelativeName': (1, ['PRTL_RELATIVE_NAME_U'], ['RelativeName'], 'VOID'), 'RtlDosSearchPath_U': (6, ['PCWSTR', 'PCWSTR', 'PCWSTR', 'ULONG', 'PWSTR', 'PWSTR*'], ['Path', 'FileName', 'Extension', 'BufferSize', 'Buffer', 'PartName'], 'ULONG'), 'RtlDosSearchPath_Ustr': (9, ['RTL_DOS_SEARCH_PATH_FLAG', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PCUNICODE_STRING*', 'SIZE_T*', 'SIZE_T*'], ['Flags', 'Path', 'FileName', 'DefaultExtension', 'StaticString', 'DynamicString', 'FullFileNameOut', 'FilePartPrefixCch', 'BytesRequired'], 'NTSTATUS'), 'RtlDoesFileExists_U': (1, ['PCWSTR'], ['FileName'], 'BOOLEAN'), 'RtlDoesFileExists_UstrEx': (2, ['PCUNICODE_STRING', 'BOOLEAN'], ['FileName', 'SucceedIfBusy'], 'BOOLEAN'), 'RtlDetermineDosPathNameType_Ustr': (1, ['PCUNICODE_STRING'], ['Path'], 'ULONG'), 'RtlGetFullPathName_Ustr': (6, ['PUNICODE_STRING', 'ULONG', 'PWSTR', 'PWSTR*', 'PBOOLEAN', 'RTL_PATH_TYPE*'], ['FileName', 'Size', 'Buffer', 'ShortName', 'InvalidName', 'PathType'], 'ULONG'), 'RtlIsNameLegalDOS8Dot3': (3, ['PCUNICODE_STRING', 'POEM_STRING', 'PBOOLEAN'], ['Name', 'OemName', 'NameContainsSpaces'], 'BOOLEAN'), 'RtlDosApplyFileIsolationRedirection_Ustr': (9, ['BOOLEAN', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING*', 'PVOID', 'PVOID', 'PVOID'], ['Unknown', 'OriginalName', 'Extension', 'RedirectedName', 'RedirectedName2', 'OriginalName2', 'Unknown1', 'Unknown2', 'Unknown3'], 'NTSTATUS'), 'RtlCreateHeap': (6, ['HEAP_FLAGS_ULONG', 'PVOID', 'SIZE_T', 'SIZE_T', 'PVOID', 'PRTL_HEAP_PARAMETERS'], ['Flags', 'BaseAddress', 'SizeToReserve', 'SizeToCommit', 'Lock', 'Parameters'], 'PVOID'), 'RtlDestroyHeap': (1, ['PVOID'], ['HeapHandle'], 'PVOID'), 'RtlAllocateHeap': (3, ['PVOID', 'HEAP_FLAGS_ULONG', 'SIZE_T'], ['HeapHandle', 'Flags', 'Size'], 'PVOID'), 'RtlFreeHeap': (3, ['PVOID', 'HEAP_FLAGS_ULONG', 'PVOID'], ['HeapHandle', 'Flags', 'HeapBase'], 'BOOLEAN'), 'RtlSizeHeap': (3, ['PVOID', 'HEAP_FLAGS_ULONG', 'PVOID'], ['HeapHandle', 'Flags', 'MemoryPointer'], 'SIZE_T'), 'RtlZeroHeap': (2, ['PVOID', 'ULONG'], ['HeapHandle', 'Flags'], 'NTSTATUS'), 'RtlProtectHeap': (2, ['PVOID', 'BOOLEAN'], ['HeapHandle', 'Protect'], 'PVOID'), 'RtlLockHeap': (1, ['PVOID'], ['HeapHandle'], 'BOOLEAN'), 'RtlUnlockHeap': (1, ['PVOID'], ['HeapHandle'], 'BOOLEAN'), 'RtlReAllocateHeap': (4, ['PVOID', 'HEAP_FLAGS_ULONG', 'PVOID', 'SIZE_T'], ['HeapHandle', 'Flags', 'Ptr', 'Size'], 'PVOID'), 'RtlGetUserInfoHeap': (5, ['PVOID', 'ULONG', 'PVOID', 'PVOID*', 'PULONG'], ['HeapHandle', 'Flags', 'BaseAddress', 'UserValue', 'UserFlags'], 'BOOLEAN'), 'RtlSetUserValueHeap': (4, ['PVOID', 'ULONG', 'PVOID', 'PVOID'], ['HeapHandle', 'Flags', 'BaseAddress', 'UserValue'], 'BOOLEAN'), 'RtlSetUserFlagsHeap': (4, ['PVOID', 'ULONG', 'PVOID', 'ULONG'], ['HeapHandle', 'Flags', 'BaseAddress', 'UserFlags'], 'BOOLEAN'), 'RtlCreateTagHeap': (4, ['PVOID', 'ULONG', 'PWSTR', 'PWSTR'], ['HeapHandle', 'Flags', 'TagName', 'TagSubName'], 'ULONG'), 'RtlQueryTagHeap': (5, ['PVOID', 'ULONG', 'USHORT', 'BOOLEAN', 'PRTL_HEAP_TAG_INFO'], ['HeapHandle', 'Flags', 'TagIndex', 'ResetCounters', 'HeapTagInfo'], 'PWSTR'), 'RtlExtendHeap': (4, ['PVOID', 'HEAP_FLAGS_ULONG', 'PVOID', 'SIZE_T'], ['HeapHandle', 'Flags', 'Base', 'Size'], 'ULONG'), 'RtlCompactHeap': (2, ['PVOID', 'HEAP_FLAGS_ULONG'], ['HeapHandle', 'Flags'], 'ULONG'), 'RtlValidateHeap': (3, ['PVOID', 'HEAP_FLAGS_ULONG', 'PVOID'], ['HeapHandle', 'Flags', 'BaseAddress'], 'BOOLEAN'), 'RtlValidateProcessHeaps': (0, [], [], 'BOOLEAN'), 'RtlGetProcessHeaps': (2, ['ULONG', 'HANDLE*'], ['HeapCount', 'HeapArray'], 'ULONG'), 'RtlEnumProcessHeaps': (2, ['PHEAP_ENUMERATION_ROUTINE', 'PVOID'], ['HeapEnumerationRoutine', 'Param'], 'NTSTATUS'), 'RtlUsageHeap': (3, ['PVOID', 'HEAP_FLAGS_ULONG', 'PRTL_HEAP_USAGE'], ['HeapHandle', 'Flags', 'Usage'], 'NTSTATUS'), 'RtlWalkHeap': (2, ['PVOID', 'PVOID'], ['HeapHandle', 'HeapEntry'], 'NTSTATUS'), 'RtlQueryHeapInformation': (5, ['PVOID', 'HEAP_INFORMATION_CLASS', 'PVOID', 'SIZE_T', 'PSIZE_T'], ['HeapHandle', 'HeapInformationClass', 'HeapInformation', 'HeapInformationLength', 'ReturnLength'], 'NTSTATUS'), 'RtlSetHeapInformation': (4, ['PVOID', 'HEAP_INFORMATION_CLASS', 'PVOID', 'SIZE_T'], ['HeapHandle', 'HeapInformationClass', 'HeapInformation', 'HeapInformationLength'], 'NTSTATUS'), 'RtlMultipleAllocateHeap': (5, ['PVOID', 'ULONG', 'SIZE_T', 'ULONG', 'PVOID*'], ['HeapHandle', 'Flags', 'Size', 'Count', 'Array'], 'ULONG'), 'RtlMultipleFreeHeap': (4, ['PVOID', 'ULONG', 'ULONG', 'PVOID*'], ['HeapHandle', 'Flags', 'Count', 'Array'], 'ULONG'), 'RtlDetectHeapLeaks': (0, [], [], 'VOID'), 'RtlCreateMemoryZone': (3, ['PVOID*', 'SIZE_T', 'ULONG'], ['MemoryZone', 'InitialSize', 'Flags'], 'NTSTATUS'), 'RtlDestroyMemoryZone': (1, ['PVOID'], ['MemoryZone'], 'NTSTATUS'), 'RtlAllocateMemoryZone': (3, ['PVOID', 'SIZE_T', 'PVOID*'], ['MemoryZone', 'BlockSize', 'Block'], 'NTSTATUS'), 'RtlResetMemoryZone': (1, ['PVOID'], ['MemoryZone'], 'NTSTATUS'), 'RtlLockMemoryZone': (1, ['PVOID'], ['MemoryZone'], 'NTSTATUS'), 'RtlUnlockMemoryZone': (1, ['PVOID'], ['MemoryZone'], 'NTSTATUS'), 'RtlCreateMemoryBlockLookaside': (5, ['PVOID*', 'ULONG', 'ULONG', 'ULONG', 'ULONG'], ['MemoryBlockLookaside', 'Flags', 'InitialSize', 'MinimumBlockSize', 'MaximumBlockSize'], 'NTSTATUS'), 'RtlDestroyMemoryBlockLookaside': (1, ['PVOID'], ['MemoryBlockLookaside'], 'NTSTATUS'), 'RtlAllocateMemoryBlockLookaside': (3, ['PVOID', 'ULONG', 'PVOID*'], ['MemoryBlockLookaside', 'BlockSize', 'Block'], 'NTSTATUS'), 'RtlFreeMemoryBlockLookaside': (2, ['PVOID', 'PVOID'], ['MemoryBlockLookaside', 'Block'], 'NTSTATUS'), 'RtlExtendMemoryBlockLookaside': (2, ['PVOID', 'ULONG'], ['MemoryBlockLookaside', 'Increment'], 'NTSTATUS'), 'RtlResetMemoryBlockLookaside': (1, ['PVOID'], ['MemoryBlockLookaside'], 'NTSTATUS'), 'RtlLockMemoryBlockLookaside': (1, ['PVOID'], ['MemoryBlockLookaside'], 'NTSTATUS'), 'RtlUnlockMemoryBlockLookaside': (1, ['PVOID'], ['MemoryBlockLookaside'], 'NTSTATUS'), 'RtlGetCurrentTransaction': (0, [], [], 'HANDLE'), 'RtlSetCurrentTransaction': (1, ['HANDLE'], ['TransactionHandle'], 'LOGICAL'), 'RtlCopyLuid': (2, ['PLUID', 'PLUID'], ['LuidDest', 'LuidSrc'], 'VOID'), 'RtlCopyLuidAndAttributesArray': (3, ['ULONG', 'PLUID_AND_ATTRIBUTES', 'PLUID_AND_ATTRIBUTES'], ['Count', 'Src', 'Dest'], 'VOID'), 'RtlCreateQueryDebugBuffer': (2, ['ULONG', 'BOOLEAN'], ['Size', 'EventPair'], 'PRTL_DEBUG_INFORMATION'), 'RtlDestroyQueryDebugBuffer': (1, ['PRTL_DEBUG_INFORMATION'], ['DebugBuffer'], 'NTSTATUS'), 'RtlCommitDebugInfo': (2, ['PRTL_DEBUG_INFORMATION', 'SIZE_T'], ['Buffer', 'Size'], 'PVOID'), 'RtlDeCommitDebugInfo': (3, ['PRTL_DEBUG_INFORMATION', 'PVOID', 'SIZE_T'], ['Buffer', 'p', 'Size'], 'VOID'), 'RtlQueryProcessDebugInformation': (3, ['ULONG', 'RTL_DEBUG_QUERY_FLAGS', 'PRTL_DEBUG_INFORMATION'], ['ProcessId', 'DebugInfoClassMask', 'DebugBuffer'], 'NTSTATUS'), 'RtlFindMessage': (5, ['PVOID', 'ULONG', 'ULONG', 'ULONG', 'PRTL_MESSAGE_RESOURCE_ENTRY*'], ['BaseAddress', 'Type', 'Language', 'MessageId', 'MessageResourceEntry'], 'NTSTATUS'), 'RtlFormatMessage': (9, ['PWSTR', 'ULONG', 'BOOLEAN', 'BOOLEAN', 'BOOLEAN', 'VA_LIST*', 'PWSTR', 'ULONG', 'PULONG'], ['MessageFormat', 'MaximumWidth', 'IgnoreInserts', 'ArgumentsAreAnsi', 'ArgumentsAreAnArray', 'Arguments', 'Buffer', 'Length', 'ReturnLength'], 'NTSTATUS'), 'RtlFormatMessageEx': (10, ['PWSTR', 'ULONG', 'BOOLEAN', 'BOOLEAN', 'BOOLEAN', 'VA_LIST*', 'PWSTR', 'ULONG', 'PULONG', 'PPARSE_MESSAGE_CONTEXT'], ['MessageFormat', 'MaximumWidth', 'IgnoreInserts', 'ArgumentsAreAnsi', 'ArgumentsAreAnArray', 'Arguments', 'Buffer', 'Length', 'ReturnLength', 'ParseContext'], 'NTSTATUS'), 'RtlNtStatusToDosError': (1, ['NTSTATUS'], ['Status'], '[ERROR_CODE_ULONG]'), 'RtlNtStatusToDosErrorNoTeb': (1, ['NTSTATUS'], ['Status'], '[ERROR_CODE_ULONG]'), 'RtlGetLastNtStatus': (0, [], [], 'NTSTATUS'), 'RtlGetLastWin32Error': (0, [], [], '[ERROR_CODE]'), 'RtlSetLastWin32ErrorAndNtStatusFromNtStatus': (1, ['NTSTATUS'], ['Status'], 'VOID'), 'RtlSetLastWin32Error': (1, ['ERROR_CODE'], ['err'], 'void'), 'RtlRestoreLastWin32Error': (1, ['LONG'], ['Win32Error'], 'VOID'), 'RtlGetThreadErrorMode': (0, [], [], '[RTL_ERRORMODE_FLAGS]'), 'RtlSetThreadErrorMode': (2, ['RTL_ERRORMODE_FLAGS', 'RTL_ERRORMODE_FLAGS*'], ['NewMode', 'OldMode'], 'NTSTATUS'), 'RtlReportException': (3, ['PEXCEPTION_RECORD', 'PCONTEXT', 'ULONG'], ['ExceptionRecord', 'ContextRecord', 'Flags'], 'NTSTATUS'), 'RtlWerpReportException': (4, ['ULONG', 'HANDLE', 'ULONG', 'PHANDLE'], ['ProcessId', 'CrashReportSharedMem', 'Flags', 'CrashVerticalProcessHandle'], 'NTSTATUS'), 'RtlReportSilentProcessExit': (2, ['HANDLE', 'NTSTATUS'], ['ProcessHandle', 'ExitStatus'], 'NTSTATUS'), 'RtlAddVectoredExceptionHandler': (2, ['ULONG', 'PVECTORED_EXCEPTION_HANDLER'], ['FirstHandler', 'VectoredHandler'], 'PVOID'), 'RtlRemoveVectoredExceptionHandler': (1, ['PVOID'], ['Handle'], 'ULONG'), 'RtlAddVectoredContinueHandler': (2, ['ULONG', 'PVECTORED_EXCEPTION_HANDLER'], ['First', 'Handler'], 'PVOID'), 'RtlRemoveVectoredContinueHandler': (1, ['PVOID'], ['Handle'], 'ULONG'), 'RtlUniform': (1, ['PULONG'], ['Seed'], 'ULONG'), 'RtlRandom': (1, ['PULONG'], ['Seed'], 'ULONG'), 'RtlRandomEx': (1, ['PULONG'], ['Seed'], 'ULONG'), 'RtlComputeImportTableHash': (3, ['HANDLE', 'PCHAR', 'ULONG'], ['hFile', 'Hash', 'ImportTableHashRevision'], 'NTSTATUS'), 'RtlIntegerToChar': (4, ['ULONG', 'ULONG', 'ULONG', 'PCHAR'], ['Value', 'Base', 'Length', 'String'], 'NTSTATUS'), 'RtlCharToInteger': (3, ['PCSZ', 'ULONG', 'PULONG'], ['String', 'Base', 'Value'], 'NTSTATUS'), 'RtlIntegerToUnicodeString': (3, ['ULONG', 'ULONG', 'PUNICODE_STRING'], ['Value', 'Base', 'String'], 'NTSTATUS'), 'RtlInt64ToUnicodeString': (3, ['ULONGLONG', 'ULONG', 'PUNICODE_STRING'], ['Value', 'Base', 'String'], 'NTSTATUS'), 'RtlUnicodeStringToInteger': (3, ['PCUNICODE_STRING', 'ULONG', 'PULONG'], ['String', 'Base', 'Value'], 'NTSTATUS'), 'RtlIntegerToUnicode': (4, ['ULONG', 'ULONG', 'ULONG', 'LPWSTR'], ['Value', 'Base', 'Length', 'String'], 'NTSTATUS'), 'RtlIpv4AddressToString': (2, ['CONST IN_ADDR*', 'LPTSTR'], ['Addr', 'S'], 'LPTSTR'), 'RtlIpv4AddressToStringEx': (4, ['CONST IN_ADDR*', 'USHORT', 'LPTSTR', 'PULONG'], ['Address', 'Port', 'AddressString', 'AddressStringLength'], 'NTSTATUS'), 'RtlIpv6AddressToString': (2, ['CONST IN6_ADDR*', 'LPTSTR'], ['Addr', 'S'], 'LPTSTR'), 'RtlIpv6AddressToStringEx': (5, ['CONST IN6_ADDR*', 'ULONG', 'USHORT', 'LPTSTR', 'PULONG'], ['Address', 'ScopeId', 'Port', 'AddressString', 'AddressStringLength'], 'NTSTATUS'), 'RtlIpv4StringToAddress': (4, ['PCTSTR', 'BOOLEAN', 'LPTSTR*', 'IN_ADDR*'], ['String', 'Strict', 'Terminator', 'Addr'], 'NTSTATUS'), 'RtlIpv4StringToAddressEx': (4, ['PCTSTR', 'BOOLEAN', 'IN_ADDR*', 'PUSHORT'], ['AddressString', 'Strict', 'Address', 'Port'], 'NTSTATUS'), 'RtlIpv6StringToAddress': (3, ['PCTSTR', 'PCTSTR*', 'IN6_ADDR*'], ['String', 'Terminator', 'Addr'], 'NTSTATUS'), 'RtlIpv6StringToAddressEx': (4, ['PCTSTR', 'IN6_ADDR*', 'PULONG', 'PUSHORT'], ['AddressString', 'Address', 'ScopeId', 'Port'], 'NTSTATUS'), 'RtlCutoverTimeToSystemTime': (4, ['PTIME_FIELDS', 'PLARGE_INTEGER', 'PLARGE_INTEGER', 'BOOLEAN'], ['CutoverTime', 'SystemTime', 'CurrentSystemTime', 'ThisYear'], 'BOOLEAN'), 'RtlSystemTimeToLocalTime': (2, ['PLARGE_INTEGER', 'PLARGE_INTEGER'], ['SystemTime', 'LocalTime'], 'NTSTATUS'), 'RtlLocalTimeToSystemTime': (2, ['PLARGE_INTEGER', 'PLARGE_INTEGER'], ['LocalTime', 'SystemTime'], 'NTSTATUS'), 'RtlTimeToElapsedTimeFields': (2, ['PLARGE_INTEGER', 'PTIME_FIELDS'], ['Time', 'TimeFields'], 'VOID'), 'RtlTimeToTimeFields': (2, ['PLARGE_INTEGER', 'PTIME_FIELDS'], ['Time', 'TimeFields'], 'VOID'), 'RtlTimeFieldsToTime': (2, ['PTIME_FIELDS', 'PLARGE_INTEGER'], ['TimeFields', 'Time'], 'BOOLEAN'), 'RtlTimeToSecondsSince1980': (2, ['PLARGE_INTEGER', 'PULONG'], ['Time', 'ElapsedSeconds'], 'BOOLEAN'), 'RtlSecondsSince1980ToTime': (2, ['ULONG', 'PLARGE_INTEGER'], ['ElapsedSeconds', 'Time'], 'VOID'), 'RtlTimeToSecondsSince1970': (2, ['PLARGE_INTEGER', 'PULONG'], ['Time', 'SecondsSince1970'], 'BOOLEAN'), 'RtlSecondsSince1970ToTime': (2, ['ULONG', 'PLARGE_INTEGER'], ['SecondsSince1970', 'Time'], 'VOID'), 'RtlQueryTimeZoneInformation': (1, ['PRTL_TIME_ZONE_INFORMATION'], ['TimeZoneInformation'], 'NTSTATUS'), 'RtlSetTimeZoneInformation': (1, ['PRTL_TIME_ZONE_INFORMATION'], ['TimeZoneInformation'], 'NTSTATUS'), 'RtlInitializeBitMap': (3, ['PRTL_BITMAP', 'PULONG', 'ULONG'], ['BitMapHeader', 'BitMapBuffer', 'SizeOfBitMap'], 'VOID'), 'RtlClearBit': (2, ['PRTL_BITMAP', 'ULONG'], ['BitMapHeader', 'BitNumber'], 'VOID'), 'RtlSetBit': (2, ['PRTL_BITMAP', 'ULONG'], ['BitMapHeader', 'BitNumber'], 'VOID'), 'RtlTestBit': (2, ['PRTL_BITMAP', 'ULONG'], ['BitMapHeader', 'BitNumber'], 'BOOLEAN'), 'RtlClearAllBits': (1, ['PRTL_BITMAP'], ['BitMapHeader'], 'VOID'), 'RtlSetAllBits': (1, ['PRTL_BITMAP'], ['BitMapHeader'], 'VOID'), 'RtlFindClearBits': (3, ['PRTL_BITMAP', 'ULONG', 'ULONG'], ['BitMapHeader', 'NumberToFind', 'HintIndex'], 'ULONG'), 'RtlFindClearBitsAndSet': (3, ['PRTL_BITMAP', 'ULONG', 'ULONG'], ['BitMapHeader', 'NumberToFind', 'HintIndex'], 'ULONG'), 'RtlFindSetBitsAndClear': (3, ['PRTL_BITMAP', 'ULONG', 'ULONG'], ['BitMapHeader', 'NumberToFind', 'HintIndex'], 'ULONG'), 'RtlClearBits': (3, ['PRTL_BITMAP', 'ULONG', 'ULONG'], ['BitMapHeader', 'StartingIndex', 'NumberToClear'], 'VOID'), 'RtlSetBits': (3, ['PRTL_BITMAP', 'ULONG', 'ULONG'], ['BitMapHeader', 'StartingIndex', 'NumberToSet'], 'VOID'), 'RtlFindClearRuns': (4, ['PRTL_BITMAP', 'PRTL_BITMAP_RUN', 'ULONG', 'BOOLEAN'], ['BitMapHeader', 'RunArray', 'SizeOfRunArray', 'LocateLongestRuns'], 'ULONG'), 'RtlFindLongestRunClear': (2, ['PRTL_BITMAP', 'PULONG'], ['BitMapHeader', 'StartingIndex'], 'ULONG'), 'RtlFindFirstRunClear': (2, ['PRTL_BITMAP', 'PULONG'], ['BitMapHeader', 'StartingIndex'], 'ULONG'), 'RtlNumberOfClearBits': (1, ['PRTL_BITMAP'], ['BitMapHeader'], 'ULONG'), 'RtlNumberOfSetBits': (1, ['PRTL_BITMAP'], ['BitMapHeader'], 'ULONG'), 'RtlAreBitsClear': (3, ['PRTL_BITMAP', 'ULONG', 'ULONG'], ['BitMapHeader', 'StartingIndex', 'Length'], 'BOOLEAN'), 'RtlAreBitsSet': (3, ['PRTL_BITMAP', 'ULONG', 'ULONG'], ['BitMapHeader', 'StartingIndex', 'Length'], 'BOOLEAN'), 'RtlFindNextForwardRunClear': (3, ['PRTL_BITMAP', 'ULONG', 'PULONG'], ['BitMapHeader', 'FromIndex', 'StartingRunIndex'], 'ULONG'), 'RtlFindLastBackwardRunClear': (3, ['PRTL_BITMAP', 'ULONG', 'PULONG'], ['BitMapHeader', 'FromIndex', 'StartingRunIndex'], 'ULONG'), 'RtlInterlockedClearBitRun': (3, ['PRTL_BITMAP', 'ULONG', 'ULONG'], ['BitMapHeader', 'StartingIndex', 'NumberToClear'], 'VOID'), 'RtlInterlockedSetBitRun': (3, ['PRTL_BITMAP', 'ULONG', 'ULONG'], ['BitMapHeader', 'StartingIndex', 'NumberToSet'], 'VOID'), 'RtlFindLeastSignificantBit': (1, ['ULONGLONG'], ['Set'], 'CCHAR'), 'RtlFindMostSignificantBit': (1, ['ULONGLONG'], ['Set'], 'CCHAR'), 'RtlFindSetBits': (3, ['PRTL_BITMAP', 'ULONG', 'ULONG'], ['BitMapHeader', 'NumberToFind', 'HintIndex'], 'ULONG'), 'RtlNumberOfSetBitsUlongPtr': (1, ['ULONG_PTR'], ['Target'], 'ULONG'), 'RtlInitializeHandleTable': (3, ['ULONG', 'ULONG', 'PRTL_HANDLE_TABLE'], ['TableSize', 'HandleSize', 'HandleTable'], 'VOID'), 'RtlDestroyHandleTable': (1, ['PRTL_HANDLE_TABLE'], ['HandleTable'], 'VOID'), 'RtlAllocateHandle': (2, ['PRTL_HANDLE_TABLE', 'PULONG'], ['HandleTable', 'Index'], 'PRTL_HANDLE_TABLE_ENTRY'), 'RtlFreeHandle': (2, ['PRTL_HANDLE_TABLE', 'PRTL_HANDLE_TABLE_ENTRY'], ['HandleTable', 'Handle'], 'BOOLEAN'), 'RtlIsValidHandle': (2, ['PRTL_HANDLE_TABLE', 'PRTL_HANDLE_TABLE_ENTRY'], ['HandleTable', 'Handle'], 'BOOLEAN'), 'RtlIsValidIndexHandle': (3, ['PRTL_HANDLE_TABLE', 'ULONG', 'PRTL_HANDLE_TABLE_ENTRY*'], ['HandleTable', 'Index', 'Handle'], 'BOOLEAN'), 'RtlCreateAtomTable': (2, ['ULONG', 'PRTL_ATOM_TABLE*'], ['TableSize', 'AtomTable'], 'NTSTATUS'), 'RtlDestroyAtomTable': (1, ['PRTL_ATOM_TABLE'], ['AtomTable'], 'NTSTATUS'), 'RtlEmptyAtomTable': (2, ['PVOID', 'BOOLEAN'], ['AtomTableHandle', 'IncludePinnedAtoms'], 'NTSTATUS'), 'RtlAddAtomToAtomTable': (3, ['PRTL_ATOM_TABLE', 'PWSTR', 'PRTL_ATOM'], ['AtomTable', 'AtomName', 'Atom'], 'NTSTATUS'), 'RtlLookupAtomInAtomTable': (3, ['PRTL_ATOM_TABLE', 'PWSTR', 'PRTL_ATOM'], ['AtomTable', 'AtomName', 'Atom'], 'NTSTATUS'), 'RtlDeleteAtomFromAtomTable': (2, ['PRTL_ATOM_TABLE', 'RTL_ATOM'], ['AtomTable', 'Atom'], 'NTSTATUS'), 'RtlPinAtomInAtomTable': (2, ['PRTL_ATOM_TABLE', 'RTL_ATOM'], ['AtomTable', 'Atom'], 'NTSTATUS'), 'RtlQueryAtomInAtomTable': (6, ['PRTL_ATOM_TABLE', 'RTL_ATOM', 'PULONG', 'PULONG', 'PWSTR', 'PULONG'], ['AtomTable', 'Atom', 'RefCount', 'PinCount', 'AtomName', 'NameLength'], 'NTSTATUS'), 'RtlGetIntegerAtom': (2, ['PWSTR', 'PUSHORT'], ['AtomName', 'IntegerAtom'], 'BOOLEAN'), 'RtlValidSid': (1, ['PSID'], ['Sid'], 'BOOLEAN'), 'RtlEqualSid': (2, ['PSID', 'PSID'], ['Sid1', 'Sid2'], 'BOOLEAN'), 'RtlLengthRequiredSid': (1, ['ULONG'], ['SubAuthorityCount'], 'ULONG'), 'RtlFreeSid': (1, ['PSID'], ['Sid'], 'PVOID'), 'RtlAllocateAndInitializeSid': (11, ['PSID_IDENTIFIER_AUTHORITY', 'UCHAR', 'ULONG', 'ULONG', 'ULONG', 'ULONG', 'ULONG', 'ULONG', 'ULONG', 'ULONG', 'PSID*'], ['IdentifierAuthority', 'SubAuthorityCount', 'SubAuthority0', 'SubAuthority1', 'SubAuthority2', 'SubAuthority3', 'SubAuthority4', 'SubAuthority5', 'SubAuthority6', 'SubAuthority7', 'Sid'], 'NTSTATUS'), 'RtlInitializeSid': (3, ['PSID', 'PSID_IDENTIFIER_AUTHORITY', 'UCHAR'], ['Sid', 'IdentifierAuthority', 'SubAuthorityCount'], 'NTSTATUS'), 'RtlIdentifierAuthoritySid': (1, ['PSID'], ['Sid'], 'PSID_IDENTIFIER_AUTHORITY'), 'RtlSubAuthoritySid': (2, ['PSID', 'ULONG'], ['Sid', 'SubAuthority'], 'PULONG'), 'RtlSubAuthorityCountSid': (1, ['PSID'], ['Sid'], 'PUCHAR'), 'RtlLengthSid': (1, ['PSID'], ['Sid'], 'ULONG'), 'RtlCopySid': (3, ['ULONG', 'PSID', 'PSID'], ['Length', 'Destination', 'Source'], 'NTSTATUS'), 'RtlCreateServiceSid': (3, ['PUNICODE_STRING', 'PSID', 'PULONG'], ['ServiceName', 'ServiceSid', 'ServiceSidLength'], 'NTSTATUS'), 'RtlSidDominates': (3, ['PSID', 'PSID', 'PBOOLEAN'], ['Sid1', 'Sid2', 'pbDominate'], 'NTSTATUS'), 'RtlSidEqualLevel': (3, ['PSID', 'PSID', 'PBOOLEAN'], ['Sid1', 'Sid2', 'pbEqual'], 'NTSTATUS'), 'RtlSidIsHigherLevel': (3, ['PSID', 'PSID', 'PBOOLEAN'], ['Sid1', 'Sid2', 'pbHigher'], 'NTSTATUS'), 'RtlCreateVirtualAccountSid': (4, ['PUNICODE_STRING', 'ULONG', 'PSID', 'PULONG'], ['Name', 'BaseSubAuthority', 'Sid', 'SidLength'], 'NTSTATUS'), 'RtlReplaceSidInSd': (4, ['PSECURITY_DESCRIPTOR', 'PSID', 'PSID', 'ULONG*'], ['SecurityDescriptor', 'OldSid', 'NewSid', 'NumChanges'], 'NTSTATUS'), 'RtlConvertSidToUnicodeString': (3, ['PUNICODE_STRING', 'PSID', 'BOOLEAN'], ['DestinationString', 'Sid', 'AllocateDestinationString'], 'NTSTATUS'), 'RtlSidHashInitialize': (3, ['PSID_AND_ATTRIBUTES', 'ULONG', 'PSID_AND_ATTRIBUTES_HASH'], ['SidAttr', 'SidCount', 'SidAttrHash'], 'NTSTATUS'), 'RtlSidHashLookup': (2, ['PSID_AND_ATTRIBUTES_HASH', 'PSID'], ['SidAttrHash', 'Sid'], 'PSID_AND_ATTRIBUTES'), 'RtlCopySidAndAttributesArray': (7, ['ULONG', 'PSID_AND_ATTRIBUTES', 'ULONG', 'PSID_AND_ATTRIBUTES', 'PVOID', 'PVOID*', 'PULONG'], ['Count', 'Src', 'SidAreaSize', 'Dest', 'SidArea', 'RemainingSidArea', 'RemainingSidAreaSize'], 'NTSTATUS'), 'RtlCreateSecurityDescriptor': (2, ['PSECURITY_DESCRIPTOR', 'ULONG'], ['SecurityDescriptor', 'Revision'], 'NTSTATUS'), 'RtlValidSecurityDescriptor': (1, ['PSECURITY_DESCRIPTOR'], ['SecurityDescriptor'], 'BOOLEAN'), 'RtlLengthSecurityDescriptor': (1, ['PSECURITY_DESCRIPTOR'], ['SecurityDescriptor'], 'ULONG'), 'RtlValidRelativeSecurityDescriptor': (3, ['PSECURITY_DESCRIPTOR_RELATIVE', 'ULONG', 'SECURITY_INFORMATION'], ['SecurityDescriptorInput', 'SecurityDescriptorLength', 'RequiredInformation'], 'BOOLEAN'), 'RtlGetControlSecurityDescriptor': (3, ['PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR_CONTROL', 'PULONG'], ['SecurityDescriptor', 'Control', 'Revision'], 'NTSTATUS'), 'RtlSetControlSecurityDescriptor': (3, ['PSECURITY_DESCRIPTOR', 'SECURITY_DESCRIPTOR_CONTROL', 'SECURITY_DESCRIPTOR_CONTROL'], ['SecurityDescriptor', 'ControlBitsOfInterest', 'ControlBitsToSet'], 'NTSTATUS'), 'RtlSetAttributesSecurityDescriptor': (3, ['PSECURITY_DESCRIPTOR', 'SECURITY_DESCRIPTOR_CONTROL', 'PULONG'], ['SecurityDescriptor', 'Control', 'Revision'], 'NTSTATUS'), 'RtlGetSecurityDescriptorRMControl': (2, ['PSECURITY_DESCRIPTOR', 'PUCHAR'], ['SecurityDescriptor', 'RMControl'], 'BOOLEAN'), 'RtlSetSecurityDescriptorRMControl': (2, ['PSECURITY_DESCRIPTOR', 'PUCHAR'], ['SecurityDescriptor', 'RMControl'], 'VOID'), 'RtlSetDaclSecurityDescriptor': (4, ['PSECURITY_DESCRIPTOR', 'BOOLEAN', 'PACL', 'BOOLEAN'], ['SecurityDescriptor', 'DaclPresent', 'Dacl', 'DaclDefaulted'], 'NTSTATUS'), 'RtlGetDaclSecurityDescriptor': (4, ['PSECURITY_DESCRIPTOR', 'PBOOLEAN', 'PACL*', 'PBOOLEAN'], ['SecurityDescriptor', 'DaclPresent', 'Dacl', 'DaclDefaulted'], 'NTSTATUS'), 'RtlSetSaclSecurityDescriptor': (4, ['PSECURITY_DESCRIPTOR', 'BOOLEAN', 'PACL', 'BOOLEAN'], ['SecurityDescriptor', 'SaclPresent', 'Sacl', 'SaclDefaulted'], 'NTSTATUS'), 'RtlGetSaclSecurityDescriptor': (4, ['PSECURITY_DESCRIPTOR', 'PBOOLEAN', 'PACL*', 'PBOOLEAN'], ['SecurityDescriptor', 'SaclPresent', 'Sacl', 'SaclDefaulted'], 'NTSTATUS'), 'RtlSetOwnerSecurityDescriptor': (3, ['PSECURITY_DESCRIPTOR', 'PSID', 'BOOLEAN'], ['SecurityDescriptor', 'Owner', 'OwnerDefaulted'], 'NTSTATUS'), 'RtlGetOwnerSecurityDescriptor': (3, ['PSECURITY_DESCRIPTOR', 'PSID*', 'PBOOLEAN'], ['SecurityDescriptor', 'Owner', 'OwnerDefaulted'], 'NTSTATUS'), 'RtlSetGroupSecurityDescriptor': (3, ['PSECURITY_DESCRIPTOR', 'PSID', 'BOOLEAN'], ['SecurityDescriptor', 'Group', 'GroupDefaulted'], 'NTSTATUS'), 'RtlGetGroupSecurityDescriptor': (3, ['PSECURITY_DESCRIPTOR', 'PSID*', 'PBOOLEAN'], ['SecurityDescriptor', 'Group', 'GroupDefaulted'], 'NTSTATUS'), 'RtlMakeSelfRelativeSD': (3, ['PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR_RELATIVE', 'PULONG'], ['AbsoluteSD', 'SelfRelativeSD', 'BufferLength'], 'NTSTATUS'), 'RtlAbsoluteToSelfRelativeSD': (3, ['PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR_RELATIVE', 'PULONG'], ['AbsoluteSecurityDescriptor', 'SelfRelativeSecurityDescriptor', 'BufferLength'], 'NTSTATUS'), 'RtlSelfRelativeToAbsoluteSD': (11, ['PSECURITY_DESCRIPTOR_RELATIVE', 'PSECURITY_DESCRIPTOR', 'PULONG', 'PACL', 'PULONG', 'PACL', 'PULONG', 'PSID', 'PULONG', 'PSID', 'PULONG'], ['SelfRelativeSD', 'AbsoluteSD', 'AbsoluteSDSize', 'Dacl', 'DaclSize', 'Sacl', 'SaclSize', 'Owner', 'OwnerSize', 'PrimaryGroup', 'PrimaryGroupSize'], 'NTSTATUS'), 'RtlSelfRelativeToAbsoluteSD2': (2, ['PSECURITY_DESCRIPTOR_RELATIVE', 'PULONG'], ['SelfRelativeSD', 'BufferSize'], 'NTSTATUS'), 'RtlCopySecurityDescriptor': (2, ['PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR'], ['pSourceSecurityDescriptor', 'pDestinationSecurityDescriptor'], 'NTSTATUS'), 'RtlCreateSecurityDescriptorRelative': (2, ['PISECURITY_DESCRIPTOR_RELATIVE', 'ULONG'], ['SecurityDescriptor', 'Revision'], 'NTSTATUS'), 'RtlAreAllAccessesGranted': (2, ['ACCESS_MASK', 'ACCESS_MASK'], ['GrantedAccess', 'DesiredAccess'], 'BOOLEAN'), 'RtlAreAnyAccessesGranted': (2, ['ACCESS_MASK', 'ACCESS_MASK'], ['GrantedAccess', 'DesiredAccess'], 'BOOLEAN'), 'RtlMapGenericMask': (2, ['PACCESS_MASK', 'PGENERIC_MAPPING'], ['AccessMask', 'GenericMapping'], 'VOID'), 'RtlCreateAcl': (3, ['PACL', 'ULONG', 'ULONG'], ['Acl', 'AclSize', 'AclRevision'], 'NTSTATUS'), 'RtlValidAcl': (1, ['PACL'], ['Acl'], 'BOOLEAN'), 'RtlQueryInformationAcl': (4, ['PACL', 'PVOID', 'ULONG', 'ACL_INFORMATION_CLASS'], ['Acl', 'Information', 'InformationLength', 'InformationClass'], 'NTSTATUS'), 'RtlSetInformationAcl': (4, ['PACL', 'PVOID', 'ULONG', 'ACL_INFORMATION_CLASS'], ['Acl', 'Information', 'InformationLength', 'InformationClass'], 'NTSTATUS'), 'RtlAddAce': (5, ['PACL', 'ULONG', 'ULONG', 'PVOID', 'ULONG'], ['Acl', 'AceRevision', 'StartingAceIndex', 'AceList', 'AceListLength'], 'NTSTATUS'), 'RtlDeleteAce': (2, ['PACL', 'ULONG'], ['Acl', 'AceIndex'], 'NTSTATUS'), 'RtlGetAce': (3, ['PACL', 'ULONG', 'PACE*'], ['Acl', 'AceIndex', 'Ace'], 'NTSTATUS'), 'RtlFirstFreeAce': (2, ['PACL', 'PACE*'], ['Acl', 'Ace'], 'BOOLEAN'), 'RtlFindAceByType': (3, ['PACL', 'ACE_TYPE|UCHAR', 'PULONG'], ['pAcl', 'AceType', 'pIndex'], 'PVOID'), 'RtlOwnerAcesPresent': (1, ['PACL'], ['pAcl'], 'BOOLEAN'), 'RtlAddAccessAllowedAce': (4, ['PACL', 'ULONG', 'ACCESS_MASK', 'PSID'], ['Acl', 'AceRevision', 'AccessMask', 'Sid'], 'NTSTATUS'), 'RtlAddAccessAllowedAceEx': (5, ['PACL', 'ULONG', 'ACE_FLAGS_ULONG', 'ACCESS_MASK', 'PSID'], ['pAcl', 'AceRevision', 'AceFlags', 'AccessMask', 'Sid'], 'NTSTATUS'), 'RtlAddAccessDeniedAce': (4, ['PACL', 'ULONG', 'ACCESS_MASK', 'PSID'], ['Acl', 'Revision', 'AccessMask', 'Sid'], 'NTSTATUS'), 'RtlAddAccessDeniedAceEx': (5, ['PACL', 'ULONG', 'ULONG', 'ACCESS_MASK', 'PSID'], ['Acl', 'Revision', 'Flags', 'AccessMask', 'Sid'], 'NTSTATUS'), 'RtlAddAuditAccessAce': (6, ['PACL', 'ULONG', 'ACCESS_MASK', 'PSID', 'BOOLEAN', 'BOOLEAN'], ['Acl', 'Revision', 'AccessMask', 'Sid', 'Success', 'Failure'], 'NTSTATUS'), 'RtlAddAuditAccessAceEx': (7, ['PACL', 'ULONG', 'ULONG', 'ACCESS_MASK', 'PSID', 'BOOLEAN', 'BOOLEAN'], ['Acl', 'Revision', 'Flags', 'AccessMask', 'Sid', 'Success', 'Failure'], 'NTSTATUS'), 'RtlAddAccessAllowedObjectAce': (7, ['PACL', 'ULONG', 'ACE_FLAGS_ULONG', 'ACCESS_MASK', 'GUID*', 'GUID*', 'PSID'], ['pAcl', 'dwAceRevision', 'AceFlags', 'AccessMask', 'ObjectTypeGuid', 'InheritedObjectTypeGuid', 'pSid'], 'NTSTATUS'), 'RtlAddAccessDeniedObjectAce': (7, ['PACL', 'ULONG', 'ACE_FLAGS_ULONG', 'ACCESS_MASK', 'GUID*', 'GUID*', 'PSID'], ['pAcl', 'dwAceRevision', 'AceFlags', 'AccessMask', 'ObjectTypeGuid', 'InheritedObjectTypeGuid', 'pSid'], 'NTSTATUS'), 'RtlAddAuditAccessObjectAce': (9, ['PACL', 'ULONG', 'ULONG', 'ACCESS_MASK', 'GUID*', 'GUID*', 'PSID', 'BOOLEAN', 'BOOLEAN'], ['Acl', 'Revision', 'Flags', 'AccessMask', 'ObjectTypeGuid', 'InheritedObjectTypeGuid', 'Sid', 'Success', 'Failure'], 'NTSTATUS'), 'RtlAddCompoundAce': (6, ['PACL', 'ULONG', 'ACE_TYPE|UCHAR', 'ACCESS_MASK', 'PSID', 'PSID'], ['Acl', 'AceRevision', 'AceType', 'AccessMask', 'ServerSid', 'ClientSid'], 'NTSTATUS'), 'RtlAddMandatoryAce': (6, ['PACL', 'ULONG', 'ULONG', 'ULONG', 'ACE_TYPE|UCHAR', 'PSID'], ['Acl', 'Revision', 'Flags', 'MandatoryFlags', 'AceType', 'LabelSid'], 'NTSTATUS'), 'RtlNewSecurityObject': (6, ['PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR*', 'BOOLEAN', 'HANDLE', 'PGENERIC_MAPPING'], ['ParentDescriptor', 'CreatorDescriptor', 'NewDescriptor', 'IsDirectoryObject', 'Token', 'GenericMapping'], 'NTSTATUS'), 'RtlNewSecurityObjectEx': (8, ['PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR*', 'GUID*', 'BOOLEAN', 'ULONG', 'HANDLE', 'PGENERIC_MAPPING'], ['ParentDescriptor', 'CreatorDescriptor', 'NewDescriptor', 'ObjectType', 'IsDirectoryObject', 'AutoInheritFlags', 'Token', 'GenericMapping'], 'NTSTATUS'), 'RtlNewSecurityObjectWithMultipleInheritance': (9, ['PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR*', 'GUID**', 'ULONG', 'BOOLEAN', 'ULONG', 'HANDLE', 'PGENERIC_MAPPING'], ['ParentDescriptor', 'CreatorDescriptor', 'NewDescriptor', 'ObjectType', 'GuidCount', 'IsDirectoryObject', 'AutoInheritFlags', 'Token', 'GenericMapping'], 'NTSTATUS'), 'RtlDeleteSecurityObject': (1, ['PSECURITY_DESCRIPTOR*'], ['ObjectDescriptor'], 'NTSTATUS'), 'RtlQuerySecurityObject': (5, ['PSECURITY_DESCRIPTOR', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR', 'ULONG', 'PULONG'], ['ObjectDescriptor', 'SecurityInformation', 'ResultantDescriptor', 'DescriptorLength', 'ReturnLength'], 'NTSTATUS'), 'RtlSetSecurityObject': (5, ['SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR*', 'PGENERIC_MAPPING', 'HANDLE'], ['SecurityInformation', 'ModificationDescriptor', 'ObjectsSecurityDescriptor', 'GenericMapping', 'Token'], 'NTSTATUS'), 'RtlSetSecurityObjectEx': (6, ['SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR*', 'ULONG', 'PGENERIC_MAPPING', 'HANDLE'], ['SecurityInformation', 'ModificationDescriptor', 'ObjectsSecurityDescriptor', 'AutoInheritFlags', 'GenericMapping', 'Token'], 'NTSTATUS'), 'RtlConvertToAutoInheritSecurityObject': (6, ['PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR*', 'GUID*', 'BOOLEAN', 'PGENERIC_MAPPING'], ['ParentDescriptor', 'CurrentSecurityDescriptor', 'NewSecurityDescriptor', 'ObjectType', 'IsDirectoryObject', 'GenericMapping'], 'NTSTATUS'), 'RtlNewInstanceSecurityObject': (10, ['BOOLEAN', 'BOOLEAN', 'PLUID', 'PLUID', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR*', 'BOOLEAN', 'HANDLE', 'PGENERIC_MAPPING'], ['ParentDescriptorChanged', 'CreatorDescriptorChanged', 'OldClientTokenModifiedId', 'NewClientTokenModifiedId', 'ParentDescriptor', 'CreatorDescriptor', 'NewDescriptor', 'IsDirectoryObject', 'Token', 'GenericMapping'], 'NTSTATUS'), 'RtlRunEncodeUnicodeString': (2, ['PUCHAR', 'PUNICODE_STRING'], ['Seed', 'String'], 'VOID'), 'RtlRunDecodeUnicodeString': (2, ['UCHAR', 'PUNICODE_STRING'], ['Seed', 'String'], 'VOID'), 'RtlImpersonateSelf': (1, ['SECURITY_IMPERSONATION_LEVEL'], ['ImpersonationLevel'], 'NTSTATUS'), 'RtlImpersonateSelfEx': (3, ['SECURITY_IMPERSONATION_LEVEL', 'ACCESS_MASK', 'PHANDLE'], ['ImpersonationLevel', 'AdditionalAccess', 'ThreadToken'], 'NTSTATUS'), 'RtlAdjustPrivilege': (4, ['ULONG', 'BOOLEAN', 'BOOLEAN', 'PBOOLEAN'], ['Privilege', 'NewValue', 'ForThread', 'OldValue'], 'NTSTATUS'), 'RtlAcquirePrivilege': (4, ['PULONG', 'ULONG', 'RTL_ACQUIRE_PRIVILEGE_FLAGS', 'PVOID*'], ['Privilege', 'NumPriv', 'Flags', 'ReturnedState'], 'NTSTATUS'), 'RtlReleasePrivilege': (1, ['PVOID'], ['ReturnedState'], 'VOID'), 'RtlRemovePrivileges': (3, ['HANDLE', 'PULONG', 'ULONG'], ['hToken', 'PrivilegesToKeep', 'PrivilegeCount'], 'NTSTATUS'), 'RtlCreateBoundaryDescriptor': (2, ['PUNICODE_STRING', 'ULONG'], ['Name', 'Flags'], 'PVOID'), 'RtlDeleteBoundaryDescriptor': (1, ['PVOID'], ['BoundaryDescriptor'], 'VOID'), 'RtlAddSIDToBoundaryDescriptor': (2, ['PVOID*', 'PSID'], ['BoundaryDescriptor', 'RequiredSid'], 'NTSTATUS'), 'RtlAddIntegrityLabelToBoundaryDescriptor': (2, ['PVOID*', 'PSID'], ['BoundaryDescriptor', 'IntegrityLabel'], 'NTSTATUS'), 'RtlGetVersion': (1, ['PRTL_OSVERSIONINFOW'], ['lpVersionInformation'], 'NTSTATUS'), 'RtlVerifyVersionInfo': (3, ['PRTL_OSVERSIONINFOEXW', 'NTVERTYPE', 'ULONGLONG'], ['VersionInfo', 'TypeMask', 'ConditionMask'], 'NTSTATUS'), 'RtlGetNtGlobalFlags': (0, [], [], 'ULONG'), 'RtlGetNtProductType': (1, ['PNT_PRODUCT_TYPE'], ['ProductType'], 'BOOLEAN'), 'RtlGetNtVersionNumbers': (3, ['PULONG', 'PULONG', 'PULONG'], ['pNtMajorVersion', 'pNtMinorVersion', 'pNtBuildNumber'], 'VOID'), 'RtlRegisterWait': (6, ['PHANDLE', 'HANDLE', 'WAITORTIMERCALLBACKFUNC', 'PVOID', 'ULONG', 'ULONG'], ['phNewWaitObject', 'hObject', 'Callback', 'pvContext', 'ulMilliseconds', 'ulFlags'], 'NTSTATUS'), 'RtlDeregisterWait': (1, ['HANDLE'], ['hWaitHandle'], 'NTSTATUS'), 'RtlDeregisterWaitEx': (2, ['HANDLE', 'HANDLE'], ['hWaitHandle', 'hCompletionEvent'], 'NTSTATUS'), 'RtlQueueWorkItem': (3, ['WORKERCALLBACKFUNC', 'PVOID', 'ULONG'], ['Function', 'Context', 'Flags'], 'NTSTATUS'), 'RtlSetIoCompletionCallback': (3, ['HANDLE', 'PIO_APC_ROUTINE', 'ULONG'], ['FileHandle', 'Callback', 'Flags'], 'NTSTATUS'), 'RtlCreateTimerQueue': (1, ['PHANDLE'], ['TimerQueue'], 'NTSTATUS'), 'RtlCreateTimer': (7, ['HANDLE', 'PHANDLE', 'WAITORTIMERCALLBACKFUNC', 'PVOID', 'ULONG', 'ULONG', 'ULONG'], ['TimerQueue', 'phNewTimer', 'Callback', 'Parameter', 'DueTime', 'Period', 'Flags'], 'NTSTATUS'), 'RtlUpdateTimer': (4, ['HANDLE', 'HANDLE', 'ULONG', 'ULONG'], ['TimerQueue', 'Timer', 'DueTime', 'Period'], 'NTSTATUS'), 'RtlDeleteTimer': (3, ['HANDLE', 'HANDLE', 'HANDLE'], ['TimerQueue', 'Timer', 'CompletionEvent'], 'NTSTATUS'), 'RtlDeleteTimerQueue': (1, ['HANDLE'], ['TimerQueue'], 'NTSTATUS'), 'RtlDeleteTimerQueueEx': (2, ['HANDLE', 'HANDLE'], ['TimerQueue', 'CompletionEvent'], 'NTSTATUS'), 'RtlFormatCurrentUserKeyPath': (1, ['PUNICODE_STRING'], ['KeyPath'], 'NTSTATUS'), 'RtlOpenCurrentUser': (2, ['ACCESS_MASK', 'PHANDLE'], ['DesiredAccess', 'KeyHandle'], 'NTSTATUS'), 'RtlCreateRegistryKey': (2, ['RTL_REGISTRY_RELATIVE_TO', 'PWSTR'], ['RelativeTo', 'Path'], 'NTSTATUS'), 'RtlCheckRegistryKey': (2, ['RTL_REGISTRY_RELATIVE_TO', 'PWSTR'], ['RelativeTo', 'Path'], 'NTSTATUS'), 'RtlQueryRegistryValues': (5, ['RTL_REGISTRY_RELATIVE_TO', 'PCWSTR', 'PRTL_QUERY_REGISTRY_TABLE', 'PVOID', 'PVOID'], ['RelativeTo', 'Path', 'QueryTable', 'Context', 'Environment'], 'NTSTATUS'), 'RtlWriteRegistryValue': (6, ['RTL_REGISTRY_RELATIVE_TO', 'PCWSTR', 'PCWSTR', 'ULONG', 'PVOID', 'ULONG'], ['RelativeTo', 'Path', 'ValueName', 'ValueType', 'ValueData', 'ValueLength'], 'NTSTATUS'), 'RtlDeleteRegistryValue': (3, ['RTL_REGISTRY_RELATIVE_TO', 'PCWSTR', 'PCWSTR'], ['RelativeTo', 'Path', 'ValueName'], 'NTSTATUS'), 'RtlEnableThreadProfiling': (4, ['HANDLE', 'ULONG', 'ULONG64', 'PVOID*'], ['ThreadHandle', 'Flags', 'HardwareCounters', 'PerformanceDataHandle'], 'NTSTATUS'), 'RtlDisableThreadProfiling': (1, ['PVOID'], ['PerformanceDataHandle'], 'NTSTATUS'), 'RtlQueryThreadProfiling': (2, ['HANDLE', 'PBOOLEAN'], ['ThreadHandle', 'Enabled'], 'NTSTATUS'), 'RtlReadThreadProfilingData': (3, ['HANDLE', 'ULONG', 'PPERFORMANCE_DATA'], ['PerformanceDataHandle', 'Flags', 'PerformanceData'], 'NTSTATUS'), 'RtlComputePrivatizedDllName_U': (3, ['PUNICODE_STRING', 'PUNICODE_STRING', 'PUNICODE_STRING'], ['DllName', 'RealName', 'LocalName'], 'NTSTATUS'), 'RtlFreeRangeList': (1, ['PRTL_RANGE_LIST'], ['RangeList'], 'VOID'), 'RtlpNtOpenKey': (4, ['HANDLE', 'ACCESS_MASK', 'POBJECT_ATTRIBUTES', 'ULONG'], ['KeyHandle', 'DesiredAccess', 'ObjectAttributes', 'Unused'], 'NTSTATUS'), 'RtlRegisterSecureMemoryCacheCallback': (1, ['PRTL_SECURE_MEMORY_CACHE_CALLBACK'], ['Callback'], 'NTSTATUS'), 'RtlFlushSecureMemoryCache': (2, ['PVOID', 'SIZE_T'], ['MemoryCache', 'MemoryLength'], 'BOOLEAN'), 'RtlCaptureStackBackTrace': (4, ['ULONG', 'ULONG', 'PVOID*', 'PULONG'], ['FramesToSkip', 'FramesToCapture', 'BackTrace', 'BackTraceHash'], 'USHORT'), 'RtlAssert': (4, ['PVOID', 'PVOID', 'ULONG', 'PCHAR'], ['FailedAssertion', 'FileName', 'LineNumber', 'Message'], 'VOID'), 'RtlCaptureContext': (1, ['PCONTEXT'], ['ContextRecord'], 'VOID'), 'RtlDebugCreateHeap': (6, ['HEAP_FLAGS_ULONG', 'PVOID', 'SIZE_T', 'SIZE_T', 'PVOID', 'PRTL_HEAP_PARAMETERS'], ['Flags', 'BaseAddress', 'SizeToReserve', 'SizeToCommit', 'Lock', 'Parameters'], 'PVOID'), 'RtlGetCallersAddress': (2, ['PVOID*', 'PVOID*'], ['CallersAddress', 'CallersCaller'], 'PVOID'), 'RtlCmDecodeMemIoResource': (2, ['PCM_PARTIAL_RESOURCE_DESCRIPTOR', 'PULONGLONG'], ['Descriptor', 'Start'], 'ULONGLONG'), 'RtlCmEncodeMemIoResource': (4, ['PCM_PARTIAL_RESOURCE_DESCRIPTOR', 'UCHAR', 'ULONGLONG', 'ULONGLONG'], ['Descriptor', 'Type', 'Length', 'Start'], 'NTSTATUS'), 'RtlEnlargedIntegerMultiply': (2, ['LONG', 'LONG'], ['Multiplicand', 'Multiplier'], 'LARGE_INTEGER'), 'RtlEnlargedUnsignedDivide': (3, ['ULARGE_INTEGER', 'ULONG', 'PULONG'], ['Dividend', 'Divisor', 'Remainder'], 'ULONG'), 'RtlEnlargedUnsignedMultiply': (2, ['ULONG', 'ULONG'], ['Multiplicand', 'Multiplier'], 'LARGE_INTEGER'), 'RtlExtendedMagicDivide': (3, ['LARGE_INTEGER', 'LARGE_INTEGER', 'CCHAR'], ['Dividend', 'MagicDivisor', 'ShiftCount'], 'LARGE_INTEGER'), 'RtlFillMemory': (3, ['VOID*', 'SIZE_T', 'UCHAR'], ['Destination', 'Length', 'Fill'], 'VOID'), 'RtlGetEnabledExtendedFeatures': (1, ['XSTATE_MASK_ULONG64'], ['FeatureMask'], '[XSTATE_MASK_ULONG64]'), 'RtlIoDecodeMemIoResource': (4, ['PIO_RESOURCE_DESCRIPTOR', 'PULONGLONG', 'PULONGLONG', 'PULONGLONG'], ['Descriptor', 'Alignment', 'MinimumAddress', 'MaximumAddress'], 'ULONGLONG'), 'RtlIoEncodeMemIoResource': (6, ['PIO_RESOURCE_DESCRIPTOR', 'UCHAR', 'ULONGLONG', 'ULONGLONG', 'ULONGLONG', 'ULONGLONG'], ['Descriptor', 'Type', 'Length', 'Alignment', 'MinimumAddress', 'MaximumAddress'], 'NTSTATUS'), 'RtlUlongByteSwap': (1, ['ULONG'], ['Source'], 'ULONG'), 'RtlUlonglongByteSwap': (1, ['ULONGLONG'], ['Source'], 'ULONGLONG'), 'RtlUshortByteSwap': (1, ['USHORT'], ['Source'], 'USHORT'), 'RtlGetCurrentProcessorNumber': (0, [], [], 'ULONG'), 'RtlComputeCrc32': (3, ['USHORT', 'PUCHAR', 'ULONG'], ['PartialCrc', 'Buffer', 'Length'], 'ULONG'), 'RtlEncodePointer': (1, ['PVOID'], ['Pointer'], 'PVOID'), 'RtlDecodePointer': (1, ['PVOID'], ['Pointer'], 'PVOID'), 'RtlEncodeSystemPointer': (1, ['PVOID'], ['Pointer'], 'PVOID'), 'RtlDecodeSystemPointer': (1, ['PVOID'], ['Pointer'], 'PVOID'), 'RtlIsThreadWithinLoaderCallout': (0, [], [], 'BOOLEAN'), 'RtlQueryElevationFlags': (1, ['ELEVATIONFLAGS*'], ['pFlags'], 'NTSTATUS'), 'RtlRegisterThreadWithCsrss': (0, [], [], 'NTSTATUS'), 'RtlLockModuleSection': (1, ['PVOID'], ['Address'], 'NTSTATUS'), 'RtlUnlockModuleSection': (1, ['PVOID'], ['Address'], 'NTSTATUS'), 'RtlGetUnloadEventTrace': (0, [], [], 'RTL_UNLOAD_EVENT_TRACE [RTL_UNLOAD_EVENT_TRACE_NUMBER]'), 'RtlGetUnloadEventTraceEx': (3, ['PULONG*', 'PULONG*', 'PVOID*'], ['ElementSize', 'ElementCount', 'EventTrace'], 'VOID'), 'RtlQueryPerformanceCounter': (1, ['PLARGE_INTEGER'], ['PerformanceCounter'], 'LOGICAL'), 'RtlQueryPerformanceFrequency': (1, ['PLARGE_INTEGER'], ['PerformanceFrequency'], 'LOGICAL'), 'RtlEqualPrefixSid': (2, ['PSID', 'PSID'], ['Sid1', 'Sid2'], 'BOOLEAN'), 'RtlConvertLongToLargeInteger': (1, ['LONG'], ['SignedInteger'], 'LARGE_INTEGER'), 'RtlConvertUlongToLargeInteger': (1, ['ULONG'], ['UnsignedInteger'], 'LARGE_INTEGER'), 'RtlLargeIntegerAdd': (2, ['LARGE_INTEGER', 'LARGE_INTEGER'], ['Addend1', 'Addend2'], 'LARGE_INTEGER'), 'RtlLargeIntegerArithmeticShift': (2, ['LARGE_INTEGER', 'CCHAR'], ['LargeInteger', 'ShiftCount'], 'LARGE_INTEGER'), 'RtlLargeIntegerDivide': (3, ['LARGE_INTEGER', 'LARGE_INTEGER', 'PLARGE_INTEGER'], ['Dividend', 'Divisor', 'Remainder'], 'LARGE_INTEGER'), 'RtlLargeIntegerNegate': (1, ['LARGE_INTEGER'], ['Subtrahend'], 'LARGE_INTEGER'), 'RtlLargeIntegerShiftLeft': (2, ['LARGE_INTEGER', 'CCHAR'], ['LargeInteger', 'ShiftCount'], 'LARGE_INTEGER'), 'RtlLargeIntegerShiftRight': (2, ['LARGE_INTEGER', 'CCHAR'], ['LargeInteger', 'ShiftCount'], 'LARGE_INTEGER'), 'RtlLargeIntegerSubtract': (2, ['LARGE_INTEGER', 'LARGE_INTEGER'], ['Minuend', 'Subtrahend'], 'LARGE_INTEGER'), 'RtlLargeIntegerToChar': (4, ['PLARGE_INTEGER', 'ULONG', 'ULONG', 'PCHAR'], ['Value', 'Base', 'Length', 'String'], 'NTSTATUS'), 'RtlActivateActivationContext': (3, ['ULONG', 'HANDLE', 'PULONG_PTR'], ['Unknown', 'Handle', 'Cookie'], 'NTSTATUS'), 'RtlAddRefActivationContext': (1, ['PVOID'], ['Context'], 'VOID'), 'RtlAllocateActivationContextStack': (1, ['PVOID*'], ['Context'], 'NTSTATUS'), 'RtlCreateActivationContext': (6, ['DWORD', 'PVOID', 'ULONG', 'PVOID', 'PVOID', 'PHANDLE'], ['dwFlags', 'ActivationContextData', 'ExtraBytes', 'NotificationRoutine', 'NotificationContext', 'ActCtx'], 'NTSTATUS'), 'RtlDeactivateActivationContext': (2, ['DWORD', 'ULONG_PTR'], ['dwFlags', 'ulCookie'], 'LONG'), 'RtlFindActivationContextSectionString': (5, ['FIND_ACTCTX_SECTION_FLAGS', 'CONST GUID*', 'ACTIVATION_CONTEXT_SECTION', 'PUNICODE_STRING', 'PVOID'], ['dwFlags', 'ExtensionGuid', 'SectionType', 'SectionName', 'ReturnedData'], 'NTSTATUS'), 'RtlGetActiveActivationContext': (1, ['PVOID*'], ['Context'], 'NTSTATUS'), 'RtlQueryInformationActivationContext': (7, ['DWORD', 'PVOID', 'PVOID', 'ULONG', 'PVOID', 'SIZE_T', 'SIZE_T*'], ['dwFlags', 'Context', 'pvSubInstance', 'ulInfoClass', 'pvBuffer', 'cbBuffer', 'pcbWrittenOrRequired'], 'NTSTATUS'), 'RtlReleaseActivationContext': (1, ['PVOID*'], ['Context'], 'VOID'), 'RtlZombifyActivationContext': (1, ['PVOID'], ['Context'], 'NTSTATUS'), 'RtlRunOnceBeginInitialize': (3, ['PRTL_RUN_ONCE', 'RTL_RUN_ONCE_FLAGS', 'PVOID*'], ['RunOnce', 'Flags', 'Context'], 'NTSTATUS'), 'RtlRunOnceComplete': (3, ['PRTL_RUN_ONCE', 'RTL_RUN_ONCE_FLAGS', 'PVOID'], ['RunOnce', 'Flags', 'Context'], 'NTSTATUS'), 'RtlRunOnceExecuteOnce': (4, ['PRTL_RUN_ONCE', 'PRTL_RUN_ONCE_INIT_FN', 'PVOID', 'PVOID*'], ['RunOnce', 'InitFn', 'Parameter', 'Context'], 'NTSTATUS'), 'RtlRunOnceInitialize': (1, ['PRTL_RUN_ONCE'], ['RunOnce'], 'VOID')}

dict5_kernel32 = {'CheckRemoteDebuggerPresent': (2, ['PROCESSHANDLE', 'PBOOL'], ['hProcess', 'pbDebuggerPresent'], 'BOOL'), 'ContinueDebugEvent': (3, ['DWORD', 'DWORD', 'CONTINUESTATUSFLAG'], ['dwProcessId', 'dwThreadId', 'dwContinueStatus'], 'BOOL'), 'CopyExtendedContext': (3, ['PCONTEXT_EX', 'DWORD', 'PCONTEXT_EX'], ['Destination', 'ContextFlags', 'Source'], 'BOOL'), 'DebugActiveProcess': (1, ['DWORD'], ['dwProcessId'], 'BOOL'), 'DebugActiveProcessStop': (1, ['DWORD'], ['dwProcessId'], 'BOOL'), 'DebugBreak': (0, [], [], 'VOID'), 'DebugBreakProcess': (1, ['HANDLE'], ['Process'], 'BOOL'), 'DebugSetProcessKillOnExit': (1, ['BOOL'], ['KillOnExit'], 'BOOL'), 'FatalExit': (1, ['INT'], ['ExitCode'], 'VOID'), 'FlushInstructionCache': (3, ['PROCESSHANDLE', 'LPCVOID', 'SIZE_T'], ['hProcess', 'lpBaseAddress', 'dwSize'], 'BOOL'), 'GetEnabledExtendedFeatures': (1, ['DWORD64'], ['FeatureMask'], 'DWORD64'), 'GetExtendedContextLength': (2, ['DWORD', 'PDWORD'], ['ContextFlags', 'ContextLength'], 'BOOL'), 'GetExtendedFeaturesMask': (1, ['PCONTEXT_EX'], ['ContextEx'], 'DWORD64'), 'GetThreadContext': (2, ['THREADHANDLE', 'LPCONTEXT'], ['hThread', 'lpContext'], 'BOOL'), 'GetThreadSelectorEntry': (3, ['THREADHANDLE', 'DWORD', 'LPLDT_ENTRY'], ['hThread', 'dwSelector', 'lpSelectorEntry'], 'BOOL'), 'InitializeExtendedContext': (3, ['PVOID', 'DWORD', 'PCONTEXT_EX*'], ['Context', 'ContextFlags', 'ContextEx'], 'BOOL'), 'IsDebuggerPresent': (0, [], [], 'BOOL'), 'LocateExtendedFeature': (3, ['PCONTEXT_EX', 'DWORD', 'PDWORD'], ['ContextEx', 'FeatureId', 'Length'], 'PVOID'), 'LocateLegacyContext': (2, ['PCONTEXT_EX', 'PDWORD'], ['ContextEx', 'Length'], 'PCONTEXT'), 'OutputDebugString': (1, ['LPCTSTR'], ['lpOutputString'], 'void'), 'ReadProcessMemory': (5, ['PROCESSHANDLE', 'LPCVOID', 'LPVOID', 'SIZE_T', 'SIZE_T*'], ['hProcess', 'lpBaseAddress', 'lpBuffer', 'nSize', 'lpNumberOfBytesRead'], 'BOOL'), 'SetExtendedFeaturesMask': (2, ['PCONTEXT_EX', 'DWORD64'], ['ContextEx', 'FeatureMask'], 'VOID'), 'SetThreadContext': (2, ['THREADHANDLE', 'CONST CONTEXT*'], ['hThread', 'lpContext'], 'BOOL'), 'WaitForDebugEvent': (2, ['LPDEBUG_EVENT', 'WAITTIMEOUT'], ['lpDebugEvent', 'dwMilliseconds'], 'BOOL'), 'Wow64GetThreadContext': (2, ['THREADHANDLE', 'PWOW64_CONTEXT'], ['hThread', 'lpContext'], 'BOOL'), 'Wow64GetThreadSelectorEntry': (3, ['THREADHANDLE', 'DWORD', 'PWOW64_LDT_ENTRY'], ['hThread', 'dwSelector', 'lpSelectorEntry'], 'BOOL'), 'Wow64SetThreadContext': (2, ['THREADHANDLE', 'CONST WOW64_CONTEXT*'], ['hThread', 'lpContext'], 'BOOL'), 'WriteProcessMemory': (5, ['PROCESSHANDLE', 'LPVOID', 'LPCVOID', 'SIZE_T', 'SIZE_T*'], ['hProcess', 'lpBaseAddress', 'lpBuffer', 'nSize', 'lpNumberOfBytesWritten'], 'BOOL'), 'AddDllDirectory': (1, ['PCWSTR'], ['NewDirectory'], 'DLL_DIRECTORY_COOKIE'), 'DisableThreadLibraryCalls': (1, ['HMODULE'], ['hModule'], 'BOOL'), 'FreeLibrary': (1, ['HMODULE'], ['hModule'], 'BOOL'), 'FreeLibraryAndExitThread': (2, ['HMODULE', 'DWORD'], ['hModule', 'dwExitCode'], 'VOID'), 'GetDllDirectory': (2, ['DWORD', 'LPTSTR'], ['nBufferLength', 'lpBuffer'], 'DWORD'), 'GetModuleFileName': (3, ['HMODULE', 'LPTSTR', 'DWORD'], ['hModule', 'lpFilename', 'nSize'], 'DWORD'), 'GetModuleHandle': (1, ['LPCTSTR'], ['lpModuleName'], 'HMODULE'), 'GetModuleHandleEx': (3, ['GETMODULEHANDLEEXFLAGS', 'LPCTSTR', 'HMODULE*'], ['dwFlags', 'lpModuleName', 'phModule'], 'BOOL'), 'GetProcAddress': (2, ['HMODULE', 'LPCSTR'], ['hModule', 'lpProcName'], 'FARPROC'), 'LoadLibrary': (1, ['LPCTSTR'], ['lpFileName'], 'HMODULE'), 'LoadLibraryEx': (3, ['LPCTSTR', 'HANDLE', 'LOADLIBRARYEXFLAGS'], ['lpFileName', 'hFile', 'dwFlags'], 'HMODULE'), 'LoadModule': (2, ['LPCSTR', 'LPVOID'], ['lpModuleName', 'lpParameterBlock'], 'DWORD'), 'LoadPackagedLibrary': (2, ['LPCWSTR', 'DWORD'], ['lpwLibFileName', 'Reserved'], 'HMODULE'), 'RemoveDllDirectory': (1, ['DLL_DIRECTORY_COOKIE'], ['Cookie'], 'BOOL'), 'SetDefaultDllDirectories': (1, ['LOAD_LIBRARY_SEARCH_FLAGS'], ['DirectoryFlags'], 'BOOL'), 'SetDllDirectory': (1, ['LPCTSTR'], ['lpPathName'], 'BOOL'), 'CreateToolhelp32Snapshot': (2, ['CREATETOOLHELP32SNAPSHOTFLAGS', 'DWORD'], ['dwFlags', 'th32ProcessID'], '[FILE_HANDLE]'), 'Heap32First': (3, ['LPHEAPENTRY32', 'DWORD', 'ULONG_PTR'], ['lphe', 'th32ProcessID', 'th32HeapID'], 'BOOL'), 'Heap32ListFirst': (2, ['HANDLE', 'LPHEAPLIST32'], ['hSnapshot', 'lphl'], 'BOOL'), 'Heap32ListNext': (2, ['HANDLE', 'LPHEAPLIST32'], ['hSnapshot', 'lphl'], 'BOOL'), 'Heap32Next': (1, ['LPHEAPENTRY32'], ['lphe'], 'BOOL'), 'Module32First': (2, ['HANDLE', 'LPMODULEENTRY32'], ['hSnapshot', 'lpme'], 'BOOL'), 'Module32Next': (2, ['HANDLE', 'LPMODULEENTRY32'], ['hSnapshot', 'lpme'], 'BOOL'), 'Process32First': (2, ['HANDLE', 'LPPROCESSENTRY32'], ['hSnapshot', 'lppe'], 'BOOL'), 'Process32Next': (2, ['HANDLE', 'LPPROCESSENTRY32'], ['hSnapshot', 'lppe'], 'BOOL'), 'Thread32First': (2, ['HANDLE', 'LPTHREADENTRY32'], ['hSnapshot', 'lpte'], 'BOOL'), 'Thread32Next': (2, ['HANDLE', 'LPTHREADENTRY32'], ['hSnapshot', 'lpte'], 'BOOL'), 'Toolhelp32ReadProcessMemory': (5, ['DWORD', 'LPCVOID', 'LPVOID', 'SIZE_T', 'SIZE_T'], ['th32ProcessID', 'lpBaseAddress', 'lpBuffer', 'cbRead', 'lpNumberOfBytesRead'], 'BOOL'), 'ApplicationRecoveryFinished': (1, ['BOOL'], ['bSuccess'], 'VOID'), 'ApplicationRecoveryInProgress': (1, ['PBOOL'], ['pbCanceled'], 'HRESULT'), 'GetApplicationRecoveryCallback': (5, ['PROCESSHANDLE', 'APPLICATION_RECOVERY_CALLBACK*', 'PVOID*', 'DWORD', 'DWORD'], ['hProcess', 'pRecoveryCallback', 'ppvParameter', 'dwPingInterval', 'dwFlags'], 'HRESULT'), 'GetApplicationRestartSettings': (4, ['PROCESSHANDLE', 'PWSTR', 'PDWORD', 'PDWORD'], ['hProcess', 'pwzCommandline', 'pcchSize', 'pdwFlags'], 'HRESULT'), 'RegisterApplicationRecoveryCallback': (4, ['APPLICATION_RECOVERY_CALLBACK', 'PVOID', 'DWORD', 'APPLICATIONRESTARTFLAGS'], ['pRecoveryCallback', 'pvParameter', 'dwPingInterval', 'dwFlags'], 'HRESULT'), 'RegisterApplicationRestart': (2, ['PCWSTR', 'APPLICATIONRESTARTFLAGS'], ['pwzCommandline', 'dwFlags'], 'HRESULT'), 'UnregisterApplicationRecoveryCallback': (0, [], [], 'HRESULT'), 'UnregisterApplicationRestart': (0, [], [], 'HRESULT'), 'GetPrivateProfileInt': (4, ['LPCTSTR', 'LPCTSTR', 'INT', 'LPCTSTR'], ['lpAppName', 'lpKeyName', 'nDefault', 'lpFileName'], 'UINT'), 'GetPrivateProfileSection': (4, ['LPCTSTR', 'LPTSTR', 'DWORD', 'LPCTSTR'], ['lpAppName', 'lpReturnedString', 'nSize', 'lpFileName'], 'DWORD'), 'GetPrivateProfileSectionNames': (3, ['LPTSTR', 'DWORD', 'LPCTSTR'], ['lpszReturnBuffer', 'nSize', 'lpFileName'], 'DWORD'), 'GetPrivateProfileString': (6, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPTSTR', 'DWORD', 'LPCTSTR'], ['lpAppName', 'lpKeyName', 'lpDefault', 'lpReturnedString', 'nSize', 'lpFileName'], 'DWORD'), 'GetPrivateProfileStruct': (5, ['LPCTSTR', 'LPCTSTR', 'LPVOID', 'UINT', 'LPCTSTR'], ['lpszSection', 'lpszKey', 'lpStruct', 'uSizeStruct', 'szFile'], 'BOOL'), 'GetProfileInt': (3, ['LPCTSTR', 'LPCTSTR', 'INT'], ['lpAppName', 'lpKeyName', 'nDefault'], 'UINT'), 'GetProfileSection': (3, ['LPCTSTR', 'LPTSTR', 'DWORD'], ['lpAppName', 'lpReturnedString', 'nSize'], 'DWORD'), 'GetProfileString': (5, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPTSTR', 'DWORD'], ['lpAppName', 'lpKeyName', 'lpDefault', 'lpReturnedString', 'nSize'], 'DWORD'), 'WritePrivateProfileSection': (3, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR'], ['lpAppName', 'lpString', 'lpFileName'], 'BOOL'), 'WritePrivateProfileString': (4, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR'], ['lpAppName', 'lpKeyName', 'lpString', 'lpFileName'], 'BOOL'), 'WritePrivateProfileStruct': (5, ['LPCTSTR', 'LPCTSTR', 'LPVOID', 'UINT', 'LPCTSTR'], ['lpszSection', 'lpszKey', 'lpStruct', 'uSizeStruct', 'szFile'], 'BOOL'), 'WriteProfileSection': (2, ['LPCTSTR', 'LPCTSTR'], ['lpAppName', 'lpString'], 'BOOL'), 'WriteProfileString': (3, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR'], ['lpAppName', 'lpKeyName', 'lpString'], 'BOOL'), '_lopen': (2, ['LPCSTR', 'INT'], ['lpPathName', 'iReadWrite'], 'HFILE'), '_lcreat': (2, ['LPCSTR', 'LCREATATTRIBUTE'], ['lpPathName', 'iAttribute'], 'HFILE'), '_lread': (3, ['HFILE', 'LPVOID', 'UINT'], ['hFile', 'lpBuffer', 'uBytes'], 'UINT'), '_lwrite': (3, ['HFILE', 'LPVOID', 'UINT'], ['hFile', 'lpBuffer', 'uBytes'], 'UINT'), '_hread': (3, ['HFILE', 'LPVOID', 'LONG'], ['hFile', 'lpBuffer', 'lBytes'], 'long'), '_hwrite': (3, ['HFILE', 'LPVOID', 'LONG'], ['hFile', 'lpBuffer', 'lBytes'], 'long'), '_lclose': (1, ['HFILE'], ['hFile'], 'HFILE'), '_llseek': (3, ['HFILE', 'LONG', 'SEEK_TYPE'], ['hFile', 'lOffset', 'iOrigin'], 'LONG'), 'AreFileApisANSI': (0, [], [], 'BOOL'), 'CheckNameLegalDOS8Dot3': (5, ['LPCTSTR', 'LPSTR', 'DWORD', 'PBOOL', 'PBOOL'], ['lpName', 'lpOemName', 'OemNameSize', 'pbNameContainsSpaces', 'pbNameLegal'], 'BOOL'), 'CopyFile': (3, ['LPCTSTR', 'LPCTSTR', 'BOOL'], ['lpExistingFileName', 'lpNewFileName', 'bFailIfExists'], 'BOOL'), 'CopyFile2': (3, ['PCWSTR', 'PCWSTR', 'COPYFILE2_EXTENDED_PARAMETERS*'], ['pwszExistingFileName', 'pwszNewFileName', 'pExtendedParameters'], 'HRESULT'), 'CopyFileEx': (6, ['LPCTSTR', 'LPCTSTR', 'LPPROGRESS_ROUTINE', 'LPVOID', 'LPBOOL', 'COPY_FILE_FLAGS'], ['lpExistingFileName', 'lpNewFileName', 'lpProgressRoutine', 'lpData', 'pbCancel', 'dwCopyFlags'], 'BOOL'), 'CopyFileTransacted': (7, ['LPCTSTR', 'LPCTSTR', 'LPPROGRESS_ROUTINE', 'LPVOID', 'LPBOOL', 'COPY_FILE_FLAGS', 'HANDLE'], ['lpExistingFileName', 'lpNewFileName', 'lpProgressRoutine', 'lpData', 'pbCancel', 'dwCopyFlags', 'hTransaction'], 'BOOL'), 'CreateFile': (7, ['LPCTSTR', 'FILE_ACCESS_MASK', 'FILE_SHARE_MODE', 'LPSECURITY_ATTRIBUTES', 'CREATIONDISPOSITION', 'FLAGSANDATTRIBUTES', 'HANDLE'], ['lpFileName', 'dwDesiredAccess', 'dwShareMode', 'lpSecurityAttributes', 'dwCreationDisposition', 'dwFlagsAndAttributes', 'hTemplateFile'], '[FILE_HANDLE]'), 'CreateFile2': (5, ['LPCWSTR', 'FILE_ACCESS_MASK', 'FILE_SHARE_MODE', 'CREATIONDISPOSITION', 'LPCREATEFILE2_EXTENDED_PARAMETERS'], ['lpFileName', 'dwDesiredAccess', 'dwShareMode', 'dwCreationDisposition', 'pCreateExParams'], 'HANDLE'), 'CreateFileTransacted': (10, ['LPCTSTR', 'FILE_ACCESS_MASK', 'FILE_SHARE_MODE', 'LPSECURITY_ATTRIBUTES', 'CREATIONDISPOSITION', 'FLAGSANDATTRIBUTES', 'HANDLE', 'HANDLE', 'PUSHORT', 'PVOID'], ['lpFileName', 'dwDesiredAccess', 'dwShareMode', 'lpSecurityAttributes', 'dwCreationDisposition', 'dwFlagsAndAttributes', 'hTemplateFile', 'hTransaction', 'pusMiniVersion', 'pExtendedParameter'], '[FILE_HANDLE]'), 'CreateHardLink': (3, ['LPCTSTR', 'LPCTSTR', 'LPSECURITY_ATTRIBUTES'], ['lpFileName', 'lpExistingFileName', 'lpSecurityAttributes'], 'BOOL'), 'CreateHardLinkTransacted': (4, ['LPCTSTR', 'LPCTSTR', 'LPSECURITY_ATTRIBUTES', 'HANDLE'], ['lpFileName', 'lpExistingFileName', 'lpSecurityAttributes', 'hTransaction'], 'BOOL'), 'CreateSymbolicLink': (3, ['LPTSTR', 'LPTSTR', 'CREATESYMBOLICLINKFLAGS'], ['lpSymlinkFileName', 'lpTargetFileName', 'dwFlags'], 'BOOLEAN'), 'CreateSymbolicLinkTransacted': (4, ['LPTSTR', 'LPTSTR', 'CREATESYMBOLICLINKFLAGS', 'HANDLE'], ['lpSymlinkFileName', 'lpTargetFileName', 'dwFlags', 'hTransaction'], 'BOOLEAN'), 'DeleteFile': (1, ['LPCTSTR'], ['lpFileName'], 'BOOL'), 'DeleteFileTransacted': (2, ['LPCTSTR', 'HANDLE'], ['lpFileName', 'hTransaction'], 'BOOL'), 'FindClose': (1, ['HANDLE'], ['hFindFile'], 'BOOL'), 'FindFirstFile': (2, ['LPCTSTR', 'LPWIN32_FIND_DATA'], ['lpFileName', 'lpFindFileData'], '[FILE_HANDLE]'), 'FindFirstFileEx': (6, ['LPCTSTR', 'FINDEX_INFO_LEVELS', 'LPVOID', 'FINDEX_SEARCH_OPS', 'LPVOID', 'FINDFIRSTFILEEXFLAGS'], ['lpFileName', 'fInfoLevelId', 'lpFindFileData', 'fSearchOp', 'lpSearchFilter', 'dwAdditionalFlags'], '[FILE_HANDLE]'), 'FindFirstFileNameTransactedW': (5, ['LPCWSTR', 'DWORD', 'LPDWORD', 'PWCHAR', 'HANDLE'], ['lpFileName', 'dwFlags', 'StringLength', 'LinkName', 'hTransaction'], '[FILE_HANDLE]'), 'FindFirstFileNameW': (4, ['LPCWSTR', 'DWORD', 'LPDWORD', 'PWCHAR'], ['lpFileName', 'dwFlags', 'StringLength', 'LinkName'], '[FILE_HANDLE]'), 'FindFirstFileTransacted': (7, ['LPCTSTR', 'FINDEX_INFO_LEVELS', 'LPVOID', 'FINDEX_SEARCH_OPS', 'LPVOID', 'FINDFIRSTFILEEXFLAGS', 'HANDLE'], ['lpFileName', 'fInfoLevelId', 'lpFindFileData', 'fSearchOp', 'lpSearchFilter', 'dwAdditionalFlags', 'hTransaction'], '[FILE_HANDLE]'), 'FindFirstStreamTransactedW': (5, ['LPCWSTR', 'STREAM_INFO_LEVELS', 'LPVOID', 'DWORD', 'HANDLE'], ['lpFileName', 'InfoLevel', 'lpFindStreamData', 'dwFlags', 'hTransaction'], '[FILE_HANDLE]'), 'FindFirstStreamW': (4, ['LPCWSTR', 'STREAM_INFO_LEVELS', 'LPVOID', 'DWORD'], ['lpFileName', 'InfoLevel', 'lpFindStreamData', 'dwFlags'], '[FILE_HANDLE]'), 'FindNextFile': (2, ['HANDLE', 'LPWIN32_FIND_DATA'], ['hFindFile', 'lpFindFileData'], 'BOOL'), 'FindNextFileNameW': (3, ['HANDLE', 'LPDWORD', 'PWCHAR'], ['hFindStream', 'StringLength', 'LinkName'], 'BOOL'), 'FindNextStreamW': (2, ['HANDLE', 'LPVOID'], ['hFindStream', 'lpFindStreamData'], 'BOOL'), 'GetBinaryType': (2, ['LPCTSTR', 'GETBINARYTYPERESULT*'], ['lpApplicationName', 'lpBinaryType'], 'BOOL'), 'GetCompressedFileSize': (2, ['LPCTSTR', 'LPDWORD'], ['lpFileName', 'lpFileSizeHigh'], 'DWORD'), 'GetCompressedFileSizeTransacted': (3, ['LPCTSTR', 'LPDWORD', 'HANDLE'], ['lpFileName', 'lpFileSizeHigh', 'hTransaction'], 'DWORD'), 'GetFileAttributes': (1, ['LPCTSTR'], ['lpFileName'], '[FileAttributes]'), 'GetFileAttributesEx': (3, ['LPCTSTR', 'GET_FILEEX_INFO_LEVELS', 'LPVOID'], ['lpFileName', 'fInfoLevelId', 'lpFileInformation'], 'BOOL'), 'GetFileAttributesTransacted': (4, ['LPCTSTR', 'GET_FILEEX_INFO_LEVELS', 'LPVOID', 'HANDLE'], ['lpFileName', 'fInfoLevelId', 'lpFileInformation', 'hTransaction'], 'BOOL'), 'GetFileBandwidthReservation': (6, ['HANDLE', 'LPDWORD', 'LPDWORD', 'LPBOOL', 'LPDWORD', 'LPDWORD'], ['hFile', 'lpPeriodMilliseconds', 'lpBytesPerPeriod', 'pDiscardable', 'lpTransferSize', 'lpNumOutstandingRequests'], 'BOOL'), 'GetFileInformationByHandle': (2, ['HANDLE', 'LPBY_HANDLE_FILE_INFORMATION'], ['hFile', 'lpFileInformation'], 'BOOL'), 'GetFileInformationByHandleEx': (4, ['HANDLE', 'FILE_INFO_BY_HANDLE_CLASS', 'LPVOID', 'DWORD'], ['hFile', 'FileInformationClass', 'lpFileInformation', 'dwBufferSize'], 'BOOL'), 'GetFileSize': (2, ['HANDLE', 'LPDWORD'], ['hFile', 'lpFileSizeHigh'], 'DWORD'), 'GetFileSizeEx': (2, ['HANDLE', 'PLARGE_INTEGER'], ['hFile', 'lpFileSize'], 'BOOL'), 'GetFileType': (1, ['HANDLE'], ['hFile'], '[FileType]'), 'GetFinalPathNameByHandle': (4, ['HANDLE', 'LPTSTR', 'DWORD', 'GETFINALPATHNAMEBYHANDLEFLAGS'], ['hFile', 'lpszFilePath', 'cchFilePath', 'dwFlags'], 'DWORD'), 'GetFullPathName': (4, ['LPCTSTR', 'DWORD', 'LPTSTR', 'LPTSTR*'], ['lpFileName', 'nBufferLength', 'lpBuffer', 'lpFilePart'], 'DWORD'), 'GetFullPathNameTransacted': (5, ['LPCTSTR', 'DWORD', 'LPTSTR', 'LPTSTR*', 'HANDLE'], ['lpFileName', 'nBufferLength', 'lpBuffer', 'lpFilePart', 'hTransaction'], 'DWORD'), 'GetLongPathName': (3, ['LPCTSTR', 'LPTSTR', 'DWORD'], ['lpszShortPath', 'lpszLongPath', 'cchBuffer'], 'DWORD'), 'GetLongPathNameTransacted': (4, ['LPCTSTR', 'LPTSTR', 'DWORD', 'HANDLE'], ['lpszShortPath', 'lpszLongPath', 'cchBuffer', 'hTransaction'], 'DWORD'), 'GetShortPathName': (3, ['LPCTSTR', 'LPTSTR', 'DWORD'], ['lpszLongPath', 'lpszShortPath', 'cchBuffer'], 'DWORD'), 'GetTempFileName': (4, ['LPCTSTR', 'LPCTSTR', 'UINT', 'LPTSTR'], ['lpPathName', 'lpPrefixString', 'uUnique', 'lpTempFileName'], 'UINT'), 'GetTempPath': (2, ['DWORD', 'LPTSTR'], ['nBufferLength', 'lpBuffer'], 'DWORD'), 'MoveFile': (2, ['LPCTSTR', 'LPCTSTR'], ['lpExistingFileName', 'lpNewFileName'], 'BOOL'), 'MoveFileEx': (3, ['LPCTSTR', 'LPCTSTR', 'MOVEFILEFLAGS'], ['lpExistingFileName', 'lpNewFileName', 'dwFlags'], 'BOOL'), 'MoveFileTransacted': (6, ['LPCTSTR', 'LPCTSTR', 'LPPROGRESS_ROUTINE', 'LPVOID', 'DWORD', 'HANDLE'], ['lpExistingFileName', 'lpNewFileName', 'lpProgressRoutine', 'lpData', 'dwFlags', 'hTransaction'], 'BOOL'), 'MoveFileWithProgress': (5, ['LPCTSTR', 'LPCTSTR', 'LPPROGRESS_ROUTINE', 'LPVOID', 'DWORD'], ['lpExistingFileName', 'lpNewFileName', 'lpProgressRoutine', 'lpData', 'dwFlags'], 'BOOL'), 'OpenFile': (3, ['LPCSTR', 'LPOFSTRUCT', 'OPENFILEFLAGS'], ['lpFileName', 'lpReOpenBuff', 'uStyle'], 'HFILE'), 'OpenFileById': (6, ['HANDLE', 'LPFILE_ID_DESCRIPTOR', 'FILE_ACCESS_MASK', 'FILE_SHARE_MODE', 'LPSECURITY_ATTRIBUTES', 'FLAGSANDATTRIBUTES'], ['hFile', 'lpFileID', 'dwDesiredAccess', 'dwShareMode', 'lpSecurityAttributes', 'dwFlags'], '[FILE_HANDLE]'), 'ReOpenFile': (4, ['HANDLE', 'FILE_ACCESS_MASK', 'FILE_SHARE_MODE', 'FLAGSANDATTRIBUTES'], ['hOriginalFile', 'dwDesiredAccess', 'dwShareMode', 'dwFlags'], '[FILE_HANDLE]'), 'ReplaceFile': (6, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'DWORD', 'LPVOID', 'LPVOID'], ['lpReplacedFileName', 'lpReplacementFileName', 'lpBackupFileName', 'dwReplaceFlags', 'lpExclude', 'lpReserved'], 'BOOL'), 'SearchPath': (6, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'DWORD', 'LPTSTR', 'LPTSTR*'], ['lpPath', 'lpFileName', 'lpExtension', 'nBufferLength', 'lpBuffer', 'lpFilePart'], 'DWORD'), 'SetFileApisToANSI': (0, [], [], 'void'), 'SetFileApisToOEM': (0, [], [], 'void'), 'SetFileAttributes': (2, ['LPCTSTR', 'FILEATTRIBUTES'], ['lpFileName', 'dwFileAttributes'], 'BOOL'), 'SetFileAttributesTransacted': (3, ['LPCTSTR', 'FILEATTRIBUTES', 'HANDLE'], ['lpFileName', 'dwFileAttributes', 'hTransaction'], 'BOOL'), 'SetFileBandwidthReservation': (6, ['HANDLE', 'DWORD', 'DWORD', 'BOOL', 'LPDWORD', 'LPDWORD'], ['hFile', 'nPeriodMilliseconds', 'nBytesPerPeriod', 'bDiscardable', 'lpTransferSize', 'lpNumOutstandingRequests'], 'BOOL'), 'SetFileInformationByHandle': (4, ['HANDLE', 'FILE_INFO_BY_HANDLE_CLASS', 'LPVOID', 'DWORD'], ['hFile', 'FileInformationClass', 'lpFileInformation', 'dwBufferSize'], 'BOOL'), 'SetFileShortName': (2, ['HANDLE', 'LPCTSTR'], ['hFile', 'lpShortName'], 'BOOL'), 'SetFileValidData': (2, ['HANDLE', 'LONGLONG'], ['hFile', 'ValidDataLength'], 'BOOL'), 'SetSearchPathMode': (1, ['DWORD'], ['Flags'], 'BOOL'), 'CancelIo': (1, ['HANDLE'], ['hFile'], 'BOOL'), 'CancelIoEx': (2, ['HANDLE', 'LPOVERLAPPED'], ['hFile', 'lpOverlapped'], 'BOOL'), 'CancelSynchronousIo': (1, ['THREADHANDLE'], ['hThread'], 'BOOL'), 'CreateIoCompletionPort': (4, ['HANDLE', 'HANDLE', 'ULONG_PTR', 'DWORD'], ['FileHandle', 'ExistingCompletionPort', 'CompletionKey', 'NumberOfConcurrentThreads'], 'HANDLE'), 'FlushFileBuffers': (1, ['HANDLE'], ['hFile'], 'BOOL'), 'GetQueuedCompletionStatus': (5, ['HANDLE', 'LPDWORD', 'PULONG_PTR', 'LPOVERLAPPED*', 'WAITTIMEOUT'], ['CompletionPort', 'lpNumberOfBytes', 'lpCompletionKey', 'lpOverlapped', 'dwMilliseconds'], 'BOOL'), 'GetQueuedCompletionStatusEx': (6, ['HANDLE', 'LPOVERLAPPED_ENTRY', 'ULONG', 'PULONG', 'WAITTIMEOUT', 'BOOL'], ['CompletionPort', 'lpCompletionPortEntries', 'ulCount', 'ulNumEntriesRemoved', 'dwMilliseconds', 'fAlertable'], 'BOOL'), 'LockFile': (5, ['HANDLE', 'DWORD', 'DWORD', 'DWORD', 'DWORD'], ['hFile', 'dwFileOffsetLow', 'dwFileOffsetHigh', 'nNumberOfBytesToLockLow', 'nNumberOfBytesToLockHigh'], 'BOOL'), 'LockFileEx': (6, ['HANDLE', 'LOCKFILEFLAGS', 'DWORD', 'DWORD', 'DWORD', 'LPOVERLAPPED'], ['hFile', 'dwFlags', 'dwReserved', 'nNumberOfBytesToLockLow', 'nNumberOfBytesToLockHigh', 'lpOverlapped'], 'BOOL'), 'PostQueuedCompletionStatus': (4, ['HANDLE', 'DWORD', 'ULONG_PTR', 'LPOVERLAPPED'], ['CompletionPort', 'dwNumberOfBytesTransferred', 'dwCompletionKey', 'lpOverlapped'], 'BOOL'), 'ReadFile': (5, ['HANDLE', 'LPVOID', 'DWORD', 'LPDWORD', 'LPOVERLAPPED'], ['hFile', 'lpBuffer', 'nNumberOfBytesToRead', 'lpNumberOfBytesRead', 'lpOverlapped'], 'BOOL'), 'ReadFileEx': (5, ['HANDLE', 'LPVOID', 'DWORD', 'LPOVERLAPPED', 'LPOVERLAPPED_COMPLETION_ROUTINE'], ['hFile', 'lpBuffer', 'nNumberOfBytesToRead', 'lpOverlapped', 'lpCompletionRoutine'], 'BOOL'), 'ReadFileScatter': (5, ['HANDLE', 'FILE_SEGMENT_ELEMENT', 'DWORD', 'LPDWORD', 'LPOVERLAPPED'], ['hFile', 'aSegmentArray', 'nNumberOfBytesToRead', 'lpReserved', 'lpOverlapped'], 'BOOL'), 'SetEndOfFile': (1, ['HANDLE'], ['hFile'], 'BOOL'), 'SetFileCompletionNotificationModes': (2, ['HANDLE', 'UCHAR'], ['FileHandle', 'Flags'], 'BOOL'), 'SetFileIoOverlappedRange': (3, ['HANDLE', 'PUCHAR', 'ULONG'], ['FileHandle', 'OverlappedRangeStart', 'Length'], 'BOOL'), 'SetFilePointer': (4, ['HANDLE', 'LONG', 'PLONG', 'MOVEMETHODENUM'], ['hFile', 'lDistanceToMove', 'lpDistanceToMoveHigh', 'dwMoveMethod'], 'DWORD'), 'SetFilePointerEx': (4, ['HANDLE', 'LARGE_INTEGER', 'PLARGE_INTEGER', 'MOVEMETHODENUM'], ['hFile', 'liDistanceToMove', 'lpNewFilePointer', 'dwMoveMethod'], 'BOOL'), 'UnlockFile': (5, ['HANDLE', 'DWORD', 'DWORD', 'DWORD', 'DWORD'], ['hFile', 'dwFileOffsetLow', 'dwFileOffsetHigh', 'nNumberOfBytesToUnlockLow', 'nNumberOfBytesToUnlockHigh'], 'BOOL'), 'UnlockFileEx': (5, ['HANDLE', 'DWORD', 'DWORD', 'DWORD', 'LPOVERLAPPED'], ['hFile', 'dwReserved', 'nNumberOfBytesToUnlockLow', 'nNumberOfBytesToUnlockHigh', 'lpOverlapped'], 'BOOL'), 'WriteFile': (5, ['HANDLE', 'LPCVOID', 'DWORD', 'LPDWORD', 'LPOVERLAPPED'], ['hFile', 'lpBuffer', 'nNumberOfBytesToWrite', 'lpNumberOfBytesWritten', 'lpOverlapped'], 'BOOL'), 'WriteFileEx': (5, ['HANDLE', 'LPCVOID', 'DWORD', 'LPOVERLAPPED', 'LPOVERLAPPED_COMPLETION_ROUTINE'], ['hFile', 'lpBuffer', 'nNumberOfBytesToWrite', 'lpOverlapped', 'lpCompletionRoutine'], 'BOOL'), 'WriteFileGather': (5, ['HANDLE', 'FILE_SEGMENT_ELEMENT', 'DWORD', 'LPDWORD', 'LPOVERLAPPED'], ['hFile', 'aSegmentArray', 'nNumberOfBytesToWrite', 'lpReserved', 'lpOverlapped'], 'BOOL'), 'Wow64DisableWow64FsRedirection': (1, ['PVOID*'], ['OldValue'], 'BOOL'), 'Wow64EnableWow64FsRedirection': (1, ['BOOLEAN'], ['Wow64FsEnableRedirection'], 'BOOLEAN'), 'Wow64RevertWow64FsRedirection': (1, ['PVOID'], ['OldValue'], 'BOOL'), 'AddSecureMemoryCacheCallback': (1, ['PSECURE_MEMORY_CACHE_CALLBACK'], ['pfnCallBack'], 'BOOL'), 'CreateMemoryResourceNotification': (1, ['MEMORY_RESOURCE_NOTIFICATION_TYPE'], ['NotificationType'], 'HANDLE'), 'GetLargePageMinimum': (0, [], [], 'SIZE_T'), 'GetPhysicallyInstalledSystemMemory': (1, ['PULONGLONG'], ['TotalMemoryInKilobytes'], 'BOOL'), 'GetSystemFileCacheSize': (3, ['PSIZE_T', 'PSIZE_T', 'PDWORD'], ['lpMinimumFileCacheSize', 'lpMaximumFileCacheSize', 'lpFlags'], 'BOOL'), 'GetWriteWatch': (6, ['DWORD', 'PVOID', 'SIZE_T', 'PVOID*', 'PULONG_PTR', 'PULONG'], ['dwFlags', 'lpBaseAddress', 'dwRegionSize', 'lpAddresses', 'lpdwCount', 'lpdwGranularity'], 'UINT'), 'GlobalMemoryStatusEx': (1, ['LPMEMORYSTATUSEX'], ['lpBuffer'], 'BOOL'), 'QueryMemoryResourceNotification': (2, ['HANDLE', 'PBOOL'], ['ResourceNotificationHandle', 'ResourceState'], 'BOOL'), 'RemoveSecureMemoryCacheCallback': (1, ['PSECURE_MEMORY_CACHE_CALLBACK'], ['pfnCallBack'], 'BOOL'), 'ResetWriteWatch': (2, ['LPVOID', 'SIZE_T'], ['lpBaseAddress', 'dwRegionSize'], 'UINT'), 'SetSystemFileCacheSize': (3, ['SIZE_T', 'SIZE_T', 'DWORD'], ['MinimumFileCacheSize', 'MaximumFileCacheSize', 'Flags'], 'BOOL'), 'GetProcessDEPPolicy': (3, ['PROCESSHANDLE', 'LPDWORD', 'PBOOL'], ['hProcess', 'lpFlags', 'lpPermanent'], 'BOOL'), 'GetSystemDEPPolicy': (0, [], [], 'DEP_SYSTEM_POLICY_TYPE'), 'SetProcessDEPPolicy': (1, ['DWORD'], ['dwFlags'], 'BOOL'), 'CreateFileMapping': (6, ['FILE_HANDLE', 'LPSECURITY_ATTRIBUTES', 'MEMORYPROTECTION', 'DWORD', 'DWORD', 'LPCTSTR'], ['hFile', 'lpAttributes', 'flProtect', 'dwMaximumSizeHigh', 'dwMaximumSizeLow', 'lpName'], 'HANDLE'), 'CreateFileMappingFromApp': (5, ['HANDLE', 'PSECURITY_ATTRIBUTES', 'ULONG', 'ULONG64', 'PCWSTR'], ['hFile', 'SecurityAttributes', 'PageProtection', 'MaximumSize', 'Name'], 'HANDLE'), 'CreateFileMappingNuma': (7, ['FILE_HANDLE', 'LPSECURITY_ATTRIBUTES', 'MEMORYPROTECTION', 'DWORD', 'DWORD', 'LPCTSTR', 'DWORD'], ['hFile', 'lpFileMappingAttributes', 'flProtect', 'dwMaximumSizeHigh', 'dwMaximumSizeLow', 'lpName', 'nndPreferred'], 'HANDLE'), 'FlushViewOfFile': (2, ['LPCVOID', 'SIZE_T'], ['lpBaseAddress', 'dwNumberOfBytesToFlush'], 'BOOL'), 'MapViewOfFile': (5, ['HANDLE', 'MAPACCESSFLAGS', 'DWORD', 'DWORD', 'SIZE_T'], ['hFileMappingObject', 'dwDesiredAccess', 'dwFileOffsetHigh', 'dwFileOffsetLow', 'dwNumberOfBytesToMap'], 'LPVOID'), 'MapViewOfFileEx': (6, ['HANDLE', 'MAPACCESSFLAGS', 'DWORD', 'DWORD', 'SIZE_T', 'LPVOID'], ['hFileMappingObject', 'dwDesiredAccess', 'dwFileOffsetHigh', 'dwFileOffsetLow', 'dwNumberOfBytesToMap', 'lpBaseAddress'], 'LPVOID'), 'MapViewOfFileExNuma': (7, ['HANDLE', 'DWORD', 'DWORD', 'DWORD', 'SIZE_T', 'LPVOID', 'DWORD'], ['hFileMappingObject', 'dwDesiredAccess', 'dwFileOffsetHigh', 'dwFileOffsetLow', 'dwNumberOfBytesToMap', 'lpBaseAddress', 'nndPreferred'], 'LPVOID'), 'MapViewOfFileFromApp': (4, ['HANDLE', 'ULONG', 'ULONG64', 'SIZE_T'], ['hFileMappingObject', 'DesiredAccess', 'FileOffset', 'NumberOfBytesToMap'], 'PVOID'), 'OpenFileMapping': (3, ['MAPACCESSFLAGS', 'BOOL', 'LPCTSTR'], ['dwDesiredAccess', 'bInheritHandle', 'lpName'], 'HANDLE'), 'UnmapViewOfFile': (1, ['LPCVOID'], ['lpBaseAddress'], 'BOOL'), 'AllocateUserPhysicalPages': (3, ['PROCESSHANDLE', 'PULONG_PTR', 'PULONG_PTR'], ['hProcess', 'NumberOfPages', 'UserPfnArray'], 'BOOL'), 'FreeUserPhysicalPages': (3, ['PROCESSHANDLE', 'PULONG_PTR', 'PULONG_PTR'], ['hProcess', 'NumberOfPages', 'UserPfnArray'], 'BOOL'), 'MapUserPhysicalPages': (3, ['PVOID', 'ULONG_PTR', 'PULONG_PTR'], ['lpAddress', 'NumberOfPages', 'UserPfnArray'], 'BOOL'), 'MapUserPhysicalPagesScatter': (3, ['PVOID*', 'ULONG_PTR', 'PULONG_PTR'], ['VirtualAddresses', 'NumberOfPages', 'PageArray'], 'BOOL'), 'GetProcessHeap': (0, [], [], 'HANDLE'), 'GetProcessHeaps': (2, ['DWORD', 'PHANDLE'], ['NumberOfHeaps', 'ProcessHeaps'], 'DWORD'), 'HeapAlloc': (3, ['HANDLE', 'HEAP_FLAGS', 'SIZE_T'], ['hHeap', 'dwFlags', 'dwBytes'], 'LPVOID'), 'HeapCompact': (2, ['HANDLE', 'HEAP_FLAGS'], ['hHeap', 'dwFlags'], 'SIZE_T'), 'HeapCreate': (3, ['HEAP_FLAGS', 'SIZE_T', 'SIZE_T'], ['flOptions', 'dwInitialSize', 'dwMaximumSize'], 'HANDLE'), 'HeapDestroy': (1, ['HANDLE'], ['hHeap'], 'BOOL'), 'HeapFree': (3, ['HANDLE', 'HEAP_FLAGS', 'LPVOID'], ['hHeap', 'dwFlags', 'lpMem'], 'BOOL'), 'HeapLock': (1, ['HANDLE'], ['hHeap'], 'BOOL'), 'HeapQueryInformation': (5, ['HANDLE', 'HEAP_INFORMATION_CLASS', 'PVOID', 'SIZE_T', 'PSIZE_T'], ['HeapHandle', 'HeapInformationClass', 'HeapInformation', 'HeapInformationLength', 'ReturnLength'], 'BOOL'), 'HeapReAlloc': (4, ['HANDLE', 'HEAP_FLAGS', 'LPVOID', 'SIZE_T'], ['hHeap', 'dwFlags', 'lpMem', 'dwBytes'], 'LPVOID'), 'HeapSetInformation': (4, ['HANDLE', 'HEAP_INFORMATION_CLASS', 'PVOID', 'SIZE_T'], ['HeapHandle', 'HeapInformationClass', 'HeapInformation', 'HeapInformationLength'], 'BOOL'), 'HeapSize': (3, ['HANDLE', 'HEAP_FLAGS', 'LPCVOID'], ['hHeap', 'dwFlags', 'lpMem'], 'SIZE_T'), 'HeapUnlock': (1, ['HANDLE'], ['hHeap'], 'BOOL'), 'HeapValidate': (3, ['HANDLE', 'HEAP_FLAGS', 'LPCVOID'], ['hHeap', 'dwFlags', 'lpMem'], 'BOOL'), 'HeapWalk': (2, ['HANDLE', 'LPPROCESS_HEAP_ENTRY'], ['hHeap', 'lpEntry'], 'BOOL'), 'HeapSummary': (3, ['HANDLE', 'DWORD', 'LPHEAP_SUMMARY'], ['hHeap', 'dwFlags', 'lpSummary'], 'BOOL'), 'PrefetchVirtualMemory': (4, ['HANDLE', 'ULONG_PTR', 'PWIN32_MEMORY_RANGE_ENTRY', 'ULONG'], ['hProcess', 'NumberOfEntries', 'VirtualAddresses', 'Flags'], 'BOOL'), 'VirtualAlloc': (4, ['LPVOID', 'SIZE_T', 'MEMORYALLOCATIONFLAGS', 'MEMORYPROTECTION'], ['lpAddress', 'dwSize', 'flAllocationType', 'flProtect'], 'LPVOID'), 'VirtualAllocEx': (5, ['PROCESSHANDLE', 'LPVOID', 'SIZE_T', 'MEMORYALLOCATIONFLAGS', 'MEMORYPROTECTION'], ['hProcess', 'lpAddress', 'dwSize', 'flAllocationType', 'flProtect'], 'LPVOID'), 'VirtualAllocExNuma': (6, ['PROCESSHANDLE', 'LPVOID', 'SIZE_T', 'DWORD', 'MEMORYPROTECTION', 'DWORD'], ['hProcess', 'lpAddress', 'dwSize', 'flAllocationType', 'flProtect', 'nndPreferred'], 'LPVOID'), 'VirtualFree': (3, ['LPVOID', 'SIZE_T', 'MEMORYALLOCATIONFLAGS'], ['lpAddress', 'dwSize', 'dwFreeType'], 'BOOL'), 'VirtualFreeEx': (4, ['PROCESSHANDLE', 'LPVOID', 'SIZE_T', 'MEMORYALLOCATIONFLAGS'], ['hProcess', 'lpAddress', 'dwSize', 'dwFreeType'], 'BOOL'), 'VirtualLock': (2, ['LPVOID', 'SIZE_T'], ['lpAddress', 'dwSize'], 'BOOL'), 'VirtualProtect': (4, ['LPVOID', 'SIZE_T', 'MEMORYPROTECTION', 'MEMORYPROTECTION*'], ['lpAddress', 'dwSize', 'flNewProtect', 'lpflOldProtect'], 'BOOL'), 'VirtualProtectEx': (5, ['PROCESSHANDLE', 'LPVOID', 'SIZE_T', 'MEMORYPROTECTION', 'MEMORYPROTECTION*'], ['hProcess', 'lpAddress', 'dwSize', 'flNewProtect', 'lpflOldProtect'], 'BOOL'), 'VirtualQuery': (3, ['LPCVOID', 'PMEMORY_BASIC_INFORMATION', 'SIZE_T'], ['lpAddress', 'lpBuffer', 'dwLength'], 'SIZE_T'), 'VirtualQueryEx': (4, ['PROCESSHANDLE', 'LPCVOID', 'PMEMORY_BASIC_INFORMATION', 'SIZE_T'], ['hProcess', 'lpAddress', 'lpBuffer', 'dwLength'], 'SIZE_T'), 'VirtualUnlock': (2, ['LPVOID', 'SIZE_T'], ['lpAddress', 'dwSize'], 'BOOL'), 'GlobalAlloc': (2, ['GLOBALMEMORYFLAG', 'SIZE_T'], ['uFlags', 'dwBytes'], 'HGLOBAL'), 'LocalAlloc': (2, ['LOCALMEMORYFLAG', 'SIZE_T'], ['uFlags', 'uBytes'], 'HLOCAL'), 'GlobalFlags': (1, ['HGLOBAL'], ['hMem'], 'UINT'), 'LocalFlags': (1, ['HLOCAL'], ['hMem'], 'UINT'), 'GlobalFree': (1, ['HGLOBAL'], ['hMem'], 'HGLOBAL'), 'LocalFree': (1, ['HLOCAL'], ['hMem'], 'HLOCAL'), 'GlobalHandle': (1, ['LPCVOID'], ['pMem'], 'HGLOBAL'), 'LocalHandle': (1, ['LPCVOID'], ['pMem'], 'HLOCAL'), 'GlobalLock': (1, ['HGLOBAL'], ['hMem'], 'LPVOID'), 'LocalLock': (1, ['HLOCAL'], ['hMem'], 'LPVOID'), 'GlobalReAlloc': (3, ['HGLOBAL', 'SIZE_T', 'GLOBALMEMORYFLAG'], ['hMem', 'dwBytes', 'uFlags'], 'HGLOBAL'), 'LocalReAlloc': (3, ['HLOCAL', 'SIZE_T', 'LOCALMEMORYFLAG'], ['hMem', 'uBytes', 'uFlags'], 'HLOCAL'), 'GlobalSize': (1, ['HGLOBAL'], ['hMem'], 'SIZE_T'), 'LocalSize': (1, ['HLOCAL'], ['hMem'], 'UINT'), 'GlobalUnlock': (1, ['HGLOBAL'], ['hMem'], 'BOOL'), 'LocalUnlock': (1, ['HLOCAL'], ['hMem'], 'BOOL'), 'GetMemoryErrorHandlingCapabilities': (1, ['PULONG'], ['Capabilities'], 'BOOL'), 'RegisterBadMemoryNotification': (1, ['PBAD_MEMORY_CALLBACK_ROUTINE'], ['Callback'], 'PVOID'), 'UnregisterBadMemoryNotification': (1, ['PVOID'], ['RegistrationHandle'], 'BOOL'), 'IsBadCodePtr': (1, ['FARPROC'], ['lpfn'], 'BOOL'), 'IsBadReadPtr': (2, ['CONST VOID*', 'UINT_PTR'], ['lp', 'ucb'], 'BOOL'), 'IsBadStringPtr': (2, ['LPCTSTR', 'UINT_PTR'], ['lpsz', 'ucchMax'], 'BOOL'), 'IsBadWritePtr': (2, ['LPVOID', 'UINT_PTR'], ['lp', 'ucb'], 'BOOL'), 'GlobalMemoryStatus': (1, ['LPMEMORYSTATUS'], ['lpBuffer'], 'void'), 'CreateProcess': (10, ['LPCTSTR', 'LPTSTR', 'LPSECURITY_ATTRIBUTES', 'LPSECURITY_ATTRIBUTES', 'BOOL', 'CREATEPROCESSFLAGS', 'LPVOID', 'LPCTSTR', 'LPSTARTUPINFO', 'LPPROCESS_INFORMATION'], ['lpApplicationName', 'lpCommandLine', 'lpProcessAttributes', 'lpThreadAttributes', 'bInheritHandles', 'dwCreationFlags', 'lpEnvironment', 'lpCurrentDirectory', 'lpStartupInfo', 'lpProcessInformation'], 'BOOL'), 'ExitProcess': (1, ['UINT'], ['uExitCode'], 'VOID'), 'FlushProcessWriteBuffers': (0, [], [], 'VOID'), 'FreeEnvironmentStrings': (1, ['LPTCH'], ['lpszEnvironmentBlock'], 'BOOL'), 'GetCommandLine': (0, [], [], 'LPTSTR'), 'GetCurrentProcess': (0, [], [], '[ProcessHandle]'), 'GetCurrentProcessId': (0, [], [], 'DWORD'), 'GetEnvironmentStrings': (0, [], [], 'LPTCH'), 'GetEnvironmentVariable': (3, ['LPCTSTR', 'LPTSTR', 'DWORD'], ['lpName', 'lpBuffer', 'nSize'], 'DWORD'), 'GetExitCodeProcess': (2, ['PROCESSHANDLE', 'LPDWORD'], ['hProcess', 'lpExitCode'], 'BOOL'), 'GetPriorityClass': (1, ['PROCESSHANDLE'], ['hProcess'], 'DWORD'), 'GetProcessAffinityMask': (3, ['PROCESSHANDLE', 'PDWORD_PTR', 'PDWORD_PTR'], ['hProcess', 'lpProcessAffinityMask', 'lpSystemAffinityMask'], 'BOOL'), 'GetProcessGroupAffinity': (3, ['PROCESSHANDLE', 'PUSHORT', 'PUSHORT'], ['hProcess', 'GroupCount', 'GroupArray'], 'BOOL'), 'GetProcessHandleCount': (2, ['PROCESSHANDLE', 'PDWORD'], ['hProcess', 'pdwHandleCount'], 'BOOL'), 'GetProcessId': (1, ['HANDLE'], ['Process'], 'DWORD'), 'GetProcessIdOfThread': (1, ['HANDLE'], ['Thread'], 'DWORD'), 'GetProcessInformation': (4, ['HANDLE', 'PROCESS_INFORMATION_CLASS', 'LPVOID', 'DWORD'], ['hProcess', 'ProcessInformationClass', 'ProcessInformation', 'ProcessInformationSize'], 'BOOL'), 'GetProcessIoCounters': (2, ['PROCESSHANDLE', 'PIO_COUNTERS'], ['hProcess', 'lpIoCounters'], 'BOOL'), 'GetProcessMitigationPolicy': (4, ['HANDLE', 'PROCESS_MITIGATION_POLICY', 'PVOID', 'SIZE_T'], ['hProcess', 'MitigationPolicy', 'lpBuffer', 'dwLength'], 'BOOL'), 'GetProcessPriorityBoost': (2, ['PROCESSHANDLE', 'PBOOL'], ['hProcess', 'pDisablePriorityBoost'], 'BOOL'), 'GetProcessShutdownParameters': (2, ['LPDWORD', 'LPDWORD'], ['lpdwLevel', 'lpdwFlags'], 'BOOL'), 'GetProcessTimes': (5, ['PROCESSHANDLE', 'LPFILETIME', 'LPFILETIME', 'LPFILETIME', 'LPFILETIME'], ['hProcess', 'lpCreationTime', 'lpExitTime', 'lpKernelTime', 'lpUserTime'], 'BOOL'), 'GetProcessVersion': (1, ['DWORD'], ['ProcessId'], 'DWORD'), 'GetProcessWorkingSetSize': (3, ['PROCESSHANDLE', 'PSIZE_T', 'PSIZE_T'], ['hProcess', 'lpMinimumWorkingSetSize', 'lpMaximumWorkingSetSize'], 'BOOL'), 'GetProcessWorkingSetSizeEx': (4, ['PROCESSHANDLE', 'PSIZE_T', 'PSIZE_T', 'PDWORD'], ['hProcess', 'lpMinimumWorkingSetSize', 'lpMaximumWorkingSetSize', 'Flags'], 'BOOL'), 'GetProcessorSystemCycleTime': (3, ['USHORT', 'PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION', 'PDWORD'], ['Group', 'Buffer', 'ReturnedLength'], 'BOOL'), 'GetStartupInfo': (1, ['LPSTARTUPINFO'], ['lpStartupInfo'], 'VOID'), 'NeedCurrentDirectoryForExePath': (1, ['LPCTSTR'], ['ExeName'], 'BOOL'), 'OpenProcess': (3, ['PROCESS_ACCESS_MASK', 'BOOL', 'DWORD'], ['dwDesiredAccess', 'bInheritHandle', 'dwProcessId'], 'HANDLE'), 'QueryFullProcessImageName': (4, ['PROCESSHANDLE', 'QUERYFULLPROCESSIMAGENAMEFLAGS', 'LPTSTR', 'PDWORD'], ['hProcess', 'dwFlags', 'lpExeName', 'lpdwSize'], 'BOOL'), 'QueryProcessAffinityUpdateMode': (2, ['HANDLE', 'DWORD'], ['ProcessHandle', 'lpdwFlags'], 'BOOL'), 'QueryProcessCycleTime': (2, ['HANDLE', 'PULONG64'], ['ProcessHandle', 'CycleTime'], 'BOOL'), 'SetEnvironmentVariable': (2, ['LPCTSTR', 'LPCTSTR'], ['lpName', 'lpValue'], 'BOOL'), 'SetPriorityClass': (2, ['PROCESSHANDLE', 'PRIORITYCLASS'], ['hProcess', 'dwPriorityClass'], 'BOOL'), 'SetProcessAffinityMask': (2, ['PROCESSHANDLE', 'DWORD_PTR'], ['hProcess', 'dwProcessAffinityMask'], 'BOOL'), 'SetProcessAffinityUpdateMode': (2, ['HANDLE', 'DWORD'], ['ProcessHandle', 'dwFlags'], 'BOOL'), 'SetProcessInformation': (4, ['HANDLE', 'PROCESS_INFORMATION_CLASS', 'LPVOID', 'DWORD'], ['hProcess', 'ProcessInformationClass', 'ProcessInformation', 'ProcessInformationSize'], 'BOOL'), 'SetProcessMitigationPolicy': (3, ['PROCESS_MITIGATION_POLICY', 'PVOID', 'SIZE_T'], ['MitigationPolicy', 'lpBuffer', 'dwLength'], 'BOOL'), 'SetProcessPriorityBoost': (2, ['PROCESSHANDLE', 'BOOL'], ['hProcess', 'DisablePriorityBoost'], 'BOOL'), 'SetProcessShutdownParameters': (2, ['DWORD', 'PROCESSSHUTDOWNFLAGS'], ['dwLevel', 'dwFlags'], 'BOOL'), 'SetProcessWorkingSetSize': (3, ['PROCESSHANDLE', 'SIZE_T', 'SIZE_T'], ['hProcess', 'dwMinimumWorkingSetSize', 'dwMaximumWorkingSetSize'], 'BOOL'), 'SetProcessWorkingSetSizeEx': (4, ['PROCESSHANDLE', 'SIZE_T', 'SIZE_T', 'DWORD'], ['hProcess', 'dwMinimumWorkingSetSize', 'dwMaximumWorkingSetSize', 'Flags'], 'BOOL'), 'TerminateProcess': (2, ['PROCESSHANDLE', 'UINT'], ['hProcess', 'uExitCode'], 'BOOL'), 'CreateRemoteThread': (7, ['PROCESSHANDLE', 'LPSECURITY_ATTRIBUTES', 'SIZE_T', 'LPTHREAD_START_ROUTINE', 'LPVOID', 'DWORD', 'LPDWORD'], ['hProcess', 'lpThreadAttributes', 'dwStackSize', 'lpStartAddress', 'lpParameter', 'dwCreationFlags', 'lpThreadId'], 'HANDLE'), 'CreateRemoteThreadEx': (8, ['PROCESSHANDLE', 'LPSECURITY_ATTRIBUTES', 'SIZE_T', 'LPTHREAD_START_ROUTINE', 'LPVOID', 'DWORD', 'LPPROC_THREAD_ATTRIBUTE_LIST', 'LPDWORD'], ['hProcess', 'lpThreadAttributes', 'dwStackSize', 'lpStartAddress', 'lpParameter', 'dwCreationFlags', 'lpAttributeList', 'lpThreadId'], 'HANDLE'), 'CreateThread': (6, ['LPSECURITY_ATTRIBUTES', 'SIZE_T', 'LPTHREAD_START_ROUTINE', 'LPVOID', 'THREADCREATIONFLAGS', 'LPDWORD'], ['lpThreadAttributes', 'dwStackSize', 'lpStartAddress', 'lpParameter', 'dwCreationFlags', 'lpThreadId'], 'HANDLE'), 'ExitThread': (1, ['DWORD'], ['dwExitCode'], 'VOID'), 'GetCurrentThread': (0, [], [], '[ThreadHandle]'), 'GetCurrentThreadId': (0, [], [], 'DWORD'), 'GetExitCodeThread': (2, ['THREADHANDLE', 'LPDWORD'], ['hThread', 'lpExitCode'], 'BOOL'), 'GetThreadGroupAffinity': (2, ['THREADHANDLE', 'PGROUP_AFFINITY'], ['hThread', 'GroupAffinity'], 'BOOL'), 'GetThreadId': (1, ['HANDLE'], ['Thread'], 'DWORD'), 'GetThreadIdealProcessorEx': (2, ['THREADHANDLE', 'PPROCESSOR_NUMBER'], ['hThread', 'lpIdealProcessor'], 'BOOL'), 'GetThreadInformation': (4, ['THREADHANDLE', 'THREAD_INFORMATION_CLASS', 'LPVOID', 'DWORD'], ['hThread', 'ThreadInformationClass', 'ThreadInformation', 'ThreadInformationSize'], 'BOOL'), 'GetThreadIOPendingFlag': (2, ['THREADHANDLE', 'PBOOL'], ['hThread', 'lpIOIsPending'], 'BOOL'), 'GetThreadPriority': (1, ['THREADHANDLE'], ['hThread'], '[THREAD_PRIORITY]'), 'GetThreadPriorityBoost': (2, ['THREADHANDLE', 'PBOOL'], ['hThread', 'pDisablePriorityBoost'], 'BOOL'), 'GetThreadTimes': (5, ['THREADHANDLE', 'LPFILETIME', 'LPFILETIME', 'LPFILETIME', 'LPFILETIME'], ['hThread', 'lpCreationTime', 'lpExitTime', 'lpKernelTime', 'lpUserTime'], 'BOOL'), 'OpenThread': (3, ['THREAD_ACCESS_MASK', 'BOOL', 'DWORD'], ['dwDesiredAccess', 'bInheritHandle', 'dwThreadId'], 'HANDLE'), 'QueryThreadCycleTime': (2, ['THREADHANDLE', 'PULONG64'], ['ThreadHandle', 'CycleTime'], 'BOOL'), 'ResumeThread': (1, ['THREADHANDLE'], ['hThread'], 'DWORD'), 'SetThreadAffinityMask': (2, ['THREADHANDLE', 'DWORD_PTR'], ['hThread', 'dwThreadAffinityMask'], 'DWORD_PTR'), 'SetThreadGroupAffinity': (2, ['THREADHANDLE', 'CONST GROUP_AFFINITY*'], ['hThread', 'GroupAffinity'], 'BOOL'), 'SetThreadIdealProcessor': (2, ['THREADHANDLE', 'DWORD'], ['hThread', 'dwIdealProcessor'], 'DWORD'), 'SetThreadIdealProcessorEx': (3, ['THREADHANDLE', 'PPROCESSOR_NUMBER', 'PPROCESSOR_NUMBER'], ['hThread', 'lpIdealProcessor', 'lpPreviousIdealProcessor'], 'BOOL'), 'SetThreadInformation': (4, ['THREADHANDLE', 'THREAD_INFORMATION_CLASS', 'LPVOID', 'DWORD'], ['hThread', 'ThreadInformationClass', 'ThreadInformation', 'ThreadInformationSize'], 'BOOL'), 'SetThreadPriority': (2, ['THREADHANDLE', 'THREAD_PRIORITY'], ['hThread', 'nPriority'], 'BOOL'), 'SetThreadPriorityBoost': (2, ['THREADHANDLE', 'BOOL'], ['hThread', 'DisablePriorityBoost'], 'BOOL'), 'SetThreadStackGuarantee': (1, ['PULONG'], ['StackSizeInBytes'], 'BOOL'), 'Sleep': (1, ['WAITTIMEOUT'], ['dwMilliseconds'], 'VOID'), 'SleepEx': (2, ['WAITTIMEOUT', 'BOOL'], ['dwMilliseconds', 'bAlertable'], 'DWORD'), 'SuspendThread': (1, ['THREADHANDLE'], ['hThread'], 'DWORD'), 'SwitchToThread': (0, [], [], 'BOOL'), 'TerminateThread': (2, ['THREADHANDLE', 'DWORD'], ['hThread', 'dwExitCode'], 'BOOL'), 'TlsAlloc': (0, [], [], 'DWORD'), 'TlsFree': (1, ['DWORD'], ['dwTlsIndex'], 'BOOL'), 'TlsGetValue': (1, ['DWORD'], ['dwTlsIndex'], 'LPVOID'), 'TlsSetValue': (2, ['DWORD', 'LPVOID'], ['dwTlsIndex', 'lpTlsValue'], 'BOOL'), 'DeleteProcThreadAttributeList': (1, ['LPPROC_THREAD_ATTRIBUTE_LIST'], ['lpAttributeList'], 'VOID'), 'InitializeProcThreadAttributeList': (4, ['LPPROC_THREAD_ATTRIBUTE_LIST', 'DWORD', 'DWORD', 'PSIZE_T'], ['lpAttributeList', 'dwAttributeCount', 'dwFlags', 'lpSize'], 'BOOL'), 'UpdateProcThreadAttribute': (7, ['LPPROC_THREAD_ATTRIBUTE_LIST', 'DWORD', 'PROCTHREADATTRIBUTE', 'PVOID', 'SIZE_T', 'PVOID', 'PSIZE_T'], ['lpAttributeList', 'dwFlags', 'Attribute', 'lpValue', 'cbSize', 'lpPreviousValue', 'lpReturnSize'], 'BOOL'), 'IsWow64Process': (2, ['PROCESSHANDLE', 'PBOOL'], ['hProcess', 'Wow64Process'], 'BOOL'), 'Wow64SuspendThread': (1, ['THREADHANDLE'], ['hThread'], 'DWORD'), 'AssignProcessToJobObject': (2, ['HANDLE', 'PROCESSHANDLE'], ['hJob', 'hProcess'], 'BOOL'), 'CreateJobObject': (2, ['LPSECURITY_ATTRIBUTES', 'LPCTSTR'], ['lpJobAttributes', 'lpName'], 'HANDLE'), 'IsProcessInJob': (3, ['HANDLE', 'HANDLE', 'PBOOL'], ['ProcessHandle', 'JobHandle', 'Result'], 'BOOL'), 'OpenJobObject': (3, ['DWORD', 'BOOL', 'LPCTSTR'], ['dwDesiredAccess', 'bInheritHandles', 'lpName'], 'HANDLE'), 'QueryInformationJobObject': (5, ['HANDLE', 'JOBOBJECTINFOCLASS', 'LPVOID', 'DWORD', 'LPDWORD'], ['hJob', 'JobObjectInfoClass', 'lpJobObjectInfo', 'cbJobObjectInfoLength', 'lpReturnLength'], 'BOOL'), 'SetInformationJobObject': (4, ['HANDLE', 'JOBOBJECTINFOCLASS', 'LPVOID', 'DWORD'], ['hJob', 'JobObjectInfoClass', 'lpJobObjectInfo', 'cbJobObjectInfoLength'], 'BOOL'), 'TerminateJobObject': (2, ['HANDLE', 'UINT'], ['hJob', 'uExitCode'], 'BOOL'), 'CallbackMayRunLong': (1, ['PTP_CALLBACK_INSTANCE'], ['pci'], 'BOOL'), 'CancelThreadpoolIo': (1, ['PTP_IO'], ['pio'], 'VOID'), 'CloseThreadpool': (1, ['PTP_POOL'], ['ptpp'], 'VOID'), 'CloseThreadpoolCleanupGroup': (1, ['PTP_CLEANUP_GROUP'], ['ptpcg'], 'VOID'), 'CloseThreadpoolCleanupGroupMembers': (3, ['PTP_CLEANUP_GROUP', 'BOOL', 'PVOID'], ['ptpcg', 'fCancelPendingCallbacks', 'pvCleanupContext'], 'VOID'), 'CloseThreadpoolIo': (1, ['PTP_IO'], ['pio'], 'VOID'), 'CloseThreadpoolTimer': (1, ['PTP_TIMER'], ['pti'], 'VOID'), 'CloseThreadpoolWait': (1, ['PTP_WAIT'], ['pwa'], 'VOID'), 'CloseThreadpoolWork': (1, ['PTP_WORK'], ['pwk'], 'VOID'), 'CreateThreadpool': (1, ['PVOID'], ['reserved'], 'PTP_POOL'), 'CreateThreadpoolCleanupGroup': (0, [], [], 'PTP_CLEANUP_GROUP'), 'CreateThreadpoolIo': (4, ['HANDLE', 'PTP_WIN32_IO_CALLBACK', 'PVOID', 'PTP_CALLBACK_ENVIRON'], ['fl', 'pfnio', 'pv', 'pcbe'], 'PTP_IO'), 'CreateThreadpoolTimer': (3, ['PTP_TIMER_CALLBACK', 'PVOID', 'PTP_CALLBACK_ENVIRON'], ['pfnti', 'pv', 'pcbe'], 'PTP_TIMER'), 'CreateThreadpoolWait': (3, ['PTP_WAIT_CALLBACK', 'PVOID', 'PTP_CALLBACK_ENVIRON'], ['pfnwa', 'pv', 'pcbe'], 'PTP_WAIT'), 'CreateThreadpoolWork': (3, ['PTP_WORK_CALLBACK', 'PVOID', 'PTP_CALLBACK_ENVIRON'], ['pfnwk', 'pv', 'pcbe'], 'PTP_WORK'), 'DisassociateCurrentThreadFromCallback': (1, ['PTP_CALLBACK_INSTANCE'], ['pci'], 'VOID'), 'FreeLibraryWhenCallbackReturns': (2, ['PTP_CALLBACK_INSTANCE', 'HMODULE'], ['pci', 'mod'], 'VOID'), 'IsThreadpoolTimerSet': (1, ['PTP_TIMER'], ['pti'], 'BOOL'), 'LeaveCriticalSectionWhenCallbackReturns': (2, ['PTP_CALLBACK_INSTANCE', 'PCRITICAL_SECTION'], ['pci', 'pcs'], 'VOID'), 'QueryThreadpoolStackInformation': (2, ['PTP_POOL', 'PTP_POOL_STACK_INFORMATION'], ['ptpp', 'ptpsi'], 'BOOL'), 'ReleaseMutexWhenCallbackReturns': (2, ['PTP_CALLBACK_INSTANCE', 'HANDLE'], ['pci', 'mut'], 'VOID'), 'ReleaseSemaphoreWhenCallbackReturns': (3, ['PTP_CALLBACK_INSTANCE', 'HANDLE', 'DWORD'], ['pci', 'sem', 'crel'], 'VOID'), 'SetEventWhenCallbackReturns': (2, ['PTP_CALLBACK_INSTANCE', 'HANDLE'], ['pci', 'evt'], 'VOID'), 'SetThreadpoolStackInformation': (2, ['PTP_POOL', 'PTP_POOL_STACK_INFORMATION'], ['ptpp', 'ptpsi'], 'BOOL'), 'SetThreadpoolThreadMaximum': (2, ['PTP_POOL', 'DWORD'], ['ptpp', 'cthrdMost'], 'VOID'), 'SetThreadpoolThreadMinimum': (2, ['PTP_POOL', 'DWORD'], ['ptpp', 'cthrdMic'], 'BOOL'), 'SetThreadpoolTimer': (4, ['PTP_TIMER', 'PFILETIME', 'DWORD', 'DWORD'], ['pti', 'pftDueTime', 'msPeriod', 'msWindowLength'], 'VOID'), 'SetThreadpoolWait': (3, ['PTP_WAIT', 'HANDLE', 'PFILETIME'], ['pwa', 'h', 'pftTimeout'], 'VOID'), 'StartThreadpoolIo': (1, ['PTP_IO'], ['pio'], 'VOID'), 'SubmitThreadpoolWork': (1, ['PTP_WORK'], ['pwk'], 'VOID'), 'TrySubmitThreadpoolCallback': (3, ['PTP_SIMPLE_CALLBACK', 'PVOID', 'PTP_CALLBACK_ENVIRON'], ['pfns', 'pv', 'pcbe'], 'BOOL'), 'WaitForThreadpoolIoCallbacks': (2, ['PTP_IO', 'BOOL'], ['pio', 'fCancelPendingCallbacks'], 'VOID'), 'WaitForThreadpoolTimerCallbacks': (2, ['PTP_TIMER', 'BOOL'], ['pti', 'fCancelPendingCallbacks'], 'VOID'), 'WaitForThreadpoolWaitCallbacks': (2, ['PTP_WAIT', 'BOOL'], ['pwa', 'fCancelPendingCallbacks'], 'VOID'), 'WaitForThreadpoolWorkCallbacks': (2, ['PTP_WORK', 'BOOL'], ['pwk', 'fCancelPendingCallbacks'], 'VOID'), 'BindIoCompletionCallback': (3, ['HANDLE', 'LPOVERLAPPED_COMPLETION_ROUTINE', 'ULONG'], ['FileHandle', 'Function', 'Flags'], 'BOOL'), 'QueueUserWorkItem': (3, ['LPTHREAD_START_ROUTINE', 'PVOID', 'WORKITEMFLAGS'], ['Function', 'Context', 'Flags'], 'BOOL'), 'ConvertFiberToThread': (0, [], [], 'BOOL'), 'ConvertThreadToFiber': (1, ['LPVOID'], ['lpParameter'], 'LPVOID'), 'ConvertThreadToFiberEx': (2, ['LPVOID', 'DWORD'], ['lpParameter', 'dwFlags'], 'LPVOID'), 'CreateFiber': (3, ['SIZE_T', 'LPFIBER_START_ROUTINE', 'LPVOID'], ['dwStackSize', 'lpStartAddress', 'lpParameter'], 'LPVOID'), 'CreateFiberEx': (5, ['SIZE_T', 'SIZE_T', 'DWORD', 'LPFIBER_START_ROUTINE', 'LPVOID'], ['dwStackCommitSize', 'dwStackReserveSize', 'dwFlags', 'lpStartAddress', 'lpParameter'], 'LPVOID'), 'DeleteFiber': (1, ['LPVOID'], ['lpFiber'], 'VOID'), 'FlsAlloc': (1, ['PFLS_CALLBACK_FUNCTION'], ['lpCallback'], 'DWORD'), 'FlsFree': (1, ['DWORD'], ['dwFlsIndex'], 'BOOL'), 'FlsGetValue': (1, ['DWORD'], ['dwFlsIndex'], 'PVOID'), 'FlsSetValue': (2, ['DWORD', 'PVOID'], ['dwFlsIndex', 'lpFlsData'], 'BOOL'), 'IsThreadAFiber': (0, [], [], 'BOOL'), 'SwitchToFiber': (1, ['LPVOID'], ['lpFiber'], 'VOID'), 'AllocateUserPhysicalPagesNuma': (4, ['PROCESSHANDLE', 'PULONG_PTR', 'PULONG_PTR', 'DWORD'], ['hProcess', 'NumberOfPages', 'PageArray', 'nndPreferred'], 'BOOL'), 'GetNumaAvailableMemoryNode': (2, ['UCHAR', 'PULONGLONG'], ['Node', 'AvailableBytes'], 'BOOL'), 'GetNumaAvailableMemoryNodeEx': (2, ['USHORT', 'PULONGLONG'], ['Node', 'AvailableBytes'], 'BOOL'), 'GetNumaHighestNodeNumber': (1, ['PULONG'], ['HighestNodeNumber'], 'BOOL'), 'GetNumaNodeNumberFromHandle': (2, ['HANDLE', 'PUSHORT'], ['hFile', 'NodeNumber'], 'BOOL'), 'GetNumaNodeProcessorMask': (2, ['UCHAR', 'PULONGLONG'], ['Node', 'ProcessorMask'], 'BOOL'), 'GetNumaNodeProcessorMaskEx': (2, ['USHORT', 'PGROUP_AFFINITY'], ['Node', 'ProcessorMask'], 'BOOL'), 'GetNumaProcessorNode': (2, ['UCHAR', 'PUCHAR'], ['Processor', 'NodeNumber'], 'BOOL'), 'GetNumaProcessorNodeEx': (2, ['PPROCESSOR_NUMBER', 'PUSHORT'], ['Processor', 'NodeNumber'], 'BOOL'), 'GetNumaProximityNode': (2, ['ULONG', 'PUCHAR'], ['ProximityId', 'NodeNumber'], 'BOOL'), 'GetNumaProximityNodeEx': (2, ['ULONG', 'PUSHORT'], ['ProximityId', 'NodeNumber'], 'BOOL'), 'GetActiveProcessorCount': (1, ['WORD'], ['GroupNumber'], 'DWORD'), 'GetActiveProcessorGroupCount': (0, [], [], 'WORD'), 'GetCurrentProcessorNumber': (0, [], [], 'DWORD'), 'GetCurrentProcessorNumberEx': (1, ['PPROCESSOR_NUMBER'], ['ProcNumber'], 'VOID'), 'GetLogicalProcessorInformation': (2, ['PSYSTEM_LOGICAL_PROCESSOR_INFORMATION', 'PDWORD'], ['Buffer', 'ReturnLength'], 'BOOL'), 'GetLogicalProcessorInformationEx': (3, ['LOGICAL_PROCESSOR_RELATIONSHIP', 'PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX', 'PDWORD'], ['RelationshipType', 'Buffer', 'ReturnedLength'], 'BOOL'), 'GetMaximumProcessorCount': (1, ['WORD'], ['GroupNumber'], 'DWORD'), 'GetMaximumProcessorGroupCount': (0, [], [], 'WORD'), 'QueryIdleProcessorCycleTime': (2, ['PULONG', 'PULONG64'], ['BufferLength', 'ProcessorIdleCycleTime'], 'BOOL'), 'QueryIdleProcessorCycleTimeEx': (3, ['USHORT', 'PULONG', 'PULONG64'], ['Group', 'BufferLength', 'ProcessorIdleCycleTime'], 'BOOL'), 'CreateUmsCompletionList': (1, ['PUMS_COMPLETION_LIST*'], ['UmsCompletionList'], 'BOOL'), 'CreateUmsThreadContext': (1, ['PUMS_CONTEXT*'], ['lpUmsThread'], 'BOOL'), 'DeleteUmsCompletionList': (1, ['PUMS_COMPLETION_LIST'], ['UmsCompletionList'], 'BOOL'), 'DeleteUmsThreadContext': (1, ['PUMS_CONTEXT'], ['UmsThread'], 'BOOL'), 'DequeueUmsCompletionListItems': (3, ['PUMS_COMPLETION_LIST', 'DWORD', 'PUMS_CONTEXT*'], ['UmsCompletionList', 'WaitTimeOut', 'UmsThreadList'], 'BOOL'), 'EnterUmsSchedulingMode': (1, ['PUMS_SCHEDULER_STARTUP_INFO'], ['SchedulerStartupInfo'], 'BOOL'), 'ExecuteUmsThread': (1, ['PUMS_CONTEXT'], ['UmsThread'], 'BOOL'), 'GetCurrentUmsThread': (0, [], [], 'PUMS_CONTEXT'), 'GetNextUmsListItem': (1, ['PUMS_CONTEXT'], ['UmsContext'], 'PUMS_CONTEXT'), 'GetUmsCompletionListEvent': (2, ['PUMS_COMPLETION_LIST', 'PHANDLE'], ['UmsCompletionList', 'UmsCompletionEvent'], 'BOOL'), 'GetUmsSystemThreadInformation': (2, ['THREADHANDLE', 'PUMS_SYSTEM_THREAD_INFORMATION'], ['ThreadHandle', 'SystemThreadInfo'], 'BOOL'), 'QueryUmsThreadInformation': (5, ['PUMS_CONTEXT', 'UMS_THREAD_INFO_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['UmsThread', 'UmsThreadInfoClass', 'UmsThreadInformation', 'UmsThreadInformationLength', 'ReturnLength'], 'BOOL'), 'SetUmsThreadInformation': (4, ['PUMS_CONTEXT', 'UMS_THREAD_INFO_CLASS', 'PVOID', 'ULONG'], ['UmsThread', 'UmsThreadInfoClass', 'UmsThreadInformation', 'UmsThreadInformationLength'], 'BOOL'), 'UmsThreadYield': (1, ['PVOID'], ['SchedulerParam'], 'BOOL'), 'WinExec': (2, ['LPCSTR', 'UINT'], ['lpCmdLine', 'uCmdShow'], 'UINT'), 'ActivateActCtx': (2, ['HANDLE', 'ULONG_PTR*'], ['hActCtx', 'lpCookie'], 'BOOL'), 'AddRefActCtx': (1, ['HANDLE'], ['hActCtx'], 'void'), 'CreateActCtx': (1, ['PACTCTX'], ['pActCtx'], 'HANDLE'), 'DeactivateActCtx': (2, ['DEACTIVATEACTCTXFLAGS', 'ULONG_PTR'], ['dwFlags', 'ulCookie'], 'BOOL'), 'FindActCtxSectionGuid': (5, ['FIND_ACTCTX_SECTION_FLAGS', 'CONST GUID*', 'ACTIVATION_CONTEXT_SECTION', 'CONST GUID*', 'PACTCTX_SECTION_KEYED_DATA'], ['dwFlags', 'lpExtensionGuid', 'ulSectionId', 'lpGuidToFind', 'ReturnedData'], 'BOOL'), 'FindActCtxSectionString': (5, ['FIND_ACTCTX_SECTION_FLAGS', 'CONST GUID*', 'ACTIVATION_CONTEXT_SECTION', 'LPCTSTR', 'PACTCTX_SECTION_KEYED_DATA'], ['dwFlags', 'lpExtensionGuid', 'ulSectionId', 'lpStringToFind', 'ReturnedData'], 'BOOL'), 'GetCurrentActCtx': (1, ['HANDLE*'], ['lphActCtx'], 'BOOL'), 'QueryActCtxW': (7, ['QUERYACTCTXFLAGS', 'HANDLE', 'PVOID', 'ACTIVATIONCONTEXTINFOCLASS', 'PVOID', 'SIZE_T', 'SIZE_T*'], ['dwFlags', 'hActCtx', 'pvSubInstance', 'ulInfoClass', 'pvBuffer', 'cbBuffer', 'pcbWrittenOrRequired'], 'BOOL'), 'QueryActCtxSettingsW': (7, ['DWORD', 'HANDLE', 'PCWSTR', 'PCWSTR', 'PWSTR', 'SIZE_T', 'SIZE_T*'], ['dwFlags', 'hActCtx', 'settingsNameSpace', 'settingName', 'pvBuffer', 'dwBuffer', 'pdwWrittenOrRequired'], 'BOOL'), 'ReleaseActCtx': (1, ['HANDLE'], ['hActCtx'], 'void'), 'ZombifyActCtx': (1, ['HANDLE'], ['hActCtx'], 'BOOL'), 'AddAtom': (1, ['LPCTSTR'], ['lpString'], 'ATOM'), 'DeleteAtom': (1, ['ATOM'], ['nAtom'], 'ATOM'), 'FindAtom': (1, ['LPCTSTR'], ['lpString'], 'ATOM'), 'GetAtomName': (3, ['ATOM', 'LPTSTR', 'INT'], ['nAtom', 'lpBuffer', 'nSize'], 'UINT'), 'GlobalAddAtom': (1, ['LPCTSTR'], ['lpString'], 'ATOM'), 'GlobalDeleteAtom': (1, ['ATOM'], ['nAtom'], 'ATOM'), 'GlobalFindAtom': (1, ['LPCTSTR'], ['lpString'], 'ATOM'), 'GlobalGetAtomName': (3, ['ATOM', 'LPTSTR', 'INT'], ['nAtom', 'lpBuffer', 'nSize'], 'UINT'), 'InitAtomTable': (1, ['DWORD'], ['nSize'], 'BOOL'), 'BuildCommDCB': (2, ['LPCTSTR', 'LPDCB'], ['lpDef', 'lpDCB'], 'BOOL'), 'BuildCommDCBAndTimeouts': (3, ['LPCTSTR', 'LPDCB', 'LPCOMMTIMEOUTS'], ['lpDef', 'lpDCB', 'lpCommTimeouts'], 'BOOL'), 'ClearCommBreak': (1, ['HANDLE'], ['hFile'], 'BOOL'), 'ClearCommError': (3, ['HANDLE', 'LPDWORD', 'LPCOMSTAT'], ['hFile', 'lpErrors', 'lpStat'], 'BOOL'), 'CommConfigDialog': (3, ['LPCTSTR', 'HWND', 'LPCOMMCONFIG'], ['lpszName', 'hWnd', 'lpCC'], 'BOOL'), 'EscapeCommFunction': (2, ['HANDLE', 'COMM_FUNCTION'], ['hFile', 'dwFunc'], 'BOOL'), 'GetCommConfig': (3, ['HANDLE', 'LPCOMMCONFIG', 'LPDWORD'], ['hCommDev', 'lpCC', 'lpdwSize'], 'BOOL'), 'GetCommMask': (2, ['HANDLE', 'COMM_EVENT*'], ['hFile', 'lpEvtMask'], 'BOOL'), 'GetCommModemStatus': (2, ['HANDLE', 'MODEM_STATUS_FLAGS*'], ['hFile', 'lpModemStat'], 'BOOL'), 'GetCommProperties': (2, ['HANDLE', 'LPCOMMPROP'], ['hFile', 'lpCommProp'], 'BOOL'), 'GetCommState': (2, ['HANDLE', 'LPDCB'], ['hFile', 'lpDCB'], 'BOOL'), 'GetCommTimeouts': (2, ['HANDLE', 'LPCOMMTIMEOUTS'], ['hFile', 'lpCommTimeouts'], 'BOOL'), 'GetDefaultCommConfig': (3, ['LPCTSTR', 'LPCOMMCONFIG', 'LPDWORD'], ['lpszName', 'lpCC', 'lpdwSize'], 'BOOL'), 'PurgeComm': (2, ['HANDLE', 'PURGE_FLAGS'], ['hFile', 'dwFlags'], 'BOOL'), 'SetCommBreak': (1, ['HANDLE'], ['hFile'], 'BOOL'), 'SetCommConfig': (3, ['HANDLE', 'LPCOMMCONFIG', 'DWORD'], ['hCommDev', 'lpCC', 'dwSize'], 'BOOL'), 'SetCommMask': (2, ['HANDLE', 'COMM_EVENT'], ['hFile', 'dwEvtMask'], 'BOOL'), 'SetCommState': (2, ['HANDLE', 'LPDCB'], ['hFile', 'lpDCB'], 'BOOL'), 'SetCommTimeouts': (2, ['HANDLE', 'LPCOMMTIMEOUTS'], ['hFile', 'lpCommTimeouts'], 'BOOL'), 'SetDefaultCommConfig': (3, ['LPCTSTR', 'LPCOMMCONFIG', 'DWORD'], ['lpszName', 'lpCC', 'dwSize'], 'BOOL'), 'SetupComm': (3, ['HANDLE', 'DWORD', 'DWORD'], ['hFile', 'dwInQueue', 'dwOutQueue'], 'BOOL'), 'TransmitCommChar': (2, ['HANDLE', 'CHAR'], ['hFile', 'cChar'], 'BOOL'), 'WaitCommEvent': (3, ['HANDLE', 'COMM_EVENT*', 'LPOVERLAPPED'], ['hFile', 'lpEvtMask', 'lpOverlapped'], 'BOOL'), 'AddConsoleAlias': (3, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR'], ['Source', 'Target', 'ExeName'], 'BOOL'), 'AllocConsole': (0, [], [], 'BOOL'), 'AttachConsole': (1, ['DWORD'], ['dwProcessId'], 'BOOL'), 'CreateConsoleScreenBuffer': (5, ['DWORD', 'FILE_SHARE_MODE', 'CONST SECURITY_ATTRIBUTES*', 'CONSOLE_TEXTMODE_FLAGS', 'LPVOID'], ['dwDesiredAccess', 'dwShareMode', 'lpSecurityAttributes', 'dwFlags', 'lpScreenBufferData'], 'HANDLE'), 'FillConsoleOutputAttribute': (5, ['HANDLE', 'CONSOLEATTRIBUTE', 'DWORD', 'COORD', 'LPDWORD'], ['hConsoleOutput', 'wAttribute', 'nLength', 'dwWriteCoord', 'lpNumberOfAttrsWritten'], 'BOOL'), 'FillConsoleOutputCharacter': (5, ['HANDLE', 'TCHAR', 'DWORD', 'COORD', 'LPDWORD'], ['hConsoleOutput', 'cCharacter', 'nLength', 'dwWriteCoord', 'lpNumberOfCharsWritten'], 'BOOL'), 'FlushConsoleInputBuffer': (1, ['HANDLE'], ['hConsoleInput'], 'BOOL'), 'FreeConsole': (0, [], [], 'BOOL'), 'GenerateConsoleCtrlEvent': (2, ['DWORD', 'DWORD'], ['dwCtrlEvent', 'dwProcessGroupId'], 'BOOL'), 'GetConsoleAlias': (4, ['LPTSTR', 'LPTSTR', 'DWORD', 'LPTSTR'], ['lpSource', 'lpTargetBuffer', 'TargetBufferLength', 'lpExeName'], 'DWORD'), 'GetConsoleAliases': (3, ['LPTSTR', 'DWORD', 'LPTSTR'], ['lpAliasBuffer', 'AliasBufferLength', 'lpExeName'], 'DWORD'), 'GetConsoleAliasesLength': (1, ['LPTSTR'], ['lpExeName'], 'DWORD'), 'GetConsoleAliasExes': (2, ['LPTSTR', 'DWORD'], ['lpExeNameBuffer', 'ExeNameBufferLength'], 'DWORD'), 'GetConsoleAliasExesLength': (0, [], [], 'DWORD'), 'GetConsoleCP': (0, [], [], '[CodePageEnum]'), 'GetConsoleCursorInfo': (2, ['HANDLE', 'PCONSOLE_CURSOR_INFO'], ['hConsoleOutput', 'lpConsoleCursorInfo'], 'BOOL'), 'GetConsoleDisplayMode': (1, ['CONSOLE_FULLSCREEN_MODE*'], ['lpModeFlags'], 'BOOL'), 'GetConsoleFontSize': (2, ['HANDLE', 'DWORD'], ['hConsoleOutput', 'nFont'], 'COORD'), 'GetConsoleHistoryInfo': (1, ['PCONSOLE_HISTORY_INFO'], ['lpConsoleHistoryInfo'], 'BOOL'), 'GetConsoleMode': (2, ['HANDLE', 'CONSOLEMODEFLAGS*'], ['hConsoleHandle', 'lpMode'], 'BOOL'), 'GetConsoleOriginalTitle': (2, ['LPTSTR', 'DWORD'], ['lpConsoleTitle', 'nSize'], 'DWORD'), 'GetConsoleOutputCP': (0, [], [], 'UINT'), 'GetConsoleProcessList': (2, ['LPDWORD', 'DWORD'], ['lpdwProcessList', 'dwProcessCount'], 'DWORD'), 'GetConsoleScreenBufferInfo': (2, ['HANDLE', 'PCONSOLE_SCREEN_BUFFER_INFO'], ['hConsoleOutput', 'lpConsoleScreenBufferInfo'], 'BOOL'), 'GetConsoleScreenBufferInfoEx': (2, ['HANDLE', 'PCONSOLE_SCREEN_BUFFER_INFOEX'], ['hConsoleOutput', 'lpConsoleScreenBufferInfoEx'], 'BOOL'), 'GetConsoleSelectionInfo': (1, ['PCONSOLE_SELECTION_INFO'], ['lpConsoleSelectionInfo'], 'BOOL'), 'GetConsoleTitle': (2, ['LPTSTR', 'DWORD'], ['lpConsoleTitle', 'nSize'], 'DWORD'), 'GetConsoleWindow': (0, [], [], 'HWND'), 'GetCurrentConsoleFont': (3, ['HANDLE', 'BOOL', 'PCONSOLE_FONT_INFO'], ['hConsoleOutput', 'bMaximumWindow', 'lpConsoleCurrentFont'], 'BOOL'), 'GetCurrentConsoleFontEx': (3, ['HANDLE', 'BOOL', 'PCONSOLE_FONT_INFOEX'], ['hConsoleOutput', 'bMaximumWindow', 'lpConsoleCurrentFontEx'], 'BOOL'), 'GetLargestConsoleWindowSize': (1, ['HANDLE'], ['hConsoleOutput'], 'COORD'), 'GetNumberOfConsoleInputEvents': (2, ['HANDLE', 'LPDWORD'], ['hConsoleInput', 'lpcNumberOfEvents'], 'BOOL'), 'GetNumberOfConsoleMouseButtons': (1, ['LPDWORD'], ['lpNumberOfMouseButtons'], 'BOOL'), 'GetStdHandle': (1, ['STDHANDLE'], ['nStdHandle'], '[FILE_HANDLE]'), 'PeekConsoleInput': (4, ['HANDLE', 'PINPUT_RECORD', 'DWORD', 'LPDWORD'], ['hConsoleInput', 'lpBuffer', 'nLength', 'lpNumberOfEventsRead'], 'BOOL'), 'ReadConsole': (5, ['HANDLE', 'LPVOID', 'DWORD', 'LPDWORD', 'LPVOID'], ['hConsoleInput', 'lpBuffer', 'nNumberOfCharsToRead', 'lpNumberOfCharsRead', 'pInputControl'], 'BOOL'), 'ReadConsoleInput': (4, ['HANDLE', 'PINPUT_RECORD', 'DWORD', 'LPDWORD'], ['hConsoleInput', 'lpBuffer', 'nLength', 'lpNumberOfEventsRead'], 'BOOL'), 'ReadConsoleOutput': (5, ['HANDLE', 'PCHAR_INFO', 'COORD', 'COORD', 'PSMALL_RECT'], ['hConsoleOutput', 'lpBuffer', 'dwBufferSize', 'dwBufferCoord', 'lpReadRegion'], 'BOOL'), 'ReadConsoleOutputAttribute': (5, ['HANDLE', 'CONSOLEATTRIBUTE*', 'DWORD', 'COORD', 'LPDWORD'], ['hConsoleOutput', 'lpAttribute', 'nLength', 'dwReadCoord', 'lpNumberOfAttrsRead'], 'BOOL'), 'ReadConsoleOutputCharacter': (5, ['HANDLE', 'LPTSTR', 'DWORD', 'COORD', 'LPDWORD'], ['hConsoleOutput', 'lpCharacter', 'nLength', 'dwReadCoord', 'lpNumberOfCharsRead'], 'BOOL'), 'ScrollConsoleScreenBuffer': (5, ['HANDLE', 'CONST SMALL_RECT*', 'CONST SMALL_RECT*', 'COORD', 'CONST CHAR_INFO*'], ['hConsoleOutput', 'lpScrollRectangle', 'lpClipRectangle', 'dwDestinationOrigin', 'lpFill'], 'BOOL'), 'SetConsoleActiveScreenBuffer': (1, ['HANDLE'], ['hConsoleOutput'], 'BOOL'), 'SetConsoleCP': (1, ['CODEPAGEENUM'], ['wCodePageID'], 'BOOL'), 'SetConsoleCtrlHandler': (2, ['PHANDLER_ROUTINE', 'BOOL'], ['HandlerRoutine', 'Add'], 'BOOL'), 'SetConsoleCursorInfo': (2, ['HANDLE', 'CONST CONSOLE_CURSOR_INFO*'], ['hConsoleOutput', 'lpConsoleCursorInfo'], 'BOOL'), 'SetConsoleCursorPosition': (2, ['HANDLE', 'COORD'], ['hConsoleOutput', 'dwCursorPosition'], 'BOOL'), 'SetConsoleDisplayMode': (3, ['HANDLE', 'CONSOLE_DISPLAY_MODE', 'PCOORD'], ['hConsoleOutput', 'dwFlags', 'lpNewScreenBufferDimensions'], 'BOOL'), 'SetConsoleHistoryInfo': (1, ['PCONSOLE_HISTORY_INFO'], ['lpConsoleHistoryInfo'], 'BOOL'), 'SetConsoleMode': (2, ['HANDLE', 'CONSOLEMODEFLAGS'], ['hConsoleHandle', 'dwMode'], 'BOOL'), 'SetConsoleOutputCP': (1, ['CODEPAGEENUM'], ['wCodePageID'], 'BOOL'), 'SetConsoleScreenBufferInfoEx': (2, ['HANDLE', 'PCONSOLE_SCREEN_BUFFER_INFOEX'], ['hConsoleOutput', 'lpConsoleScreenBufferInfoEx'], 'BOOL'), 'SetConsoleScreenBufferSize': (2, ['HANDLE', 'COORD'], ['hConsoleOutput', 'dwSize'], 'BOOL'), 'SetConsoleTextAttribute': (2, ['HANDLE', 'CONSOLEATTRIBUTE'], ['hConsoleOutput', 'wAttributes'], 'BOOL'), 'SetConsoleTitle': (1, ['LPCTSTR'], ['lpConsoleTitle'], 'BOOL'), 'SetConsoleWindowInfo': (3, ['HANDLE', 'BOOL', 'CONST SMALL_RECT*'], ['hConsoleOutput', 'bAbsolute', 'lpConsoleWindow'], 'BOOL'), 'SetCurrentConsoleFontEx': (3, ['HANDLE', 'BOOL', 'PCONSOLE_FONT_INFOEX'], ['hConsoleOutput', 'bMaximumWindow', 'lpConsoleCurrentFontEx'], 'BOOL'), 'SetStdHandle': (2, ['STDHANDLE', 'HANDLE'], ['nStdHandle', 'hHandle'], 'BOOL'), 'WriteConsole': (5, ['HANDLE', 'LPCTSTR', 'DWORD', 'LPDWORD', 'LPVOID'], ['hConsoleOutput', 'lpBuffer', 'nNumberOfCharsToWrite', 'lpNumberOfCharsWritten', 'lpReserved'], 'BOOL'), 'WriteConsoleInput': (4, ['HANDLE', 'CONST INPUT_RECORD*', 'DWORD', 'LPDWORD'], ['hConsoleInput', 'lpBuffer', 'nLength', 'lpNumberOfEventsWritten'], 'BOOL'), 'WriteConsoleOutput': (5, ['HANDLE', 'CONST CHAR_INFO*', 'COORD', 'COORD', 'PSMALL_RECT'], ['hConsoleOutput', 'lpBuffer', 'dwBufferSize', 'dwBufferCoord', 'lpWriteRegion'], 'BOOL'), 'WriteConsoleOutputAttribute': (5, ['HANDLE', 'CONSOLEATTRIBUTE*', 'DWORD', 'COORD', 'LPDWORD'], ['hConsoleOutput', 'lpAttribute', 'nLength', 'dwWriteCoord', 'lpNumberOfAttrsWritten'], 'BOOL'), 'WriteConsoleOutputCharacter': (5, ['HANDLE', 'LPCTSTR', 'DWORD', 'COORD', 'LPDWORD'], ['hConsoleOutput', 'lpCharacter', 'nLength', 'dwWriteCoord', 'lpNumberOfCharsWritten'], 'BOOL'), 'SetConsoleInputExeName': (1, ['LPCTSTR'], ['lpName'], 'BOOL'), 'DeviceIoControl': (8, ['HANDLE', 'IOCTL', 'LPVOID', 'DWORD', 'LPVOID', 'DWORD', 'LPDWORD', 'LPOVERLAPPED'], ['hDevice', 'dwIoControlCode', 'lpInBuffer', 'nInBufferSize', 'lpOutBuffer', 'nOutBufferSize', 'lpBytesReturned', 'lpOverlapped'], 'BOOL'), 'Beep': (2, ['DWORD', 'DWORD'], ['dwFreq', 'dwDuration'], 'BOOL'), 'RtlCaptureStackBackTrace': (4, ['ULONG', 'ULONG', 'PVOID*', 'PULONG'], ['FramesToSkip', 'FramesToCapture', 'BackTrace', 'BackTraceHash'], 'USHORT'), 'FatalAppExit': (2, ['UINT', 'LPCTSTR'], ['uAction', 'lpMessageText'], 'void'), 'FormatMessage': (7, ['FORMATMESSAGEFLAGS', 'LPCVOID', 'DWORD', 'DWORD', 'LPTSTR', 'DWORD', 'VA_LIST*'], ['dwFlags', 'lpSource', 'dwMessageId', 'dwLanguageId', 'lpBuffer', 'nSize', 'Arguments'], 'DWORD'), 'GetErrorMode': (0, [], [], '[SEM_FLAGS]'), 'GetLastError': (0, [], [], '[ERROR_CODE]'), 'GetThreadErrorMode': (0, [], [], '[SEM_FLAGS_DWORD]'), 'RtlLookupFunctionEntry': (3, ['ULONGLONG', 'PULONGLONG', 'PULONGLONG'], ['ControlPC', 'ImageBase', 'TargetGp'], 'PVOID'), 'RtlPcToFileHeader': (2, ['PVOID', 'PVOID*'], ['PcValue', 'BaseOfImage'], 'PVOID'), 'SetErrorMode': (1, ['SEM_FLAGS'], ['uMode'], '[SEM_FLAGS]'), 'SetLastError': (1, ['ERROR_CODE'], ['dwErrCode'], 'void'), 'SetThreadErrorMode': (2, ['SEM_FLAGS_DWORD', 'SEM_FLAGS_DWORD*'], ['dwNewMode', 'lpOldMode'], 'BOOL'), 'CloseHandle': (1, ['HANDLE'], ['hObject'], 'BOOL'), 'DuplicateHandle': (7, ['PROCESSHANDLE', 'PROCESS_THREAD_HANDLE', 'PROCESSHANDLE', 'LPHANDLE', 'STANDARDACCESSRIGHTS', 'BOOL', 'DUPLICATE_HANDLE_FLAGS'], ['hSourceProcessHandle', 'hSourceHandle', 'hTargetProcessHandle', 'lpTargetHandle', 'dwDesiredAccess', 'bInheritHandle', 'dwOptions'], 'BOOL'), 'GetHandleInformation': (2, ['HANDLE', 'HANDLE_FLAGS*'], ['hObject', 'lpdwFlags'], 'BOOL'), 'SetHandleInformation': (3, ['HANDLE', 'HANDLE_FLAGS', 'HANDLE_FLAGS'], ['hObject', 'dwMask', 'dwFlags'], 'BOOL'), 'SetHandleCount': (1, ['UINT'], ['uNumber'], 'UINT'), 'CreateMailslot': (4, ['LPCTSTR', 'DWORD', 'DWORD', 'LPSECURITY_ATTRIBUTES'], ['lpName', 'nMaxMessageSize', 'lReadTimeout', 'lpSecurityAttributes'], 'HANDLE'), 'GetMailslotInfo': (5, ['HANDLE', 'LPDWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hMailslot', 'lpMaxMessageSize', 'lpNextSize', 'lpMessageCount', 'lpReadTimeout'], 'BOOL'), 'SetMailslotInfo': (2, ['HANDLE', 'DWORD'], ['hMailslot', 'lReadTimeout'], 'BOOL'), 'AdjustCalendarDate': (3, ['LPCALDATETIME', 'CALDATETIME_DATEUNIT', 'INT'], ['lpCalDateTime', 'calUnit', 'amount'], 'BOOL'), 'CompareString': (6, ['LCID', 'NLS_STRING_COMPARE_FLAGS', 'LPCTSTR', 'INT', 'LPCTSTR', 'INT'], ['Locale', 'dwCmpFlags', 'lpString1', 'cchCount1', 'lpString2', 'cchCount2'], 'int'), 'CompareStringEx': (9, ['LPCWSTR', 'NLS_STRING_COMPARE_FLAGS', 'LPCWSTR', 'INT', 'LPCWSTR', 'INT', 'LPNLSVERSIONINFO', 'LPVOID', 'LPARAM'], ['lpLocaleName', 'dwCmpFlags', 'lpString1', 'cchCount1', 'lpString2', 'cchCount2', 'lpVersionInformation', 'lpReserved', 'lParam'], 'int'), 'CompareStringOrdinal': (5, ['LPCWSTR', 'INT', 'LPCWSTR', 'INT', 'BOOL'], ['lpString1', 'cchCount1', 'lpString2', 'cchCount2', 'bIgnoreCase'], 'int'), 'ConvertCalDateTimeToSystemTime': (2, ['CONST LPCALDATETIME', 'SYSTEMTIME*'], ['lpCalDateTime', 'lpSysTime'], 'BOOL'), 'ConvertDefaultLocale': (1, ['LCID'], ['Locale'], 'LCID'), 'ConvertSystemTimeToCalDateTime': (3, ['CONST SYSTEMTIME', 'CALID', 'LPCALDATETIME'], ['lpSysTime', 'calId', 'lpCalDateTime'], 'BOOL'), 'EnumCalendarInfo': (4, ['CALINFO_ENUMPROC', 'LCID', 'CALID', 'CALTYPE'], ['pCalInfoEnumProc', 'Locale', 'Calendar', 'CalType'], 'BOOL'), 'EnumCalendarInfoEx': (4, ['CALINFO_ENUMPROCEX', 'LCID', 'CALID', 'CALTYPE'], ['pCalInfoEnumProcEx', 'Locale', 'Calendar', 'CalType'], 'BOOL'), 'EnumCalendarInfoExEx': (6, ['CALINFO_ENUMPROCEXEX', 'LPCWSTR', 'CALID', 'LPCWSTR', 'CALTYPE', 'LPARAM'], ['pCalInfoEnumProcExEx', 'lpLocaleName', 'Calendar', 'lpReserved', 'CalType', 'lParam'], 'BOOL'), 'EnumDateFormats': (3, ['DATEFMT_ENUMPROC', 'LCID', 'NLS_DATE_FLAGS'], ['lpDateFmtEnumProc', 'Locale', 'dwFlags'], 'BOOL'), 'EnumDateFormatsEx': (3, ['DATEFMT_ENUMPROCEX', 'LCID', 'NLS_DATE_FLAGS'], ['lpDateFmtEnumProcEx', 'Locale', 'dwFlags'], 'BOOL'), 'EnumDateFormatsExEx': (4, ['DATEFMT_ENUMPROCEXEX', 'LPCWSTR', 'NLS_DATE_FLAGS', 'LPARAM'], ['lpDateFmtEnumProcExEx', 'lpLocaleName', 'dwFlags', 'lParam'], 'BOOL'), 'EnumLanguageGroupLocales': (4, ['LANGGROUPLOCALE_ENUMPROC', 'LGRPID', 'DWORD', 'LONG_PTR'], ['lpLangGroupLocaleEnumProc', 'LanguageGroup', 'dwFlags', 'lParam'], 'BOOL'), 'EnumSystemCodePages': (2, ['CODEPAGE_ENUMPROC', 'CODEPAGEENUMERATIONFLAGS'], ['lpCodePageEnumProc', 'dwFlags'], 'BOOL'), 'EnumSystemGeoID': (3, ['GEOCLASS', 'GEOID', 'GEO_ENUMPROC'], ['GeoClass', 'ParentGeoId', 'lpGeoEnumProc'], 'BOOL'), 'EnumSystemLanguageGroups': (3, ['LANGUAGEGROUP_ENUMPROC', 'LANGUAGE_GROUP_FLAGS', 'LONG_PTR'], ['lpLanguageGroupEnumProc', 'dwFlags', 'lParam'], 'BOOL'), 'EnumSystemLocales': (2, ['LOCALE_ENUMPROC', 'LOCALEENUMERATIONFLAGS'], ['lpLocaleEnumProc', 'dwFlags'], 'BOOL'), 'EnumSystemLocalesEx': (4, ['LOCALE_ENUMPROCEX', 'ENUMSYSTEMLOCALESEXFLAGS', 'LPARAM', 'LPVOID'], ['lpLocaleEnumProcEx', 'dwFlags', 'lParam', 'lpReserved'], 'BOOL'), 'EnumTimeFormats': (3, ['TIMEFMT_ENUMPROC', 'LCID', 'NLS_TIME_FLAGS'], ['lpTimeFmtEnumProc', 'Locale', 'dwFlags'], 'BOOL'), 'EnumTimeFormatsEx': (4, ['TIMEFMT_ENUMPROCEX', 'LPCWSTR', 'NLS_TIME_FLAGS', 'LPARAM'], ['lpTimeFmtEnumProcEx', 'lpLocaleName', 'dwFlags', 'lParam'], 'BOOL'), 'FindNLSString': (7, ['LCID', 'NLS_STRING_FIND_FLAGS', 'LPCWSTR', 'INT', 'LPCWSTR', 'INT', 'LPINT'], ['Locale', 'dwFindNLSStringFlags', 'lpStringSource', 'cchSource', 'lpStringValue', 'cchValue', 'pcchFound'], 'int'), 'FindNLSStringEx': (10, ['LPCWSTR', 'NLS_STRING_FIND_FLAGS', 'LPCWSTR', 'INT', 'LPCWSTR', 'INT', 'LPINT', 'LPNLSVERSIONINFO', 'LPVOID', 'LPARAM'], ['lpLocaleName', 'dwFindNLSStringFlags', 'lpStringSource', 'cchSource', 'lpStringValue', 'cchValue', 'pcchFound', 'lpVersionInformation', 'lpReserved', 'lParam'], 'int'), 'FindStringOrdinal': (6, ['NLS_FIND_FLAGS', 'LPCWSTR', 'INT', 'LPCWSTR', 'INT', 'BOOL'], ['dwFindStringOrdinalFlags', 'lpStringSource', 'cchSource', 'lpStringValue', 'cchValue', 'bIgnoreCase'], 'int'), 'FoldString': (5, ['MAPPINGFLAGS', 'LPCTSTR', 'INT', 'LPTSTR', 'INT'], ['dwMapFlags', 'lpSrcStr', 'cchSrc', 'lpDestStr', 'cchDest'], 'int'), 'GetACP': (0, [], [], 'UINT'), 'GetCalendarDateFormatEx': (6, ['LPCWSTR', 'NLS_DATE_FLAGS', 'CONST LPCALDATETIME', 'LPCWSTR', 'LPWSTR', 'INT'], ['lpszLocale', 'dwFlags', 'lpCalDateTime', 'lpFormat', 'lpDateStr', 'cchDate'], 'BOOL'), 'GetCalendarInfo': (6, ['LCID', 'CALID', 'CALTYPE', 'LPTSTR', 'INT', 'LPDWORD'], ['Locale', 'Calendar', 'CalType', 'lpCalData', 'cchData', 'lpValue'], 'int'), 'GetCalendarInfoEx': (7, ['LPCWSTR', 'CALID', 'LPCWSTR', 'CALTYPE', 'LPWSTR', 'INT', 'LPDWORD'], ['lpLocaleName', 'Calendar', 'lpReserved', 'CalType', 'lpCalData', 'cchData', 'lpValue'], 'int'), 'GetCalendarSupportedDateRange': (3, ['CALID', 'LPCALDATETIME', 'LPCALDATETIME'], ['Calendar', 'lpCalMinDateTime', 'lpCalMaxDateTime'], 'BOOL'), 'GetCPInfo': (2, ['CODEPAGEENUM', 'LPCPINFO'], ['CodePage', 'lpCPInfo'], 'BOOL'), 'GetCPInfoEx': (3, ['CODEPAGEENUM', 'DWORD', 'LPCPINFOEX'], ['CodePage', 'dwFlags', 'lpCPInfoEx'], 'BOOL'), 'GetCurrencyFormat': (6, ['LCID', 'LOCALE_NOUSEROVERRIDE_FLAG', 'LPCTSTR', 'CONST CURRENCYFMT*', 'LPTSTR', 'INT'], ['Locale', 'dwFlags', 'lpValue', 'lpFormat', 'lpCurrencyStr', 'cchCurrency'], 'int'), 'GetCurrencyFormatEx': (6, ['LPCWSTR', 'LOCALE_NOUSEROVERRIDE_FLAG', 'LPCWSTR', 'CONST CURRENCYFMT*', 'LPWSTR', 'INT'], ['lpLocaleName', 'dwFlags', 'lpValue', 'lpFormat', 'lpCurrencyStr', 'cchCurrency'], 'int'), 'GetDateFormat': (6, ['LCID', 'NLS_DATE_FLAGS', 'CONST SYSTEMTIME*', 'LPCTSTR', 'LPTSTR', 'INT'], ['Locale', 'dwFlags', 'lpDate', 'lpFormat', 'lpDateStr', 'cchDate'], 'int'), 'GetDateFormatEx': (7, ['LPCWSTR', 'NLS_DATE_FLAGS', 'CONST SYSTEMTIME*', 'LPCWSTR', 'LPWSTR', 'INT', 'LPCWSTR'], ['lpLocaleName', 'dwFlags', 'lpDate', 'lpFormat', 'lpDateStr', 'cchDate', 'lpCalendar'], 'int'), 'GetDurationFormat': (7, ['LCID', 'LOCALE_NOUSEROVERRIDE_FLAG', 'CONST SYSTEMTIME*', 'ULONGLONG', 'LPCWSTR', 'LPWSTR', 'INT'], ['Locale', 'dwFlags', 'lpDuration', 'ullDuration', 'lpFormat', 'lpDurationStr', 'cchDuration'], 'int'), 'GetDurationFormatEx': (7, ['LPCWSTR', 'LOCALE_NOUSEROVERRIDE_FLAG', 'CONST SYSTEMTIME*', 'ULONGLONG', 'LPCWSTR', 'LPWSTR', 'INT'], ['lpLocaleName', 'dwFlags', 'lpDuration', 'ullDuration', 'lpFormat', 'lpDurationStr', 'cchDuration'], 'int'), 'GetGeoInfo': (5, ['GEOID', 'GEOTYPE', 'LPTSTR', 'INT', 'LANGID'], ['Location', 'GeoType', 'lpGeoData', 'cchData', 'LangId'], 'int'), 'GetLocaleInfo': (4, ['LCID', 'LCTYPE', 'LPTSTR', 'INT'], ['Locale', 'LCType', 'lpLCData', 'cchData'], 'int'), 'GetLocaleInfoEx': (4, ['LPCWSTR', 'LCTYPE', 'LPWSTR', 'INT'], ['lpLocaleName', 'LCType', 'lpLCData', 'cchData'], 'int'), 'GetNLSVersion': (3, ['NLS_FUNCTION', 'LCID', 'LPNLSVERSIONINFO'], ['Function', 'Locale', 'lpVersionInformation'], 'BOOL'), 'GetNLSVersionEx': (3, ['NLS_FUNCTION', 'LPCWSTR', 'LPNLSVERSIONINFOEX'], ['function', 'lpLocaleName', 'lpVersionInformation'], 'BOOL'), 'GetNumberFormat': (6, ['LCID', 'LOCALE_NOUSEROVERRIDE_FLAG', 'LPCTSTR', 'CONST NUMBERFMT*', 'LPTSTR', 'INT'], ['Locale', 'dwFlags', 'lpValue', 'lpFormat', 'lpNumberStr', 'cchNumber'], 'int'), 'GetNumberFormatEx': (6, ['LPCWSTR', 'LOCALE_NOUSEROVERRIDE_FLAG', 'LPCWSTR', 'CONST NUMBERFMT*', 'LPWSTR', 'INT'], ['lpLocaleName', 'dwFlags', 'lpValue', 'lpFormat', 'lpNumberStr', 'cchNumber'], 'int'), 'GetOEMCP': (0, [], [], 'UINT'), 'GetStringScripts': (5, ['GET_STRING_SCRIPTS_FLAGS', 'LPCWSTR', 'INT', 'LPWSTR', 'INT'], ['dwFlags', 'lpString', 'cchString', 'lpScripts', 'cchScripts'], 'int'), 'GetStringTypeA': (5, ['LCID', 'CHARACTERTYPEFLAG', 'LPCSTR', 'INT', 'LPWORD'], ['Locale', 'dwInfoType', 'lpSrcStr', 'cchSrc', 'lpCharType'], 'BOOL'), 'GetStringTypeEx': (5, ['LCID', 'CHARACTERTYPEFLAG', 'LPCTSTR', 'INT', 'LPWORD'], ['Locale', 'dwInfoType', 'lpSrcStr', 'cchSrc', 'lpCharType'], 'BOOL'), 'GetStringTypeW': (4, ['CHARACTERTYPEFLAG', 'LPCWSTR', 'INT', 'LPWORD'], ['dwInfoType', 'lpSrcStr', 'cchSrc', 'lpCharType'], 'BOOL'), 'GetSystemDefaultLangID': (0, [], [], 'LANGID'), 'GetSystemDefaultLCID': (0, [], [], 'LCID'), 'GetSystemDefaultLocaleName': (2, ['LPWSTR', 'INT'], ['lpLocaleName', 'cchLocaleName'], 'int'), 'GetThreadLocale': (0, [], [], 'LCID'), 'GetTimeFormat': (6, ['LCID', 'NLS_TIME_FLAGS', 'CONST SYSTEMTIME*', 'LPCTSTR', 'LPTSTR', 'INT'], ['Locale', 'dwFlags', 'lpTime', 'lpFormat', 'lpTimeStr', 'cchTime'], 'int'), 'GetTimeFormatEx': (6, ['LPCWSTR', 'NLS_TIME_FLAGS', 'CONST SYSTEMTIME*', 'LPCWSTR', 'LPWSTR', 'INT'], ['lpLocaleName', 'dwFlags', 'lpTime', 'lpFormat', 'lpTimeStr', 'cchTime'], 'int'), 'GetUserDefaultLangID': (0, [], [], 'LANGID'), 'GetUserDefaultLCID': (0, [], [], 'LCID'), 'GetUserDefaultLocaleName': (2, ['LPWSTR', 'INT'], ['lpLocaleName', 'cchLocaleName'], 'int'), 'GetUserGeoID': (1, ['GEOCLASS'], ['GeoClass'], 'GEOID'), 'IsCalendarLeapYear': (3, ['CALID', 'UINT', 'UINT'], ['calId', 'year', 'era'], 'BOOL'), 'IsNLSDefinedString': (5, ['NLS_FUNCTION', 'DWORD', 'LPNLSVERSIONINFO', 'LPCWSTR', 'INT'], ['Function', 'dwFlags', 'lpVersionInformation', 'lpString', 'cchStr'], 'BOOL'), 'IsValidCodePage': (1, ['CODEPAGEENUM'], ['CodePage'], 'BOOL'), 'IsValidLanguageGroup': (2, ['LGRPID', 'LANGUAGE_GROUP_FLAGS'], ['LanguageGroup', 'dwFlags'], 'BOOL'), 'IsValidLocale': (2, ['LCID', 'LOCALEENUMERATIONFLAGS'], ['Locale', 'dwFlags'], 'BOOL'), 'IsValidLocaleName': (1, ['LPCWSTR'], ['lpLocaleName'], 'BOOL'), 'IsValidNLSVersion': (3, ['NLS_FUNCTION', 'LPCWSTR', 'LPNLSVERSIONINFOEX'], ['function', 'lpLocaleName', 'lpVersionInformation'], 'DWORD'), 'LCIDToLocaleName': (4, ['LCID', 'LPWSTR', 'INT', 'LOCALE_NAME_FLAGS'], ['Locale', 'lpName', 'cchName', 'dwFlags'], 'int'), 'LCMapString': (6, ['LCID', 'LOCALEMAPPINGFLAGS', 'LPCTSTR', 'INT', 'LPTSTR', 'INT'], ['Locale', 'dwMapFlags', 'lpSrcStr', 'cchSrc', 'lpDestStr', 'cchDest'], 'int'), 'LCMapStringEx': (9, ['LPCWSTR', 'LOCALEMAPPINGFLAGS', 'LPCWSTR', 'INT', 'LPWSTR', 'INT', 'LPNLSVERSIONINFO', 'LPVOID', 'LPARAM'], ['lpLocaleName', 'dwMapFlags', 'lpSrcStr', 'cchSrc', 'lpDestStr', 'cchDest', 'lpVersionInformation', 'lpReserved', 'lParam'], 'int'), 'LoadStringByReference': (7, ['LOADSTRINGBYREFERENCE_FLAGS', 'PCWSTR', 'PCWSTR', 'PWSTR', 'ULONG', 'PCWSTR', 'PULONG'], ['Flags', 'Language', 'SourceString', 'Buffer', 'cchBuffer', 'Directory', 'pcchBufferOut'], 'BOOL'), 'LocaleNameToLCID': (2, ['LPCWSTR', 'LOCALE_NAME_FLAGS'], ['lpName', 'dwFlags'], 'LCID'), 'NotifyUILanguageChange': (5, ['DWORD', 'PCWSTR', 'PCWSTR', 'DWORD', 'PDWORD'], ['dwFlags', 'pcwstrNewLanguage', 'pcwstrPreviousLanguage', 'dwReserved', 'pdwStatusRtrn'], 'BOOL'), 'ResolveLocaleName': (3, ['LPCWSTR', 'LPWSTR', 'INT'], ['lpNameToResolve', 'lpLocaleName', 'cchLocaleName'], 'int'), 'SetCalendarInfo': (4, ['LCID', 'CALID', 'CALTYPE', 'LPCTSTR'], ['Locale', 'Calendar', 'CalType', 'lpCalData'], 'BOOL'), 'SetLocaleInfo': (3, ['LCID', 'LCTYPE', 'LPCTSTR'], ['Locale', 'LCType', 'lpLCData'], 'BOOL'), 'SetThreadLocale': (1, ['LCID'], ['Locale'], 'BOOL'), 'SetUserGeoID': (1, ['GEOID'], ['GeoId'], 'BOOL'), 'UpdateCalendarDayOfWeek': (1, ['LPCALDATETIME'], ['lpCalDateTime'], 'BOOL'), 'VerifyScripts': (5, ['VERIFY_SCRIPTS_FLAGS', 'LPCWSTR', 'INT', 'LPCWSTR', 'INT'], ['dwFlags', 'lpLocaleScripts', 'cchLocaleScripts', 'lpTestScripts', 'cchTestScripts'], 'BOOL'), 'GetDevicePowerState': (2, ['HANDLE', 'BOOL*'], ['hDevice', 'pfOn'], 'BOOL'), 'GetSystemPowerStatus': (1, ['LPSYSTEM_POWER_STATUS'], ['lpSystemPowerStatus'], 'BOOL'), 'IsSystemResumeAutomatic': (0, [], [], 'BOOL'), 'PowerClearRequest': (2, ['HANDLE', 'POWER_REQUEST_TYPE'], ['PowerRequest', 'RequestType'], 'BOOL'), 'PowerCreateRequest': (1, ['PREASON_CONTEXT'], ['Context'], 'HANDLE'), 'PowerSetRequest': (2, ['HANDLE', 'POWER_REQUEST_TYPE'], ['PowerRequest', 'RequestType'], 'BOOL'), 'QueryUnbiasedInterruptTime': (1, ['PULONGLONG'], ['UnbiasedTime'], 'BOOL'), 'SetThreadExecutionState': (1, ['EXECUTION_STATE'], ['esFlags'], 'EXECUTION_STATE'), 'RequestWakeupLatency': (1, ['LATENCY_TIME'], ['latency'], 'BOOL'), 'SetSystemPowerState': (2, ['BOOL', 'BOOL'], ['fSuspend', 'fForce'], 'BOOL'), 'BeginUpdateResource': (2, ['LPCTSTR', 'BOOL'], ['pFileName', 'bDeleteExistingResources'], 'HANDLE'), 'EndUpdateResource': (2, ['HANDLE', 'BOOL'], ['hUpdate', 'fDiscard'], 'BOOL'), 'EnumResourceLanguages': (5, ['HMODULE', 'LPCTSTR', 'LPCTSTR', 'ENUMRESLANGPROC', 'LONG_PTR'], ['hModule', 'lpType', 'lpName', 'lpEnumFunc', 'lParam'], 'BOOL'), 'EnumResourceLanguagesEx': (7, ['HMODULE', 'LPCTSTR', 'LPCTSTR', 'ENUMRESLANGPROC', 'LONG_PTR', 'RESOURCE_ENUM_FLAGS', 'LANGID'], ['hModule', 'lpType', 'lpName', 'lpEnumFunc', 'lParam', 'dwFlags', 'LangId'], 'BOOL'), 'EnumResourceNames': (4, ['HMODULE', 'LPCTSTR', 'ENUMRESNAMEPROC', 'LONG_PTR'], ['hModule', 'lpszType', 'lpEnumFunc', 'lParam'], 'BOOL'), 'EnumResourceNamesEx': (6, ['HMODULE', 'LPCTSTR', 'ENUMRESNAMEPROC', 'LONG_PTR', 'RESOURCE_ENUM_FLAGS', 'LANGID'], ['hModule', 'lpszType', 'lpEnumFunc', 'lParam', 'dwFlags', 'LangId'], 'BOOL'), 'EnumResourceTypes': (3, ['HMODULE', 'ENUMRESTYPEPROC', 'LONG_PTR'], ['hModule', 'lpEnumFunc', 'lParam'], 'BOOL'), 'EnumResourceTypesEx': (5, ['HMODULE', 'ENUMRESTYPEPROC', 'LONG_PTR', 'RESOURCE_ENUM_FLAGS', 'LANGID'], ['hModule', 'lpEnumFunc', 'lParam', 'dwFlags', 'LangId'], 'BOOL'), 'FindResource': (3, ['HMODULE', 'LPCTSTR', 'LPCTSTR'], ['hModule', 'lpName', 'lpType'], 'HRSRC'), 'FindResourceEx': (4, ['HMODULE', 'LPCTSTR', 'LPCTSTR', 'WORD'], ['hModule', 'lpType', 'lpName', 'wLanguage'], 'HRSRC'), 'FreeResource': (1, ['HGLOBAL'], ['hglbResource'], 'BOOL'), 'LoadResource': (2, ['HMODULE', 'HRSRC'], ['hModule', 'hResInfo'], 'HGLOBAL'), 'LockResource': (1, ['HGLOBAL'], ['hResData'], 'LPVOID'), 'SizeofResource': (2, ['HMODULE', 'HRSRC'], ['hModule', 'hResInfo'], 'DWORD'), 'UpdateResource': (6, ['HANDLE', 'LPCTSTR', 'LPCTSTR', 'WORD', 'LPVOID', 'DWORD'], ['hUpdate', 'lpType', 'lpName', 'wLanguage', 'lpData', 'cbData'], 'BOOL'), 'lstrcat': (2, ['LPTSTR', 'LPTSTR'], ['lpString1', 'lpString2'], 'LPTSTR'), 'lstrcmp': (2, ['LPCTSTR', 'LPCTSTR'], ['lpString1', 'lpString2'], 'int'), 'lstrcmpi': (2, ['LPCTSTR', 'LPCTSTR'], ['lpString1', 'lpString2'], 'int'), 'lstrcpy': (2, ['LPTSTR', 'LPTSTR'], ['lpString1', 'lpString2'], 'LPTSTR'), 'lstrcpyn': (3, ['LPTSTR', 'LPCTSTR', 'INT'], ['lpString1', 'lpString2', 'iMaxLength'], 'LPTSTR'), 'lstrlen': (1, ['LPCTSTR'], ['lpString'], 'int'), 'AddVectoredContinueHandler': (2, ['ULONG', 'PVECTORED_EXCEPTION_HANDLER'], ['FirstHandler', 'VectoredHandler'], 'PVOID'), 'AddVectoredExceptionHandler': (2, ['ULONG', 'PVECTORED_EXCEPTION_HANDLER'], ['FirstHandler', 'VectoredHandler'], 'PVOID'), 'RemoveVectoredContinueHandler': (1, ['PVOID'], ['Handler'], 'ULONG'), 'RemoveVectoredExceptionHandler': (1, ['PVOID'], ['Handler'], 'ULONG'), 'SetUnhandledExceptionFilter': (1, ['LPTOP_LEVEL_EXCEPTION_FILTER'], ['lpTopLevelExceptionFilter'], 'LPTOP_LEVEL_EXCEPTION_FILTER'), 'UnhandledExceptionFilter': (1, ['EXCEPTION_POINTERS*'], ['ExceptionInfo'], 'LONG'), 'RtlAddFunctionTable': (3, ['PRUNTIME_FUNCTION', 'DWORD', 'DWORD64'], ['FunctionTable', 'EntryCount', 'BaseAddress'], 'BOOLEAN'), 'RtlCaptureContext': (1, ['PCONTEXT'], ['ContextRecord'], 'VOID'), 'RtlDeleteFunctionTable': (1, ['PRUNTIME_FUNCTION'], ['FunctionTable'], 'BOOLEAN'), 'RtlInstallFunctionTableCallback': (6, ['DWORD64', 'DWORD64', 'DWORD', 'PGET_RUNTIME_FUNCTION_CALLBACK', 'PVOID', 'PCWSTR'], ['TableIdentifier', 'BaseAddress', 'Length', 'Callback', 'Context', 'OutOfProcessCallbackDll'], 'BOOLEAN'), 'RtlRestoreContext': (2, ['PCONTEXT', 'PEXCEPTION_RECORD'], ['ContextRecord', 'ExceptionRecord'], 'VOID'), 'GetOverlappedResult': (4, ['HANDLE', 'LPOVERLAPPED', 'LPDWORD', 'BOOL'], ['hFile', 'lpOverlapped', 'lpNumberOfBytesTransferred', 'bWait'], 'BOOL'), 'GetOverlappedResultEx': (5, ['HANDLE', 'LPOVERLAPPED', 'LPDWORD', 'DWORD', 'BOOL'], ['hFile', 'lpOverlapped', 'lpNumberOfBytesTransferred', 'dwMilliseconds', 'bAlertable'], 'BOOL'), 'QueueUserAPC': (3, ['PAPCFUNC', 'THREADHANDLE', 'ULONG_PTR'], ['pfnAPC', 'hThread', 'dwData'], 'DWORD'), 'AcquireSRWLockExclusive': (1, ['PSRWLOCK'], ['SRWLock'], 'VOID'), 'AcquireSRWLockShared': (1, ['PSRWLOCK'], ['SRWLock'], 'VOID'), 'InitializeConditionVariable': (1, ['PCONDITION_VARIABLE'], ['ConditionVariable'], 'VOID'), 'InitializeSRWLock': (1, ['PSRWLOCK'], ['SRWLock'], 'VOID'), 'ReleaseSRWLockExclusive': (1, ['PSRWLOCK'], ['SRWLock'], 'VOID'), 'ReleaseSRWLockShared': (1, ['PSRWLOCK'], ['SRWLock'], 'VOID'), 'SleepConditionVariableCS': (3, ['PCONDITION_VARIABLE', 'PCRITICAL_SECTION', 'WAITTIMEOUT'], ['ConditionVariable', 'CriticalSection', 'dwMilliseconds'], 'BOOL'), 'SleepConditionVariableSRW': (4, ['PCONDITION_VARIABLE', 'PSRWLOCK', 'WAITTIMEOUT', 'CONDITION_VARIABLE_FLAGS'], ['ConditionVariable', 'SRWLock', 'dwMilliseconds', 'Flags'], 'BOOL'), 'TryAcquireSRWLockExclusive': (1, ['PSRWLOCK'], ['SRWLock'], 'BOOLEAN'), 'TryAcquireSRWLockShared': (1, ['PSRWLOCK'], ['SRWLock'], 'BOOLEAN'), 'WakeAllConditionVariable': (1, ['PCONDITION_VARIABLE'], ['ConditionVariable'], 'VOID'), 'WakeConditionVariable': (1, ['PCONDITION_VARIABLE'], ['ConditionVariable'], 'VOID'), 'DeleteCriticalSection': (1, ['LPCRITICAL_SECTION'], ['lpCriticalSection'], 'void'), 'EnterCriticalSection': (1, ['LPCRITICAL_SECTION'], ['lpCriticalSection'], 'void'), 'InitializeCriticalSection': (1, ['LPCRITICAL_SECTION'], ['lpCriticalSection'], 'void'), 'InitializeCriticalSectionAndSpinCount': (2, ['LPCRITICAL_SECTION', 'DWORD'], ['lpCriticalSection', 'dwSpinCount'], 'BOOL'), 'InitializeCriticalSectionEx': (3, ['LPCRITICAL_SECTION', 'DWORD', 'CRITICAL_SECTION_FLAGS'], ['lpCriticalSection', 'dwSpinCount', 'Flags'], 'BOOL'), 'LeaveCriticalSection': (1, ['LPCRITICAL_SECTION'], ['lpCriticalSection'], 'void'), 'SetCriticalSectionSpinCount': (2, ['LPCRITICAL_SECTION', 'DWORD'], ['lpCriticalSection', 'dwSpinCount'], 'DWORD'), 'TryEnterCriticalSection': (1, ['LPCRITICAL_SECTION'], ['lpCriticalSection'], 'BOOL'), 'CreateEvent': (4, ['LPSECURITY_ATTRIBUTES', 'BOOL', 'BOOL', 'LPCTSTR'], ['lpEventAttributes', 'bManualReset', 'bInitialState', 'lpName'], 'HANDLE'), 'CreateEventEx': (4, ['LPSECURITY_ATTRIBUTES', 'LPCTSTR', 'CREATE_EVENT_FLAGS', 'EVENTACCESSRIGHTS'], ['lpEventAttributes', 'lpName', 'dwFlags', 'dwDesiredAccess'], 'HANDLE'), 'OpenEvent': (3, ['EVENTACCESSRIGHTS', 'BOOL', 'LPCTSTR'], ['dwDesiredAccess', 'bInheritHandle', 'lpName'], 'HANDLE'), 'PulseEvent': (1, ['HANDLE'], ['hEvent'], 'BOOL'), 'ResetEvent': (1, ['HANDLE'], ['hEvent'], 'BOOL'), 'SetEvent': (1, ['HANDLE'], ['hEvent'], 'BOOL'), 'InitOnceBeginInitialize': (4, ['LPINIT_ONCE', 'INIT_ONCE_FLAGS', 'PBOOL', 'LPVOID*'], ['lpInitOnce', 'dwFlags', 'fPending', 'lpContext'], 'BOOL'), 'InitOnceComplete': (3, ['LPINIT_ONCE', 'INIT_ONCE_FLAGS', 'LPVOID'], ['lpInitOnce', 'dwFlags', 'lpContext'], 'BOOL'), 'InitOnceExecuteOnce': (4, ['PINIT_ONCE', 'PINIT_ONCE_FN', 'PVOID', 'LPVOID*'], ['InitOnce', 'InitFn', 'Parameter', 'Context'], 'BOOL'), 'InitOnceInitialize': (1, ['PINIT_ONCE'], ['InitOnce'], 'VOID'), 'InterlockedCompareExchange': (3, ['LONG VOLATILE*', 'LONG', 'LONG'], ['Destination', 'Exchange', 'Comparand'], 'LONG'), 'InterlockedCompareExchange64': (3, ['LONGLONG VOLATILE*', 'LONGLONG', 'LONGLONG'], ['Destination', 'Exchange', 'Comparand'], 'LONGLONG'), 'InterlockedDecrement': (1, ['LONG VOLATILE*'], ['Addend'], 'LONG'), 'InterlockedExchange': (2, ['LONG VOLATILE*', 'LONG'], ['Target', 'Value'], 'LONG'), 'InterlockedExchangeAdd': (2, ['LONG VOLATILE*', 'LONG'], ['Addend', 'Value'], 'LONG'), 'InterlockedIncrement': (1, ['LONG VOLATILE*'], ['Addend'], 'LONG'), 'CreateMutex': (3, ['LPSECURITY_ATTRIBUTES', 'BOOL', 'LPCTSTR'], ['lpMutexAttributes', 'bInitialOwner', 'lpName'], 'HANDLE'), 'CreateMutexEx': (4, ['LPSECURITY_ATTRIBUTES', 'LPCTSTR', 'CREATE_MUTEX_FLAGS', 'MUTEXACCESSRIGHTS'], ['lpMutexAttributes', 'lpName', 'dwFlags', 'dwDesiredAccess'], 'HANDLE'), 'OpenMutex': (3, ['MUTEXACCESSRIGHTS', 'BOOL', 'LPCTSTR'], ['dwDesiredAccess', 'bInheritHandle', 'lpName'], 'HANDLE'), 'ReleaseMutex': (1, ['HANDLE'], ['hMutex'], 'BOOL'), 'AddSIDToBoundaryDescriptor': (2, ['HANDLE*', 'PSID'], ['BoundaryDescriptor', 'RequiredSid'], 'BOOL'), 'AddIntegrityLabelToBoundaryDescriptor': (2, ['HANDLE*', 'PSID'], ['BoundaryDescriptor', 'IntegrityLabel'], 'BOOL'), 'ClosePrivateNamespace': (2, ['HANDLE', 'PRIVATENAMESPACEFLAG'], ['Handle', 'Flags'], 'BOOLEAN'), 'CreateBoundaryDescriptor': (2, ['LPCTSTR', 'ULONG'], ['Name', 'Flags'], 'HANDLE'), 'CreatePrivateNamespace': (3, ['LPSECURITY_ATTRIBUTES', 'LPVOID', 'LPCTSTR'], ['lpPrivateNamespaceAttributes', 'lpBoundaryDescriptor', 'lpAliasPrefix'], 'HANDLE'), 'DeleteBoundaryDescriptor': (1, ['HANDLE'], ['BoundaryDescriptor'], 'VOID'), 'OpenPrivateNamespace': (2, ['LPVOID', 'LPCTSTR'], ['lpBoundaryDescriptor', 'lpAliasPrefix'], 'HANDLE'), 'CreateSemaphore': (4, ['LPSECURITY_ATTRIBUTES', 'LONG', 'LONG', 'LPCTSTR'], ['lpSemaphoreAttributes', 'lInitialCount', 'lMaximumCount', 'lpName'], 'HANDLE'), 'CreateSemaphoreEx': (6, ['LPSECURITY_ATTRIBUTES', 'LONG', 'LONG', 'LPCTSTR', 'DWORD', 'SEMAPHOREACCESSRIGHTS'], ['lpSemaphoreAttributes', 'lInitialCount', 'lMaximumCount', 'lpName', 'dwFlags', 'dwDesiredAccess'], 'HANDLE'), 'OpenSemaphore': (3, ['SEMAPHOREACCESSRIGHTS', 'BOOL', 'LPCTSTR'], ['dwDesiredAccess', 'bInheritHandle', 'lpName'], 'HANDLE'), 'ReleaseSemaphore': (3, ['HANDLE', 'LONG', 'LPLONG'], ['hSemaphore', 'lReleaseCount', 'lpPreviousCount'], 'BOOL'), 'InitializeSListHead': (1, ['PSLIST_HEADER'], ['ListHead'], 'void'), 'InterlockedFlushSList': (1, ['PSLIST_HEADER'], ['ListHead'], 'PSLIST_ENTRY'), 'InterlockedPopEntrySList': (1, ['PSLIST_HEADER'], ['ListHead'], 'PSLIST_ENTRY'), 'InterlockedPushEntrySList': (2, ['PSLIST_HEADER', 'PSLIST_ENTRY'], ['ListHead', 'ListEntry'], 'PSLIST_ENTRY'), 'InterlockedPushListSList': (4, ['PSLIST_HEADER', 'PSLIST_ENTRY', 'PSLIST_ENTRY', 'ULONG'], ['ListHead', 'List', 'ListEnd', 'Count'], 'PSLIST_ENTRY'), 'InterlockedPushListSListEx': (4, ['PSLIST_HEADER', 'PSLIST_ENTRY', 'PSLIST_ENTRY', 'ULONG'], ['ListHead', 'List', 'ListEnd', 'Count'], 'PSLIST_ENTRY'), 'QueryDepthSList': (1, ['PSLIST_HEADER'], ['ListHead'], 'USHORT'), 'DeleteSynchronizationBarrier': (1, ['LPSYNCHRONIZATION_BARRIER'], ['lpBarrier'], 'BOOL'), 'EnterSynchronizationBarrier': (2, ['LPSYNCHRONIZATION_BARRIER', 'SYNCHRONIZATION_BARRIER_FLAGS'], ['lpBarrier', 'dwFlags'], 'BOOL'), 'InitializeSynchronizationBarrier': (3, ['LPSYNCHRONIZATION_BARRIER', 'LONG', 'LONG'], ['lpBarrier', 'lTotalThreads', 'lSpinCount'], 'BOOL'), 'ChangeTimerQueueTimer': (4, ['HANDLE', 'HANDLE', 'ULONG', 'ULONG'], ['TimerQueue', 'Timer', 'DueTime', 'Period'], 'BOOL'), 'CreateTimerQueue': (0, [], [], 'HANDLE'), 'CreateTimerQueueTimer': (7, ['PHANDLE', 'HANDLE', 'WAITORTIMERCALLBACK', 'PVOID', 'DWORD', 'DWORD', 'WORKITEMFLAGS'], ['phNewTimer', 'TimerQueue', 'Callback', 'Parameter', 'DueTime', 'Period', 'Flags'], 'BOOL'), 'DeleteTimerQueue': (1, ['HANDLE'], ['TimerQueue'], 'BOOL'), 'DeleteTimerQueueEx': (2, ['HANDLE', 'HANDLE'], ['TimerQueue', 'CompletionEvent'], 'BOOL'), 'DeleteTimerQueueTimer': (3, ['HANDLE', 'HANDLE', 'HANDLE'], ['TimerQueue', 'Timer', 'CompletionEvent'], 'BOOL'), 'RegisterWaitForSingleObject': (6, ['PHANDLE', 'HANDLE', 'WAITORTIMERCALLBACK', 'PVOID', 'WAITTIMEOUT', 'WORKITEMFLAGS'], ['phNewWaitObject', 'hObject', 'Callback', 'Context', 'dwMilliseconds', 'dwFlags'], 'BOOL'), 'SignalObjectAndWait': (4, ['HANDLE', 'HANDLE', 'WAITTIMEOUT', 'BOOL'], ['hObjectToSignal', 'hObjectToWaitOn', 'dwMilliseconds', 'bAlertable'], 'DWORD'), 'UnregisterWait': (1, ['HANDLE'], ['WaitHandle'], 'BOOL'), 'UnregisterWaitEx': (2, ['HANDLE', 'HANDLE'], ['WaitHandle', 'CompletionEvent'], 'BOOL'), 'WaitForMultipleObjects': (4, ['DWORD', 'CONST HANDLE*', 'BOOL', 'WAITTIMEOUT'], ['nCount', 'lpHandles', 'bWaitAll', 'dwMilliseconds'], '[WAIT_RESULT]'), 'WaitForMultipleObjectsEx': (5, ['DWORD', 'CONST HANDLE*', 'BOOL', 'WAITTIMEOUT', 'BOOL'], ['nCount', 'lpHandles', 'bWaitAll', 'dwMilliseconds', 'bAlertable'], '[WAIT_RESULT]'), 'WaitForSingleObject': (2, ['HANDLE', 'WAITTIMEOUT'], ['hHandle', 'dwMilliseconds'], '[WAIT_RESULT]'), 'WaitForSingleObjectEx': (3, ['HANDLE', 'WAITTIMEOUT', 'BOOL'], ['hHandle', 'dwMilliseconds', 'bAlertable'], '[WAIT_RESULT]'), 'WaitOnAddress': (4, ['VOID VOLATILE*', 'PVOID', 'SIZE_T', 'DWORD'], ['Address', 'CompareAddress', 'AddressSize', 'dwMilliseconds'], 'BOOL'), 'WakeByAddressAll': (1, ['PVOID'], ['Address'], 'VOID'), 'WakeByAddressSingle': (1, ['PVOID'], ['Address'], 'VOID'), 'CancelWaitableTimer': (1, ['HANDLE'], ['hTimer'], 'BOOL'), 'CreateWaitableTimer': (3, ['LPSECURITY_ATTRIBUTES', 'BOOL', 'LPCTSTR'], ['lpTimerAttributes', 'bManualReset', 'lpTimerName'], 'HANDLE'), 'CreateWaitableTimerEx': (4, ['LPSECURITY_ATTRIBUTES', 'LPCTSTR', 'CREATE_WAITABLE_TIMER_FLAGS', 'TIMERACCESSRIGHTS'], ['lpTimerAttributes', 'lpTimerName', 'dwFlags', 'dwDesiredAccess'], 'HANDLE'), 'OpenWaitableTimer': (3, ['TIMERACCESSRIGHTS', 'BOOL', 'LPCTSTR'], ['dwDesiredAccess', 'bInheritHandle', 'lpTimerName'], 'HANDLE'), 'SetWaitableTimer': (6, ['HANDLE', 'CONST LARGE_INTEGER*', 'LONG', 'PTIMERAPCROUTINE', 'LPVOID', 'BOOL'], ['hTimer', 'pDueTime', 'lPeriod', 'pfnCompletionRoutine', 'lpArgToCompletionRoutine', 'fResume'], 'BOOL'), 'SetWaitableTimerEx': (7, ['HANDLE', 'CONST LARGE_INTEGER*', 'LONG', 'PTIMERAPCROUTINE', 'LPVOID', 'PREASON_CONTEXT', 'ULONG'], ['hTimer', 'lpDueTime', 'lPeriod', 'pfnCompletionRoutine', 'lpArgToCompletionRoutine', 'WakeContext', 'TolerableDelay'], 'BOOL'), 'DnsHostnameToComputerName': (3, ['LPCTSTR', 'LPTSTR', 'LPDWORD'], ['Hostname', 'ComputerName', 'nSize'], 'BOOL'), 'EnumSystemFirmwareTables': (3, ['DWORD', 'PVOID', 'DWORD'], ['FirmwareTableProviderSignature', 'pFirmwareTableBuffer', 'BufferSize'], 'UINT'), 'ExpandEnvironmentStrings': (3, ['LPCTSTR', 'LPTSTR', 'DWORD'], ['lpSrc', 'lpDst', 'nSize'], 'DWORD'), 'GetComputerName': (2, ['LPTSTR', 'LPDWORD'], ['lpBuffer', 'lpnSize'], 'BOOL'), 'GetComputerNameEx': (3, ['COMPUTER_NAME_FORMAT', 'LPTSTR', 'LPDWORD'], ['NameType', 'lpBuffer', 'lpnSize'], 'BOOL'), 'GetFirmwareEnvironmentVariable': (4, ['LPCTSTR', 'LPCTSTR', 'PVOID', 'DWORD'], ['lpName', 'lpGuid', 'pBuffer', 'nSize'], 'DWORD'), 'GetFirmwareEnvironmentVariableEx': (5, ['LPCTSTR', 'LPCTSTR', 'PVOID', 'DWORD', 'PDWORD'], ['lpName', 'lpGuid', 'pBuffer', 'nSize', 'pdwAttribubutes'], 'DWORD'), 'GetFirmwareType': (1, ['PFIRMWARE_TYPE'], ['FirmwareType'], 'BOOL'), 'GetNativeSystemInfo': (1, ['LPSYSTEM_INFO'], ['lpSystemInfo'], 'void'), 'GetProductInfo': (5, ['DWORD', 'DWORD', 'DWORD', 'DWORD', 'PRODUCTTYPE*'], ['dwOSMajorVersion', 'dwOSMinorVersion', 'dwSpMajorVersion', 'dwSpMinorVersion', 'pdwReturnedProductType'], 'BOOL'), 'GetSystemDirectory': (2, ['LPTSTR', 'UINT'], ['lpBuffer', 'uSize'], 'UINT'), 'GetSystemFirmwareTable': (4, ['DWORD', 'DWORD', 'PVOID', 'DWORD'], ['FirmwareTableProviderSignature', 'FirmwareTableID', 'pFirmwareTableBuffer', 'BufferSize'], 'UINT'), 'GetSystemInfo': (1, ['LPSYSTEM_INFO'], ['lpSystemInfo'], 'void'), 'GetSystemRegistryQuota': (2, ['PDWORD', 'PDWORD'], ['pdwQuotaAllowed', 'pdwQuotaUsed'], 'BOOL'), 'GetSystemWindowsDirectory': (2, ['LPTSTR', 'UINT'], ['lpBuffer', 'uSize'], 'UINT'), 'GetSystemWow64Directory': (2, ['LPTSTR', 'UINT'], ['lpBuffer', 'uSize'], 'UINT'), 'GetVersion': (0, [], [], 'DWORD'), 'GetVersionEx': (1, ['LPOSVERSIONINFO'], ['lpVersionInfo'], 'BOOL'), 'GetWindowsDirectory': (2, ['LPTSTR', 'UINT'], ['lpBuffer', 'uSize'], 'UINT'), 'IsProcessorFeaturePresent': (1, ['PROCESSORFEATUREENUM'], ['ProcessorFeature'], 'BOOL'), 'SetComputerName': (1, ['LPCTSTR'], ['lpComputerName'], 'BOOL'), 'SetComputerNameEx': (2, ['COMPUTER_NAME_FORMAT', 'LPCTSTR'], ['NameType', 'lpBuffer'], 'BOOL'), 'SetFirmwareEnvironmentVariable': (4, ['LPCTSTR', 'LPCTSTR', 'PVOID', 'DWORD'], ['lpName', 'lpGuid', 'pBuffer', 'nSize'], 'BOOL'), 'VerifyVersionInfo': (3, ['LPOSVERSIONINFOEX', 'NTVERTYPE', 'DWORDLONG'], ['lpVersionInfo', 'dwTypeMask', 'dwlConditionMask'], 'BOOL'), 'VerSetConditionMask': (3, ['ULONGLONG', 'NTVERTYPE', 'VEROPERATOR'], ['dwlConditionMask', 'dwTypeBitMask', 'dwConditionMask'], 'ULONGLONG'), 'BackupRead': (7, ['HANDLE', 'LPBYTE', 'DWORD', 'LPDWORD', 'BOOL', 'BOOL', 'LPVOID*'], ['hFile', 'lpBuffer', 'nNumberOfBytesToRead', 'lpNumberOfBytesRead', 'bAbort', 'bProcessSecurity', 'lpContext'], 'BOOL'), 'BackupSeek': (6, ['HANDLE', 'DWORD', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPVOID*'], ['hFile', 'dwLowBytesToSeek', 'dwHighBytesToSeek', 'lpdwLowByteSeeked', 'lpdwHighByteSeeked', 'lpContext'], 'BOOL'), 'BackupWrite': (7, ['HANDLE', 'LPBYTE', 'DWORD', 'LPDWORD', 'BOOL', 'BOOL', 'LPVOID*'], ['hFile', 'lpBuffer', 'nNumberOfBytesToWrite', 'lpNumberOfBytesWritten', 'bAbort', 'bProcessSecurity', 'lpContext'], 'BOOL'), 'CreateTapePartition': (4, ['HANDLE', 'DWORD', 'DWORD', 'DWORD'], ['hDevice', 'dwPartitionMethod', 'dwCount', 'dwSize'], '[ERROR_CODE]'), 'EraseTape': (3, ['HANDLE', 'DWORD', 'BOOL'], ['hDevice', 'dwEraseType', 'bImmediate'], '[ERROR_CODE]'), 'GetTapeParameters': (4, ['HANDLE', 'DWORD', 'LPDWORD', 'LPVOID'], ['hDevice', 'dwOperation', 'lpdwSize', 'lpTapeInformation'], '[ERROR_CODE]'), 'GetTapePosition': (5, ['HANDLE', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hDevice', 'dwPositionType', 'lpdwPartition', 'lpdwOffsetLow', 'lpdwOffsetHigh'], '[ERROR_CODE]'), 'GetTapeStatus': (1, ['HANDLE'], ['hDevice'], '[ERROR_CODE]'), 'PrepareTape': (3, ['HANDLE', 'DWORD', 'BOOL'], ['hDevice', 'dwOperation', 'bImmediate'], '[ERROR_CODE]'), 'SetTapeParameters': (3, ['HANDLE', 'DWORD', 'LPVOID'], ['hDevice', 'dwOperation', 'lpTapeInformation'], '[ERROR_CODE]'), 'SetTapePosition': (6, ['HANDLE', 'DWORD', 'DWORD', 'DWORD', 'DWORD', 'BOOL'], ['hDevice', 'dwPositionMethod', 'dwPartition', 'dwOffsetLow', 'dwOffsetHigh', 'bImmediate'], '[ERROR_CODE]'), 'WriteTapemark': (4, ['HANDLE', 'DWORD', 'DWORD', 'BOOL'], ['hDevice', 'dwTapemarkType', 'dwTapemarkCount', 'bImmediate'], '[ERROR_CODE]'), 'ProcessIdToSessionId': (2, ['DWORD', 'DWORD*'], ['dwProcessId', 'pSessionId'], 'BOOL'), 'WTSGetActiveConsoleSessionId': (0, [], [], 'DWORD'), 'GetSystemTime': (1, ['LPSYSTEMTIME'], ['lpSystemTime'], 'void'), 'GetSystemTimeAdjustment': (3, ['PDWORD', 'PDWORD', 'PBOOL'], ['lpTimeAdjustment', 'lpTimeIncrement', 'lpTimeAdjustmentDisabled'], 'BOOL'), 'SetSystemTime': (1, ['CONST SYSTEMTIME*'], ['lpSystemTime'], 'BOOL'), 'SetSystemTimeAdjustment': (2, ['DWORD', 'BOOL'], ['dwTimeAdjustment', 'bTimeAdjustmentDisabled'], 'BOOL'), 'FileTimeToLocalFileTime': (2, ['CONST FILETIME*', 'LPFILETIME'], ['lpFileTime', 'lpLocalFileTime'], 'BOOL'), 'GetDynamicTimeZoneInformation': (1, ['PDYNAMIC_TIME_ZONE_INFORMATION'], ['pTimeZoneInformation'], 'DWORD'), 'GetLocalTime': (1, ['LPSYSTEMTIME'], ['lpSystemTime'], 'void'), 'GetTimeZoneInformation': (1, ['LPTIME_ZONE_INFORMATION'], ['lpTimeZoneInformation'], 'DWORD'), 'GetTimeZoneInformationForYear': (3, ['USHORT', 'PDYNAMIC_TIME_ZONE_INFORMATION', 'LPTIME_ZONE_INFORMATION'], ['wYear', 'pdtzi', 'ptzi'], 'BOOL'), 'SetDynamicTimeZoneInformation': (1, ['CONST DYNAMIC_TIME_ZONE_INFORMATION*'], ['lpTimeZoneInformation'], 'BOOL'), 'SetLocalTime': (1, ['CONST SYSTEMTIME*'], ['lpSystemTime'], 'BOOL'), 'SetTimeZoneInformation': (1, ['CONST TIME_ZONE_INFORMATION*'], ['lpTimeZoneInformation'], 'BOOL'), 'SystemTimeToTzSpecificLocalTime': (3, ['LPTIME_ZONE_INFORMATION', 'LPSYSTEMTIME', 'LPSYSTEMTIME'], ['lpTimeZone', 'lpUniversalTime', 'lpLocalTime'], 'BOOL'), 'TzSpecificLocalTimeToSystemTime': (3, ['LPTIME_ZONE_INFORMATION', 'LPSYSTEMTIME', 'LPSYSTEMTIME'], ['lpTimeZoneInformation', 'lpLocalTime', 'lpUniversalTime'], 'BOOL'), 'CompareFileTime': (2, ['CONST FILETIME*', 'CONST FILETIME*'], ['lpFileTime1', 'lpFileTime2'], 'LONG'), 'FileTimeToSystemTime': (2, ['CONST FILETIME*', 'LPSYSTEMTIME'], ['lpFileTime', 'lpSystemTime'], 'BOOL'), 'GetFileTime': (4, ['HANDLE', 'LPFILETIME', 'LPFILETIME', 'LPFILETIME'], ['hFile', 'lpCreationTime', 'lpLastAccessTime', 'lpLastWriteTime'], 'BOOL'), 'GetSystemTimeAsFileTime': (1, ['LPFILETIME'], ['lpSystemTimeAsFileTime'], 'void'), 'GetSystemTimePreciseAsFileTime': (1, ['LPFILETIME'], ['lpSystemTimeAsFileTime'], 'VOID'), 'LocalFileTimeToFileTime': (2, ['CONST FILETIME*', 'LPFILETIME'], ['lpLocalFileTime', 'lpFileTime'], 'BOOL'), 'SetFileTime': (4, ['HANDLE', 'CONST FILETIME*', 'CONST FILETIME*', 'CONST FILETIME*'], ['hFile', 'lpCreationTime', 'lpLastAccessTime', 'lpLastWriteTime'], 'BOOL'), 'SystemTimeToFileTime': (2, ['CONST SYSTEMTIME*', 'LPFILETIME'], ['lpSystemTime', 'lpFileTime'], 'BOOL'), 'DosDateTimeToFileTime': (3, ['WORD', 'WORD', 'LPFILETIME'], ['wFatDate', 'wFatTime', 'lpFileTime'], 'BOOL'), 'FileTimeToDosDateTime': (3, ['CONST FILETIME*', 'LPWORD', 'LPWORD'], ['lpFileTime', 'lpFatDate', 'lpFatTime'], 'BOOL'), 'GetSystemTimes': (3, ['LPFILETIME', 'LPFILETIME', 'LPFILETIME'], ['lpIdleTime', 'lpKernelTime', 'lpUserTime'], 'BOOL'), 'GetTickCount': (0, [], [], 'DWORD'), 'GetTickCount64': (0, [], [], 'ULONGLONG'), 'QueryPerformanceCounter': (1, ['LARGE_INTEGER*'], ['lpPerformanceCount'], 'BOOL'), 'QueryPerformanceFrequency': (1, ['LARGE_INTEGER*'], ['lpFrequency'], 'BOOL'), 'IsDBCSLeadByte': (1, ['BYTE'], ['TestChar'], 'BOOL'), 'IsDBCSLeadByteEx': (2, ['CODEPAGEENUM', 'BYTE'], ['CodePage', 'TestChar'], 'BOOL'), 'MultiByteToWideChar': (6, ['CODEPAGEENUM', 'MULTIBYTEFLAGS', 'LPCSTR', 'INT', 'LPWSTR', 'INT'], ['CodePage', 'dwFlags', 'lpMultiByteStr', 'cbMultiByte', 'lpWideCharStr', 'cchWideChar'], 'int'), 'WideCharToMultiByte': (8, ['CODEPAGEENUM', 'WIDECHARFLAGS', 'LPCWSTR', 'INT', 'LPSTR', 'INT', 'LPCSTR', 'LPBOOL'], ['CodePage', 'dwFlags', 'lpWideCharStr', 'cchWideChar', 'lpMultiByteStr', 'cbMultiByte', 'lpDefaultChar', 'lpUsedDefaultChar'], 'int'), 'VerLanguageName': (3, ['DWORD', 'LPTSTR', 'DWORD'], ['wLang', 'szLang', 'cchLang'], 'DWORD'), 'RaiseFailFastException': (3, ['PEXCEPTION_RECORD', 'PCONTEXT', 'FAIL_FAST_EXCEPTION_FLAGS'], ['pExceptionRecord', 'pContextRecord', 'dwFlags'], 'VOID'), 'WerGetFlags': (2, ['PROCESSHANDLE', 'WER_FAULT_REPORTING_FLAGS*'], ['hProcess', 'pdwFlags'], 'HRESULT'), 'WerRegisterFile': (3, ['PCWSTR', 'WER_REGISTER_FILE_TYPE', 'WERFILEFLAGS'], ['pwzFile', 'regFileType', 'dwFlags'], 'HRESULT'), 'WerRegisterMemoryBlock': (2, ['PVOID', 'DWORD'], ['pvAddress', 'dwSize'], 'HRESULT'), 'WerRegisterRuntimeExceptionModule': (2, ['PCWSTR', 'PVOID'], ['pwszOutOfProcessCallbackDll', 'pContext'], 'HRESULT'), 'WerSetFlags': (1, ['WER_FAULT_REPORTING_FLAGS'], ['dwFlags'], 'HRESULT'), 'WerUnregisterFile': (1, ['PCWSTR'], ['pwzFilePath'], 'HRESULT'), 'WerUnregisterMemoryBlock': (1, ['PVOID'], ['pvAddress'], 'HRESULT'), 'WerUnregisterRuntimeExceptionModule': (2, ['PCWSTR', 'PVOID'], ['pwszOutOfProcessCallbackDll', 'pContext'], 'HRESULT'), 'CreateDirectory': (2, ['LPCTSTR', 'LPSECURITY_ATTRIBUTES'], ['lpPathName', 'lpSecurityAttributes'], 'BOOL'), 'CreateDirectoryEx': (3, ['LPCTSTR', 'LPCTSTR', 'LPSECURITY_ATTRIBUTES'], ['lpTemplateDirectory', 'lpNewDirectory', 'lpSecurityAttributes'], 'BOOL'), 'CreateDirectoryTransacted': (4, ['LPCTSTR', 'LPCTSTR', 'LPSECURITY_ATTRIBUTES', 'HANDLE'], ['lpTemplateDirectory', 'lpNewDirectory', 'lpSecurityAttributes', 'hTransaction'], 'BOOL'), 'FindCloseChangeNotification': (1, ['HANDLE'], ['hChangeHandle'], 'BOOL'), 'FindFirstChangeNotification': (3, ['LPCTSTR', 'BOOL', 'FILE_NOTIFY_CHANGE_FLAGS'], ['lpPathName', 'bWatchSubtree', 'dwNotifyFilter'], 'HANDLE'), 'FindNextChangeNotification': (1, ['HANDLE'], ['hChangeHandle'], 'BOOL'), 'GetCurrentDirectory': (2, ['DWORD', 'LPTSTR'], ['nBufferLength', 'lpBuffer'], 'DWORD'), 'ReadDirectoryChangesW': (8, ['HANDLE', 'LPVOID', 'DWORD', 'BOOL', 'FILE_NOTIFY_CHANGE_FLAGS', 'LPDWORD', 'LPOVERLAPPED', 'LPOVERLAPPED_COMPLETION_ROUTINE'], ['hDirectory', 'lpBuffer', 'nBufferLength', 'bWatchSubtree', 'dwNotifyFilter', 'lpBytesReturned', 'lpOverlapped', 'lpCompletionRoutine'], 'BOOL'), 'RemoveDirectory': (1, ['LPCTSTR'], ['lpPathName'], 'BOOL'), 'RemoveDirectoryTransacted': (2, ['LPCTSTR', 'HANDLE'], ['lpPathName', 'hTransaction'], 'BOOL'), 'SetCurrentDirectory': (1, ['LPCTSTR'], ['lpPathName'], 'BOOL'), 'GetDiskFreeSpace': (5, ['LPCTSTR', 'LPDWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['lpRootPathName', 'lpSectorsPerCluster', 'lpBytesPerSector', 'lpNumberOfFreeClusters', 'lpTotalNumberOfClusters'], 'BOOL'), 'GetDiskFreeSpaceEx': (4, ['LPCTSTR', 'PULARGE_INTEGER', 'PULARGE_INTEGER', 'PULARGE_INTEGER'], ['lpDirectoryName', 'lpFreeBytesAvailable', 'lpTotalNumberOfBytes', 'lpTotalNumberOfFreeBytes'], 'BOOL'), 'DefineDosDevice': (3, ['DDD_FLAGS', 'LPCTSTR', 'LPCTSTR'], ['dwFlags', 'lpDeviceName', 'lpTargetPath'], 'BOOL'), 'DeleteVolumeMountPoint': (1, ['LPCTSTR'], ['lpszVolumeMountPoint'], 'BOOL'), 'FindFirstVolume': (2, ['LPTSTR', 'DWORD'], ['lpszVolumeName', 'cchBufferLength'], 'HANDLE'), 'FindNextVolume': (3, ['HANDLE', 'LPTSTR', 'DWORD'], ['hFindVolume', 'lpszVolumeName', 'cchBufferLength'], 'BOOL'), 'FindNextVolumeMountPoint': (3, ['HANDLE', 'LPTSTR', 'DWORD'], ['hFindVolumeMountPoint', 'lpszVolumeMountPoint', 'cchBufferLength'], 'BOOL'), 'FindVolumeClose': (1, ['HANDLE'], ['hFindVolume'], 'BOOL'), 'FindVolumeMountPointClose': (1, ['HANDLE'], ['hFindVolumeMountPoint'], 'BOOL'), 'GetDriveType': (1, ['LPCTSTR'], ['lpRootPathName'], '[DRIVE_TYPE]'), 'GetLogicalDrives': (0, [], [], 'DWORD'), 'GetLogicalDriveStrings': (2, ['DWORD', 'LPTSTR'], ['nBufferLength', 'lpBuffer'], 'DWORD'), 'GetVolumeInformation': (8, ['LPCTSTR', 'LPTSTR', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPFILE_SYSTEM_FLAGS', 'LPTSTR', 'DWORD'], ['lpRootPathName', 'lpVolumeNameBuffer', 'nVolumeNameSize', 'lpVolumeSerialNumber', 'lpMaximumComponentLength', 'lpFileSystemFlags', 'lpFileSystemNameBuffer', 'nFileSystemNameSize'], 'BOOL'), 'GetVolumeInformationByHandleW': (8, ['HANDLE', 'LPTSTR', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPFILE_SYSTEM_FLAGS', 'LPTSTR', 'DWORD'], ['hFile', 'lpVolumeNameBuffer', 'nVolumeNameSize', 'lpVolumeSerialNumber', 'lpMaximumComponentLength', 'lpFileSystemFlags', 'lpFileSystemNameBuffer', 'nFileSystemNameSize'], 'BOOL'), 'GetVolumeNameForVolumeMountPoint': (3, ['LPCTSTR', 'LPTSTR', 'DWORD'], ['lpszVolumeMountPoint', 'lpszVolumeName', 'cchBufferLength'], 'BOOL'), 'GetVolumePathName': (3, ['LPCTSTR', 'LPTSTR', 'DWORD'], ['lpszFileName', 'lpszVolumePathName', 'cchBufferLength'], 'BOOL'), 'GetVolumePathNamesForVolumeName': (4, ['LPCTSTR', 'LPTSTR', 'DWORD', 'PDWORD'], ['lpszVolumeName', 'lpszVolumePathNames', 'cchBufferLength', 'lpcchReturnLength'], 'BOOL'), 'QueryDosDevice': (3, ['LPCTSTR', 'LPTSTR', 'DWORD'], ['lpDeviceName', 'lpTargetPath', 'ucchMax'], 'DWORD'), 'SetVolumeLabel': (2, ['LPCTSTR', 'LPCTSTR'], ['lpRootPathName', 'lpVolumeName'], 'BOOL'), 'FindFirstVolumeMountPoint': (3, ['LPTSTR', 'LPTSTR', 'DWORD'], ['lpszRootPathName', 'lpszVolumeMountPoint', 'cchBufferLength'], 'HANDLE'), 'SetVolumeMountPoint': (2, ['LPCTSTR', 'LPCTSTR'], ['lpszVolumeMountPoint', 'lpszVolumeName'], 'BOOL'), 'CreatePipe': (4, ['PHANDLE', 'PHANDLE', 'LPSECURITY_ATTRIBUTES', 'DWORD'], ['hReadPipe', 'hWritePipe', 'lpPipeAttributes', 'nSize'], 'BOOL'), 'CallNamedPipe': (7, ['LPCTSTR', 'LPVOID', 'DWORD', 'LPVOID', 'DWORD', 'LPDWORD', 'NMPWAIT'], ['lpNamedPipeName', 'lpInBuffer', 'nInBufferSize', 'lpOutBuffer', 'nOutBufferSize', 'lpBytesRead', 'nTimeOut'], 'BOOL'), 'ConnectNamedPipe': (2, ['HANDLE', 'LPOVERLAPPED'], ['hNamedPipe', 'lpOverlapped'], 'BOOL'), 'CreateNamedPipe': (8, ['LPCTSTR', 'PIPE_ACCESS', 'PIPE_MODE', 'DWORD', 'DWORD', 'DWORD', 'DWORD', 'LPSECURITY_ATTRIBUTES'], ['lpName', 'dwOpenMode', 'dwPipeMode', 'nMaxInstances', 'nOutBufferSize', 'nInBufferSize', 'nDefaultTimeOut', 'lpSecurityAttributes'], 'HANDLE'), 'DisconnectNamedPipe': (1, ['HANDLE'], ['hNamedPipe'], 'BOOL'), 'GetNamedPipeClientComputerName': (3, ['HANDLE', 'LPTSTR', 'ULONG'], ['Pipe', 'ClientComputerName', 'ClientComputerNameLength'], 'BOOL'), 'GetNamedPipeClientProcessId': (2, ['HANDLE', 'PULONG'], ['Pipe', 'ClientProcessId'], 'BOOL'), 'GetNamedPipeClientSessionId': (2, ['HANDLE', 'PULONG'], ['Pipe', 'ClientSessionId'], 'BOOL'), 'GetNamedPipeHandleState': (7, ['HANDLE', 'PIPE_STATE*', 'LPDWORD', 'LPDWORD', 'LPDWORD', 'LPTSTR', 'DWORD'], ['hNamedPipe', 'lpState', 'lpCurInstances', 'lpMaxCollectionCount', 'lpCollectDataTimeout', 'lpUserName', 'nMaxUserNameSize'], 'BOOL'), 'GetNamedPipeInfo': (5, ['HANDLE', 'PIPE_TYPE*', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hNamedPipe', 'lpFlags', 'lpOutBufferSize', 'lpInBufferSize', 'lpMaxInstances'], 'BOOL'), 'GetNamedPipeServerProcessId': (2, ['HANDLE', 'PULONG'], ['Pipe', 'ServerProcessId'], 'BOOL'), 'GetNamedPipeServerSessionId': (2, ['HANDLE', 'PULONG'], ['Pipe', 'ServerSessionId'], 'BOOL'), 'PeekNamedPipe': (6, ['HANDLE', 'LPVOID', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hNamedPipe', 'lpBuffer', 'nBufferSize', 'lpBytesRead', 'lpTotalBytesAvail', 'lpBytesLeftThisMessage'], 'BOOL'), 'SetNamedPipeHandleState': (4, ['HANDLE', 'PIPE_MODE*', 'LPDWORD', 'LPDWORD'], ['hNamedPipe', 'lpMode', 'lpMaxCollectionCount', 'lpCollectDataTimeout'], 'BOOL'), 'TransactNamedPipe': (7, ['HANDLE', 'LPVOID', 'DWORD', 'LPVOID', 'DWORD', 'LPDWORD', 'LPOVERLAPPED'], ['hNamedPipe', 'lpInBuffer', 'nInBufferSize', 'lpOutBuffer', 'nOutBufferSize', 'lpBytesRead', 'lpOverlapped'], 'BOOL'), 'WaitNamedPipe': (2, ['LPCTSTR', 'NMPWAIT'], ['lpNamedPipeName', 'nTimeOut'], 'BOOL'), 'DisableThreadProfiling': (1, ['HANDLE'], ['PerformanceDataHandle'], '[ERROR_CODE]'), 'EnableThreadProfiling': (4, ['THREADHANDLE', 'THREAD_PROFILING_FLAGS', 'DWORD64', 'HANDLE'], ['ThreadHandle', 'Flags', 'HardwareCounters', 'PerformanceDataHandle'], '[ERROR_CODE]'), 'QueryThreadProfiling': (2, ['THREADHANDLE', 'PBOOLEAN'], ['ThreadHandle', 'Enabled'], '[ERROR_CODE]'), 'ReadThreadProfilingData': (3, ['HANDLE', 'READ_THREAD_PROFILING_FLAGS', 'PPERFORMANCE_DATA'], ['PerformanceDataHandle', 'Flags', 'PerformanceData'], '[ERROR_CODE]'), 'BaseFormatTimeOut': (2, ['LARGE_INTEGER*', 'DWORD'], ['pLITimeout', 'dwMillis'], 'LARGE_INTEGER*'), 'BaseGetNamedObjectDirectory': (1, ['HANDLE*'], ['phDir'], 'NTSTATUS'), 'Basep8BitStringToDynamicUnicodeString': (2, ['PUNICODE_STRING', 'LPCSTR'], ['pConvertedStr', 'pszAnsiStr'], 'BOOL'), 'CheckElevationEnabled': (1, ['BOOL*'], ['pResult'], '[ERROR_CODE]'), 'ConsoleMenuControl': (3, ['HANDLE', 'DWORD', 'DWORD'], ['hConOut', 'cmdIdLow', 'cmdIdHigh'], 'HMENU'), 'SetConsoleCursor': (2, ['HANDLE', 'HCURSOR'], ['hConsole', 'hCursor'], 'BOOL'), 'SetConsoleMaximumWindowSize': (2, ['HANDLE', 'DWORD'], ['hConsole', 'dwUnk'], 'BOOL'), 'SetStdHandleEx': (3, ['STDHANDLE', 'HANDLE', 'HANDLE*'], ['dwStdHandle', 'hNewHandle', 'phOldHandle'], 'BOOL'), 'ShowConsoleCursor': (2, ['HANDLE', 'BOOL'], ['hConsoleOutput', 'bShow'], 'int'), 'AddLocalAlternateComputerName': (2, ['LPCTSTR', 'ULONG'], ['lpDnsFQHostname', 'ulFlags'], '[ERROR_CODE]'), 'DelayLoadFailureHook': (2, ['LPCSTR', 'LPCSTR'], ['pszDllName', 'pszProcName'], 'FARPROC'), 'ResolveDelayLoadedAPI': (6, ['HMODULE-PVOID', 'PCIMAGE_DELAYLOAD_DESCRIPTOR', 'PDELAYLOAD_FAILURE_DLL_CALLBACK', 'PDELAYLOAD_FAILURE_SYSTEM_ROUTINE', 'PIMAGE_THUNK_DATA', 'ULONG'], ['ParentModuleBase', 'DelayloadDescriptor', 'FailureDllHook', 'FailureSystemHook', 'ThunkAddress', 'Flags'], 'PVOID'), 'ResolveDelayLoadsFromDll': (3, ['HMODULE-PVOID', 'LPCSTR', 'ULONG'], ['ParentBase', 'TargetDllName', 'Flags'], 'NTSTATUS'), 'DecodePointer': (1, ['PVOID'], ['Ptr'], 'PVOID'), 'DecodeSystemPointer': (1, ['PVOID'], ['Ptr'], 'PVOID'), 'EncodePointer': (1, ['PVOID'], ['Ptr'], 'PVOID'), 'EncodeSystemPointer': (1, ['PVOID'], ['Ptr'], 'PVOID'), 'MulDiv': (3, ['INT', 'INT', 'INT'], ['nNumber', 'nNumerator', 'nDenominator'], 'int'), 'CheckTokenCapability': (3, ['HANDLE', 'PSID', 'PBOOL'], ['TokenHandle', 'CapabilitySidToCheck', 'HasCapability'], 'BOOL'), 'CheckTokenMembershipEx': (4, ['HANDLE', 'PSID', 'CTM_FLAGS', 'PBOOL'], ['TokenHandle', 'SidToCheck', 'Flags', 'IsMember'], 'BOOL'), 'AddResourceAttributeAce': (7, ['PACL', 'DWORD', 'ACEFLAGS', 'ACCESS_MASK_DWORD', 'PSID', 'PCLAIM_SECURITY_ATTRIBUTES_INFORMATION', 'PDWORD'], ['pAcl', 'dwAceRevision', 'AceFlags', 'AccessMask', 'pSid', 'pAttributeInfo', 'pReturnLength'], 'BOOL'), 'AddScopedPolicyIDAce': (5, ['PACL', 'DWORD', 'ACEFLAGS', 'ACCESS_MASK_DWORD', 'PSID'], ['pAcl', 'dwAceRevision', 'AceFlags', 'AccessMask', 'pSid'], 'BOOL'), 'ClosePackageInfo': (1, ['PACKAGE_INFO_REFERENCE'], ['packageInfoReference'], '[ERROR_CODE_LONG]'), 'GetApplicationUserModelId': (3, ['HANDLE', 'UINT32*', 'PWSTR'], ['hProcess', 'applicationUserModelIdLength', 'applicationUserModelId'], '[ERROR_CODE_LONG]'), 'GetCurrentApplicationUserModelId': (2, ['UINT32*', 'PWSTR'], ['applicationUserModelIdLength', 'applicationUserModelId'], '[ERROR_CODE_LONG]'), 'GetCurrentPackageFamilyName': (2, ['UINT32*', 'PWSTR'], ['packageFamilyNameLength', 'packageFamilyName'], '[ERROR_CODE_LONG]'), 'GetCurrentPackageFullName': (2, ['UINT32*', 'PWSTR'], ['packageFullNameLength', 'packageFullName'], '[ERROR_CODE_LONG]'), 'GetCurrentPackageId': (2, ['UINT32*', 'BYTE*'], ['bufferLength', 'buffer'], '[ERROR_CODE_LONG]'), 'GetCurrentPackageInfo': (4, ['PACKAGE_FILTER_FLAGS', 'UINT32*', 'BYTE*', 'UINT32*'], ['flags', 'bufferLength', 'buffer', 'count'], '[ERROR_CODE_LONG]'), 'GetCurrentPackagePath': (2, ['UINT32*', 'PWSTR'], ['pathLength', 'path'], '[ERROR_CODE_LONG]'), 'GetPackageFamilyName': (3, ['HANDLE', 'UINT32*', 'PWSTR'], ['hProcess', 'packageFamilyNameLength', 'packageFamilyName'], '[ERROR_CODE_LONG]'), 'GetPackageFullName': (3, ['HANDLE', 'UINT32*', 'PWSTR'], ['hProcess', 'packageFullNameLength', 'packageFullName'], '[ERROR_CODE_LONG]'), 'GetPackageId': (3, ['HANDLE', 'UINT32*', 'BYTE*'], ['hProcess', 'bufferLength', 'pBuffer'], '[ERROR_CODE_LONG]'), 'GetPackageInfo': (5, ['PACKAGE_INFO_REFERENCE', 'PACKAGE_CONSTANTS', 'UINT32*', 'BYTE*', 'UINT32*'], ['packageInfoReference', 'flags', 'bufferLength', 'buffer', 'count'], '[ERROR_CODE_LONG]'), 'GetPackagePath': (4, ['CONST PACKAGE_ID*', 'CONST UINT32', 'UINT32*', 'PWSTR'], ['packageId', 'reserved', 'pathLength', 'path'], '[ERROR_CODE_LONG]'), 'GetPackagesByPackageFamily': (5, ['PWSTR', 'UINT32*', 'PWSTR*', 'UINT32*', 'WCHAR*'], ['packageFamilyName', 'count', 'packageFullNames', 'bufferLength', 'buffer'], '[ERROR_CODE_LONG]'), 'OpenPackageInfoByFullName': (3, ['PCWSTR', 'CONST UINT32', 'PACKAGE_INFO_REFERENCE*'], ['packageFullName', 'reserved', 'packageInfoReference'], '[ERROR_CODE_LONG]'), 'PackageFamilyNameFromFullName': (3, ['PCWSTR', 'UINT32*', 'PWSTR'], ['packageFullName', 'packageFamilyNameLength', 'packageFamilyName'], '[ERROR_CODE_LONG]'), 'PackageFamilyNameFromId': (3, ['CONST PACKAGE_ID*', 'UINT32*', 'PWSTR'], ['packageId', 'packageFamilyNameLength', 'packageFamilyName'], '[ERROR_CODE_LONG]'), 'PackageFullNameFromId': (3, ['CONST PACKAGE_ID*', 'UINT32*', 'PWSTR'], ['packageId', 'packageFullNameLength', 'packageFullName'], '[ERROR_CODE_LONG]'), 'PackageIdFromFullName': (4, ['PCWSTR', 'PACKAGE_INFORMATION_FLAGS', 'UINT32*', 'BYTE*'], ['packageFullName', 'flags', 'bufferLength', 'buffer'], '[ERROR_CODE_LONG]'), 'PackageNameAndPublisherIdFromFamilyName': (5, ['PCWSTR', 'UINT32*', 'PWSTR', 'UINT32*', 'PWSTR'], ['packageFamilyName', 'packageNameLength', 'packageName', 'packagePublisherIdLength', 'packagePublisherId'], '[ERROR_CODE_LONG]'), 'K32EmptyWorkingSet': (1, ['PROCESSHANDLE'], ['hProcess'], 'BOOL'), 'K32EnumDeviceDrivers': (3, ['LPVOID*', 'DWORD', 'LPDWORD'], ['lpImageBase', 'cb', 'lpcbNeeded'], 'BOOL'), 'K32EnumPageFiles': (2, ['PENUM_PAGE_CALLBACK', 'LPVOID'], ['pCallbackRoutine', 'lpContext'], 'BOOL'), 'K32EnumProcesses': (3, ['DWORD*', 'DWORD', 'DWORD*'], ['pProcessIds', 'cb', 'pBytesReturned'], 'BOOL'), 'K32EnumProcessModules': (4, ['PROCESSHANDLE', 'HMODULE*', 'DWORD', 'LPDWORD'], ['hProcess', 'lphModule', 'cb', 'lpcbNeeded'], 'BOOL'), 'K32EnumProcessModulesEx': (5, ['PROCESSHANDLE', 'HMODULE*', 'DWORD', 'LPDWORD', 'DWORD'], ['hProcess', 'lphModule', 'cb', 'lpcbNeeded', 'dwFilterFlag'], 'BOOL'), 'K32GetDeviceDriverBaseName': (3, ['LPVOID', 'LPTSTR', 'DWORD'], ['ImageBase', 'lpBaseName', 'nSize'], 'DWORD'), 'K32GetDeviceDriverFileName': (3, ['LPVOID', 'LPTSTR', 'DWORD'], ['ImageBase', 'lpFilename', 'nSize'], 'DWORD'), 'K32GetMappedFileName': (4, ['PROCESSHANDLE', 'LPVOID', 'LPTSTR', 'DWORD'], ['hProcess', 'lpv', 'lpFilename', 'nSize'], 'DWORD'), 'K32GetModuleBaseName': (4, ['PROCESSHANDLE', 'HMODULE', 'LPTSTR', 'DWORD'], ['hProcess', 'hModule', 'lpBaseName', 'nSize'], 'DWORD'), 'K32GetModuleFileNameEx': (4, ['PROCESSHANDLE', 'HMODULE', 'LPTSTR', 'DWORD'], ['hProcess', 'hModule', 'lpFilename', 'nSize'], 'DWORD'), 'K32GetModuleInformation': (4, ['PROCESSHANDLE', 'HMODULE', 'LPMODULEINFO', 'DWORD'], ['hProcess', 'hModule', 'lpmodinfo', 'cb'], 'BOOL'), 'K32GetPerformanceInfo': (2, ['PPERFORMANCE_INFORMATION', 'DWORD'], ['pPerformanceInformation', 'cb'], 'BOOL'), 'K32GetProcessImageFileName': (3, ['PROCESSHANDLE', 'LPTSTR', 'DWORD'], ['hProcess', 'lpImageFileName', 'nSize'], 'DWORD'), 'K32GetProcessMemoryInfo': (3, ['HANDLE', 'PPROCESS_MEMORY_COUNTERS', 'DWORD'], ['Process', 'ppsmemCounters', 'cb'], 'BOOL'), 'K32GetWsChanges': (3, ['PROCESSHANDLE', 'PPSAPI_WS_WATCH_INFORMATION', 'DWORD'], ['hProcess', 'lpWatchInfo', 'cb'], 'BOOL'), 'K32GetWsChangesEx': (3, ['PROCESSHANDLE', 'PPSAPI_WS_WATCH_INFORMATION_EX', 'DWORD'], ['hProcess', 'lpWatchInfoEx', 'cb'], 'BOOL'), 'K32InitializeProcessForWsWatch': (1, ['PROCESSHANDLE'], ['hProcess'], 'BOOL'), 'K32QueryWorkingSet': (3, ['PROCESSHANDLE', 'PVOID', 'DWORD'], ['hProcess', 'pv', 'cb'], 'BOOL'), 'K32QueryWorkingSetEx': (3, ['PROCESSHANDLE', 'PVOID', 'DWORD'], ['hProcess', 'pv', 'cb'], 'BOOL'), 'EnumUILanguages': (3, ['UILANGUAGE_ENUMPROC', 'ENUMUILANGUAGES_FLAGS', 'LONG_PTR'], ['lpUILanguageEnumProc', 'dwFlags', 'lParam'], 'BOOL'), 'GetFileMUIInfo': (4, ['GETFILEMUIINFO_FLAGS', 'PCWSTR', 'PFILEMUIINFO', 'DWORD*'], ['dwFlags', 'pcwszFilePath', 'pFileMUIInfo', 'pcbFileMUIInfo'], 'BOOL'), 'GetFileMUIPath': (7, ['DWORD', 'PCWSTR', 'PWSTR', 'PULONG', 'PWSTR', 'PULONG', 'PULONGLONG'], ['dwFlags', 'pcwszFilePath', 'pwszLanguage', 'pcchLanguage', 'pwszFileMUIPath', 'pcchFileMUIPath', 'pululEnumerator'], 'BOOL'), 'GetProcessPreferredUILanguages': (4, ['MUI_LANGUAGE_FORMAT_FLAGS', 'PULONG', 'PZZWSTR', 'PULONG'], ['dwFlags', 'pulNumLanguages', 'pwszLanguagesBuffer', 'pcchLanguagesBuffer'], 'BOOL'), 'GetSystemDefaultUILanguage': (0, [], [], 'LANGID'), 'GetSystemPreferredUILanguages': (4, ['GETSYSTEMPREFERREDUILANGUAGES_FLAGS', 'PULONG', 'PZZWSTR', 'PULONG'], ['dwFlags', 'pulNumLanguages', 'pwszLanguagesBuffer', 'pcchLanguagesBuffer'], 'BOOL'), 'GetThreadPreferredUILanguages': (4, ['GETTHREADPREFERREDUILANGUAGES_FLAGS', 'PULONG', 'PZZWSTR', 'PULONG'], ['dwFlags', 'pulNumLanguages', 'pwszLanguagesBuffer', 'pcchLanguagesBuffer'], 'BOOL'), 'GetThreadUILanguage': (0, [], [], 'LANGID'), 'GetUILanguageInfo': (5, ['MUI_LANGUAGE_FORMAT_FLAGS', 'PCZZWSTR', 'PZZWSTR', 'PDWORD', 'MUI_LANGUAGE_ATTRIBUTES*'], ['dwFlags', 'pwmszLanguage', 'pwszFallbackLanguages', 'pcchFallbackLanguages', 'pdwAttributes'], 'BOOL'), 'GetUserDefaultUILanguage': (0, [], [], 'LANGID'), 'GetUserPreferredUILanguages': (4, ['MUI_LANGUAGE_FORMAT_FLAGS', 'PULONG', 'PZZWSTR', 'PULONG'], ['dwFlags', 'pulNumLanguages', 'pwszLanguagesBuffer', 'pcchLanguagesBuffer'], 'BOOL'), 'SetProcessPreferredUILanguages': (3, ['MUI_LANGUAGE_FORMAT_FLAGS', 'PCZZWSTR', 'PULONG'], ['dwFlags', 'pwszLanguagesBuffer', 'pulNumLanguages'], 'BOOL'), 'SetThreadPreferredUILanguages': (3, ['SETTHREADPREFERREDUILANGUAGES_FLAGS', 'PCZZWSTR', 'PULONG'], ['dwFlags', 'pwszLanguagesBuffer', 'pulNumLanguages'], 'BOOL'), 'SetThreadUILanguage': (1, ['LANGID'], ['LangId'], 'LANGID'), 'CopyContext': (3, ['PCONTEXT', 'DWORD', 'PCONTEXT'], ['Destination', 'ContextFlags', 'Source'], 'BOOL'), 'GetEnabledXStateFeatures': (0, [], [], '[XSTATE_FEATURE_64]'), 'GetXStateFeaturesMask': (2, ['PCONTEXT', 'XSTATE_MASK*'], ['Context', 'FeatureMask'], 'BOOL'), 'InitializeContext': (4, ['PVOID', 'DWORD', 'PCONTEXT*', 'PWORD'], ['Buffer', 'ContextFlags', 'Context', 'ContextLength'], 'BOOL'), 'LocateXStateFeature': (3, ['PCONTEXT', 'XSTATE_FEATURE', 'PDWORD'], ['Context', 'FeatureId', 'Length'], 'PVOID'), 'SetXStateFeaturesMask': (2, ['PCONTEXT', 'XSTATE_MASK'], ['Context', 'FeatureMask'], 'BOOL'), 'CheckElevation': (5, ['LPCWSTR', 'PDWORD', 'HANDLE', 'PDWORD', 'PDWORD'], ['lpApplicationName', 'pdwFlags', 'hChildToken', 'pdwRunLevel', 'pdwReason'], '[ERROR_CODE]')}

dict5_advapi32 = {'RegCloseKey': (1, ['HKEY'], ['hKey'], '[REG_ERROR]'), 'RegConnectRegistry': (3, ['LPCTSTR', 'HKEY', 'PHKEY'], ['lpMachineName', 'hKey', 'phkResult'], '[REG_ERROR]'), 'RegCopyTree': (3, ['HKEY', 'LPCTSTR', 'HKEY'], ['hKeySrc', 'lpSubKey', 'hKeyDest'], '[REG_ERROR]'), 'RegCreateKeyEx': (9, ['HKEY', 'LPCTSTR', 'DWORD', 'LPTSTR', 'REGOPTIONS', 'REGSAM', 'LPSECURITY_ATTRIBUTES', 'PHKEY', 'REGDISPOSITION*'], ['hKey', 'lpSubKey', 'Reserved', 'lpClass', 'dwOptions', 'samDesired', 'lpSecurityAttributes', 'phkResult', 'lpdwDisposition'], '[REG_ERROR]'), 'RegCreateKeyTransacted': (11, ['HKEY', 'LPCTSTR', 'DWORD', 'LPTSTR', 'REGOPTIONS', 'REGSAM', 'CONST LPSECURITY_ATTRIBUTES', 'PHKEY', 'REGDISPOSITION*', 'HANDLE', 'PVOID'], ['hKey', 'lpSubKey', 'Reserved', 'lpClass', 'dwOptions', 'samDesired', 'lpSecurityAttributes', 'phkResult', 'lpdwDisposition', 'hTransaction', 'pExtendedParemeter'], '[REG_ERROR]'), 'RegDeleteKey': (2, ['HKEY', 'LPCTSTR'], ['hKey', 'lpSubKey'], '[REG_ERROR]'), 'RegDeleteKeyEx': (4, ['HKEY', 'LPCTSTR', 'REGSAM', 'DWORD'], ['hKey', 'lpSubKey', 'samDesired', 'Reserved'], '[REG_ERROR]'), 'RegDeleteKeyTransacted': (6, ['HKEY', 'LPCTSTR', 'REGSAM', 'DWORD', 'HANDLE', 'PVOID'], ['hKey', 'lpSubKey', 'samDesired', 'Reserved', 'hTransaction', 'pExtendedParameter'], '[REG_ERROR]'), 'RegDeleteKeyValue': (3, ['HKEY', 'LPCTSTR', 'LPCTSTR'], ['hKey', 'lpSubKey', 'lpValueName'], '[REG_ERROR]'), 'RegDeleteTree': (2, ['HKEY', 'LPCTSTR'], ['hKey', 'lpSubKey'], '[REG_ERROR]'), 'RegDeleteValue': (2, ['HKEY', 'LPCTSTR'], ['hKey', 'lpValueName'], '[REG_ERROR]'), 'RegDisablePredefinedCache': (0, [], [], '[REG_ERROR]'), 'RegDisablePredefinedCacheEx': (0, [], [], '[REG_ERROR]'), 'RegDisableReflectionKey': (1, ['HKEY'], ['hBase'], '[REG_ERROR]'), 'RegEnableReflectionKey': (1, ['HKEY'], ['hBase'], '[REG_ERROR]'), 'RegEnumKeyEx': (8, ['HKEY', 'DWORD', 'LPTSTR', 'LPDWORD', 'LPDWORD', 'LPTSTR', 'LPDWORD', 'PFILETIME'], ['hKey', 'dwIndex', 'lpName', 'lpcName', 'lpReserved', 'lpClass', 'lpcClass', 'lpftLastWriteTime'], '[REG_ERROR]'), 'RegEnumValue': (8, ['HKEY', 'DWORD', 'LPTSTR', 'LPDWORD', 'LPDWORD', 'REGTYPE*', 'LPBYTE', 'LPDWORD'], ['hKey', 'dwIndex', 'lpValueName', 'lpcchValueName', 'lpReserved', 'lpType', 'lpData', 'lpcbData'], '[REG_ERROR]'), 'RegFlushKey': (1, ['HKEY'], ['hKey'], '[REG_ERROR]'), 'RegGetValue': (7, ['HKEY', 'LPCTSTR', 'LPCTSTR', 'DWORD', 'REGTYPE*', 'PVOID', 'LPDWORD'], ['hkey', 'lpSubKey', 'lpValue', 'dwFlags', 'pdwType', 'pvData', 'pcbData'], '[REG_ERROR]'), 'RegLoadAppKey': (5, ['LPCTSTR', 'PHKEY', 'REGSAM', 'REGLOADAPPKEY_OPTIONS', 'DWORD'], ['lpFile', 'phkResult', 'samDesired', 'dwOptions', 'Reserved'], '[REG_ERROR]'), 'RegLoadKey': (3, ['HKEY', 'LPCTSTR', 'LPCTSTR'], ['hKey', 'lpSubKey', 'lpFile'], '[REG_ERROR]'), 'RegLoadMUIString': (7, ['HKEY', 'LPCTSTR', 'LPTSTR', 'DWORD', 'LPDWORD', 'REGMUIFLAGS', 'LPCTSTR'], ['hKey', 'pszValue', 'pszOutBuf', 'cbOutBuf', 'pcbData', 'Flags', 'pszDirectory'], '[REG_ERROR]'), 'RegNotifyChangeKeyValue': (5, ['HKEY', 'BOOL', 'REGNOTIFYFLAGS', 'HANDLE', 'BOOL'], ['hKey', 'bWatchSubtree', 'dwNotifyFilter', 'hEvent', 'fAsynchronous'], '[REG_ERROR]'), 'RegOpenCurrentUser': (2, ['REGSAM', 'PHKEY'], ['samDesired', 'phkResult'], '[REG_ERROR]'), 'RegOpenKeyEx': (5, ['HKEY', 'LPCTSTR', 'DWORD', 'REGSAM', 'PHKEY'], ['hKey', 'lpSubKey', 'ulOptions', 'samDesired', 'phkResult'], '[REG_ERROR]'), 'RegOpenKeyTransacted': (7, ['HKEY', 'LPCTSTR', 'DWORD', 'REGSAM', 'PHKEY', 'HANDLE', 'PVOID'], ['hKey', 'lpSubKey', 'ulOptions', 'samDesired', 'phkResult', 'hTransaction', 'pExtendedParameter'], '[REG_ERROR]'), 'RegOpenUserClassesRoot': (4, ['HANDLE', 'DWORD', 'REGSAM', 'PHKEY'], ['hToken', 'dwOptions', 'samDesired', 'phkResult'], '[REG_ERROR]'), 'RegOverridePredefKey': (2, ['HKEY', 'HKEY'], ['hKey', 'hNewHKey'], '[REG_ERROR]'), 'RegQueryInfoKey': (12, ['HKEY', 'LPTSTR', 'LPDWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD', 'PFILETIME'], ['hKey', 'lpClass', 'lpcClass', 'lpReserved', 'lpcSubKeys', 'lpcMaxSubKeyLen', 'lpcMaxClassLen', 'lpcValues', 'lpcMaxValueNameLen', 'lpcMaxValueLen', 'lpcbSecurityDescriptor', 'lpftLastWriteTime'], '[REG_ERROR]'), 'RegQueryMultipleValues': (5, ['HKEY', 'PVALENT', 'DWORD', 'LPVOID', 'LPDWORD'], ['hKey', 'val_list', 'num_vals', 'lpValueBuf', 'ldwTotsize'], '[REG_ERROR]'), 'RegQueryReflectionKey': (2, ['HKEY', 'BOOL*'], ['hBase', 'bIsReflectionDisabled'], '[REG_ERROR]'), 'RegQueryValueEx': (6, ['HKEY', 'LPCTSTR', 'LPDWORD', 'REGTYPE*', 'LPBYTE', 'LPDWORD'], ['hKey', 'lpValueName', 'lpReserved', 'lpType', 'lpData', 'lpcbData'], '[REG_ERROR]'), 'RegReplaceKey': (4, ['HKEY', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR'], ['hKey', 'lpSubKey', 'lpNewFile', 'lpOldFile'], '[REG_ERROR]'), 'RegRestoreKey': (3, ['HKEY', 'LPCTSTR', 'DWORD'], ['hKey', 'lpFile', 'dwFlags'], '[REG_ERROR]'), 'RegSaveKey': (3, ['HKEY', 'LPCTSTR', 'LPSECURITY_ATTRIBUTES'], ['hKey', 'lpFile', 'lpSecurityAttributes'], '[REG_ERROR]'), 'RegSaveKeyEx': (4, ['HKEY', 'LPCTSTR', 'LPSECURITY_ATTRIBUTES', 'DWORD'], ['hKey', 'lpFile', 'lpSecurityAttributes', 'Flags'], '[REG_ERROR]'), 'RegSetKeyValue': (6, ['HKEY', 'LPCTSTR', 'LPCTSTR', 'REGTYPE', 'LPCVOID', 'DWORD'], ['hKey', 'lpSubKey', 'lpValueName', 'dwType', 'lpData', 'cbData'], '[REG_ERROR]'), 'RegSetValueEx': (6, ['HKEY', 'LPCTSTR', 'DWORD', 'REGTYPE', 'CONST BYTE*', 'DWORD'], ['hKey', 'lpValueName', 'Reserved', 'dwType', 'lpData', 'cbData'], '[REG_ERROR]'), 'RegUnLoadKey': (2, ['HKEY', 'LPCTSTR'], ['hKey', 'lpSubKey'], '[REG_ERROR]'), 'RegCreateKey': (3, ['HKEY', 'LPCTSTR', 'PHKEY'], ['hKey', 'lpSubKey', 'phkResult'], '[REG_ERROR]'), 'RegEnumKey': (4, ['HKEY', 'DWORD', 'LPTSTR', 'DWORD'], ['hKey', 'dwIndex', 'lpName', 'cchName'], '[REG_ERROR]'), 'RegOpenKey': (3, ['HKEY', 'LPCTSTR', 'PHKEY'], ['hKey', 'lpSubKey', 'phkResult'], '[REG_ERROR]'), 'RegQueryValue': (4, ['HKEY', 'LPCTSTR', 'LPTSTR', 'PLONG'], ['hKey', 'lpSubKey', 'lpValue', 'lpcbValue'], '[REG_ERROR]'), 'RegSetValue': (5, ['HKEY', 'LPCTSTR', 'REGTYPE', 'LPCTSTR', 'DWORD'], ['hKey', 'lpSubKey', 'dwType', 'lpData', 'cbData'], '[REG_ERROR]'), 'AddUsersToEncryptedFile': (2, ['LPCWSTR', 'PENCRYPTION_CERTIFICATE_LIST'], ['lpFileName', 'pUsers'], '[ERROR_CODE]'), 'CloseEncryptedFileRaw': (1, ['PVOID'], ['pvContext'], 'void'), 'DecryptFile': (2, ['LPCTSTR', 'DWORD'], ['lpFileName', 'dwReserved'], 'BOOL'), 'DuplicateEncryptionInfoFile': (5, ['LPCTSTR', 'LPCTSTR', 'DWORD', 'DWORD', 'CONST LPSECURITY_ATTRIBUTES'], ['SrcFileName', 'DstFileName', 'dwCreationDistribution', 'dwAttributes', 'lpSecurityAttributes'], '[ERROR_CODE]'), 'EncryptFile': (1, ['LPCTSTR'], ['lpFileName'], 'BOOL'), 'EncryptionDisable': (2, ['LPCWSTR', 'BOOL'], ['DirPath', 'Disable'], 'BOOL'), 'FileEncryptionStatus': (2, ['LPCTSTR', 'LPDWORD'], ['lpFileName', 'lpStatus'], 'BOOL'), 'FreeEncryptionCertificateHashList': (1, ['PENCRYPTION_CERTIFICATE_HASH_LIST'], ['pHashes'], 'void'), 'OpenEncryptedFileRaw': (3, ['LPCTSTR', 'ULONG', 'PVOID*'], ['lpFileName', 'ulFlags', 'pvContext'], '[ERROR_CODE]'), 'QueryRecoveryAgentsOnEncryptedFile': (2, ['LPCWSTR', 'PENCRYPTION_CERTIFICATE_HASH_LIST*'], ['lpFileName', 'pRecoveryAgents'], '[ERROR_CODE]'), 'QueryUsersOnEncryptedFile': (2, ['LPCWSTR', 'PENCRYPTION_CERTIFICATE_HASH_LIST*'], ['lpFileName', 'pUsers'], '[ERROR_CODE]'), 'ReadEncryptedFileRaw': (3, ['PFE_EXPORT_FUNC', 'PVOID', 'PVOID'], ['pfExportCallback', 'pvCallbackContext', 'pvContext'], '[ERROR_CODE]'), 'RemoveUsersFromEncryptedFile': (2, ['LPCWSTR', 'PENCRYPTION_CERTIFICATE_HASH_LIST'], ['lpFileName', 'pHashes'], '[ERROR_CODE]'), 'SetUserFileEncryptionKey': (1, ['PENCRYPTION_CERTIFICATE'], ['pEncryptionCertificate'], '[ERROR_CODE]'), 'WriteEncryptedFileRaw': (3, ['PFE_IMPORT_FUNC', 'PVOID', 'PVOID'], ['pfImportCallback', 'pvCallbackContext', 'pvContext'], '[ERROR_CODE]'), 'CreateProcessAsUser': (11, ['HANDLE', 'LPCTSTR', 'LPTSTR', 'LPSECURITY_ATTRIBUTES', 'LPSECURITY_ATTRIBUTES', 'BOOL', 'CREATEPROCESSFLAGS', 'LPVOID', 'LPCTSTR', 'LPSTARTUPINFO', 'LPPROCESS_INFORMATION'], ['hToken', 'lpApplicationName', 'lpCommandLine', 'lpProcessAttributes', 'lpThreadAttributes', 'bInheritHandles', 'dwCreationFlags', 'lpEnvironment', 'lpCurrentDirectory', 'lpStartupInfo', 'lpProcessInformation'], 'BOOL'), 'CreateProcessWithLogonW': (11, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LOGONFLAGS', 'LPCWSTR', 'LPWSTR', 'CREATEPROCESSFLAGS', 'LPVOID', 'LPCWSTR', 'LPSTARTUPINFOW', 'LPPROCESS_INFORMATION'], ['lpUsername', 'lpDomain', 'lpPassword', 'dwLogonFlags', 'lpApplicationName', 'lpCommandLine', 'dwCreationFlags', 'lpEnvironment', 'lpCurrentDirectory', 'lpStartupInfo', 'lpProcessInfo'], 'BOOL'), 'CreateProcessWithTokenW': (9, ['HANDLE', 'LOGONFLAGS', 'LPCWSTR', 'LPWSTR', 'CREATEPROCESSFLAGS', 'LPVOID', 'LPCWSTR', 'LPSTARTUPINFOW', 'LPPROCESS_INFORMATION'], ['hToken', 'dwLogonFlags', 'lpApplicationName', 'lpCommandLine', 'dwCreationFlags', 'lpEnvironment', 'lpCurrentDirectory', 'lpStartupInfo', 'lpProcessInfo'], 'BOOL'), 'GetLocalManagedApplications': (3, ['BOOL', 'LPDWORD', 'PLOCALMANAGEDAPPLICATION*'], ['bUserApps', 'pdwApps', 'prgLocalApps'], '[ERROR_CODE]'), 'GetManagedApplications': (5, ['GUID*', 'DWORD', 'DWORD', 'LPDWORD', 'PMANAGEDAPPLICATION*'], ['pCategory', 'dwQueryFlags', 'dwInfoLevel', 'pdwApps', 'prgManagedApps'], '[ERROR_CODE]'), 'GetManagedApplicationCategories': (2, ['DWORD', 'APPCATEGORYINFOLIST*'], ['dwReserved', 'pAppCategory'], '[ERROR_CODE]'), 'InstallApplication': (1, ['PINSTALLDATA*'], ['pInstallInfo'], '[ERROR_CODE]'), 'UninstallApplication': (2, ['WCHAR*', 'DWORD'], ['ProductCode', 'dwStatus'], '[ERROR_CODE]'), 'AbortSystemShutdown': (1, ['LPTSTR'], ['lpMachineName'], 'BOOL'), 'InitiateShutdown': (5, ['LPTSTR', 'LPTSTR', 'DWORD', 'SHUTDOWN_FLAGS', 'SHTDN_REASON'], ['lpMachineName', 'lpMessage', 'dwGracePeriod', 'dwShutdownFlags', 'dwReason'], '[ERROR_CODE]'), 'InitiateSystemShutdown': (5, ['LPTSTR', 'LPTSTR', 'DWORD', 'BOOL', 'BOOL'], ['lpMachineName', 'lpMessage', 'dwTimeout', 'bForceAppsClosed', 'bRebootAfterShutdown'], 'BOOL'), 'InitiateSystemShutdownEx': (6, ['LPTSTR', 'LPTSTR', 'DWORD', 'BOOL', 'BOOL', 'SHTDN_REASON'], ['lpMachineName', 'lpMessage', 'dwTimeout', 'bForceAppsClosed', 'bRebootAfterShutdown', 'dwReason'], 'BOOL'), 'BackupEventLog': (2, ['HANDLE', 'LPCTSTR'], ['hEventLog', 'lpBackupFileName'], 'BOOL'), 'ClearEventLog': (2, ['HANDLE', 'LPCTSTR'], ['hEventLog', 'lpBackupFileName'], 'BOOL'), 'CloseEventLog': (1, ['HANDLE'], ['hEventLog'], 'BOOL'), 'DeregisterEventSource': (1, ['HANDLE'], ['hEventLog'], 'BOOL'), 'GetEventLogInformation': (5, ['HANDLE', 'DWORD', 'LPVOID', 'DWORD', 'LPDWORD'], ['hEventLog', 'dwInfoLevel', 'lpBuffer', 'cbBufSize', 'pcbBytesNeeded'], 'BOOL'), 'GetNumberOfEventLogRecords': (2, ['HANDLE', 'PDWORD'], ['hEventLog', 'NumberOfRecords'], 'BOOL'), 'GetOldestEventLogRecord': (2, ['HANDLE', 'PDWORD'], ['hEventLog', 'OldestRecord'], 'BOOL'), 'NotifyChangeEventLog': (2, ['HANDLE', 'HANDLE'], ['hEventLog', 'hEvent'], 'BOOL'), 'OpenBackupEventLog': (2, ['LPCTSTR', 'LPCTSTR'], ['lpUNCServerName', 'lpFileName'], 'HANDLE'), 'OpenEventLog': (2, ['LPCTSTR', 'LPCTSTR'], ['lpUNCServerName', 'lpSourceName'], 'HANDLE'), 'ReadEventLog': (7, ['HANDLE', 'DWORD', 'DWORD', 'LPVOID', 'DWORD', 'DWORD*', 'DWORD*'], ['hEventLog', 'dwReadFlags', 'dwRecordOffset', 'lpBuffer', 'nNumberOfBytesToRead', 'pnBytesRead', 'pnMinNumberOfBytesNeeded'], 'BOOL'), 'RegisterEventSource': (2, ['LPCTSTR', 'LPCTSTR'], ['lpUNCServerName', 'lpSourceName'], 'HANDLE'), 'ReportEvent': (9, ['HANDLE', 'EVENTLOGTYPE', 'WORD', 'DWORD', 'PSID', 'WORD', 'DWORD', 'LPCTSTR*', 'LPVOID'], ['hEventLog', 'wType', 'wCategory', 'dwEventID', 'lpUserSid', 'wNumStrings', 'dwDataSize', 'lpStrings', 'lpRawData'], 'BOOL'), 'PerfCreateInstance': (4, ['HANDLE', 'LPCGUID', 'LPCWSTR', 'ULONG'], ['hProvider', 'CounterSetGuid', 'szInstanceName', 'dwInstance'], 'PPERF_COUNTERSET_INSTANCE'), 'PerfDecrementULongCounterValue': (4, ['HANDLE', 'PPERF_COUNTERSET_INSTANCE', 'ULONG', 'ULONG'], ['hProvider', 'pInstance', 'CounterId', 'lValue'], '[ERROR_CODE_ULONG]'), 'PerfDecrementULongLongCounterValue': (4, ['HANDLE', 'PPERF_COUNTERSET_INSTANCE', 'ULONG', 'ULONGLONG'], ['hProvider', 'pInstance', 'CounterId', 'llValue'], '[ERROR_CODE_ULONG]'), 'PerfDeleteInstance': (2, ['HANDLE', 'PPERF_COUNTERSET_INSTANCE'], ['hProvider', 'InstanceBlock'], '[ERROR_CODE_ULONG]'), 'PerfIncrementULongCounterValue': (4, ['HANDLE', 'PPERF_COUNTERSET_INSTANCE', 'ULONG', 'ULONG'], ['hProvider', 'pInstance', 'CounterId', 'lValue'], '[ERROR_CODE_ULONG]'), 'PerfIncrementULongLongCounterValue': (4, ['HANDLE', 'PPERF_COUNTERSET_INSTANCE', 'ULONG', 'ULONGLONG'], ['hProvider', 'pInstance', 'CounterId', 'llValue'], '[ERROR_CODE_ULONG]'), 'PerfQueryInstance': (4, ['HANDLE', 'LPCGUID', 'LPCWSTR', 'ULONG'], ['hProvider', 'CounterSetGuid', 'szInstance', 'dwInstance'], 'PPERF_COUNTERSET_INSTANCE'), 'PerfSetCounterSetInfo': (3, ['HANDLE', 'PPERF_COUNTERSET_INFO', 'ULONG'], ['hProvider', 'pTemplate', 'dwTemplateSize'], '[ERROR_CODE_ULONG]'), 'PerfSetULongCounterValue': (4, ['HANDLE', 'PPERF_COUNTERSET_INSTANCE', 'ULONG', 'ULONG'], ['hProvider', 'pInstance', 'CounterId', 'lValue'], '[ERROR_CODE_ULONG]'), 'PerfSetULongLongCounterValue': (4, ['HANDLE', 'PPERF_COUNTERSET_INSTANCE', 'ULONG', 'ULONGLONG'], ['hProvider', 'pInstance', 'CounterId', 'llValue'], '[ERROR_CODE_ULONG]'), 'PerfSetCounterRefValue': (4, ['HANDLE', 'PPERF_COUNTERSET_INSTANCE', 'ULONG', 'PVOID'], ['hProvider', 'pInstance', 'CounterId', 'lpAddr'], '[ERROR_CODE_ULONG]'), 'PerfStartProvider': (3, ['LPGUID', 'PERFLIBREQUEST', 'HANDLE*'], ['ProviderGuid', 'ControlCallback', 'phProvider'], '[ERROR_CODE_ULONG]'), 'PerfStartProviderEx': (3, ['LPGUID', 'PPERF_PROVIDER_CONTEXT', 'HANDLE*'], ['ProviderGuid', 'ProviderContext', 'phProvider'], '[ERROR_CODE_ULONG]'), 'PerfStopProvider': (1, ['HANDLE'], ['hProvider'], '[ERROR_CODE_ULONG]'), 'RegisterServiceCtrlHandler': (2, ['LPCTSTR', 'LPHANDLER_FUNCTION'], ['lpServiceName', 'lpHandlerProc'], 'SERVICE_STATUS_HANDLE'), 'RegisterServiceCtrlHandlerEx': (3, ['LPCTSTR', 'LPHANDLER_FUNCTION_EX', 'LPVOID'], ['lpServiceName', 'lpHandlerProc', 'lpContext'], 'SERVICE_STATUS_HANDLE'), 'SetServiceBits': (4, ['SERVICE_STATUS_HANDLE', 'DWORD', 'BOOL', 'BOOL'], ['hServiceStatus', 'dwServiceBits', 'bSetBitsOn', 'bUpdateImmediately'], 'BOOL'), 'SetServiceStatus': (2, ['SERVICE_STATUS_HANDLE', 'LPSERVICE_STATUS'], ['hServiceStatus', 'lpServiceStatus'], 'BOOL'), 'StartServiceCtrlDispatcher': (1, ['CONST SERVICE_TABLE_ENTRY*'], ['lpServiceTable'], 'BOOL'), 'ChangeServiceConfig': (11, ['SC_HANDLE', 'SERVICETYPE', 'SERVICESTARTTYPE', 'SERVICEERRORCONTROL', 'LPCTSTR', 'LPCTSTR', 'LPDWORD', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR'], ['hService', 'dwServiceType', 'dwStartType', 'dwErrorControl', 'lpBinaryPathName', 'lpLoadOrderGroup', 'lpdwTagId', 'lpDependencies', 'lpServiceStartName', 'lpPassword', 'lpDisplayName'], 'BOOL'), 'ChangeServiceConfig2': (3, ['SC_HANDLE', 'SERVICEINFOLEVEL', 'LPVOID'], ['hService', 'dwInfoLevel', 'lpInfo'], 'BOOL'), 'CloseServiceHandle': (1, ['SC_HANDLE'], ['hSCObject'], 'BOOL'), 'ControlService': (3, ['SC_HANDLE', 'SERVICECONTROL', 'LPSERVICE_STATUS'], ['hService', 'dwControl', 'lpServiceStatus'], 'BOOL'), 'ControlServiceEx': (4, ['SC_HANDLE', 'DWORD', 'DWORD', 'PVOID'], ['hService', 'dwControl', 'dwInfoLevel', 'pControlParams'], 'BOOL'), 'CreateService': (13, ['SC_HANDLE', 'LPCTSTR', 'LPCTSTR', 'SERVICEACCESS', 'SERVICETYPE', 'SERVICESTARTTYPE', 'SERVICEERRORCONTROL', 'LPCTSTR', 'LPCTSTR', 'LPDWORD', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR'], ['hSCManager', 'lpServiceName', 'lpDisplayName', 'dwDesiredAccess', 'dwServiceType', 'dwStartType', 'dwErrorControl', 'lpBinaryPathName', 'lpLoadOrderGroup', 'lpdwTagId', 'lpDependencies', 'lpServiceStartName', 'lpPassword'], 'SC_HANDLE'), 'DeleteService': (1, ['SC_HANDLE'], ['hService'], 'BOOL'), 'EnumDependentServices': (6, ['SC_HANDLE', 'SERVICESTATE', 'LPENUM_SERVICE_STATUS', 'DWORD', 'LPDWORD', 'LPDWORD'], ['hService', 'dwServiceState', 'lpServices', 'cbBufSize', 'pcbBytesNeeded', 'lpServicesReturned'], 'BOOL'), 'EnumServicesStatusEx': (10, ['SC_HANDLE', 'SC_ENUM_TYPE', 'SERVICETYPE', 'SERVICESTATE', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD', 'LPCTSTR'], ['hSCManager', 'InfoLevel', 'dwServiceType', 'dwServiceState', 'lpServices', 'cbBufSize', 'pcbBytesNeeded', 'lpServicesReturned', 'lpResumeHandle', 'pszGroupName'], 'BOOL'), 'GetServiceDisplayName': (4, ['SC_HANDLE', 'LPCTSTR', 'LPTSTR', 'LPDWORD'], ['hSCManager', 'lpServiceName', 'lpDisplayName', 'lpcchBuffer'], 'BOOL'), 'GetServiceKeyName': (4, ['SC_HANDLE', 'LPCTSTR', 'LPTSTR', 'LPDWORD'], ['hSCManager', 'lpDisplayName', 'lpServiceName', 'lpcchBuffer'], 'BOOL'), 'NotifyBootConfigStatus': (1, ['BOOL'], ['BootAcceptable'], 'BOOL'), 'NotifyServiceStatusChange': (3, ['SC_HANDLE', 'SERVICENOTIFYMASK', 'PSERVICE_NOTIFY'], ['hService', 'dwNotifyMask', 'pNotifyBuffer'], '[ERROR_CODE]'), 'OpenSCManager': (3, ['LPCTSTR', 'LPCTSTR', 'SCMANAGERACCESS'], ['lpMachineName', 'lpDatabaseName', 'dwDesiredAccess'], 'SC_HANDLE'), 'OpenService': (3, ['SC_HANDLE', 'LPCTSTR', 'SERVICEACCESS'], ['hSCManager', 'lpServiceName', 'dwDesiredAccess'], 'SC_HANDLE'), 'QueryServiceConfig': (4, ['SC_HANDLE', 'LPQUERY_SERVICE_CONFIG', 'DWORD', 'LPDWORD'], ['hService', 'lpServiceConfig', 'cbBufSize', 'pcbBytesNeeded'], 'BOOL'), 'QueryServiceConfig2': (5, ['SC_HANDLE', 'SERVICEINFOLEVEL', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hService', 'dwInfoLevel', 'lpBuffer', 'cbBufSize', 'pcbBytesNeeded'], 'BOOL'), 'QueryServiceDynamicInformation': (3, ['SERVICE_STATUS_HANDLE', 'DWORD', 'PVOID*'], ['hServiceStatus', 'dwInfoLevel', 'ppDynamicInfo'], 'BOOL'), 'QueryServiceStatus': (2, ['SC_HANDLE', 'LPSERVICE_STATUS'], ['hService', 'lpServiceStatus'], 'BOOL'), 'QueryServiceStatusEx': (5, ['SC_HANDLE', 'SC_STATUS_TYPE', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hService', 'InfoLevel', 'lpBuffer', 'cbBufSize', 'pcbBytesNeeded'], 'BOOL'), 'StartService': (3, ['SC_HANDLE', 'DWORD', 'LPCTSTR*'], ['hService', 'dwNumServiceArgs', 'lpServiceArgVectors'], 'BOOL'), 'EnumServicesStatus': (8, ['SC_HANDLE', 'SERVICETYPE', 'SERVICESTATE', 'LPENUM_SERVICE_STATUS', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hSCManager', 'dwServiceType', 'dwServiceState', 'lpServices', 'cbBufSize', 'pcbBytesNeeded', 'lpServicesReturned', 'lpResumeHandle'], 'BOOL'), 'LockServiceDatabase': (1, ['SC_HANDLE'], ['hSCManager'], 'SC_LOCK'), 'QueryServiceLockStatus': (4, ['SC_HANDLE', 'LPQUERY_SERVICE_LOCK_STATUS', 'DWORD', 'LPDWORD'], ['hSCManager', 'lpLockStatus', 'cbBufSize', 'pcbBytesNeeded'], 'BOOL'), 'UnlockServiceDatabase': (1, ['SC_LOCK'], ['ScLock'], 'BOOL'), 'GetCurrentHwProfile': (1, ['LPHW_PROFILE_INFO'], ['lpHwProfileInfo'], 'BOOL'), 'GetUserName': (2, ['LPTSTR', 'LPDWORD'], ['lpBuffer', 'lpnSize'], 'BOOL'), 'IsTextUnicode': (3, ['CONST VOID*', 'INT', 'ISTEXTUNICODEFLAGS*'], ['lpv', 'iSize', 'lpiResult'], 'BOOL'), 'CryptAcquireContext': (5, ['HCRYPTPROV*', 'LPCTSTR', 'LPCTSTR', 'CRYPTPROV', 'CRYPTACQUIRECONTEXTFLAGS'], ['phProv', 'pszContainer', 'pszProvider', 'dwProvType', 'dwFlags'], 'BOOL'), 'CryptContextAddRef': (3, ['HCRYPTPROV', 'DWORD*', 'DWORD'], ['hProv', 'pdwReserved', 'dwFlags'], 'BOOL'), 'CryptEnumProviders': (6, ['DWORD', 'DWORD*', 'DWORD', 'CRYPTPROV*', 'LPTSTR', 'DWORD*'], ['dwIndex', 'pdwReserved', 'dwFlags', 'pdwProvType', 'pszProvName', 'pcbProvName'], 'BOOL'), 'CryptEnumProviderTypes': (6, ['DWORD', 'DWORD*', 'DWORD', 'CRYPTPROV*', 'LPTSTR', 'DWORD*'], ['dwIndex', 'pdwReserved', 'dwFlags', 'pdwProvType', 'pszTypeName', 'pcbTypeName'], 'BOOL'), 'CryptGetDefaultProvider': (5, ['CRYPTPROV', 'DWORD*', 'DWORD', 'LPTSTR', 'DWORD*'], ['dwProvType', 'pdwReserved', 'dwFlags', 'pszProvName', 'pcbProvName'], 'BOOL'), 'CryptGetProvParam': (5, ['HCRYPTPROV', 'CRYPTGETPROVPARAM', 'BYTE*', 'DWORD*', 'DWORD'], ['hProv', 'dwParam', 'pbData', 'pdwDataLen', 'dwFlags'], 'BOOL'), 'CryptReleaseContext': (2, ['HCRYPTPROV', 'DWORD'], ['hProv', 'dwFlags'], 'BOOL'), 'CryptSetProvider': (2, ['LPCTSTR', 'CRYPTPROV'], ['pszProvName', 'dwProvType'], 'BOOL'), 'CryptSetProviderEx': (4, ['LPCTSTR', 'CRYPTPROV', 'DWORD*', 'DWORD'], ['pszProvName', 'dwProvType', 'pdwReserved', 'dwFlags'], 'BOOL'), 'CryptSetProvParam': (4, ['HCRYPTPROV', 'CRYPTSETPROVPARAM', 'CONST BYTE*', 'DWORD'], ['hProv', 'dwParam', 'pbData', 'dwFlags'], 'BOOL'), 'CryptDeriveKey': (5, ['HCRYPTPROV', 'ALG_ID', 'HCRYPTHASH', 'DWORD', 'HCRYPTKEY*'], ['hProv', 'Algid', 'hBaseData', 'dwFlags', 'phKey'], 'BOOL'), 'CryptDestroyKey': (1, ['HCRYPTKEY'], ['hKey'], 'BOOL'), 'CryptDuplicateKey': (4, ['HCRYPTKEY', 'DWORD*', 'DWORD', 'HCRYPTKEY*'], ['hKey', 'pdwReserved', 'dwFlags', 'phKey'], 'BOOL'), 'CryptExportKey': (6, ['HCRYPTKEY', 'HCRYPTKEY', 'CRYPTBLOBTYPE', 'CRYPTEXPORTKEYFLAGS', 'BYTE*', 'DWORD*'], ['hKey', 'hExpKey', 'dwBlobType', 'dwFlags', 'pbData', 'pdwDataLen'], 'BOOL'), 'CryptGenKey': (4, ['HCRYPTPROV', 'ALG_ID', 'DWORD', 'HCRYPTKEY*'], ['hProv', 'Algid', 'dwFlags', 'phKey'], 'BOOL'), 'CryptGenRandom': (3, ['HCRYPTPROV', 'DWORD', 'BYTE*'], ['hProv', 'dwLen', 'pbBuffer'], 'BOOL'), 'CryptGetKeyParam': (5, ['HCRYPTKEY', 'CRYPTKEYPARAM', 'BYTE*', 'DWORD*', 'DWORD'], ['hKey', 'dwParam', 'pbData', 'pdwDataLen', 'dwFlags'], 'BOOL'), 'CryptGetUserKey': (3, ['HCRYPTPROV', 'CRYPTKEYSPEC', 'HCRYPTKEY*'], ['hProv', 'dwKeySpec', 'phUserKey'], 'BOOL'), 'CryptImportKey': (6, ['HCRYPTPROV', 'BYTE*', 'DWORD', 'HCRYPTKEY', 'CRYPTIMPORTKEYFLAGS', 'HCRYPTKEY*'], ['hProv', 'pbData', 'dwDataLen', 'hPubKey', 'dwFlags', 'phKey'], 'BOOL'), 'CryptSetKeyParam': (4, ['HCRYPTKEY', 'CRYPTKEYPARAM', 'CONST BYTE*', 'DWORD'], ['hKey', 'dwParam', 'pbData', 'dwFlags'], 'BOOL'), 'CryptDecrypt': (6, ['HCRYPTKEY', 'HCRYPTHASH', 'BOOL', 'DWORD', 'BYTE*', 'DWORD*'], ['hKey', 'hHash', 'Final', 'dwFlags', 'pbData', 'pdwDataLen'], 'BOOL'), 'CryptEncrypt': (7, ['HCRYPTKEY', 'HCRYPTHASH', 'BOOL', 'DWORD', 'BYTE*', 'DWORD*', 'DWORD'], ['hKey', 'hHash', 'Final', 'dwFlags', 'pbData', 'pdwDataLen', 'dwBufLen'], 'BOOL'), 'CryptCreateHash': (5, ['HCRYPTPROV', 'ALG_ID', 'HCRYPTKEY', 'CRYPTCREATEHASHFLAGS', 'HCRYPTHASH*'], ['hProv', 'Algid', 'hKey', 'dwFlags', 'phHash'], 'BOOL'), 'CryptDestroyHash': (1, ['HCRYPTHASH'], ['hHash'], 'BOOL'), 'CryptDuplicateHash': (4, ['HCRYPTHASH', 'DWORD*', 'DWORD', 'HCRYPTHASH*'], ['hHash', 'pdwReserved', 'dwFlags', 'phHash'], 'BOOL'), 'CryptGetHashParam': (5, ['HCRYPTHASH', 'CRYPTHASHPARAM', 'BYTE*', 'DWORD*', 'DWORD'], ['hHash', 'dwParam', 'pbData', 'pdwDataLen', 'dwFlags'], 'BOOL'), 'CryptHashData': (4, ['HCRYPTHASH', 'BYTE*', 'DWORD', 'CRYPTHASHDATAFLAGS'], ['hHash', 'pbData', 'dwDataLen', 'dwFlags'], 'BOOL'), 'CryptHashSessionKey': (3, ['HCRYPTHASH', 'HCRYPTKEY', 'DWORD'], ['hHash', 'hKey', 'dwFlags'], 'BOOL'), 'CryptSetHashParam': (4, ['HCRYPTHASH', 'CRYPTHASHPARAM', 'CONST BYTE*', 'DWORD'], ['hHash', 'dwParam', 'pbData', 'dwFlags'], 'BOOL'), 'CryptSignHash': (6, ['HCRYPTHASH', 'CRYPTKEYSPEC', 'LPCTSTR', 'CRYPTSIGNFLAGS', 'BYTE*', 'DWORD*'], ['hHash', 'dwKeySpec', 'sDescription', 'dwFlags', 'pbSignature', 'pdwSigLen'], 'BOOL'), 'CryptVerifySignature': (6, ['HCRYPTHASH', 'BYTE*', 'DWORD', 'HCRYPTKEY', 'LPCTSTR', 'CRYPTSIGNFLAGS'], ['hHash', 'pbSignature', 'dwSigLen', 'hPubKey', 'sDescription', 'dwFlags'], 'BOOL'), 'ControlTrace': (4, ['TRACEHANDLE', 'LPCTSTR', 'PEVENT_TRACE_PROPERTIES', 'ULONG'], ['SessionHandle', 'SessionName', 'Properties', 'ControlCode'], '[ERROR_CODE_ULONG]'), 'EnableTrace': (5, ['ULONG', 'ULONG', 'ULONG', 'LPCGUID', 'TRACEHANDLE'], ['Enable', 'EnableFlag', 'EnableLevel', 'ControlGuid', 'SessionHandle'], '[ERROR_CODE_ULONG]'), 'EnableTraceEx': (9, ['LPCGUID', 'LPCGUID', 'TRACEHANDLE', 'ULONG', 'UCHAR', 'ULONGLONG', 'ULONGLONG', 'ULONG', 'PEVENT_FILTER_DESCRIPTOR'], ['ProviderId', 'SourceId', 'TraceHandle', 'IsEnabled', 'Level', 'MatchAnyKeyword', 'MatchAllKeyword', 'EnableProperty', 'EnableFilterDesc'], '[ERROR_CODE_ULONG]'), 'EnableTraceEx2': (8, ['TRACEHANDLE', 'LPCGUID', 'ULONG', 'UCHAR', 'ULONGLONG', 'ULONGLONG', 'ULONG', 'PENABLE_TRACE_PARAMETERS'], ['TraceHandle', 'ProviderId', 'ControlCode', 'Level', 'MatchAnyKeyword', 'MatchAllKeyword', 'Timeout', 'EnableParameters'], '[ERROR_CODE_ULONG]'), 'EnumerateTraceGuids': (3, ['PTRACE_GUID_PROPERTIES*', 'ULONG', 'PULONG'], ['GuidPropertiesArray', 'PropertyArrayCount', 'GuidCount'], '[ERROR_CODE_ULONG]'), 'EnumerateTraceGuidsEx': (6, ['TRACE_QUERY_INFO_CLASS', 'PVOID', 'ULONG', 'PVOID', 'ULONG', 'PULONG'], ['TraceQueryInfoClass', 'InBuffer', 'InBufferSize', 'OutBuffer', 'OutBufferSize', 'ReturnLength'], '[ERROR_CODE_ULONG]'), 'FlushTrace': (3, ['TRACEHANDLE', 'LPCTSTR', 'PEVENT_TRACE_PROPERTIES'], ['SessionHandle', 'SessionName', 'Properties'], '[ERROR_CODE_ULONG]'), 'QueryAllTraces': (3, ['PEVENT_TRACE_PROPERTIES*', 'ULONG', 'PULONG'], ['PropertyArray', 'PropertyArrayCount', 'SessionCount'], '[ERROR_CODE_ULONG]'), 'QueryTrace': (3, ['TRACEHANDLE', 'LPCTSTR', 'PEVENT_TRACE_PROPERTIES'], ['SessionHandle', 'SessionName', 'Properties'], '[ERROR_CODE_ULONG]'), 'StartTrace': (3, ['PTRACEHANDLE', 'LPCTSTR', 'PEVENT_TRACE_PROPERTIES'], ['SessionHandle', 'SessionName', 'Properties'], '[ERROR_CODE_ULONG]'), 'StopTrace': (3, ['TRACEHANDLE', 'LPCTSTR', 'PEVENT_TRACE_PROPERTIES'], ['SessionHandle', 'SessionName', 'Properties'], '[ERROR_CODE_ULONG]'), 'TraceQueryInformation': (5, ['TRACEHANDLE', 'TRACE_QUERY_INFO_CLASS', 'PVOID', 'ULONG', 'PULONG'], ['SessionHandle', 'InformationClass', 'TraceInformation', 'InformationLength', 'ReturnLength'], '[ERROR_CODE_ULONG]'), 'TraceSetInformation': (4, ['TRACEHANDLE', 'TRACE_INFO_CLASS', 'PVOID', 'ULONG'], ['SessionHandle', 'InformationClass', 'TraceInformation', 'InformationLength'], '[ERROR_CODE_ULONG]'), 'UpdateTrace': (3, ['TRACEHANDLE', 'LPCTSTR', 'PEVENT_TRACE_PROPERTIES'], ['SessionHandle', 'SessionName', 'Properties'], '[ERROR_CODE_ULONG]'), 'CreateTraceInstanceId': (2, ['HANDLE', 'PEVENT_INSTANCE_INFO'], ['RegHandle', 'pInstInfo'], '[ERROR_CODE_ULONG]'), 'GetTraceEnableFlags': (1, ['TRACEHANDLE'], ['SessionHandle'], '[ERROR_CODE_ULONG]'), 'GetTraceEnableLevel': (1, ['TRACEHANDLE'], ['SessionHandle'], 'UCHAR'), 'GetTraceLoggerHandle': (1, ['PVOID'], ['Buffer'], 'TRACEHANDLE'), 'RegisterTraceGuids': (8, ['WMIDPREQUEST', 'PVOID', 'LPCGUID', 'ULONG', 'PTRACE_GUID_REGISTRATION', 'LPCTSTR', 'LPCTSTR', 'PTRACEHANDLE'], ['RequestAddress', 'RequestContext', 'ControlGuid', 'GuidCount', 'TraceGuidReg', 'MofImagePath', 'MofResourceName', 'RegistrationHandle'], '[ERROR_CODE_ULONG]'), 'TraceEvent': (2, ['TRACEHANDLE', 'PEVENT_TRACE_HEADER'], ['SessionHandle', 'EventTrace'], '[ERROR_CODE_ULONG]'), 'TraceEventInstance': (4, ['TRACEHANDLE', 'PEVENT_INSTANCE_HEADER', 'PEVENT_INSTANCE_INFO', 'PEVENT_INSTANCE_INFO'], ['SessionHandle', 'EventTrace', 'pInstInfo', 'pParentInstInfo'], '[ERROR_CODE_ULONG]'), 'TraceMessage': (4, ['TRACEHANDLE', 'TRACE_MESSAGE_FLAGS', 'LPGUID', 'USHORT'], ['SessionHandle', 'MessageFlags', 'MessageGuid', 'MessageNumber'], '[ERROR_CODE_ULONG]'), 'TraceMessageVa': (5, ['TRACEHANDLE', 'ULONG', 'LPGUID', 'USHORT', 'VA_LIST'], ['SessionHandle', 'MessageFlags', 'MessageGuid', 'MessageNumber', 'MessageArgList'], '[ERROR_CODE_ULONG]'), 'UnregisterTraceGuids': (1, ['TRACEHANDLE'], ['RegistrationHandle'], '[ERROR_CODE_ULONG]'), 'EventActivityIdControl': (2, ['EVENTACTIVITY', 'LPGUID'], ['ControlCode', 'ActivityId'], '[ERROR_CODE_ULONG]'), 'EventEnabled': (2, ['REGHANDLE', 'PCEVENT_DESCRIPTOR'], ['RegHandle', 'EventDescriptor'], 'BOOLEAN'), 'EventProviderEnabled': (3, ['REGHANDLE', 'UCHAR', 'ULONGLONG'], ['RegHandle', 'Level', 'Keyword'], 'BOOLEAN'), 'EventRegister': (4, ['LPCGUID', 'ENABLECALLBACK', 'PVOID', 'PREGHANDLE'], ['ProviderId', 'EnableCallback', 'CallbackContext', 'RegHandle'], '[ERROR_CODE_ULONG]'), 'EventSetInformation': (4, ['REGHANDLE', 'EVENT_INFO_CLASS', 'PVOID', 'ULONG'], ['RegHandle', 'InformationClass', 'EventInformation', 'InformationLength'], '[ERROR_CODE_ULONG]'), 'EventUnregister': (1, ['REGHANDLE'], ['RegHandle'], '[ERROR_CODE_ULONG]'), 'EventWrite': (4, ['REGHANDLE', 'PCEVENT_DESCRIPTOR', 'ULONG', 'PEVENT_DATA_DESCRIPTOR'], ['RegHandle', 'EventDescriptor', 'UserDataCount', 'UserData'], '[ERROR_CODE_ULONG]'), 'EventWriteEx': (8, ['REGHANDLE', 'PCEVENT_DESCRIPTOR', 'ULONG64', 'ULONG', 'LPCGUID', 'LPCGUID', 'ULONG', 'PEVENT_DATA_DESCRIPTOR'], ['RegHandle', 'EventDescriptor', 'Filter', 'Flags', 'ActivityId', 'RelatedActivityId', 'UserDataCount', 'UserData'], '[ERROR_CODE_ULONG]'), 'EventWriteString': (4, ['REGHANDLE', 'UCHAR', 'ULONGLONG', 'PCWSTR'], ['RegHandle', 'Level', 'Keyword', 'String'], '[ERROR_CODE_ULONG]'), 'EventWriteTransfer': (6, ['REGHANDLE', 'PCEVENT_DESCRIPTOR', 'LPCGUID', 'LPCGUID', 'ULONG', 'PEVENT_DATA_DESCRIPTOR'], ['RegHandle', 'EventDescriptor', 'ActivityId', 'RelatedActivityId', 'UserDataCount', 'UserData'], '[ERROR_CODE_ULONG]'), 'CloseTrace': (1, ['TRACEHANDLE'], ['TraceHandle'], '[ERROR_CODE_ULONG]'), 'OpenTrace': (1, ['PEVENT_TRACE_LOGFILE'], ['Logfile'], 'TRACEHANDLE'), 'ProcessTrace': (4, ['PTRACEHANDLE', 'ULONG', 'LPFILETIME', 'LPFILETIME'], ['HandleArray', 'HandleCount', 'StartTime', 'EndTime'], '[ERROR_CODE_ULONG]'), 'RemoveTraceCallback': (1, ['LPCGUID'], ['pGuid'], '[ERROR_CODE_ULONG]'), 'SetTraceCallback': (2, ['LPCGUID', 'PEVENT_CALLBACK'], ['pGuid', 'EventCallback'], '[ERROR_CODE_ULONG]'), 'EventAccessControl': (5, ['LPGUID', 'ULONG', 'PSID', 'ULONG', 'BOOLEAN'], ['Guid', 'Operation', 'Sid', 'Rights', 'AllowOrDeny'], '[ERROR_CODE_ULONG]'), 'EventAccessQuery': (3, ['LPGUID', 'PSECURITY_DESCRIPTOR', 'PULONG'], ['Guid', 'Buffer', 'BufferSize'], '[ERROR_CODE_ULONG]'), 'EventAccessRemove': (1, ['LPGUID'], ['Guid'], '[ERROR_CODE_ULONG]'), 'AccessCheck': (8, ['PSECURITY_DESCRIPTOR', 'HANDLE', 'DWORD', 'PGENERIC_MAPPING', 'PPRIVILEGE_SET', 'LPDWORD', 'LPDWORD', 'LPBOOL'], ['pSecurityDescriptor', 'ClientToken', 'DesiredAccess', 'GenericMapping', 'PrivilegeSet', 'PrivilegeSetLength', 'GrantedAccess', 'AccessStatus'], 'BOOL'), 'AccessCheckByType': (11, ['PSECURITY_DESCRIPTOR', 'PSID', 'HANDLE', 'DWORD', 'POBJECT_TYPE_LIST', 'DWORD', 'PGENERIC_MAPPING', 'PPRIVILEGE_SET', 'LPDWORD', 'LPDWORD', 'LPBOOL'], ['pSecurityDescriptor', 'PrincipalSelfSid', 'ClientToken', 'DesiredAccess', 'ObjectTypeList', 'ObjectTypeListLength', 'GenericMapping', 'PrivilegeSet', 'PrivilegeSetLength', 'GrantedAccess', 'AccessStatus'], 'BOOL'), 'AccessCheckByTypeResultList': (11, ['PSECURITY_DESCRIPTOR', 'PSID', 'HANDLE', 'DWORD', 'POBJECT_TYPE_LIST', 'DWORD', 'PGENERIC_MAPPING', 'PPRIVILEGE_SET', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['pSecurityDescriptor', 'PrincipalSelfSid', 'ClientToken', 'DesiredAccess', 'ObjectTypeList', 'ObjectTypeListLength', 'GenericMapping', 'PrivilegeSet', 'PrivilegeSetLength', 'GrantedAccessList', 'AccessStatusList'], 'BOOL'), 'AdjustTokenGroups': (6, ['HANDLE', 'BOOL', 'PTOKEN_GROUPS', 'DWORD', 'PTOKEN_GROUPS', 'PDWORD'], ['TokenHandle', 'ResetToDefault', 'NewState', 'BufferLength', 'PreviousState', 'ReturnLength'], 'BOOL'), 'AdjustTokenPrivileges': (6, ['HANDLE', 'BOOL', 'PTOKEN_PRIVILEGES', 'DWORD', 'PTOKEN_PRIVILEGES', 'PDWORD'], ['TokenHandle', 'DisableAllPrivileges', 'NewState', 'BufferLength', 'PreviousState', 'ReturnLength'], 'BOOL'), 'AllocateAndInitializeSid': (11, ['PSID_IDENTIFIER_AUTHORITY', 'BYTE', 'DWORD', 'DWORD', 'DWORD', 'DWORD', 'DWORD', 'DWORD', 'DWORD', 'DWORD', 'PSID*'], ['pIdentifierAuthority', 'nSubAuthorityCount', 'dwSubAuthority0', 'dwSubAuthority1', 'dwSubAuthority2', 'dwSubAuthority3', 'dwSubAuthority4', 'dwSubAuthority5', 'dwSubAuthority6', 'dwSubAuthority7', 'pSid'], 'BOOL'), 'AllocateLocallyUniqueId': (1, ['PLUID'], ['Luid'], 'BOOL'), 'BuildExplicitAccessWithName': (5, ['PEXPLICIT_ACCESS', 'LPTSTR', 'DWORD', 'ACCESS_MODE', 'ACEFLAGS'], ['pExplicitAccess', 'pTrusteeName', 'AccessPermissions', 'AccessMode', 'Inheritance'], 'VOID'), 'BuildImpersonateExplicitAccessWithName': (6, ['PEXPLICIT_ACCESS', 'LPTSTR', 'PTRUSTEE', 'DWORD', 'ACCESS_MODE', 'ACEFLAGS'], ['pExplicitAccess', 'pTrusteeName', 'pTrustee', 'AccessPermissions', 'AccessMode', 'Inheritance'], 'VOID'), 'BuildImpersonateTrustee': (2, ['PTRUSTEE', 'PTRUSTEE'], ['pTrustee', 'pImpersonateTrustee'], 'VOID'), 'BuildTrusteeWithName': (2, ['PTRUSTEE', 'LPTSTR'], ['pTrustee', 'pName'], 'VOID'), 'BuildTrusteeWithObjectsAndName': (6, ['PTRUSTEE', 'POBJECTS_AND_NAME', 'SE_OBJECT_TYPE', 'LPTSTR', 'LPTSTR', 'LPTSTR'], ['pTrustee', 'pObjName', 'ObjectType', 'ObjectTypeName', 'InheritedObjectTypeName', 'Name'], 'void'), 'BuildTrusteeWithObjectsAndSid': (5, ['PTRUSTEE', 'POBJECTS_AND_SID', 'GUID*', 'GUID*', 'PSID'], ['pTrustee', 'pObjSid', 'pObjectGuid', 'pInheritedObjectGuid', 'pSid'], 'void'), 'BuildTrusteeWithSid': (2, ['PTRUSTEE', 'PSID'], ['pTrustee', 'pSid'], 'VOID'), 'CheckTokenMembership': (3, ['HANDLE', 'PSID', 'PBOOL'], ['TokenHandle', 'SidToCheck', 'IsMember'], 'BOOL'), 'ConvertSecurityDescriptorToStringSecurityDescriptor': (5, ['PSECURITY_DESCRIPTOR', 'DWORD', 'SECURITY_INFORMATION', 'LPTSTR*', 'PULONG'], ['SecurityDescriptor', 'RequestedStringSDRevision', 'SecurityInformation', 'StringSecurityDescriptor', 'StringSecurityDescriptorLen'], 'BOOL'), 'ConvertSidToStringSid': (2, ['PSID', 'LPTSTR*'], ['Sid', 'StringSid'], 'BOOL'), 'ConvertStringSecurityDescriptorToSecurityDescriptor': (4, ['LPCTSTR', 'DWORD', 'PSECURITY_DESCRIPTOR*', 'PULONG'], ['StringSecurityDescriptor', 'StringSDRevision', 'SecurityDescriptor', 'SecurityDescriptorSize'], 'BOOL'), 'ConvertStringSidToSid': (2, ['LPCTSTR', 'PSID*'], ['StringSid', 'Sid'], 'BOOL'), 'CopySid': (3, ['DWORD', 'PSID', 'PSID'], ['nDestinationSidLength', 'pDestinationSid', 'pSourceSid'], 'BOOL'), 'CreateRestrictedToken': (9, ['HANDLE', 'CREATERESTRICTEDTOKENFLAGS', 'DWORD', 'PSID_AND_ATTRIBUTES', 'DWORD', 'PLUID_AND_ATTRIBUTES', 'DWORD', 'PSID_AND_ATTRIBUTES', 'PHANDLE'], ['ExistingTokenHandle', 'Flags', 'DisableSidCount', 'SidsToDisable', 'DeletePrivilegeCount', 'PrivilegesToDelete', 'RestrictedSidCount', 'SidsToRestrict', 'NewTokenHandle'], 'BOOL'), 'CreateWellKnownSid': (4, ['WELL_KNOWN_SID_TYPE', 'PSID', 'PSID', 'DWORD*'], ['WellKnownSidType', 'DomainSid', 'pSid', 'cbSid'], 'BOOL'), 'DuplicateToken': (3, ['HANDLE', 'SECURITY_IMPERSONATION_LEVEL', 'PHANDLE'], ['ExistingTokenHandle', 'ImpersonationLevel', 'DuplicateTokenHandle'], 'BOOL'), 'DuplicateTokenEx': (6, ['HANDLE', 'TOKEN_ACCESS_MASK_DWORD', 'LPSECURITY_ATTRIBUTES', 'SECURITY_IMPERSONATION_LEVEL', 'TOKEN_TYPE', 'PHANDLE'], ['hExistingToken', 'dwDesiredAccess', 'lpTokenAttributes', 'ImpersonationLevel', 'TokenType', 'phNewToken'], 'BOOL'), 'EqualDomainSid': (3, ['PSID', 'PSID', 'BOOL*'], ['pSid1', 'pSid2', 'pfEqual'], 'BOOL'), 'EqualPrefixSid': (2, ['PSID', 'PSID'], ['pSid1', 'pSid2'], 'BOOL'), 'EqualSid': (2, ['PSID', 'PSID'], ['pSid1', 'pSid2'], 'BOOL'), 'FreeSid': (1, ['PSID'], ['pSid'], 'PVOID'), 'GetAuditedPermissionsFromAcl': (4, ['PACL', 'PTRUSTEE', 'PACCESS_MASK', 'PACCESS_MASK'], ['pacl', 'pTrustee', 'pSuccessfulAuditedRights', 'pFailedAuditRights'], '[ERROR_CODE]'), 'GetEffectiveRightsFromAcl': (3, ['PACL', 'PTRUSTEE', 'PACCESS_MASK'], ['pacl', 'pTrustee', 'pAccessRights'], '[ERROR_CODE]'), 'GetExplicitEntriesFromAcl': (3, ['PACL', 'PULONG', 'PEXPLICIT_ACCESS*'], ['pacl', 'pcCountOfExplicitEntries', 'pListOfExplicitEntries'], '[ERROR_CODE]'), 'GetLengthSid': (1, ['PSID'], ['pSid'], 'DWORD'), 'GetMultipleTrustee': (1, ['PTRUSTEE'], ['pTrustee'], 'PTRUSTEE'), 'GetMultipleTrusteeOperation': (1, ['PTRUSTEE'], ['pTrustee'], 'MULTIPLE_TRUSTEE_OPERATION'), 'GetNamedSecurityInfo': (8, ['LPTSTR', 'SE_OBJECT_TYPE', 'SECURITY_INFORMATION', 'PSID*', 'PSID*', 'PACL*', 'PACL*', 'PSECURITY_DESCRIPTOR_RELATIVE*'], ['pObjectName', 'ObjectType', 'SecurityInfo', 'ppsidOwner', 'ppsidGroup', 'ppDacl', 'ppSacl', 'ppSecurityDescriptor'], '[ERROR_CODE]'), 'GetSecurityDescriptorControl': (3, ['PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR_CONTROL', 'LPDWORD'], ['pSecurityDescriptor', 'pControl', 'lpdwRevision'], 'BOOL'), 'GetSecurityInfo': (8, ['HANDLE', 'SE_OBJECT_TYPE', 'SECURITY_INFORMATION', 'PSID*', 'PSID*', 'PACL*', 'PACL*', 'PSECURITY_DESCRIPTOR*'], ['handle', 'ObjectType', 'SecurityInfo', 'ppsidOwner', 'ppsidGroup', 'ppDacl', 'ppSacl', 'ppSecurityDescriptor'], '[ERROR_CODE]'), 'GetSidIdentifierAuthority': (1, ['PSID'], ['pSid'], 'PSID_IDENTIFIER_AUTHORITY'), 'GetSidLengthRequired': (1, ['UCHAR'], ['nSubAuthorityCount'], 'DWORD'), 'GetSidSubAuthority': (2, ['PSID', 'DWORD'], ['pSid', 'nSubAuthority'], 'PDWORD'), 'GetSidSubAuthorityCount': (1, ['PSID'], ['pSid'], 'PUCHAR'), 'GetTokenInformation': (5, ['HANDLE', 'TOKEN_INFORMATION_CLASS', 'LPVOID', 'DWORD', 'PDWORD'], ['TokenHandle', 'TokenInformationClass', 'TokenInformation', 'TokenInformationLength', 'ReturnLength'], 'BOOL'), 'GetTrusteeForm': (1, ['PTRUSTEE'], ['pTrustee'], 'TRUSTEE_FORM'), 'GetTrusteeName': (1, ['PTRUSTEE'], ['pTrustee'], 'LPTSTR'), 'GetTrusteeType': (1, ['PTRUSTEE'], ['pTrustee'], 'TRUSTEE_TYPE'), 'GetWindowsAccountDomainSid': (3, ['PSID', 'PSID', 'DWORD*'], ['pSid', 'ppDomainSid', 'cbSid'], 'BOOL'), 'InitializeSid': (3, ['PSID', 'PSID_IDENTIFIER_AUTHORITY', 'BYTE'], ['Sid', 'pIdentifierAuthority', 'nSubAuthorityCount'], 'BOOL'), 'IsTokenRestricted': (1, ['HANDLE'], ['TokenHandle'], 'BOOL'), 'IsValidSid': (1, ['PSID'], ['pSid'], 'BOOL'), 'IsWellKnownSid': (2, ['PSID', 'WELL_KNOWN_SID_TYPE'], ['pSid', 'WellKnownSidType'], 'BOOL'), 'LookupAccountName': (7, ['LPCTSTR', 'LPCTSTR', 'PSID', 'LPDWORD', 'LPTSTR', 'LPDWORD', 'PSID_NAME_USE'], ['lpSystemName', 'lpAccountName', 'Sid', 'cbSid', 'ReferencedDomainName', 'cchReferencedDomainName', 'peUse'], 'BOOL'), 'LookupAccountSid': (7, ['LPCTSTR', 'PSID', 'LPTSTR', 'LPDWORD', 'LPTSTR', 'LPDWORD', 'PSID_NAME_USE'], ['lpSystemName', 'lpSid', 'lpName', 'cchName', 'lpReferencedDomainName', 'cchReferencedDomainName', 'peUse'], 'BOOL'), 'LookupPrivilegeDisplayName': (5, ['LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD', 'LPDWORD'], ['lpSystemName', 'lpName', 'lpDisplayName', 'cchDisplayName', 'lpLanguageId'], 'BOOL'), 'LookupPrivilegeName': (4, ['LPCTSTR', 'PLUID', 'LPTSTR', 'LPDWORD'], ['lpSystemName', 'lpLuid', 'lpName', 'cchName'], 'BOOL'), 'LookupPrivilegeValue': (3, ['LPCTSTR', 'LPCTSTR', 'PLUID'], ['lpSystemName', 'lpName', 'lpLuid'], 'BOOL'), 'OpenProcessToken': (3, ['PROCESSHANDLE', 'TOKEN_ACCESS_MASK_DWORD', 'PHANDLE'], ['ProcessHandle', 'DesiredAccess', 'TokenHandle'], 'BOOL'), 'OpenThreadToken': (4, ['THREADHANDLE', 'TOKEN_ACCESS_MASK_DWORD', 'BOOL', 'PHANDLE'], ['ThreadHandle', 'DesiredAccess', 'OpenAsSelf', 'TokenHandle'], 'BOOL'), 'QuerySecurityAccessMask': (2, ['SECURITY_INFORMATION', 'LPDWORD'], ['SecurityInformation', 'DesiredAccess'], 'VOID'), 'SetEntriesInAcl': (4, ['ULONG', 'PEXPLICIT_ACCESS', 'PACL', 'PACL*'], ['cCountOfExplicitEntries', 'pListOfExplicitEntries', 'OldAcl', 'NewAcl'], '[ERROR_CODE]'), 'SetNamedSecurityInfo': (7, ['LPTSTR', 'SE_OBJECT_TYPE', 'SECURITY_INFORMATION', 'PSID', 'PSID', 'PACL', 'PACL'], ['pObjectName', 'ObjectType', 'SecurityInfo', 'psidOwner', 'psidGroup', 'pDacl', 'pSacl'], '[ERROR_CODE]'), 'SetSecurityAccessMask': (2, ['SECURITY_INFORMATION', 'LPDWORD'], ['SecurityInformation', 'DesiredAccess'], 'VOID'), 'SetSecurityDescriptorControl': (3, ['PSECURITY_DESCRIPTOR', 'SECURITY_DESCRIPTOR_CONTROL', 'SECURITY_DESCRIPTOR_CONTROL'], ['pSecurityDescriptor', 'ControlBitsOfInterest', 'ControlBitsToSet'], 'BOOL'), 'SetSecurityInfo': (7, ['HANDLE', 'SE_OBJECT_TYPE', 'SECURITY_INFORMATION', 'PSID', 'PSID', 'PACL', 'PACL'], ['handle', 'ObjectType', 'SecurityInfo', 'psidOwner', 'psidGroup', 'pDacl', 'pSacl'], '[ERROR_CODE]'), 'SetThreadToken': (2, ['PHANDLE', 'HANDLE'], ['Thread', 'Token'], 'BOOL'), 'SetTokenInformation': (4, ['HANDLE', 'TOKEN_INFORMATION_CLASS', 'LPVOID', 'DWORD'], ['TokenHandle', 'TokenInformationClass', 'TokenInformation', 'TokenInformationLength'], 'BOOL'), 'TreeResetNamedSecurityInfo': (11, ['LPTSTR', 'SE_OBJECT_TYPE', 'SECURITY_INFORMATION', 'PSID', 'PSID', 'PACL', 'PACL', 'BOOL', 'FN_PROGRESS', 'PROG_INVOKE_SETTING', 'PVOID'], ['pObjectName', 'ObjectType', 'SecurityInfo', 'pOwner', 'pGroup', 'pDacl', 'pSacl', 'KeepExplicit', 'fnProgress', 'ProgressInvokeSetting', 'Args'], '[ERROR_CODE]'), 'TreeSetNamedSecurityInfo': (11, ['LPTSTR', 'SE_OBJECT_TYPE', 'SECURITY_INFORMATION', 'PSID', 'PSID', 'PACL', 'PACL', 'TREESECACTION', 'FN_PROGRESS', 'PROG_INVOKE_SETTING', 'PVOID'], ['pObjectName', 'ObjectType', 'SecurityInfo', 'pOwner', 'pGroup', 'pDacl', 'pSacl', 'dwAction', 'fnProgress', 'ProgressInvokeSetting', 'Args'], '[ERROR_CODE]'), 'AreAllAccessesGranted': (2, ['DWORD', 'DWORD'], ['GrantedAccess', 'DesiredAccess'], 'BOOL'), 'AreAnyAccessesGranted': (2, ['DWORD', 'DWORD'], ['GrantedAccess', 'DesiredAccess'], 'BOOL'), 'BuildSecurityDescriptor': (9, ['PTRUSTEE', 'PTRUSTEE', 'ULONG', 'PEXPLICIT_ACCESS', 'ULONG', 'PEXPLICIT_ACCESS', 'PSECURITY_DESCRIPTOR', 'PULONG', 'PSECURITY_DESCRIPTOR*'], ['pOwner', 'pGroup', 'cCountOfAccessEntries', 'pListOfAccessEntries', 'cCountOfAuditEntries', 'pListOfAuditEntries', 'pOldSD', 'pSizeNewSD', 'pNewSD'], '[ERROR_CODE]'), 'ConvertToAutoInheritPrivateObjectSecurity': (6, ['PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR*', 'GUID*', 'BOOLEAN', 'PGENERIC_MAPPING'], ['ParentDescriptor', 'CurrentSecurityDescriptor', 'NewSecurityDescriptor', 'ObjectType', 'IsDirectoryObject', 'GenericMapping'], 'BOOL'), 'CreatePrivateObjectSecurity': (6, ['PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR*', 'BOOL', 'HANDLE', 'PGENERIC_MAPPING'], ['ParentDescriptor', 'CreatorDescriptor', 'NewDescriptor', 'IsDirectoryObject', 'Token', 'GenericMapping'], 'BOOL'), 'CreatePrivateObjectSecurityEx': (8, ['PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR*', 'GUID*', 'BOOL', 'SEF_FLAGS', 'HANDLE', 'PGENERIC_MAPPING'], ['ParentDescriptor', 'CreatorDescriptor', 'NewDescriptor', 'ObjectType', 'IsContainerObject', 'AutoInheritFlags', 'Token', 'GenericMapping'], 'BOOL'), 'CreatePrivateObjectSecurityWithMultipleInheritance': (9, ['PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR*', 'GUID**', 'ULONG', 'BOOL', 'SEF_FLAGS', 'HANDLE', 'PGENERIC_MAPPING'], ['ParentDescriptor', 'CreatorDescriptor', 'NewDescriptor', 'ObjectTypes', 'GuidCount', 'IsContainerObject', 'AutoInheritFlags', 'Token', 'GenericMapping'], 'BOOL'), 'DestroyPrivateObjectSecurity': (1, ['PSECURITY_DESCRIPTOR*'], ['ObjectDescriptor'], 'BOOL'), 'GetPrivateObjectSecurity': (5, ['PSECURITY_DESCRIPTOR', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR', 'DWORD', 'PDWORD'], ['ObjectDescriptor', 'SecurityInformation', 'ResultantDescriptor', 'DescriptorLength', 'ReturnLength'], 'BOOL'), 'ImpersonateAnonymousToken': (1, ['THREADHANDLE'], ['ThreadHandle'], 'BOOL'), 'ImpersonateLoggedOnUser': (1, ['HANDLE'], ['hToken'], 'BOOL'), 'ImpersonateNamedPipeClient': (1, ['HANDLE'], ['hNamedPipe'], 'BOOL'), 'ImpersonateSelf': (1, ['SECURITY_IMPERSONATION_LEVEL'], ['ImpersonationLevel'], 'BOOL'), 'LookupSecurityDescriptorParts': (7, ['PTRUSTEE*', 'PTRUSTEE*', 'PULONG', 'PEXPLICIT_ACCESS*', 'PULONG', 'PEXPLICIT_ACCESS*', 'PSECURITY_DESCRIPTOR'], ['pOwner', 'pGroup', 'cCountOfAccessEntries', 'pListOfAccessEntries', 'cCountOfAuditEntries', 'pListOfAuditEntries', 'pSD'], '[ERROR_CODE]'), 'MapGenericMask': (2, ['PDWORD', 'PGENERIC_MAPPING'], ['AccessMask', 'GenericMapping'], 'VOID'), 'ObjectCloseAuditAlarm': (3, ['LPCTSTR', 'LPVOID', 'BOOL'], ['SubsystemName', 'HandleId', 'GenerateOnClose'], 'BOOL'), 'ObjectDeleteAuditAlarm': (3, ['LPCTSTR', 'LPVOID', 'BOOL'], ['SubsystemName', 'HandleId', 'GenerateOnClose'], 'BOOL'), 'ObjectOpenAuditAlarm': (12, ['LPCTSTR', 'LPVOID', 'LPTSTR', 'LPTSTR', 'PSECURITY_DESCRIPTOR', 'HANDLE', 'DWORD', 'DWORD', 'PPRIVILEGE_SET', 'BOOL', 'BOOL', 'LPBOOL'], ['SubsystemName', 'HandleId', 'ObjectTypeName', 'ObjectName', 'pSecurityDescriptor', 'ClientToken', 'DesiredAccess', 'GrantedAccess', 'Privileges', 'ObjectCreation', 'AccessGranted', 'GenerateOnClose'], 'BOOL'), 'ObjectPrivilegeAuditAlarm': (6, ['LPCTSTR', 'LPVOID', 'HANDLE', 'DWORD', 'PPRIVILEGE_SET', 'BOOL'], ['SubsystemName', 'HandleId', 'ClientToken', 'DesiredAccess', 'Privileges', 'AccessGranted'], 'BOOL'), 'PrivilegeCheck': (3, ['HANDLE', 'PPRIVILEGE_SET', 'LPBOOL'], ['ClientToken', 'RequiredPrivileges', 'pfResult'], 'BOOL'), 'PrivilegedServiceAuditAlarm': (5, ['LPCTSTR', 'LPCTSTR', 'HANDLE', 'PPRIVILEGE_SET', 'BOOL'], ['SubsystemName', 'ServiceName', 'ClientToken', 'Privileges', 'AccessGranted'], 'BOOL'), 'RevertToSelf': (0, [], [], 'BOOL'), 'SetPrivateObjectSecurity': (5, ['SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR*', 'PGENERIC_MAPPING', 'HANDLE'], ['SecurityInformation', 'ModificationDescriptor', 'ObjectsSecurityDescriptor', 'GenericMapping', 'Token'], 'BOOL'), 'SetPrivateObjectSecurityEx': (6, ['SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR*', 'SEF_FLAGS', 'PGENERIC_MAPPING', 'HANDLE'], ['SecurityInformation', 'ModificationDescriptor', 'ObjectsSecurityDescriptor', 'AutoInheritFlags', 'GenericMapping', 'Token'], 'BOOL'), 'GetSecurityDescriptorRMControl': (2, ['PSECURITY_DESCRIPTOR', 'PUCHAR'], ['SecurityDescriptor', 'RMControl'], '[ERROR_CODE]'), 'SetSecurityDescriptorRMControl': (2, ['PSECURITY_DESCRIPTOR', 'PUCHAR'], ['SecurityDescriptor', 'RMControl'], '[ERROR_CODE]'), 'AccessCheckAndAuditAlarm': (11, ['LPCTSTR', 'LPVOID', 'LPTSTR', 'LPTSTR', 'PSECURITY_DESCRIPTOR', 'DWORD', 'PGENERIC_MAPPING', 'BOOL', 'LPDWORD', 'LPBOOL', 'LPBOOL'], ['SubsystemName', 'HandleId', 'ObjectTypeName', 'ObjectName', 'SecurityDescriptor', 'DesiredAccess', 'GenericMapping', 'ObjectCreation', 'GrantedAccess', 'AccessStatus', 'pfGenerateOnClose'], 'BOOL'), 'AccessCheckByTypeAndAuditAlarm': (16, ['LPCTSTR', 'LPVOID', 'LPCTSTR', 'LPCTSTR', 'PSECURITY_DESCRIPTOR', 'PSID', 'DWORD', 'AUDIT_EVENT_TYPE', 'DWORD', 'POBJECT_TYPE_LIST', 'DWORD', 'PGENERIC_MAPPING', 'BOOL', 'LPDWORD', 'LPBOOL', 'LPBOOL'], ['SubsystemName', 'HandleId', 'ObjectTypeName', 'ObjectName', 'pSecurityDescriptor', 'PrincipalSelfSid', 'DesiredAccess', 'AuditType', 'Flags', 'ObjectTypeList', 'ObjectTypeListLength', 'GenericMapping', 'ObjectCreation', 'GrantedAccess', 'AccessStatus', 'pfGenerateOnClose'], 'BOOL'), 'AccessCheckByTypeResultListAndAuditAlarm': (16, ['LPCTSTR', 'LPVOID', 'LPCTSTR', 'LPCTSTR', 'PSECURITY_DESCRIPTOR', 'PSID', 'DWORD', 'AUDIT_EVENT_TYPE', 'DWORD', 'POBJECT_TYPE_LIST', 'DWORD', 'PGENERIC_MAPPING', 'BOOL', 'LPDWORD', 'LPDWORD', 'LPBOOL'], ['SubsystemName', 'HandleId', 'ObjectTypeName', 'ObjectName', 'pSecurityDescriptor', 'PrincipalSelfSid', 'DesiredAccess', 'AuditType', 'Flags', 'ObjectTypeList', 'ObjectTypeListLength', 'GenericMapping', 'ObjectCreation', 'GrantedAccess', 'AccessStatusList', 'pfGenerateOnClose'], 'BOOL'), 'AccessCheckByTypeResultListAndAuditAlarmByHandle': (17, ['LPCTSTR', 'LPVOID', 'HANDLE', 'LPCTSTR', 'LPCTSTR', 'PSECURITY_DESCRIPTOR', 'PSID', 'DWORD', 'AUDIT_EVENT_TYPE', 'DWORD', 'POBJECT_TYPE_LIST', 'DWORD', 'PGENERIC_MAPPING', 'BOOL', 'LPDWORD', 'LPDWORD', 'LPBOOL'], ['SubsystemName', 'HandleId', 'ClientToken', 'ObjectTypeName', 'ObjectName', 'pSecurityDescriptor', 'PrincipalSelfSid', 'DesiredAccess', 'AuditType', 'Flags', 'ObjectTypeList', 'ObjectTypeListLength', 'GenericMapping', 'ObjectCreation', 'GrantedAccess', 'AccessStatusList', 'pfGenerateOnClose'], 'BOOL'), 'AddAccessAllowedAce': (4, ['PACL', 'DWORD', 'ACCESS_MASK_DWORD', 'PSID'], ['pAcl', 'dwAceRevision', 'AccessMask', 'pSid'], 'BOOL'), 'AddAccessAllowedAceEx': (5, ['PACL', 'DWORD', 'ACEFLAGS', 'ACCESS_MASK_DWORD', 'PSID'], ['pAcl', 'dwAceRevision', 'AceFlags', 'AccessMask', 'pSid'], 'BOOL'), 'AddAccessAllowedObjectAce': (7, ['PACL', 'DWORD', 'ACEFLAGS', 'ACCESS_MASK_DWORD', 'GUID*', 'GUID*', 'PSID'], ['pAcl', 'dwAceRevision', 'AceFlags', 'AccessMask', 'ObjectTypeGuid', 'InheritedObjectTypeGuid', 'pSid'], 'BOOL'), 'AddAccessDeniedAce': (4, ['PACL', 'DWORD', 'ACCESS_MASK_DWORD', 'PSID'], ['pAcl', 'dwAceRevision', 'AccessMask', 'pSid'], 'BOOL'), 'AddAccessDeniedAceEx': (5, ['PACL', 'DWORD', 'ACEFLAGS', 'ACCESS_MASK_DWORD', 'PSID'], ['pAcl', 'dwAceRevision', 'AceFlags', 'AccessMask', 'pSid'], 'BOOL'), 'AddAccessDeniedObjectAce': (7, ['PACL', 'DWORD', 'ACEFLAGS', 'ACCESS_MASK_DWORD', 'GUID*', 'GUID*', 'PSID'], ['pAcl', 'dwAceRevision', 'AceFlags', 'AccessMask', 'ObjectTypeGuid', 'InheritedObjectTypeGuid', 'pSid'], 'BOOL'), 'AddAce': (5, ['PACL', 'DWORD', 'DWORD', 'LPVOID', 'DWORD'], ['pAcl', 'dwAceRevision', 'dwStartingAceIndex', 'pAceList', 'nAceListLength'], 'BOOL'), 'AddAuditAccessAce': (6, ['PACL', 'DWORD', 'ACCESS_MASK_DWORD', 'PSID', 'BOOL', 'BOOL'], ['pAcl', 'dwAceRevision', 'dwAccessMask', 'pSid', 'bAuditSuccess', 'bAuditFailure'], 'BOOL'), 'AddAuditAccessAceEx': (7, ['PACL', 'DWORD', 'ACEFLAGS', 'ACCESS_MASK_DWORD', 'PSID', 'BOOL', 'BOOL'], ['pAcl', 'dwAceRevision', 'AceFlags', 'dwAccessMask', 'pSid', 'bAuditSuccess', 'bAuditFailure'], 'BOOL'), 'AddAuditAccessObjectAce': (9, ['PACL', 'DWORD', 'ACEFLAGS', 'ACCESS_MASK_DWORD', 'GUID*', 'GUID*', 'PSID', 'BOOL', 'BOOL'], ['pAcl', 'dwAceRevision', 'AceFlags', 'AccessMask', 'ObjectTypeGuid', 'InheritedObjectTypeGuid', 'pSid', 'bAuditSuccess', 'bAuditFailure'], 'BOOL'), 'AddMandatoryAce': (5, ['PACL', 'DWORD', 'ACEFLAGS', 'MANDATORYPOLICYFLAGS', 'PSID'], ['pAcl', 'dwAceRevision', 'AceFlags', 'MandatoryPolicy', 'pLabelSid'], 'BOOL'), 'DeleteAce': (2, ['PACL', 'DWORD'], ['pAcl', 'dwAceIndex'], 'BOOL'), 'FindFirstFreeAce': (2, ['PACL', 'PACE*'], ['pAcl', 'pAce'], 'BOOL'), 'FreeInheritedFromArray': (3, ['PINHERITED_FROM', 'USHORT', 'PFN_OBJECT_MGR_FUNCTS'], ['pInheritArray', 'AceCnt', 'pfnArray'], '[ERROR_CODE]'), 'GetAce': (3, ['PACL', 'DWORD', 'PACE*'], ['pAcl', 'dwAceIndex', 'pAce'], 'BOOL'), 'GetAclInformation': (4, ['PACL', 'LPVOID', 'DWORD', 'ACL_INFORMATION_CLASS'], ['pAcl', 'pAclInformation', 'nAclInformationLength', 'dwAclInformationClass'], 'BOOL'), 'GetFileSecurity': (5, ['LPCTSTR', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR', 'DWORD', 'LPDWORD'], ['lpFileName', 'RequestedInformation', 'pSecurityDescriptor', 'nLength', 'lpnLengthNeeded'], 'BOOL'), 'GetInheritanceSource': (10, ['LPTSTR', 'SE_OBJECT_TYPE', 'SECURITY_INFORMATION', 'BOOL', 'GUID**', 'DWORD', 'PACL', 'PFN_OBJECT_MGR_FUNCTS', 'PGENERIC_MAPPING', 'PINHERITED_FROM'], ['pObjectName', 'ObjectType', 'SecurityInfo', 'Container', 'pObjectClassGuids', 'GuidCount', 'pAcl', 'pfnArray', 'pGenericMapping', 'pInheritArray'], '[ERROR_CODE]'), 'GetKernelObjectSecurity': (5, ['HANDLE', 'SECURITY_INFORMATION', 'PISECURITY_DESCRIPTOR_RELATIVE', 'DWORD', 'LPDWORD'], ['Handle', 'RequestedInformation', 'pSecurityDescriptor', 'nLength', 'lpnLengthNeeded'], 'BOOL'), 'GetSecurityDescriptorDacl': (4, ['PSECURITY_DESCRIPTOR', 'LPBOOL', 'PACL*', 'LPBOOL'], ['pSecurityDescriptor', 'lpbDaclPresent', 'pDacl', 'lpbDaclDefaulted'], 'BOOL'), 'GetSecurityDescriptorGroup': (3, ['PSECURITY_DESCRIPTOR', 'PSID*', 'LPBOOL'], ['pSecurityDescriptor', 'pGroup', 'lpbGroupDefaulted'], 'BOOL'), 'GetSecurityDescriptorLength': (1, ['PSECURITY_DESCRIPTOR'], ['pSecurityDescriptor'], 'DWORD'), 'GetSecurityDescriptorOwner': (3, ['PSECURITY_DESCRIPTOR', 'PSID*', 'LPBOOL'], ['pSecurityDescriptor', 'pOwner', 'lpbOwnerDefaulted'], 'BOOL'), 'GetSecurityDescriptorSacl': (4, ['PSECURITY_DESCRIPTOR', 'LPBOOL', 'PACL*', 'LPBOOL'], ['pSecurityDescriptor', 'lpbSaclPresent', 'pSacl', 'lpbSaclDefaulted'], 'BOOL'), 'InitializeAcl': (3, ['PACL', 'DWORD', 'DWORD'], ['pAcl', 'nAclLength', 'dwAclRevision'], 'BOOL'), 'InitializeSecurityDescriptor': (2, ['PSECURITY_DESCRIPTOR', 'DWORD'], ['pSecurityDescriptor', 'dwRevision'], 'BOOL'), 'IsValidAcl': (1, ['PACL'], ['pAcl'], 'BOOL'), 'IsValidSecurityDescriptor': (1, ['PSECURITY_DESCRIPTOR'], ['pSecurityDescriptor'], 'BOOL'), 'MakeAbsoluteSD': (11, ['PSECURITY_DESCRIPTOR_RELATIVE', 'PSECURITY_DESCRIPTOR', 'LPDWORD', 'PACL', 'LPDWORD', 'PACL', 'LPDWORD', 'PSID', 'LPDWORD', 'PSID', 'LPDWORD'], ['pSelfRelativeSD', 'pAbsoluteSD', 'lpdwAbsoluteSDSize', 'pDacl', 'lpdwDaclSize', 'pSacl', 'lpdwSaclSize', 'pOwner', 'lpdwOwnerSize', 'pPrimaryGroup', 'lpdwPrimaryGroupSize'], 'BOOL'), 'MakeSelfRelativeSD': (3, ['PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR', 'LPDWORD'], ['pAbsoluteSD', 'pSelfRelativeSD', 'lpdwBufferLength'], 'BOOL'), 'QueryServiceObjectSecurity': (5, ['SC_HANDLE', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR', 'DWORD', 'LPDWORD'], ['hService', 'dwSecurityInformation', 'lpSecurityDescriptor', 'cbBufSize', 'pcbBytesNeeded'], 'BOOL'), 'RegGetKeySecurity': (4, ['HKEY', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR', 'LPDWORD'], ['hKey', 'SecurityInformation', 'pSecurityDescriptor', 'lpcbSecurityDescriptor'], '[REG_ERROR]'), 'RegSetKeySecurity': (3, ['HKEY', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR'], ['hKey', 'SecurityInformation', 'pSecurityDescriptor'], '[REG_ERROR]'), 'SetAclInformation': (4, ['PACL', 'LPVOID', 'DWORD', 'ACL_INFORMATION_CLASS'], ['pAcl', 'pAclInformation', 'nAclInformationLength', 'dwAclInformationClass'], 'BOOL'), 'SetFileSecurity': (3, ['LPCTSTR', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR'], ['lpFileName', 'SecurityInformation', 'pSecurityDescriptor'], 'BOOL'), 'SetKernelObjectSecurity': (3, ['HANDLE', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR'], ['Handle', 'SecurityInformation', 'SecurityDescriptor'], 'BOOL'), 'SetSecurityDescriptorDacl': (4, ['PSECURITY_DESCRIPTOR', 'BOOL', 'PACL', 'BOOL'], ['pSecurityDescriptor', 'bDaclPresent', 'pDacl', 'bDaclDefaulted'], 'BOOL'), 'SetSecurityDescriptorGroup': (3, ['PSECURITY_DESCRIPTOR', 'PSID', 'BOOL'], ['pSecurityDescriptor', 'pGroup', 'bGroupDefaulted'], 'BOOL'), 'SetSecurityDescriptorOwner': (3, ['PSECURITY_DESCRIPTOR', 'PSID', 'BOOL'], ['pSecurityDescriptor', 'pOwner', 'bOwnerDefaulted'], 'BOOL'), 'SetSecurityDescriptorSacl': (4, ['PSECURITY_DESCRIPTOR', 'BOOL', 'PACL', 'BOOL'], ['pSecurityDescriptor', 'bSaclPresent', 'pSacl', 'bSaclDefaulted'], 'BOOL'), 'SetServiceObjectSecurity': (3, ['SC_HANDLE', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR'], ['hService', 'dwSecurityInformation', 'lpSecurityDescriptor'], 'BOOL'), 'AuditComputeEffectivePolicyBySid': (4, ['CONST PSID', 'CONST GUID*', 'ULONG', 'PAUDIT_POLICY_INFORMATION*'], ['pSid', 'pSubCategoryGuids', 'PolicyCount', 'ppAuditPolicy'], 'BOOLEAN'), 'AuditComputeEffectivePolicyByToken': (4, ['HANDLE', 'CONST GUID*', 'ULONG', 'PAUDIT_POLICY_INFORMATION*'], ['hTokenHandle', 'pSubCategoryGuids', 'PolicyCount', 'ppAuditPolicy'], 'BOOLEAN'), 'AuditEnumerateCategories': (2, ['GUID**', 'PULONG'], ['ppAuditCategoriesArray', 'pCountReturned'], 'BOOLEAN'), 'AuditEnumeratePerUserPolicy': (1, ['PPOLICY_AUDIT_SID_ARRAY*'], ['ppAuditSidArray'], 'BOOLEAN'), 'AuditEnumerateSubCategories': (4, ['CONST GUID*', 'BOOLEAN', 'GUID**', 'PULONG'], ['pAuditCategoryGuid', 'bRetrieveAllSubCategories', 'ppAuditSubCategoriesArray', 'pCountReturned'], 'BOOLEAN'), 'AuditFree': (1, ['PVOID'], ['Buffer'], 'VOID'), 'AuditLookupCategoryGuidFromCategoryId': (2, ['POLICY_AUDIT_EVENT_TYPE', 'GUID*'], ['AuditCategoryId', 'pAuditCategoryGuid'], 'BOOLEAN'), 'AuditLookupCategoryIdFromCategoryGuid': (2, ['CONST GUID*', 'PPOLICY_AUDIT_EVENT_TYPE'], ['pAuditCategoryGuid', 'pAuditCategoryId'], 'BOOLEAN'), 'AuditLookupCategoryName': (2, ['CONST GUID*', 'PTSTR*'], ['pAuditCategoryGuid', 'ppszCategoryName'], 'BOOLEAN'), 'AuditLookupSubCategoryName': (2, ['CONST GUID*', 'PTSTR*'], ['pAuditSubCategoryGuid', 'ppszSubCategoryName'], 'BOOLEAN'), 'AuditQueryPerUserPolicy': (4, ['CONST PSID', 'CONST GUID*', 'ULONG', 'PAUDIT_POLICY_INFORMATION*'], ['pSid', 'pSubCategoryGuids', 'PolicyCount', 'ppAuditPolicy'], 'BOOLEAN'), 'AuditQuerySystemPolicy': (3, ['CONST GUID*', 'ULONG', 'PAUDIT_POLICY_INFORMATION*'], ['pSubCategoryGuids', 'PolicyCount', 'ppAuditPolicy'], 'BOOLEAN'), 'AuditSetPerUserPolicy': (3, ['CONST PSID', 'PCAUDIT_POLICY_INFORMATION', 'ULONG'], ['pSid', 'pAuditPolicy', 'PolicyCount'], 'BOOLEAN'), 'AuditSetSystemPolicy': (2, ['PCAUDIT_POLICY_INFORMATION', 'ULONG'], ['pAuditPolicy', 'PolicyCount'], 'BOOLEAN'), 'AuditQueryGlobalSacl': (2, ['PCTSTR', 'PACL*'], ['ObjectTypeName', 'Acl'], 'BOOLEAN'), 'AuditSetGlobalSacl': (2, ['PCTSTR', 'PACL'], ['ObjectTypeName', 'Acl'], 'BOOLEAN'), 'AuditQuerySecurity': (2, ['SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR*'], ['SecurityInformation', 'ppSecurityDescriptor'], 'BOOLEAN'), 'AuditSetSecurity': (2, ['SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR'], ['SecurityInformation', 'pSecurityDescriptor'], 'BOOLEAN'), 'AddConditionalAce': (8, ['PACL', 'DWORD', 'ACEFLAGS', 'ACE_TYPE|UCHAR', 'ACCESS_MASK_DWORD', 'PSID', 'PWCHAR', 'DWORD*'], ['pAcl', 'dwAceRevision', 'AceFlags', 'AceType', 'AccessMask', 'pSid', 'ConditionStr', 'ReturnLength'], 'BOOL'), 'GetAppContainerNamedObjectPath': (5, ['HANDLE', 'PSID', 'ULONG', 'LPWSTR', 'PULONG'], ['Token', 'AppContainerSid', 'ObjectPathLength', 'ObjectPath', 'ReturnLength'], 'BOOL'), 'LogonUser': (6, ['LPTSTR', 'LPTSTR', 'LPTSTR', 'LOGONTYPE', 'LOGONPROVIDER', 'PHANDLE'], ['lpszUsername', 'lpszDomain', 'lpszPassword', 'dwLogonType', 'dwLogonProvider', 'phToken'], 'BOOL'), 'LogonUserEx': (10, ['LPTSTR', 'LPTSTR', 'LPTSTR', 'LOGONTYPE', 'LOGONPROVIDER', 'PHANDLE', 'PSID*', 'PVOID*', 'LPDWORD', 'PQUOTA_LIMITS'], ['lpszUsername', 'lpszDomain', 'lpszPassword', 'dwLogonType', 'dwLogonProvider', 'phToken', 'ppLogonSid', 'ppProfileBuffer', 'pdwProfileLength', 'pQuotaLimits'], 'BOOL'), 'LogonUserExExW': (11, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'LOGONTYPE', 'PTOKEN_GROUPS', 'LOGONPROVIDER', 'PHANDLE', 'PSID*', 'PVOID*', 'LPDWORD', 'PQUOTA_LIMITS'], ['lpszUsername', 'lpszDomain', 'lpszPassword', 'dwLogonType', 'pTokenGroups', 'dwLogonProvider', 'phToken', 'ppLogonSid', 'ppProfileBuffer', 'pdwProfileLength', 'pQuotaLimits'], 'BOOL'), 'CredDelete': (3, ['LPCTSTR', 'DWORD', 'DWORD'], ['TargetName', 'Type', 'Flags'], 'BOOL'), 'CredEnumerate': (4, ['LPCTSTR', 'CREDENUMERATEFLAGS', 'DWORD*', 'PCREDENTIAL**'], ['Filter', 'Flags', 'Count', 'Credentials'], 'BOOL'), 'CredFindBestCredential': (4, ['LPCTSTR', 'DWORD', 'DWORD', 'PCREDENTIAL*'], ['TargetName', 'Type', 'Flags', 'Credential'], 'BOOL'), 'CredFree': (1, ['PVOID'], ['Buffer'], 'VOID'), 'CredGetSessionTypes': (2, ['DWORD', 'LPDWORD'], ['MaximumPersistCount', 'MaximumPersist'], 'BOOL'), 'CredGetTargetInfo': (3, ['LPCTSTR', 'CREDGETTARGETINFOFLAGS', 'PCREDENTIAL_TARGET_INFORMATION*'], ['TargetName', 'Flags', 'TargetInfo'], 'BOOL'), 'CredIsProtected': (2, ['LPTSTR', 'CRED_PROTECTION_TYPE*'], ['pszProtectedCredentials', 'pProtectionType'], 'BOOL'), 'CredProtect': (6, ['BOOL', 'LPTSTR', 'DWORD', 'LPTSTR', 'DWORD*', 'CRED_PROTECTION_TYPE*'], ['fAsSelf', 'pszCredentials', 'cchCredentials', 'pszProtectedCredentials', 'pcchMaxChars', 'ProtectionType'], 'BOOL'), 'CredMarshalCredential': (3, ['CRED_MARSHAL_TYPE', 'PVOID', 'LPTSTR*'], ['CredType', 'Credential', 'MarshaledCredential'], 'BOOL'), 'CredRead': (4, ['LPCTSTR', 'CREDTYPE', 'DWORD', 'PCREDENTIAL*'], ['TargetName', 'Type', 'Flags', 'Credential'], 'BOOL'), 'CredReadDomainCredentials': (4, ['PCREDENTIAL_TARGET_INFORMATION', 'DWORD', 'DWORD*', 'PCREDENTIAL**'], ['TargetInfo', 'Flags', 'Count', 'Credentials'], 'BOOL'), 'CredRename': (4, ['LPCTSTR', 'LPCTSTR', 'DWORD', 'DWORD'], ['OldTargetName', 'NewTargetName', 'Type', 'Flags'], 'BOOL'), 'CredUnmarshalCredential': (3, ['LPCTSTR', 'PCRED_MARSHAL_TYPE', 'PVOID*'], ['MarshaledCredential', 'CredType', 'Credential'], 'BOOL'), 'CredUnprotect': (5, ['BOOL', 'LPTSTR', 'DWORD', 'LPTSTR', 'DWORD*'], ['fAsSelf', 'pszProtectedCredentials', 'cchCredentials', 'pszCredentials', 'pcchMaxChars'], 'BOOL'), 'CredWrite': (2, ['PCREDENTIAL', 'DWORD'], ['Credential', 'Flags'], 'BOOL'), 'CredWriteDomainCredentials': (3, ['PCREDENTIAL_TARGET_INFORMATION', 'PCREDENTIAL', 'DWORD'], ['TargetInfo', 'Credential', 'Flags'], 'BOOL'), 'CredIsMarshaledCredential': (1, ['LPTSTR'], ['MarshaledCredential'], 'BOOL'), 'LsaEnumerateAccountsWithUserRight': (4, ['LSA_HANDLE', 'PLSA_UNICODE_STRING', 'PVOID*', 'PULONG'], ['PolicyHandle', 'UserRights', 'EnumerationBuffer', 'CountReturned'], 'NTSTATUS'), 'LsaEnumerateTrustedDomainsEx': (5, ['LSA_HANDLE', 'PLSA_ENUMERATION_HANDLE', 'PVOID*', 'ULONG', 'PULONG'], ['PolicyHandle', 'EnumerationContext', 'Buffer', 'PreferredMaximumLength', 'CountReturned'], 'NTSTATUS'), 'LsaLookupNames': (5, ['LSA_HANDLE', 'ULONG', 'PLSA_UNICODE_STRING', 'PLSA_REFERENCED_DOMAIN_LIST*', 'PLSA_TRANSLATED_SID*'], ['PolicyHandle', 'Count', 'Names', 'ReferencedDomains', 'Sids'], 'NTSTATUS'), 'LsaLookupNames2': (6, ['LSA_HANDLE', 'LSA_LOOKUP_FLAGS', 'ULONG', 'PLSA_UNICODE_STRING', 'PLSA_REFERENCED_DOMAIN_LIST*', 'PLSA_TRANSLATED_SID2*'], ['PolicyHandle', 'Flags', 'Count', 'Names', 'ReferencedDomains', 'Sids'], 'NTSTATUS'), 'LsaLookupPrivilegeValue': (3, ['LSA_HANDLE', 'PUNICODE_STRING', 'PLUID'], ['PolicyHandle', 'Name', 'Value'], 'NTSTATUS'), 'LsaLookupSids': (5, ['LSA_HANDLE', 'ULONG', 'PSID*', 'PLSA_REFERENCED_DOMAIN_LIST*', 'PLSA_TRANSLATED_NAME*'], ['PolicyHandle', 'Count', 'Sids', 'ReferencedDomains', 'Names'], 'NTSTATUS'), 'LsaLookupSids2': (6, ['LSA_HANDLE', 'ULONG', 'ULONG', 'PSID*', 'PLSA_REFERENCED_DOMAIN_LIST*', 'PLSA_TRANSLATED_NAME*'], ['PolicyHandle', 'LookupOptions', 'Count', 'Sids', 'ReferencedDomains', 'Names'], 'NTSTATUS'), 'LsaAddAccountRights': (4, ['LSA_HANDLE', 'PSID', 'PLSA_UNICODE_STRING', 'ULONG'], ['PolicyHandle', 'AccountSid', 'UserRights', 'CountOfRights'], 'NTSTATUS'), 'LsaEnumerateAccountRights': (4, ['LSA_HANDLE', 'PSID', 'PLSA_UNICODE_STRING*', 'PULONG'], ['PolicyHandle', 'AccountSid', 'UserRights', 'CountOfRights'], 'NTSTATUS'), 'LsaRemoveAccountRights': (5, ['LSA_HANDLE', 'PSID', 'BOOLEAN', 'PLSA_UNICODE_STRING', 'ULONG'], ['PolicyHandle', 'AccountSid', 'AllRights', 'UserRights', 'CountOfRights'], 'NTSTATUS'), 'LsaCreateTrustedDomainEx': (5, ['LSA_HANDLE', 'PTRUSTED_DOMAIN_INFORMATION_EX', 'PTRUSTED_DOMAIN_AUTH_INFORMATION', 'ACCESS_MASK', 'PLSA_HANDLE'], ['PolicyHandle', 'TrustedDomainInformation', 'AuthenticationInformation', 'DesiredAccess', 'TrustedDomainHandle'], 'NTSTATUS'), 'LsaDeleteTrustedDomain': (2, ['LSA_HANDLE', 'PSID'], ['PolicyHandle', 'TrustedDomainSid'], 'NTSTATUS'), 'LsaEnumerateTrustedDomains': (5, ['LSA_HANDLE', 'PLSA_ENUMERATION_HANDLE', 'PVOID*', 'ULONG', 'PULONG'], ['PolicyHandle', 'EnumerationContext', 'Buffer', 'PreferedMaximumLength', 'CountReturned'], 'NTSTATUS'), 'LsaOpenTrustedDomainByName': (4, ['LSA_HANDLE', 'PLSA_UNICODE_STRING', 'ACCESS_MASK', 'PLSA_HANDLE'], ['PolicyHandle', 'TrustedDomainName', 'DesiredAccess', 'TrustedDomainHandle'], 'NTSTATUS'), 'LsaQueryTrustedDomainInfo': (4, ['LSA_HANDLE', 'PSID', 'TRUSTED_INFORMATION_CLASS', 'PVOID*'], ['PolicyHandle', 'TrustedDomainSid', 'InformationClass', 'Buffer'], 'NTSTATUS'), 'LsaQueryTrustedDomainInfoByName': (4, ['LSA_HANDLE', 'PLSA_UNICODE_STRING', 'TRUSTED_INFORMATION_CLASS', 'PVOID*'], ['PolicyHandle', 'TrustedDomainName', 'InformationClass', 'Buffer'], 'NTSTATUS'), 'LsaSetTrustedDomainInfoByName': (4, ['LSA_HANDLE', 'PLSA_UNICODE_STRING', 'TRUSTED_INFORMATION_CLASS', 'PVOID'], ['PolicyHandle', 'TrustedDomainName', 'InformationClass', 'Buffer'], 'NTSTATUS'), 'LsaSetTrustedDomainInformation': (4, ['LSA_HANDLE', 'PSID', 'TRUSTED_INFORMATION_CLASS', 'PVOID'], ['PolicyHandle', 'TrustedDomainSid', 'InformationClass', 'Buffer'], 'NTSTATUS'), 'LsaRetrievePrivateData': (3, ['LSA_HANDLE', 'PLSA_UNICODE_STRING', 'PLSA_UNICODE_STRING*'], ['PolicyHandle', 'KeyName', 'PrivateData'], 'NTSTATUS'), 'LsaStorePrivateData': (3, ['LSA_HANDLE', 'PLSA_UNICODE_STRING', 'PLSA_UNICODE_STRING'], ['PolicyHandle', 'KeyName', 'PrivateData'], 'NTSTATUS'), 'LsaClose': (1, ['LSA_HANDLE'], ['ObjectHandle'], 'NTSTATUS'), 'LsaFreeMemory': (1, ['PVOID'], ['Buffer'], 'NTSTATUS'), 'LsaNtStatusToWinError': (1, ['NTSTATUS'], ['Status'], '[ERROR_CODE_ULONG]'), 'SaferCloseLevel': (1, ['SAFER_LEVEL_HANDLE'], ['hLevelHandle'], 'BOOL'), 'SaferIdentifyLevel': (4, ['DWORD', 'PSAFER_CODE_PROPERTIES', 'SAFER_LEVEL_HANDLE*', 'LPVOID'], ['dwNumProperties', 'pCodeProperties', 'pLevelHandle', 'lpReserved'], 'BOOL'), 'SaferComputeTokenFromLevel': (5, ['SAFER_LEVEL_HANDLE', 'HANDLE', 'PHANDLE', 'DWORD', 'LPVOID'], ['LevelHandle', 'InAccessToken', 'OutAccessToken', 'dwFlags', 'lpReserved'], 'BOOL'), 'SaferCreateLevel': (5, ['SAFERSCOPEID', 'DWORD', 'DWORD', 'SAFER_LEVEL_HANDLE*', 'LPVOID'], ['dwScopeId', 'dwLevelId', 'OpenFlags', 'pLevelHandle', 'lpReserved'], 'BOOL'), 'SaferGetLevelInformation': (5, ['SAFER_LEVEL_HANDLE', 'SAFER_OBJECT_INFO_CLASS', 'LPVOID', 'DWORD', 'LPDWORD'], ['LevelHandle', 'dwInfoType', 'lpQueryBuffer', 'dwInBufferSize', 'lpdwOutBufferSize'], 'BOOL'), 'SaferGetPolicyInformation': (6, ['SAFERSCOPEID', 'SAFER_POLICY_INFO_CLASS', 'DWORD', 'PVOID', 'PDWORD', 'LPVOID'], ['dwScopeId', 'SaferPolicyInfoClass', 'InfoBufferSize', 'InfoBuffer', 'InfoBufferRetSize', 'lpReserved'], 'BOOL'), 'SaferiIsExecutableFileType': (2, ['LPCWSTR', 'BOOLEAN'], ['szFullPath', 'bFromShellExecute'], 'BOOL'), 'SaferRecordEventLogEntry': (3, ['SAFER_LEVEL_HANDLE', 'LPCWSTR', 'LPVOID'], ['hLevel', 'szTargetPath', 'lpReserved'], 'BOOL'), 'CloseThreadWaitChainSession': (1, ['HWCT'], ['WctHandle'], 'VOID'), 'GetThreadWaitChain': (7, ['HWCT', 'DWORD_PTR', 'DWORD', 'DWORD', 'LPDWORD', 'PWAITCHAIN_NODE_INFO', 'LPBOOL'], ['WctHandle', 'Context', 'Flags', 'ThreadId', 'NodeCount', 'NodeInfoArray', 'IsCycle'], 'BOOL'), 'OpenThreadWaitChainSession': (2, ['DWORD', 'PWAITCHAINCALLBACK'], ['Flags', 'callback'], 'HWCT'), 'RegisterWaitChainCOMCallback': (2, ['PCOGETCALLSTATE', 'PCOGETACTIVATIONSTATE'], ['CallStateCallback', 'ActivationStateCallback'], 'VOID'), 'LsaOpenPolicy': (4, ['PLSA_UNICODE_STRING', 'PLSA_OBJECT_ATTRIBUTES', 'ACCESS_MASK', 'PLSA_HANDLE'], ['SystemName', 'ObjectAttributes', 'DesiredAccess', 'PolicyHandle'], 'NTSTATUS'), 'LsaQueryInformationPolicy': (3, ['LSA_HANDLE', 'POLICY_INFORMATION_CLASS', 'PVOID*'], ['PolicyHandle', 'InformationClass', 'Buffer'], 'NTSTATUS'), 'LsaSetInformationPolicy': (3, ['LSA_HANDLE', 'POLICY_INFORMATION_CLASS', 'PVOID'], ['PolicyHandle', 'InformationClass', 'Buffer'], 'NTSTATUS'), 'LsaGetAppliedCAPIDs': (3, ['PLSA_UNICODE_STRING', 'PSID**', 'PULONG'], ['SystemName', 'CAPIDs', 'CAPIDCount'], 'NTSTATUS'), 'LsaQueryCAPs': (4, ['PSID*', 'ULONG', 'PCENTRAL_ACCESS_POLICY*', 'PULONG'], ['CAPIDs', 'CAPIDCount', 'CAPs', 'CAPCount'], 'NTSTATUS'), 'LsaSetCAPs': (3, ['PLSA_UNICODE_STRING', 'ULONG', 'ULONG'], ['CAPDNs', 'CAPDNCount', 'Flags'], 'NTSTATUS'), 'LsaQueryDomainInformationPolicy': (3, ['LSA_HANDLE', 'POLICY_DOMAIN_INFORMATION_CLASS', 'PVOID*'], ['PolicyHandle', 'InformationClass', 'Buffer'], 'NTSTATUS'), 'LsaQueryForestTrustInformation': (3, ['LSA_HANDLE', 'PLSA_UNICODE_STRING', 'PLSA_FOREST_TRUST_INFORMATION*'], ['PolicyHandle', 'TrustedDomainName', 'ForestTrustInfo'], 'NTSTATUS'), 'LsaSetDomainInformationPolicy': (3, ['LSA_HANDLE', 'POLICY_DOMAIN_INFORMATION_CLASS', 'PVOID'], ['PolicyHandle', 'InformationClass', 'Buffer'], 'NTSTATUS'), 'LsaSetForestTrustInformation': (5, ['LSA_HANDLE', 'PLSA_UNICODE_STRING', 'PLSA_FOREST_TRUST_INFORMATION', 'BOOLEAN', 'PLSA_FOREST_TRUST_COLLISION_INFORMATION*'], ['PolicyHandle', 'TrustedDomainName', 'ForestTrustInfo', 'CheckOnly', 'CollisionInfo'], 'NTSTATUS'), 'LsaOpenSecret': (4, ['LSA_HANDLE', 'PLSA_UNICODE_STRING', 'ACCESS_MASK', 'PLSA_HANDLE'], ['PolicyHandle', 'SecretName', 'DesiredAccess', 'SecretHandle'], 'NTSTATUS'), 'LsaSetSecret': (3, ['LSA_HANDLE', 'PLSA_UNICODE_STRING', 'PLSA_UNICODE_STRING'], ['SecretHandle', 'CurrentValue', 'OldValue'], 'NTSTATUS'), 'LsaQuerySecret': (5, ['LSA_HANDLE', 'PLSA_UNICODE_STRING*', 'PLARGE_INTEGER', 'PLSA_UNICODE_STRING*', 'PLARGE_INTEGER'], ['SecretHandle', 'CurrentValue', 'CurrentValueSetTime', 'OldValue', 'OldValueSetTime'], 'NTSTATUS'), 'SystemFunction036': (2, ['PVOID', 'ULONG'], ['RandomBuffer', 'RandomBufferLength'], 'BOOLEAN'), 'SystemFunction040': (3, ['PVOID', 'ULONG', 'RTL_ENCRYPT_OPTION_FLAGS'], ['Memory', 'MemorySize', 'OptionFlags'], 'NTSTATUS'), 'SystemFunction041': (3, ['PVOID', 'ULONG', 'RTL_ENCRYPT_OPTION_FLAGS'], ['Memory', 'MemorySize', 'OptionFlags'], 'NTSTATUS')}

dict5_bcrypt = {'BCryptAddContextFunction': (5, ['CRYPTCONFIGTABLE', 'LPCWSTR', 'CRYPTINTERFACE', 'LPCWSTR', 'CRYPTPRIORITY'], ['dwTable', 'pszContext', 'dwInterface', 'pszFunction', 'dwPosition'], 'NTSTATUS'), 'BCryptConfigureContext': (3, ['CRYPTCONFIGTABLE', 'LPCWSTR', 'PCRYPT_CONTEXT_CONFIG'], ['dwTable', 'pszContext', 'pConfig'], 'NTSTATUS'), 'BCryptConfigureContextFunction': (5, ['CRYPTCONFIGTABLE', 'LPCWSTR', 'CRYPTINTERFACE', 'LPCWSTR', 'PCRYPT_CONTEXT_FUNCTION_CONFIG'], ['dwTable', 'pszContext', 'dwInterface', 'pszFunction', 'pConfig'], 'NTSTATUS'), 'BCryptCreateContext': (3, ['CRYPTCONFIGTABLE', 'LPCWSTR', 'PCRYPT_CONTEXT_CONFIG'], ['dwTable', 'pszContext', 'pConfig'], 'NTSTATUS'), 'BCryptDeleteContext': (2, ['CRYPTCONFIGTABLE', 'LPCWSTR'], ['dwTable', 'pszContext'], 'NTSTATUS'), 'BCryptEnumAlgorithms': (4, ['CRYPTOPERATION', 'ULONG*', 'BCRYPT_ALGORITHM_IDENTIFIER**', 'ULONG'], ['dwAlgOperations', 'pAlgCount', 'ppAlgList', 'dwFlags'], 'NTSTATUS'), 'BCryptEnumContextFunctionProviders': (6, ['CRYPTCONFIGTABLE', 'LPCWSTR', 'CRYPTINTERFACE', 'LPCWSTR', 'ULONG*', 'PCRYPT_CONTEXT_FUNCTION_PROVIDERS*'], ['dwTable', 'pszContext', 'dwInterface', 'pszFunction', 'pcbBuffer', 'ppBuffer'], 'NTSTATUS'), 'BCryptEnumContextFunctions': (5, ['CRYPTCONFIGTABLE', 'LPCWSTR', 'CRYPTINTERFACE', 'ULONG*', 'PCRYPT_CONTEXT_FUNCTIONS*'], ['dwTable', 'pszContext', 'dwInterface', 'pcbBuffer', 'ppBuffer'], 'NTSTATUS'), 'BCryptEnumContexts': (3, ['CRYPTCONFIGTABLE', 'ULONG*', 'PCRYPT_CONTEXTS*'], ['dwTable', 'pcbBuffer', 'ppBuffer'], 'NTSTATUS'), 'BCryptEnumProviders': (4, ['LPCWSTR', 'ULONG*', 'BCRYPT_PROVIDER_NAME**', 'ULONG'], ['pszAlgId', 'pImplCount', 'ppImplList', 'dwFlags'], 'NTSTATUS'), 'BCryptEnumRegisteredProviders': (2, ['ULONG*', 'PCRYPT_PROVIDERS*'], ['pcbBuffer', 'ppBuffer'], 'NTSTATUS'), 'BCryptGetFipsAlgorithmMode': (1, ['BOOLEAN*'], ['pfEnabled'], 'NTSTATUS'), 'BCryptQueryContextConfiguration': (4, ['CRYPTCONFIGTABLE', 'LPCWSTR', 'ULONG*', 'PCRYPT_CONTEXT_CONFIG*'], ['dwTable', 'pszContext', 'pcbBuffer', 'ppBuffer'], 'NTSTATUS'), 'BCryptQueryContextFunctionConfiguration': (6, ['CRYPTCONFIGTABLE', 'LPCWSTR', 'CRYPTINTERFACE', 'LPCWSTR', 'ULONG*', 'PCRYPT_CONTEXT_FUNCTION_CONFIG*'], ['dwTable', 'pszContext', 'dwInterface', 'pszFunction', 'pcbBuffer', 'ppBuffer'], 'NTSTATUS'), 'BCryptQueryContextFunctionProperty': (7, ['CRYPTCONFIGTABLE', 'LPCWSTR', 'CRYPTINTERFACE', 'LPCWSTR', 'LPCWSTR', 'ULONG*', 'PUCHAR*'], ['dwTable', 'pszContext', 'dwInterface', 'pszFunction', 'pszProperty', 'pcbValue', 'ppbValue'], 'NTSTATUS'), 'BCryptQueryProviderRegistration': (5, ['LPCWSTR', 'CRYPTMODE', 'CRYPTINTERFACE', 'ULONG*', 'PCRYPT_PROVIDER_REG*'], ['pszProvider', 'dwMode', 'dwInterface', 'pcbBuffer', 'ppBuffer'], 'NTSTATUS'), 'BCryptRegisterConfigChangeNotify': (1, ['HANDLE*'], ['phEvent'], 'NTSTATUS'), 'BCryptRemoveContextFunction': (4, ['CRYPTCONFIGTABLE', 'LPCWSTR', 'CRYPTINTERFACE', 'LPCWSTR'], ['dwTable', 'pszContext', 'dwInterface', 'pszFunction'], 'NTSTATUS'), 'BCryptResolveProviders': (8, ['LPCWSTR', 'CRYPTINTERFACE', 'LPCWSTR', 'LPCWSTR', 'CRYPTMODE', 'CRYPTENUMFLAGS', 'ULONG*', 'PCRYPT_PROVIDER_REFS*'], ['pszContext', 'dwInterface', 'pszFunction', 'pszProvider', 'dwMode', 'dwFlags', 'pcbBuffer', 'ppBuffer'], 'NTSTATUS'), 'BCryptSetContextFunctionProperty': (7, ['CRYPTCONFIGTABLE', 'LPCWSTR', 'CRYPTINTERFACE', 'LPCWSTR', 'LPCWSTR', 'ULONG', 'PUCHAR'], ['dwTable', 'pszContext', 'dwInterface', 'pszFunction', 'pszProperty', 'cbValue', 'pbValue'], 'NTSTATUS'), 'BCryptUnregisterConfigChangeNotify': (1, ['HANDLE'], ['hEvent'], 'NTSTATUS'), 'BCryptCloseAlgorithmProvider': (2, ['BCRYPT_ALG_HANDLE', 'ULONG'], ['hAlgorithm', 'dwFlags'], 'NTSTATUS'), 'BCryptCreateHash': (7, ['BCRYPT_ALG_HANDLE', 'BCRYPT_HASH_HANDLE*', 'PUCHAR', 'ULONG', 'PUCHAR', 'ULONG', 'ULONG'], ['hAlgorithm', 'phHash', 'pbHashObject', 'cbHashObject', 'pbSecret', 'cbSecret', 'dwFlags'], 'NTSTATUS'), 'BCryptDecrypt': (10, ['BCRYPT_KEY_HANDLE', 'PUCHAR', 'ULONG', 'VOID*', 'PUCHAR', 'ULONG', 'PUCHAR', 'ULONG', 'ULONG*', 'ULONG'], ['hKey', 'pbInput', 'cbInput', 'pPaddingInfo', 'pbIV', 'cbIV', 'pbOutput', 'cbOutput', 'pcbResult', 'dwFlags'], 'NTSTATUS'), 'BCryptDeriveKey': (7, ['BCRYPT_SECRET_HANDLE', 'LPCWSTR', 'BCRYPTBUFFERDESC*', 'PUCHAR', 'ULONG', 'ULONG*', 'CRYPTDERIVEKEYFLAGS'], ['hSharedSecret', 'pwszKDF', 'pParameterList', 'pbDerivedKey', 'cbDerivedKey', 'pcbResult', 'dwFlags'], 'NTSTATUS'), 'BCryptDestroyHash': (1, ['BCRYPT_HASH_HANDLE'], ['hHash'], 'NTSTATUS'), 'BCryptDestroyKey': (1, ['BCRYPT_KEY_HANDLE'], ['hKey'], 'NTSTATUS'), 'BCryptDestroySecret': (1, ['BCRYPT_SECRET_HANDLE'], ['hSecret'], 'NTSTATUS'), 'BCryptDuplicateHash': (5, ['BCRYPT_HASH_HANDLE', 'BCRYPT_HASH_HANDLE*', 'PUCHAR', 'ULONG', 'ULONG'], ['hHash', 'phNewHash', 'pbHashObject', 'cbHashObject', 'dwFlags'], 'NTSTATUS'), 'BCryptDuplicateKey': (5, ['BCRYPT_KEY_HANDLE', 'BCRYPT_KEY_HANDLE*', 'PUCHAR', 'ULONG', 'ULONG'], ['hKey', 'phNewKey', 'pbKeyObject', 'cbKeyObject', 'dwFlags'], 'NTSTATUS'), 'BCryptEncrypt': (10, ['BCRYPT_KEY_HANDLE', 'PUCHAR', 'ULONG', 'VOID*', 'PUCHAR', 'ULONG', 'PUCHAR', 'ULONG', 'ULONG*', 'ULONG'], ['hKey', 'pbInput', 'cbInput', 'pPaddingInfo', 'pbIV', 'cbIV', 'pbOutput', 'cbOutput', 'pcbResult', 'dwFlags'], 'NTSTATUS'), 'BCryptExportKey': (7, ['BCRYPT_KEY_HANDLE', 'BCRYPT_KEY_HANDLE', 'LPCWSTR', 'PUCHAR', 'ULONG', 'ULONG*', 'ULONG'], ['hKey', 'hExportKey', 'pszBlobType', 'pbOutput', 'cbOutput', 'pcbResult', 'dwFlags'], 'NTSTATUS'), 'BCryptFinalizeKeyPair': (2, ['BCRYPT_KEY_HANDLE', 'ULONG'], ['hKey', 'dwFlags'], 'NTSTATUS'), 'BCryptFinishHash': (4, ['BCRYPT_HASH_HANDLE', 'PUCHAR', 'ULONG', 'ULONG'], ['hHash', 'pbOutput', 'cbOutput', 'dwFlags'], 'NTSTATUS'), 'BCryptFreeBuffer': (1, ['PVOID'], ['pvBuffer'], 'VOID'), 'BCryptGenerateKeyPair': (4, ['BCRYPT_ALG_HANDLE', 'BCRYPT_KEY_HANDLE*', 'ULONG', 'ULONG'], ['hAlgorithm', 'phKey', 'dwLength', 'dwFlags'], 'NTSTATUS'), 'BCryptGenerateSymmetricKey': (7, ['BCRYPT_ALG_HANDLE', 'BCRYPT_KEY_HANDLE*', 'PUCHAR', 'ULONG', 'PUCHAR', 'ULONG', 'ULONG'], ['hAlgorithm', 'phKey', 'pbKeyObject', 'cbKeyObject', 'pbSecret', 'cbSecret', 'dwFlags'], 'NTSTATUS'), 'BCryptGenRandom': (4, ['BCRYPT_ALG_HANDLE', 'PUCHAR', 'ULONG', 'ULONG'], ['hAlgorithm', 'pbBuffer', 'cbBuffer', 'dwFlags'], 'NTSTATUS'), 'BCryptGetProperty': (6, ['BCRYPT_HANDLE', 'LPCWSTR', 'PUCHAR', 'ULONG', 'ULONG*', 'ULONG'], ['hObject', 'pszProperty', 'pbOutput', 'cbOutput', 'pcbResult', 'dwFlags'], 'NTSTATUS'), 'BCryptHashData': (4, ['BCRYPT_HASH_HANDLE', 'PUCHAR', 'ULONG', 'ULONG'], ['hHash', 'pbInput', 'cbInput', 'dwFlags'], 'NTSTATUS'), 'BCryptImportKey': (9, ['BCRYPT_ALG_HANDLE', 'BCRYPT_KEY_HANDLE', 'LPCWSTR', 'BCRYPT_KEY_HANDLE*', 'PUCHAR', 'ULONG', 'PUCHAR', 'ULONG', 'ULONG'], ['hAlgorithm', 'hImportKey', 'pszBlobType', 'phKey', 'pbKeyObject', 'cbKeyObject', 'pbInput', 'cbInput', 'dwFlags'], 'NTSTATUS'), 'BCryptImportKeyPair': (7, ['BCRYPT_ALG_HANDLE', 'BCRYPT_KEY_HANDLE', 'LPCWSTR', 'BCRYPT_KEY_HANDLE*', 'PUCHAR', 'ULONG', 'ULONG'], ['hAlgorithm', 'hImportKey', 'pszBlobType', 'phKey', 'pbInput', 'cbInput', 'dwFlags'], 'NTSTATUS'), 'BCryptKeyDerivation': (6, ['BCRYPT_KEY_HANDLE', 'BCRYPTBUFFERDESC*', 'PUCHAR', 'ULONG', 'ULONG*', 'ULONG'], ['hKey', 'pParameterList', 'pbDerivedKey', 'cbDerivedKey', 'pcbResult', 'dwFlags'], 'NTSTATUS'), 'BCryptOpenAlgorithmProvider': (4, ['BCRYPT_ALG_HANDLE*', 'LPCWSTR', 'LPCWSTR', 'BCRYPTOPENALGORITHMPROVIDERFLAGS'], ['phAlgorithm', 'pszAlgId', 'pszImplementation', 'dwFlags'], 'NTSTATUS'), 'BCryptSecretAgreement': (4, ['BCRYPT_KEY_HANDLE', 'BCRYPT_KEY_HANDLE', 'BCRYPT_SECRET_HANDLE*', 'ULONG'], ['hPrivKey', 'hPubKey', 'phSecret', 'dwFlags'], 'NTSTATUS'), 'BCryptSetProperty': (5, ['BCRYPT_HANDLE', 'LPCWSTR', 'PUCHAR', 'ULONG', 'ULONG'], ['hObject', 'pszProperty', 'pbInput', 'cbInput', 'dwFlags'], 'NTSTATUS'), 'BCryptSignHash': (8, ['BCRYPT_KEY_HANDLE', 'VOID*', 'PBYTE', 'DWORD', 'PBYTE', 'DWORD', 'DWORD*', 'ULONG'], ['hKey', 'pPaddingInfo', 'pbInput', 'cbInput', 'pbOutput', 'cbOutput', 'pcbResult', 'dwFlags'], 'NTSTATUS'), 'BCryptVerifySignature': (7, ['BCRYPT_KEY_HANDLE', 'VOID*', 'PUCHAR', 'ULONG', 'PUCHAR', 'ULONG', 'ULONG'], ['hKey', 'pPaddingInfo', 'pbHash', 'cbHash', 'pbSignature', 'cbSignature', 'dwFlags'], 'NTSTATUS'), 'BCryptDeriveKeyCapi': (5, ['BCRYPT_HASH_HANDLE', 'BCRYPT_ALG_HANDLE', 'PUCHAR', 'ULONG', 'ULONG'], ['hHash', 'hTargetAlg', 'pbDerivedKey', 'cbDerivedKey', 'dwFlags'], 'NTSTATUS'), 'BCryptDeriveKeyPBKDF2': (9, ['BCRYPT_ALG_HANDLE', 'PUCHAR', 'ULONG', 'PUCHAR', 'ULONG', 'ULONGLONG', 'PUCHAR', 'ULONG', 'ULONG'], ['hPrf', 'pbPassword', 'cbPassword', 'pbSalt', 'cbSalt', 'cIterations', 'pbDerivedKey', 'cbDerivedKey', 'dwFlags'], 'NTSTATUS')}

dict5_comctl32 = {'_TrackMouseEvent': (1, ['LPTRACKMOUSEEVENT'], ['lpEventTrack'], 'BOOL'), 'AddMRUStringW': (2, ['HANDLE', 'LPCTSTR'], ['hMRU', 'szString'], 'int'), 'CreateMRUListW': (1, ['LPMRUINFO'], ['lpmi'], 'int'), 'DefSubclassProc': (4, ['HWND', 'WINMSG', 'WPARAM', 'LPARAM'], ['hWnd', 'uMsg', 'WPARAM', 'LPARAM'], 'LRESULT'), 'EnumMRUListW': (4, ['HANDLE', 'INT', 'VOID*', 'UINT'], ['hMRU', 'nItem', 'lpData', 'uLen'], 'int'), 'FreeMRUList': (1, ['HANDLE'], ['hMRU'], 'int'), 'GetWindowSubclass': (4, ['HWND', 'SUBCLASSPROC', 'UINT_PTR', 'DWORD_PTR*'], ['hWnd', 'pfnSubclass', 'uIdSubclass', 'pdwRefData'], 'BOOL'), 'RemoveWindowSubclass': (3, ['HWND', 'SUBCLASSPROC', 'UINT_PTR'], ['hWnd', 'pfnSubclass', 'uIdSubclass'], 'BOOL'), 'SetWindowSubclass': (4, ['HWND', 'SUBCLASSPROC', 'UINT_PTR', 'DWORD_PTR'], ['hWnd', 'pfnSubclass', 'uIdSubclass', 'dwRefData'], 'BOOL'), 'CreateMappedBitmap': (5, ['HINSTANCE', 'INT_PTR', 'UINT', 'LPCOLORMAP', 'INT'], ['hInstance', 'idBitmap', 'wFlags', 'lpColorMap', 'iNumMaps'], 'HBITMAP'), 'CreateToolbarEx': (13, ['HWND', 'TBSTYLE', 'UINT', 'INT', 'HINSTANCE', 'UINT_PTR', 'LPCTBBUTTON', 'INT', 'INT', 'INT', 'INT', 'INT', 'UINT'], ['hwnd', 'ws', 'wID', 'nBitmaps', 'hBMInst', 'wBMID', 'lpButtons', 'iNumButtons', 'dxButton', 'dyButton', 'dxBitmap', 'dyBitmap', 'uStructSize'], 'HWND'), 'CreatePropertySheetPage': (1, ['LPCPROPSHEETPAGE'], ['lppsp'], 'HPROPSHEETPAGE'), 'DestroyPropertySheetPage': (1, ['HPROPSHEETPAGE'], ['hPSPage'], 'BOOL'), 'PropertySheet': (1, ['LPCPROPSHEETHEADER'], ['lppsph'], 'INT_PTR'), 'CreateStatusWindow': (4, ['LONG', 'LPCTSTR', 'HWND', 'UINT'], ['style', 'lpszText', 'hwndParent', 'wID'], 'HWND'), 'DrawStatusText': (4, ['HDC', 'LPCRECT', 'LPCTSTR', 'UINT'], ['hdc', 'lprc', 'pszText', 'uFlags'], 'void'), 'MenuHelp': (7, ['WINMSG', 'WPARAM', 'LPARAM', 'HMENU', 'HINSTANCE', 'HWND', 'LPUINT'], ['uMsg', 'wParam', 'lParam', 'hMainMenu', 'hInst', 'hwndStatus', 'lpwIDs'], 'void'), 'CreateUpDownControl': (12, ['UDSTYLE', 'INT', 'INT', 'INT', 'INT', 'HWND', 'INT', 'HINSTANCE', 'HWND', 'INT', 'INT', 'INT'], ['dwStyle', 'x', 'y', 'cx', 'cy', 'hParent', 'nID', 'hInst', 'hBuddy', 'nUpper', 'nLower', 'nPos'], 'HWND'), 'DoReaderMode': (1, ['PREADERMODEINFO'], ['prmi'], 'void'), 'DPA_Clone': (2, ['CONST HDPA', 'HDPA'], ['hdpaSource', 'hdpaNew'], 'HDPA'), 'DPA_Create': (1, ['INT'], ['cpGrow'], 'HDPA'), 'DPA_CreateEx': (2, ['INT', 'HANDLE'], ['cpGrow', 'hheap'], 'HDPA'), 'DPA_DeleteAllPtrs': (1, ['HDPA'], ['pdpa'], 'BOOL'), 'DPA_DeletePtr': (2, ['HDPA', 'INT'], ['pdpa', 'index'], 'void*'), 'DPA_Destroy': (1, ['HDPA'], ['pdpa'], 'BOOL'), 'DPA_DestroyCallback': (3, ['HDPA', 'PFNDPAENUMCALLBACK', 'VOID*'], ['pdpa', 'pfnCB', 'pData'], 'void'), 'DPA_EnumCallback': (3, ['HDPA', 'PFNDPAENUMCALLBACK', 'VOID*'], ['pdpa', 'pfnCB', 'pData'], 'void'), 'DPA_GetPtr': (2, ['HDPA', 'INT'], ['pdpa', 'index'], 'void*'), 'DPA_GetPtrIndex': (2, ['HDPA', 'CONST VOID*'], ['hdpa', 'pvoid'], 'int'), 'DPA_GetSize': (1, ['HDPA'], ['pdpa'], 'ULONGLONG'), 'DPA_Grow': (2, ['HDPA', 'INT'], ['hdpa', 'cp'], 'BOOL'), 'DPA_InsertPtr': (3, ['HDPA', 'INT', 'VOID*'], ['pdpa', 'index', 'p'], 'int'), 'DPA_LoadStream': (4, ['HDPA*', 'PFNDPASTREAM', 'ISTREAM*', 'VOID*'], ['ppdpa', 'pfn', 'pstm', 'pvInstData'], 'HRESULT'), 'DPA_Merge': (6, ['HDPA', 'HDPA', 'DWORD', 'PFNDPACOMPARE', 'PFNDPAMERGE', 'LPARAM'], ['hdpaDest', 'hdpaSrc', 'dwFlags', 'pfnCompare', 'pfnMerge', 'lParam'], 'BOOL'), 'DPA_SaveStream': (4, ['HDPA', 'PFNDPASTREAM', 'ISTREAM*', 'VOID*'], ['pdpa', 'pfn', 'pstm', 'pvInstData'], 'HRESULT'), 'DPA_Search': (6, ['HDPA', 'VOID*', 'INT', 'PFNDPACOMPARE', 'LPARAM', 'UINT'], ['pdpa', 'pFind', 'iStart', 'pfnCmp', 'lParam', 'options'], 'int'), 'DPA_SetPtr': (3, ['HDPA', 'INT', 'VOID*'], ['pdpa', 'index', 'p'], 'BOOL'), 'DPA_Sort': (3, ['HDPA', 'PFNDPACOMPARE', 'LPARAM'], ['pdpa', 'pfnCmp', 'lParam'], 'BOOL'), 'DrawShadowText': (9, ['HDC', 'LPCWSTR', 'UINT', 'CONST RECT*', 'DWORD', 'COLORREF', 'COLORREF', 'INT', 'INT'], ['hdc', 'pszText', 'cch', 'pRect', 'dwFlags', 'crText', 'crShadow', 'ixOffset', 'iyOffset'], 'int'), 'DrawTextExPrivWrap': (6, ['HDC', 'LPTSTR', 'INT', 'LPRECT', 'UINT', 'LPDRAWTEXTPARAMS'], ['hdc', 'lpchText', 'cchText', 'lprc', 'dwDTFormat', 'lpDTParams'], 'int'), 'DrawTextWrap': (6, ['HDC', 'LPCTSTR', 'INT', 'LPRECT', 'UINT', 'LPDRAWTEXTPARAMS'], ['hdc', 'lpString', 'nCount', 'lpRect', 'uFormat', 'lpDTParams'], 'int'), 'DSA_Clone': (1, ['HDSA'], ['hdsa'], 'HDSA'), 'DSA_Create': (2, ['INT', 'INT'], ['cbItem', 'cbItemGrow'], 'HDSA'), 'DSA_DeleteAllItems': (1, ['HDSA'], ['hdsa'], 'BOOL'), 'DSA_DeleteItem': (2, ['HDSA', 'INT'], ['hdsa', 'nPosition'], 'BOOL'), 'DSA_Destroy': (1, ['HDSA'], ['pdsa'], 'BOOL'), 'DSA_DestroyCallback': (3, ['HDSA', 'PFNDSAENUMCALLBACK', 'VOID*'], ['pdsa', 'pfnCB', 'pData'], 'void'), 'DSA_EnumCallback': (3, ['HDSA', 'PFNDAENUMCALLBACK*', 'VOID*'], ['hdsa', 'pfnCB', 'pData'], 'void'), 'DSA_GetItem': (3, ['HDSA', 'INT', 'VOID*'], ['pdsa', 'index', 'pitem'], 'BOOL'), 'DSA_GetItemPtr': (2, ['HDSA', 'INT'], ['pdsa', 'index'], 'void*'), 'DSA_GetSize': (1, ['HDSA'], ['hdsa'], 'ULONGLONG'), 'DSA_InsertItem': (3, ['HDSA', 'INT', 'VOID*'], ['pdsa', 'index', 'pItem'], 'int'), 'DSA_SetItem': (3, ['HDSA', 'INT', 'VOID*'], ['hdsa', 'index', 'pItem'], 'BOOL'), 'DSA_Sort': (3, ['HDSA', 'PFNDACOMPARE', 'LPARAM'], ['pdsa', 'pfnCompare', 'lParam'], 'BOOL'), 'ExtTextOutWrap': (8, ['HDC', 'INT', 'INT', 'UINT', 'CONST RECT*', 'LPCTSTR', 'UINT', 'CONST INT*'], ['hdc', 'X', 'Y', 'uOptions', 'lprc', 'lpString', 'cbCount', 'lpDx'], 'BOOL'), 'GetEffectiveClientRect': (3, ['HWND', 'LPRECT', 'CONST INT*'], ['hWnd', 'lprc', 'lpInfo'], 'void'), 'GetMUILanguage': (0, [], [], 'LANGID'), 'GetTextExtentPoint32Wrap': (4, ['HDC', 'LPCTSTR', 'UINT', 'LPSIZE'], ['hdc', 'lpString', 'cbCount', 'lpSize'], 'BOOL'), 'InitCommonControls': (0, [], [], 'void'), 'InitCommonControlsEx': (1, ['CONST LPINITCOMMONCONTROLSEX'], ['lpInitCtrls'], 'BOOL'), 'InitMUILanguage': (1, ['LANGID'], ['uiLang'], 'VOID'), 'LoadIconMetric': (4, ['HINSTANCE', 'PCWSTR', 'INT', 'HICON*'], ['hinst', 'pszName', 'lims', 'phico'], 'HRESULT'), 'LoadIconWithScaleDown': (5, ['HINSTANCE', 'PCWSTR', 'INT', 'INT', 'HICON*'], ['hinst', 'pszName', 'cx', 'cy', 'phico'], 'HRESULT'), 'MirrorIcon': (2, ['HICON*', 'HICON*'], ['phIconSmall', 'phIconLarge'], 'BOOL'), 'ShowHideMenuCtl': (3, ['HWND', 'UINT_PTR', 'LPINT'], ['hWnd', 'uFlags', 'lpInfo'], 'BOOL'), 'Str_GetPtr': (3, ['LPCTSTR', 'LPCSTR', 'INT'], ['pszSource', 'pszDest', 'cchDest'], 'int'), 'Str_SetPtr': (2, ['LPTSTR*', 'LPCTSTR'], ['ppszCurrent', 'pszNew'], 'BOOL'), 'DrawInsert': (3, ['HWND', 'HWND', 'INT'], ['handParent', 'hLB', 'nItem'], 'void'), 'LBItemFromPt': (3, ['HWND', 'POINT', 'BOOL'], ['hLB', 'pt', 'bAutoScroll'], 'int'), 'MakeDragList': (1, ['HWND'], ['hLB'], 'BOOL'), 'FlatSB_EnableScrollBar': (3, ['HWND', 'INT', 'UINT'], ['hwnd', 'wSBflags', 'wArrows'], 'BOOL'), 'FlatSB_GetScrollInfo': (3, ['HWND', 'SBTYPE', 'LPSCROLLINFO'], ['hwnd', 'fnBar', 'lpsi'], 'BOOL'), 'FlatSB_GetScrollPos': (2, ['HWND', 'SBTYPE'], ['hwnd', 'code'], 'int'), 'FlatSB_GetScrollProp': (3, ['HWND', 'WSB_PROP', 'LPINT'], ['hwnd', 'index', 'pValue'], 'BOOL'), 'FlatSB_GetScrollPropPtr': (3, ['HWND', 'WSB_PROP', 'LPINT'], ['hwnd', 'index', 'pValue'], 'BOOL'), 'FlatSB_GetScrollRange': (4, ['HWND', 'INT', 'LPINT', 'LPINT'], ['hwnd', 'code', 'lpMinPos', 'lpMaxPos'], 'BOOL'), 'FlatSB_SetScrollInfo': (4, ['HWND', 'SBTYPE', 'LPSCROLLINFO', 'BOOL'], ['hwnd', 'fnBar', 'lpsi', 'fRedraw'], 'int'), 'FlatSB_SetScrollPos': (4, ['HWND', 'INT', 'INT', 'BOOL'], ['hwnd', 'code', 'nPos', 'fRedraw'], 'int'), 'FlatSB_SetScrollProp': (4, ['HWND', 'WSB_PROP', 'INT_PTR', 'BOOL'], ['hwnd', 'index', 'newValue', 'fRedraw'], 'BOOL'), 'FlatSB_SetScrollRange': (5, ['HWND', 'INT', 'INT', 'INT', 'BOOL'], ['hwnd', 'code', 'nMinPos', 'nMaxPos', 'fRedraw'], 'int'), 'FlatSB_ShowScrollBar': (3, ['HWND', 'INT', 'BOOL'], ['hwnd', 'code', 'fShow'], 'BOOL'), 'InitializeFlatSB': (1, ['HWND'], ['hwnd'], 'BOOL'), 'UninitializeFlatSB': (1, ['HWND'], ['hwnd'], 'HRESULT'), 'HIMAGELIST_QueryInterface': (3, ['HIMAGELIST', 'REFIID', 'VOID**'], ['himl', 'riid', 'ppv'], 'HRESULT'), 'ImageList_Add': (3, ['HIMAGELIST', 'HBITMAP', 'HBITMAP'], ['himl', 'hbmImage', 'hbmMask'], 'int'), 'ImageList_AddMasked': (3, ['HIMAGELIST', 'HBITMAP', 'COLORREF'], ['himl', 'hbmImage', 'crMask'], 'int'), 'ImageList_BeginDrag': (4, ['HIMAGELIST', 'INT', 'INT', 'INT'], ['himlTrack', 'iTrack', 'dxHotspot', 'dyHotspot'], 'BOOL'), 'ImageList_CoCreateInstance': (4, ['REFCLSID', 'CONST IUNKNOWN*', 'REFIID', 'VOID**'], ['rclsid', 'punkOuter', 'riid', 'ppv'], 'HRESULT'), 'ImageList_Copy': (5, ['HIMAGELIST', 'INT', 'HIMAGELIST', 'INT', 'UINT'], ['himlDst', 'iDst', 'himlSrc', 'iSrc', 'uFlags'], 'BOOL'), 'ImageList_Create': (5, ['INT', 'INT', 'ILC_FLAGS', 'INT', 'INT'], ['cx', 'cy', 'flags', 'cInitial', 'cGrow'], 'HIMAGELIST'), 'ImageList_Destroy': (1, ['HIMAGELIST'], ['himl'], 'BOOL'), 'ImageList_DragEnter': (3, ['HWND', 'INT', 'INT'], ['hwndLock', 'x', 'y'], 'BOOL'), 'ImageList_DragLeave': (1, ['HWND'], ['hwndLock'], 'BOOL'), 'ImageList_DragMove': (2, ['INT', 'INT'], ['x', 'y'], 'BOOL'), 'ImageList_DragShowNolock': (1, ['BOOL'], ['fShow'], 'BOOL'), 'ImageList_Draw': (6, ['HIMAGELIST', 'INT', 'HDC', 'INT', 'INT', 'ILD_FLAGS'], ['himl', 'i', 'hdcDst', 'x', 'y', 'fStyle'], 'BOOL'), 'ImageList_DrawEx': (10, ['HIMAGELIST', 'INT', 'HDC', 'INT', 'INT', 'INT', 'INT', 'COLORREF', 'COLORREF', 'ILD_FLAGS'], ['himl', 'i', 'hdcDst', 'x', 'y', 'dx', 'dy', 'rgbBk', 'rgbFg', 'fStyle'], 'BOOL'), 'ImageList_DrawIndirect': (1, ['IMAGELISTDRAWPARAMS*'], ['pimldp'], 'BOOL'), 'ImageList_Duplicate': (1, ['HIMAGELIST'], ['himl'], 'HIMAGELIST'), 'ImageList_EndDrag': (0, [], [], 'VOID'), 'ImageList_GetBkColor': (1, ['HIMAGELIST'], ['himl'], 'COLORREF'), 'ImageList_GetDragImage': (2, ['POINT*', 'POINT*'], ['ppt', 'pptHotspot'], 'HIMAGELIST'), 'ImageList_GetIcon': (3, ['HIMAGELIST', 'INT', 'ILD_FLAGS'], ['himl', 'i', 'flags'], 'HICON'), 'ImageList_GetIconSize': (3, ['HIMAGELIST', 'INT*', 'INT*'], ['himl', 'cx', 'cy'], 'BOOL'), 'ImageList_GetImageCount': (1, ['HIMAGELIST'], ['himl'], 'int'), 'ImageList_GetImageInfo': (3, ['HIMAGELIST', 'INT', 'IMAGEINFO*'], ['himl', 'i', 'pImageInfo'], 'BOOL'), 'ImageList_LoadImage': (7, ['HINSTANCE', 'LPCTSTR', 'INT', 'INT', 'COLORREF', 'IMAGETYPE', 'LRFLAGS'], ['hi', 'lpbmp', 'cx', 'cGrow', 'crMask', 'uType', 'uFlags'], 'HIMAGELIST'), 'ImageList_Merge': (6, ['HIMAGELIST', 'INT', 'HIMAGELIST', 'INT', 'INT', 'INT'], ['himl1', 'i1', 'himl2', 'i2', 'dx', 'dy'], 'HIMAGELIST'), 'ImageList_Read': (1, ['LPSTREAM'], ['pstm'], 'HIMAGELIST'), 'ImageList_ReadEx': (4, ['ILP_FLAGS', 'LPSTREAM', 'REFIID', 'VOID**'], ['dwFlags', 'pstm', 'riid', 'ppv'], 'HRESULT'), 'ImageList_Remove': (2, ['HIMAGELIST', 'INT'], ['himl', 'i'], 'BOOL'), 'ImageList_Replace': (4, ['HIMAGELIST', 'INT', 'HBITMAP', 'HBITMAP'], ['himl', 'i', 'hbmImage', 'hbmMask'], 'BOOL'), 'ImageList_ReplaceIcon': (3, ['HIMAGELIST', 'INT', 'HICON'], ['himl', 'i', 'hicon'], 'int'), 'ImageList_SetBkColor': (2, ['HIMAGELIST', 'COLORREF'], ['himl', 'clrBk'], 'COLORREF'), 'ImageList_SetColorTable': (4, ['HIMAGELIST', 'INT', 'INT', 'RGBQUAD*'], ['himl', 'start', 'len', 'prgb'], 'int'), 'ImageList_SetDragCursorImage': (4, ['HIMAGELIST', 'INT', 'INT', 'INT'], ['himlDrag', 'iDrag', 'dxHotspot', 'dyHotspot'], 'BOOL'), 'ImageList_SetIconSize': (3, ['HIMAGELIST', 'INT', 'INT'], ['himl', 'cx', 'cy'], 'BOOL'), 'ImageList_SetImageCount': (2, ['HIMAGELIST', 'UINT'], ['himl', 'uNewCount'], 'BOOL'), 'ImageList_SetOverlayImage': (3, ['HIMAGELIST', 'INT', 'INT'], ['himl', 'iImage', 'iOverlay'], 'BOOL'), 'ImageList_Write': (2, ['HIMAGELIST', 'LPSTREAM'], ['himl', 'pstm'], 'BOOL'), 'ImageList_WriteEx': (3, ['HIMAGELIST', 'ILP_FLAGS', 'LPSTREAM'], ['himl', 'dwFlags', 'pstm'], 'HRESULT'), 'TaskDialog': (8, ['HWND', 'HINSTANCE', 'PCWSTR', 'PCWSTR', 'PCWSTR', 'TASKDIALOG_COMMON_BUTTON_FLAGS', 'PCWSTR', 'INT*'], ['hWndParent', 'hInstance', 'pszWindowTitle', 'pszMainInstruction', 'pszContent', 'dwCommonButtons', 'pszIcon', 'pnButton'], 'HRESULT'), 'TaskDialogIndirect': (4, ['CONST TASKDIALOGCONFIG*', 'INT*', 'INT*', 'BOOL*'], ['pTaskConfig', 'pnButton', 'pnRadioButton', 'pfVerificationFlagChecked'], 'HRESULT')}

dict5_comdlg32 = {'ChooseColor': (1, ['LPCHOOSECOLOR'], ['lpcc'], 'BOOL'), 'ChooseFont': (1, ['LPCHOOSEFONT'], ['lpcf'], 'BOOL'), 'CommDlgExtendedError': (0, [], [], 'DWORD'), 'FindText': (1, ['LPFINDREPLACE'], ['lpfr'], 'HWND'), 'GetFileTitle': (3, ['LPCTSTR', 'LPTSTR', 'WORD'], ['lpszFile', 'lpszTitle', 'cbBuf'], 'short'), 'GetOpenFileName': (1, ['LPOPENFILENAME'], ['lpofn'], 'BOOL'), 'GetSaveFileName': (1, ['LPOPENFILENAME'], ['lpofn'], 'BOOL'), 'PageSetupDlg': (1, ['LPPAGESETUPDLG'], ['lppsd'], 'BOOL'), 'PrintDlg': (1, ['LPPRINTDLG'], ['lppd'], 'BOOL'), 'PrintDlgEx': (1, ['LPPRINTDLGEX'], ['lppd'], 'HRESULT'), 'ReplaceText': (1, ['LPFINDREPLACE'], ['lpfr'], 'HWND')}

dict5_crypt32 = {'CryptInstallDefaultContext': (6, ['HCRYPTPROV', 'DWORD', 'CONST VOID*', 'DWORD', 'VOID*', 'HCRYPTDEFAULTCONTEXT*'], ['hCryptProv', 'dwDefaultType', 'pvDefaultPara', 'dwFlags', 'pvReserved', 'phDefaultContext'], 'BOOL'), 'CryptUninstallDefaultContext': (3, ['HCRYPTDEFAULTCONTEXT', 'DWORD', 'VOID*'], ['hDefaultContext', 'dwFlags', 'pvReserved'], 'BOOL'), 'CryptDecodeObject': (7, ['CERTENCODINGTYPE', 'LPCSTR', 'CONST BYTE*', 'DWORD', 'CRYPTDECODEOBJECTFLAGS', 'VOID*', 'DWORD*'], ['dwCertEncodingType', 'lpszStructType', 'pbEncoded', 'cbEncoded', 'dwFlags', 'pvStructInfo', 'pcbStructInfo'], 'BOOL'), 'CryptDecodeObjectEx': (8, ['CERTENCODINGTYPE', 'LPCSTR', 'CONST BYTE*', 'DWORD', 'CRYPTDECODEOBJECTFLAGS', 'PCRYPT_DECODE_PARA', 'VOID*', 'DWORD*'], ['dwCertEncodingType', 'lpszStructType', 'pbEncoded', 'cbEncoded', 'dwFlags', 'pDecodePara', 'pvStructInfo', 'pcbStructInfo'], 'BOOL'), 'CryptEncodeObject': (5, ['CERTENCODINGTYPE', 'LPCSTR', 'CONST VOID*', 'BYTE*', 'DWORD*'], ['dwCertEncodingType', 'lpszStructType', 'pvStructInfo', 'pbEncoded', 'pcbEncoded'], 'BOOL'), 'CryptEncodeObjectEx': (7, ['CERTENCODINGTYPE', 'LPCSTR', 'CONST VOID*', 'CRYPTENCODEOBJECTFLAGS', 'PCRYPT_ENCODE_PARA', 'VOID*', 'DWORD*'], ['dwCertEncodingType', 'lpszStructType', 'pvStructInfo', 'dwFlags', 'pEncodePara', 'pvEncoded', 'pcbEncoded'], 'BOOL'), 'CryptProtectData': (7, ['DATA_BLOB*', 'LPCWSTR', 'DATA_BLOB*', 'PVOID', 'CRYPTPROTECT_PROMPTSTRUCT*', 'CRYPTPROTECTDATAFLAGS', 'DATA_BLOB*'], ['pDataIn', 'szDataDescr', 'pOptionalEntropy', 'pvReserved', 'pPromptStruct', 'dwFlags', 'pDataOut'], 'BOOL'), 'CryptProtectMemory': (3, ['LPVOID', 'DWORD', 'CRYPTPROTECTMEMORYFLAGS'], ['pData', 'cbData', 'dwFlags'], 'BOOL'), 'CryptUnprotectData': (7, ['DATA_BLOB*', 'LPWSTR*', 'DATA_BLOB*', 'PVOID', 'CRYPTPROTECT_PROMPTSTRUCT*', 'CRYPTPROTECTDATAFLAGS', 'DATA_BLOB*'], ['pDataIn', 'ppszDataDescr', 'pOptionalEntropy', 'pvReserved', 'pPromptStruct', 'dwFlags', 'pDataOut'], 'BOOL'), 'CryptUnprotectMemory': (3, ['LPVOID', 'DWORD', 'CRYPTPROTECTMEMORYFLAGS'], ['pData', 'cbData', 'dwFlags'], 'BOOL'), 'CertAddStoreToCollection': (4, ['HCERTSTORE', 'HCERTSTORE', 'CERTPHYSICALSTOREFLAGS', 'DWORD'], ['hCollectionStore', 'hSiblingStore', 'dwUpdateFlag', 'dwPriority'], 'BOOL'), 'CertCloseStore': (2, ['HCERTSTORE', 'CERTCLOSESTOREFLAGS'], ['hCertStore', 'dwFlags'], 'BOOL'), 'CertControlStore': (4, ['HCERTSTORE', 'DWORD', 'CERTCONTROLTYPE', 'CONST VOID*'], ['hCertStore', 'dwFlags', 'dwCtrlType', 'pvCtrlPara'], 'BOOL'), 'CertDuplicateStore': (1, ['HCERTSTORE'], ['hCertStore'], 'HCERTSTORE'), 'CertEnumPhysicalStore': (4, ['CONST VOID*', 'DWORD', 'VOID*', 'PFN_CERT_ENUM_PHYSICAL_STORE'], ['pvSystemStore', 'dwFlags', 'pvArg', 'pfnEnum'], 'BOOL'), 'CertEnumSystemStore': (4, ['CERTSYSTEMSTOREFLAGS', 'VOID*', 'VOID*', 'PFN_CERT_ENUM_SYSTEM_STORE'], ['dwFlags', 'pvSystemStoreLocationPara', 'pvArg', 'pfnEnum'], 'BOOL'), 'CertEnumSystemStoreLocation': (3, ['DWORD', 'VOID*', 'PFN_CERT_ENUM_SYSTEM_STORE_LOCATION'], ['dwFlags', 'pvArg', 'pfnEnum'], 'BOOL'), 'CertGetStoreProperty': (4, ['HCERTSTORE', 'DWORD', 'VOID*', 'DWORD*'], ['hCertStore', 'dwPropId', 'pvData', 'pcbData'], 'BOOL'), 'CertOpenStore': (5, ['CERT_STORE_PROVIDER', 'CERTENCODINGTYPE', 'HCRYPTPROV_LEGACY', 'CERTOPENSTOREFLAGS', 'CONST VOID*'], ['lpszStoreProvider', 'dwMsgAndCertEncodingType', 'hCryptProv', 'dwFlags', 'pvPara'], 'HCERTSTORE'), 'CertOpenSystemStore': (2, ['HCRYPTPROV_LEGACY', 'LPCTSTR'], ['hprov', 'szSubsystemProtocol'], 'HCERTSTORE'), 'CertRegisterPhysicalStore': (5, ['CONST VOID*', 'DWORD', 'LPCWSTR', 'PCERT_PHYSICAL_STORE_INFO', 'VOID*'], ['pvSystemStore', 'dwFlags', 'pwszStoreName', 'pStoreInfo', 'pvReserved'], 'BOOL'), 'CertRegisterSystemStore': (4, ['CONST VOID*', 'DWORD', 'PCERT_SYSTEM_STORE_INFO', 'VOID*'], ['pvSystemStore', 'dwFlags', 'pStoreInfo', 'pvReserved'], 'BOOL'), 'CertRemoveStoreFromCollection': (2, ['HCERTSTORE', 'HCERTSTORE'], ['hCollectionStore', 'hSiblingStore'], 'void'), 'CertSaveStore': (6, ['HCERTSTORE', 'DWORD', 'DWORD', 'DWORD', 'VOID*', 'DWORD'], ['hCertStore', 'dwMsgAndCertEncodingType', 'dwSaveAs', 'dwSaveTo', 'pvSaveToPara', 'dwFlags'], 'BOOL'), 'CertSetStoreProperty': (4, ['HCERTSTORE', 'DWORD', 'DWORD', 'CONST VOID*'], ['hCertStore', 'dwPropId', 'dwFlags', 'pvData'], 'BOOL'), 'CertUnregisterPhysicalStore': (3, ['CONST VOID*', 'DWORD', 'LPCWSTR'], ['pvSystemStore', 'dwFlags', 'pwszStoreName'], 'BOOL'), 'CertUnregisterSystemStore': (2, ['CONST VOID*', 'DWORD'], ['pvSystemStore', 'dwFlags'], 'BOOL'), 'CertAddSerializedElementToStore': (8, ['HCERTSTORE', 'CONST BYTE*', 'DWORD', 'DWORD', 'DWORD', 'DWORD', 'CERTIFICATESTORECONTEXTTYPE*', 'CONST VOID**'], ['hCertStore', 'pbElement', 'cbElement', 'dwAddDisposition', 'dwFlags', 'dwContextTypeFlags', 'pdwContextType', 'ppvContext'], 'BOOL'), 'CertCreateContext': (6, ['CERTIFICATESTORECONTEXTTYPE', 'CERTENCODINGTYPE', 'CONST BYTE*', 'DWORD', 'CERTCREATECONTEXTFLAGS', 'PCERT_CREATE_CONTEXT_PARA'], ['dwContextType', 'dwEncodingType', 'pbEncoded', 'cbEncoded', 'dwFlags', 'pCreatePara'], 'const void*'), 'CertEnumSubjectInSortedCTL': (4, ['PCCTL_CONTEXT', 'VOID**', 'PCRYPT_DER_BLOB', 'PCRYPT_DER_BLOB'], ['pCtlContext', 'ppvNextSubject', 'pSubjectIdentifier', 'pEncodedAttributes'], 'BOOL'), 'CertFindSubjectInCTL': (5, ['CERTENCODINGTYPE', 'DWORD', 'VOID*', 'PCCTL_CONTEXT', 'DWORD'], ['dwEncodingType', 'dwSubjectType', 'pvSubject', 'pCtlContext', 'dwFlags'], 'PCTL_ENTRY'), 'CertFindSubjectInSortedCTL': (5, ['PCRYPT_DATA_BLOB', 'PCCTL_CONTEXT', 'DWORD', 'VOID*', 'PCRYPT_DER_BLOB'], ['pSubjectIdentifier', 'pCtlContext', 'dwFlags', 'pvReserved', 'pEncodedAttributes'], 'BOOL'), 'CertAddCertificateContextToStore': (4, ['HCERTSTORE', 'PCCERT_CONTEXT', 'DWORD', 'PCCERT_CONTEXT*'], ['hCertStore', 'pCertContext', 'dwAddDisposition', 'ppStoreContext'], 'BOOL'), 'CertAddCertificateLinkToStore': (4, ['HCERTSTORE', 'PCCERT_CONTEXT', 'DWORD', 'PCCERT_CONTEXT*'], ['hCertStore', 'pCertContext', 'dwAddDisposition', 'ppStoreContext'], 'BOOL'), 'CertAddEncodedCertificateToStore': (6, ['HCERTSTORE', 'CERTENCODINGTYPE', 'CONST BYTE*', 'DWORD', 'CERTSTOREADDDISPOSITION', 'PCCERT_CONTEXT*'], ['hCertStore', 'dwCertEncodingType', 'pbCertEncoded', 'cbCertEncoded', 'dwAddDisposition', 'ppCertContext'], 'BOOL'), 'CertAddRefServerOcspResponse': (1, ['HCERT_SERVER_OCSP_RESPONSE'], ['hServerOcspResponse'], 'VOID'), 'CertAddRefServerOcspResponseContext': (1, ['PCCERT_SERVER_OCSP_RESPONSE_CONTEXT'], ['pServerOcspResponseContext'], 'VOID'), 'CertCloseServerOcspResponse': (2, ['HCERT_SERVER_OCSP_RESPONSE', 'DWORD'], ['hServerOcspResponse', 'dwFlags'], 'VOID'), 'CertCreateCertificateContext': (3, ['CERTENCODINGTYPE', 'CONST BYTE*', 'DWORD'], ['dwCertEncodingType', 'pbCertEncoded', 'cbCertEncoded'], 'PCCERT_CONTEXT'), 'CertCreateSelfSignCertificate': (8, ['HCRYPTPROV_OR_NCRYPT_KEY_HANDLE', 'PCERT_NAME_BLOB', 'DWORD', 'PCRYPT_KEY_PROV_INFO', 'PCRYPT_ALGORITHM_IDENTIFIER', 'PSYSTEMTIME', 'PSYSTEMTIME', 'PCERT_EXTENSIONS'], ['hCryptProvOrNCryptKey', 'pSubjectIssuerBlob', 'dwFlags', 'pKeyProvInfo', 'pSignatureAlgorithm', 'pStartTime', 'pEndTime', 'pExtensions'], 'PCCERT_CONTEXT'), 'CertDeleteCertificateFromStore': (1, ['PCCERT_CONTEXT'], ['pCertContext'], 'BOOL'), 'CertDuplicateCertificateContext': (1, ['PCCERT_CONTEXT'], ['pCertContext'], 'PCCERT_CONTEXT'), 'CertEnumCertificatesInStore': (2, ['HCERTSTORE', 'PCCERT_CONTEXT'], ['hCertStore', 'pPrevCertContext'], 'PCCERT_CONTEXT'), 'CertFindCertificateInStore': (6, ['HCERTSTORE', 'CERTENCODINGTYPE', 'DWORD', 'CERTFINDTYPE', 'CONST VOID*', 'PCCERT_CONTEXT'], ['hCertStore', 'dwCertEncodingType', 'dwFindFlags', 'dwFindType', 'pvFindPara', 'pPrevCertContext'], 'PCCERT_CONTEXT'), 'CertFreeCertificateContext': (1, ['PCCERT_CONTEXT'], ['pCertContext'], 'BOOL'), 'CertGetIssuerCertificateFromStore': (4, ['HCERTSTORE', 'PCCERT_CONTEXT', 'PCCERT_CONTEXT', 'DWORD*'], ['hCertStore', 'pSubjectContext', 'pPrevIssuerContext', 'pdwFlags'], 'PCCERT_CONTEXT'), 'CertGetServerOcspResponseContext': (3, ['HCERT_SERVER_OCSP_RESPONSE', 'DWORD', 'LPVOID'], ['hServerOcspResponse', 'dwFlags', 'pvReserved'], 'PCCERT_SERVER_OCSP_RESPONSE_CONTEXT'), 'CertGetSubjectCertificateFromStore': (3, ['HCERTSTORE', 'CERTENCODINGTYPE', 'PCERT_INFO'], ['hCertStore', 'dwCertEncodingType', 'pCertId'], 'PCCERT_CONTEXT'), 'CertGetValidUsages': (5, ['DWORD', 'PCCERT_CONTEXT*', 'INT*', 'LPSTR*', 'DWORD*'], ['cCerts', 'rghCerts', 'cNumOIDs', 'rghOIDs', 'pcbOIDs'], 'BOOL'), 'CertOpenServerOcspResponse': (3, ['PCCERT_CHAIN_CONTEXT', 'DWORD', 'LPVOID'], ['pChainContext', 'dwFlags', 'pvReserved'], 'HCERT_SERVER_OCSP_RESPONSE'), 'CertRetrieveLogoOrBiometricInfo': (9, ['PCCERT_CONTEXT', 'LPCSTR', 'DWORD', 'DWORD', 'DWORD', 'VOID*', 'BYTE**', 'DWORD*', 'LPWSTR*'], ['pCertContext', 'lpszLogoOrBiometricType', 'dwRetrievalFlags', 'dwTimeout', 'dwFlags', 'pvReserved', 'ppbData', 'pcbData', 'ppwszMimeType'], 'BOOL'), 'CertSelectCertificateChains': (8, ['LPCGUID', 'CERTSELECTFLAGS', 'PCCERT_SELECT_CHAIN_PARA', 'DWORD', 'PCCERT_SELECT_CRITERIA', 'HCERTSTORE', 'PDWORD', 'PCCERT_CHAIN_CONTEXT**'], ['pSelectionContext', 'dwFlags', 'pChainParameters', 'cCriteria', 'rgpCriteria', 'hStore', 'pcSelection', 'pprgpSelection'], 'BOOL'), 'CertSerializeCertificateStoreElement': (4, ['PCCERT_CONTEXT', 'DWORD', 'BYTE*', 'DWORD*'], ['pCertContext', 'dwFlags', 'pbElement', 'pcbElement'], 'BOOL'), 'CertVerifySubjectCertificateContext': (3, ['PCCERT_CONTEXT', 'PCCERT_CONTEXT', 'DWORD*'], ['pSubject', 'pIssuer', 'pdwFlags'], 'BOOL'), 'CertAddCRLContextToStore': (4, ['HCERTSTORE', 'PCCRL_CONTEXT', 'DWORD', 'PCCRL_CONTEXT*'], ['hCertStore', 'pCrlContext', 'dwAddDisposition', 'ppStoreContext'], 'BOOL'), 'CertAddCRLLinkToStore': (4, ['HCERTSTORE', 'PCCRL_CONTEXT', 'DWORD', 'PCCRL_CONTEXT*'], ['hCertStore', 'pCrlContext', 'dwAddDisposition', 'ppStoreContext'], 'BOOL'), 'CertAddEncodedCRLToStore': (6, ['HCERTSTORE', 'CERTENCODINGTYPE', 'CONST BYTE*', 'DWORD', 'DWORD', 'PCCRL_CONTEXT*'], ['hCertStore', 'dwCertEncodingType', 'pbCrlEncoded', 'cbCrlEncoded', 'dwAddDisposition', 'ppCrlContext'], 'BOOL'), 'CertCreateCRLContext': (3, ['CERTENCODINGTYPE', 'CONST BYTE*', 'DWORD'], ['dwCertEncodingType', 'pbCrlEncoded', 'cbCrlEncoded'], 'PCCRL_CONTEXT'), 'CertDeleteCRLFromStore': (1, ['PCCRL_CONTEXT'], ['pCrlContext'], 'BOOL'), 'CertDuplicateCRLContext': (1, ['PCCRL_CONTEXT'], ['pCrlContext'], 'PCCRL_CONTEXT'), 'CertEnumCRLsInStore': (2, ['HCERTSTORE', 'PCCRL_CONTEXT'], ['hCertStore', 'pPrevCrlContext'], 'PCCRL_CONTEXT'), 'CertFindCertificateInCRL': (5, ['PCCERT_CONTEXT', 'PCCRL_CONTEXT', 'DWORD', 'VOID*', 'PCRL_ENTRY*'], ['pCert', 'pCrlContext', 'dwFlags', 'pvReserved', 'ppCrlEntry'], 'BOOL'), 'CertFindCRLInStore': (6, ['HCERTSTORE', 'CERTENCODINGTYPE', 'CRLFINDISSUEDBYFLAGS', 'CRLFINDTYPE', 'CONST VOID*', 'PCCRL_CONTEXT'], ['hCertStore', 'dwEncodingType', 'dwFindFlags', 'dwFindType', 'pvFindPara', 'pPrevCrlContext'], 'PCCRL_CONTEXT'), 'CertFreeCRLContext': (1, ['PCCRL_CONTEXT'], ['pCrlContext'], 'BOOL'), 'CertGetCRLFromStore': (4, ['HCERTSTORE', 'PCCERT_CONTEXT', 'PCCRL_CONTEXT', 'DWORD*'], ['hCertStore', 'pIssuerContext', 'pPrevCrlContext', 'pdwFlags'], 'PCCRL_CONTEXT'), 'CertSerializeCRLStoreElement': (4, ['PCCRL_CONTEXT', 'DWORD', 'BYTE*', 'DWORD*'], ['pCrlContext', 'dwFlags', 'pbElement', 'pcbElement'], 'BOOL'), 'CertAddCTLContextToStore': (4, ['HCERTSTORE', 'PCCTL_CONTEXT', 'DWORD', 'PCCTL_CONTEXT*'], ['hCertStore', 'pCtlContext', 'dwAddDisposition', 'ppStoreContext'], 'BOOL'), 'CertAddCTLLinkToStore': (4, ['HCERTSTORE', 'PCCTL_CONTEXT', 'DWORD', 'PCCTL_CONTEXT*'], ['hCertStore', 'pCtlContext', 'dwAddDisposition', 'ppStoreContext'], 'BOOL'), 'CertAddEncodedCTLToStore': (6, ['HCERTSTORE', 'DWORD', 'CONST BYTE*', 'DWORD', 'DWORD', 'PCCTL_CONTEXT*'], ['hCertStore', 'dwMsgAndCertEncodingType', 'pbCtlEncoded', 'cbCtlEncoded', 'dwAddDisposition', 'ppCtlContext'], 'BOOL'), 'CertCreateCTLContext': (3, ['DWORD', 'CONST BYTE*', 'DWORD'], ['dwMsgAndCertEncodingType', 'pbCtlEncoded', 'cbCtlEncoded'], 'PCCTL_CONTEXT'), 'CertDeleteCTLFromStore': (1, ['PCCTL_CONTEXT'], ['pCtlContext'], 'BOOL'), 'CertDuplicateCTLContext': (1, ['PCCTL_CONTEXT'], ['pCtlContext'], 'PCCTL_CONTEXT'), 'CertEnumCTLsInStore': (2, ['HCERTSTORE', 'PCCTL_CONTEXT'], ['hCertStore', 'pPrevCtlContext'], 'PCCTL_CONTEXT'), 'CertFindCTLInStore': (6, ['HCERTSTORE', 'DWORD', 'DWORD', 'DWORD', 'CONST VOID*', 'PCCTL_CONTEXT'], ['hCertStore', 'dwMsgAndCertEncodingType', 'dwFindFlags', 'dwFindType', 'pvFindPara', 'pPrevCtlContext'], 'PCCTL_CONTEXT'), 'CertFreeCTLContext': (1, ['PCCTL_CONTEXT'], ['pCtlContext'], 'BOOL'), 'CertSerializeCTLStoreElement': (4, ['PCCTL_CONTEXT', 'DWORD', 'BYTE*', 'DWORD*'], ['pCtlContext', 'dwFlags', 'pbElement', 'pcbElement'], 'BOOL'), 'CertEnumCertificateContextProperties': (2, ['PCCERT_CONTEXT', 'DWORD'], ['pCertContext', 'dwPropId'], 'DWORD'), 'CertEnumCRLContextProperties': (2, ['PCCRL_CONTEXT', 'DWORD'], ['pCrlContext', 'dwPropId'], 'DWORD'), 'CertEnumCTLContextProperties': (2, ['PCCTL_CONTEXT', 'DWORD'], ['pCtlContext', 'dwPropId'], 'DWORD'), 'CertGetCertificateContextProperty': (4, ['PCCERT_CONTEXT', 'CERTPROPID', 'VOID*', 'DWORD*'], ['pCertContext', 'dwPropId', 'pvData', 'pcbData'], 'BOOL'), 'CertGetCRLContextProperty': (4, ['PCCRL_CONTEXT', 'CERTPROPID', 'VOID*', 'DWORD*'], ['pCrlContext', 'dwPropId', 'pvData', 'pcbData'], 'BOOL'), 'CertGetCTLContextProperty': (4, ['PCCTL_CONTEXT', 'CERTPROPID', 'VOID*', 'DWORD*'], ['pCtlContext', 'dwPropId', 'pvData', 'pcbData'], 'BOOL'), 'CertSetCertificateContextProperty': (4, ['PCCERT_CONTEXT', 'CERTPROPID', 'CERTSETPROPERTYFLAGS', 'CONST VOID*'], ['pCertContext', 'dwPropId', 'dwFlags', 'pvData'], 'BOOL'), 'CertSetCRLContextProperty': (4, ['PCCRL_CONTEXT', 'CERTPROPID', 'CERTSETPROPERTYFLAGS', 'CONST VOID*'], ['pCrlContext', 'dwPropId', 'dwFlags', 'pvData'], 'BOOL'), 'CertSetCTLContextProperty': (4, ['PCCTL_CONTEXT', 'CERTPROPID', 'DWORD', 'CONST VOID*'], ['pCtlContext', 'dwPropId', 'dwFlags', 'pvData'], 'BOOL'), 'CertVerifyCTLUsage': (7, ['CERTENCODINGTYPE', 'DWORD', 'VOID*', 'PCTL_USAGE', 'DWORD', 'PCTL_VERIFY_USAGE_PARA', 'PCTL_VERIFY_USAGE_STATUS'], ['dwEncodingType', 'dwSubjectType', 'pvSubject', 'pSubjectUsage', 'dwFlags', 'pVerifyUsagePara', 'pVerifyUsageStatus'], 'BOOL'), 'CryptMsgEncodeAndSignCTL': (6, ['CERTENCODINGTYPE', 'PCTL_INFO', 'PCMSG_SIGNED_ENCODE_INFO', 'DWORD', 'BYTE*', 'DWORD*'], ['dwMsgEncodingType', 'pCtlInfo', 'pSignInfo', 'dwFlags', 'pbEncoded', 'pcbEncoded'], 'BOOL'), 'CryptMsgGetAndVerifySigner': (6, ['HCRYPTMSG', 'DWORD', 'HCERTSTORE*', 'DWORD', 'PCCERT_CONTEXT*', 'DWORD*'], ['hCryptMsg', 'cSignerStore', 'rghSignerStore', 'dwFlags', 'ppSigner', 'pdwSignerIndex'], 'BOOL'), 'CryptMsgSignCTL': (7, ['CERTENCODINGTYPE', 'BYTE*', 'DWORD', 'PCMSG_SIGNED_ENCODE_INFO', 'DWORD', 'BYTE*', 'DWORD*'], ['dwMsgEncodingType', 'pbCtlContent', 'cbCtlContent', 'pSignInfo', 'dwFlags', 'pbEncoded', 'pcbEncoded'], 'BOOL'), 'CertCreateCertificateChainEngine': (2, ['PCERT_CHAIN_ENGINE_CONFIG', 'HCERTCHAINENGINE*'], ['pConfig', 'phChainEngine'], 'BOOL'), 'CertCreateCTLEntryFromCertificateContextProperties': (7, ['PCCERT_CONTEXT', 'DWORD', 'PCRYPT_ATTRIBUTE', 'DWORD', 'VOID*', 'PCTL_ENTRY', 'DWORD*'], ['pCertContext', 'cOptAttr', 'rgOptAttr', 'dwFlags', 'pvReserved', 'pCtlEntry', 'pcbCtlEntry'], 'BOOL'), 'CertDuplicateCertificateChain': (1, ['PCCERT_CHAIN_CONTEXT'], ['pChainContext'], 'PCCERT_CHAIN_CONTEXT'), 'CertFindChainInStore': (6, ['HCERTSTORE', 'CERTENCODINGTYPE', 'DWORD', 'DWORD', 'CONST VOID*', 'PCCERT_CHAIN_CONTEXT'], ['hCertStore', 'dwCertEncodingType', 'dwFindFlags', 'dwFindType', 'pvFindPara', 'pPrevChainContext'], 'PCCERT_CHAIN_CONTEXT'), 'CertFreeCertificateChain': (1, ['PCCERT_CHAIN_CONTEXT'], ['pChainContext'], 'VOID'), 'CertFreeCertificateChainEngine': (1, ['HCERTCHAINENGINE'], ['hChainEngine'], 'void'), 'CertFreeCertificateChainList': (1, ['PCCERT_CHAIN_CONTEXT*'], ['prgpSelection'], 'VOID'), 'CertGetCertificateChain': (8, ['HCERTCHAINENGINE', 'PCCERT_CONTEXT', 'LPFILETIME', 'HCERTSTORE', 'PCERT_CHAIN_PARA', 'CERTCHAINFLAGS', 'LPVOID', 'PCCERT_CHAIN_CONTEXT*'], ['hChainEngine', 'pCertContext', 'pTime', 'hAdditionalStore', 'pChainPara', 'dwFlags', 'pvReserved', 'ppChainContext'], 'BOOL'), 'CertIsValidCRLForCertificate': (4, ['PCCERT_CONTEXT', 'PCCRL_CONTEXT', 'DWORD', 'VOID*'], ['pCert', 'pCRL', 'dwFlags', 'pvReserved'], 'BOOL'), 'CertSetCertificateContextPropertiesFromCTLEntry': (3, ['PCCERT_CONTEXT', 'PCTL_ENTRY', 'DWORD'], ['pCertContext', 'pCtlEntry', 'dwFlags'], 'BOOL'), 'CertVerifyCertificateChainPolicy': (4, ['LPCSTR', 'PCCERT_CHAIN_CONTEXT', 'PCERT_CHAIN_POLICY_PARA', 'PCERT_CHAIN_POLICY_STATUS'], ['pszPolicyOID', 'pChainContext', 'pPolicyPara', 'pPolicyStatus'], 'BOOL'), 'CryptMsgCalculateEncodedLength': (6, ['CERTENCODINGTYPE', 'DWORD', 'CRYPTMSGTYPE', 'CONST VOID*', 'LPSTR', 'DWORD'], ['dwMsgEncodingType', 'dwFlags', 'dwMsgType', 'pvMsgEncodeInfo', 'pszInnerContentObjID', 'cbData'], 'DWORD'), 'CryptMsgClose': (1, ['HCRYPTMSG'], ['hCryptMsg'], 'BOOL'), 'CryptMsgControl': (4, ['HCRYPTMSG', 'CRYPTMSGCONTROLFLAGS', 'CRYPTMSGCONTROLTYPE', 'CONST VOID*'], ['hCryptMsg', 'dwFlags', 'dwCtrlType', 'pvCtrlPara'], 'BOOL'), 'CryptMsgUpdate': (4, ['HCRYPTMSG', 'CONST BYTE*', 'DWORD', 'BOOL'], ['hCryptMsg', 'pbData', 'cbData', 'fFinal'], 'BOOL'), 'CryptMsgCountersign': (4, ['HCRYPTMSG', 'DWORD', 'DWORD', 'PCMSG_SIGNER_ENCODE_INFO'], ['hCryptMsg', 'dwIndex', 'cCountersigners', 'rgCountersigners'], 'BOOL'), 'CryptMsgCountersignEncoded': (7, ['CERTENCODINGTYPE', 'PBYTE', 'DWORD', 'DWORD', 'PCMSG_SIGNER_ENCODE_INFO', 'PBYTE', 'PDWORD'], ['dwEncodingType', 'pbSignerInfo', 'cbSignerInfo', 'cCountersigners', 'rgCountersigners', 'pbCountersignature', 'pcbCountersignature'], 'BOOL'), 'CryptMsgDuplicate': (1, ['HCRYPTMSG'], ['hCryptMsg'], 'HCRYPTMSG'), 'CryptMsgGetParam': (5, ['HCRYPTMSG', 'CRYPTMSGPARAMTYPE', 'DWORD', 'VOID*', 'DWORD*'], ['hCryptMsg', 'dwParamType', 'dwIndex', 'pvData', 'pcbData'], 'BOOL'), 'CryptMsgOpenToDecode': (6, ['CERTENCODINGTYPE', 'CRYPTMSGOPENFLAGS', 'CRYPTMSGTYPE', 'HCRYPTPROV_LEGACY', 'PCERT_INFO', 'PCMSG_STREAM_INFO'], ['dwMsgEncodingType', 'dwFlags', 'dwMsgType', 'hCryptProv', 'pRecipientInfo', 'pStreamInfo'], 'HCRYPTMSG'), 'CryptMsgOpenToEncode': (6, ['CERTENCODINGTYPE', 'DWORD', 'CRYPTMSGTYPE', 'CONST VOID*', 'LPSTR', 'PCMSG_STREAM_INFO'], ['dwMsgEncodingType', 'dwFlags', 'dwMsgType', 'pvMsgEncodeInfo', 'pszInnerContentObjID', 'pStreamInfo'], 'HCRYPTMSG'), 'CryptMsgVerifyCountersignatureEncoded': (7, ['HCRYPTPROV_LEGACY', 'CERTENCODINGTYPE', 'PBYTE', 'DWORD', 'PBYTE', 'DWORD', 'PCERT_INFO'], ['hCryptProv', 'dwEncodingType', 'pbSignerInfo', 'cbSignerInfo', 'pbSignerInfoCountersignature', 'cbSignerInfoCountersignature', 'pciCountersigner'], 'BOOL'), 'CryptMsgVerifyCountersignatureEncodedEx': (10, ['HCRYPTPROV_LEGACY', 'CERTENCODINGTYPE', 'PBYTE', 'DWORD', 'PBYTE', 'DWORD', 'CRYPTMSGSIGNERTYPE', 'VOID*', 'DWORD', 'VOID*'], ['hCryptProv', 'dwEncodingType', 'pbSignerInfo', 'cbSignerInfo', 'pbSignerInfoCountersignature', 'cbSignerInfoCountersignature', 'dwSignerType', 'pvSigner', 'dwFlags', 'pvReserved'], 'BOOL'), 'CryptDecodeMessage': (13, ['DWORD', 'PCRYPT_DECRYPT_MESSAGE_PARA', 'PCRYPT_VERIFY_MESSAGE_PARA', 'DWORD', 'CONST BYTE*', 'DWORD', 'DWORD', 'CRYPTMSGTYPE*', 'DWORD*', 'BYTE*', 'DWORD*', 'PCCERT_CONTEXT*', 'PCCERT_CONTEXT*'], ['dwMsgTypeFlags', 'pDecryptPara', 'pVerifyPara', 'dwSignerIndex', 'pbEncodedBlob', 'cbEncodedBlob', 'dwPrevInnerContentType', 'pdwMsgType', 'pdwInnerContentType', 'pbDecoded', 'pcbDecoded', 'ppXchgCert', 'ppSignerCert'], 'BOOL'), 'CryptDecryptAndVerifyMessageSignature': (9, ['PCRYPT_DECRYPT_MESSAGE_PARA', 'PCRYPT_VERIFY_MESSAGE_PARA', 'DWORD', 'CONST BYTE*', 'DWORD', 'BYTE*', 'DWORD*', 'PCCERT_CONTEXT*', 'PCCERT_CONTEXT*'], ['pDecryptPara', 'pVerifyPara', 'dwSignerIndex', 'pbEncryptedBlob', 'cbEncryptedBlob', 'pbDecrypted', 'pcbDecrypted', 'ppXchgCert', 'ppSignerCert'], 'BOOL'), 'CryptDecryptMessage': (6, ['PCRYPT_DECRYPT_MESSAGE_PARA', 'CONST BYTE*', 'DWORD', 'BYTE*', 'DWORD*', 'PCCERT_CONTEXT*'], ['pDecryptPara', 'pbEncryptedBlob', 'cbEncryptedBlob', 'pbDecrypted', 'pcbDecrypted', 'ppXchgCert'], 'BOOL'), 'CryptEncryptMessage': (7, ['PCRYPT_ENCRYPT_MESSAGE_PARA', 'DWORD', 'PCCERT_CONTEXT ', 'CONST BYTE*', 'DWORD', 'BYTE*', 'DWORD*'], ['pEncryptPara', 'cRecipientCert', 'rgpRecipientCert', 'pbToBeEncrypted', 'cbToBeEncrypted', 'pbEncryptedBlob', 'pcbEncryptedBlob'], 'BOOL'), 'CryptGetMessageCertificates': (5, ['DWORD', 'HCRYPTPROV_LEGACY', 'DWORD', 'CONST BYTE*', 'DWORD'], ['dwMsgAndCertEncodingType', 'hCryptProv', 'dwFlags', 'pbSignedBlob', 'cbSignedBlob'], 'HCERTSTORE'), 'CryptGetMessageSignerCount': (3, ['CERTENCODINGTYPE', 'CONST BYTE*', 'DWORD'], ['dwMsgEncodingType', 'pbSignedBlob', 'cbSignedBlob'], 'LONG'), 'CryptHashMessage': (9, ['PCRYPT_HASH_MESSAGE_PARA', 'BOOL', 'DWORD', 'CONST BYTE* ', 'DWORD ', 'BYTE*', 'DWORD*', 'BYTE*', 'DWORD*'], ['pHashPara', 'fDetachedHash', 'cToBeHashed', 'rgpbToBeHashed', 'rgcbToBeHashed', 'pbHashedBlob', 'pcbHashedBlob', 'pbComputedHash', 'pcbComputedHash'], 'BOOL'), 'CryptSignAndEncryptMessage': (8, ['PCRYPT_SIGN_MESSAGE_PARA', 'PCRYPT_ENCRYPT_MESSAGE_PARA', 'DWORD', 'PCCERT_CONTEXT ', 'CONST BYTE*', 'DWORD', 'BYTE*', 'DWORD*'], ['pSignPara', 'pEncryptPara', 'cRecipientCert', 'rgpRecipientCert', 'pbToBeSignedAndEncrypted', 'cbToBeSignedAndEncrypted', 'pbSignedAndEncryptedBlob', 'pcbSignedAndEncryptedBlob'], 'BOOL'), 'CryptSignMessageWithKey': (5, ['PCRYPT_KEY_SIGN_MESSAGE_PARA', 'CONST BYTE*', 'DWORD', 'BYTE*', 'DWORD*'], ['pSignPara', 'pbToBeSigned', 'cToBeSigned', 'pbSignedBlob', 'pcbSignedBlob'], 'BOOL'), 'CryptSignMessage': (7, ['PCRYPT_SIGN_MESSAGE_PARA', 'BOOL', 'DWORD', 'CONST BYTE* ', 'DWORD ', 'BYTE*', 'DWORD*'], ['pSignPara', 'fDetachedSignature', 'cToBeSigned', 'rgpbToBeSigned', 'rgcbToBeSigned', 'pbSignedBlob', 'pcbSignedBlob'], 'BOOL'), 'CryptVerifyDetachedMessageHash': (8, ['PCRYPT_HASH_MESSAGE_PARA', 'BYTE*', 'DWORD', 'DWORD', 'CONST BYTE* ', 'DWORD', 'BYTE*', 'DWORD*'], ['pHashPara', 'pbDetachedHashBlob', 'cbDetachedHashBlob', 'cToBeHashed', 'rgpbToBeHashed', 'rgcbToBeHashed', 'pbComputedHash', 'pcbComputedHash'], 'BOOL'), 'CryptVerifyDetachedMessageSignature': (8, ['PCRYPT_VERIFY_MESSAGE_PARA', 'DWORD', 'CONST BYTE*', 'DWORD', 'DWORD', 'CONST BYTE* ', 'DWORD ', 'PCCERT_CONTEXT*'], ['pVerifyPara', 'dwSignerIndex', 'pbDetachedSignBlob', 'cbDetachedSignBlob', 'cToBeSigned', 'rgpbToBeSigned', 'rgcbToBeSigned', 'ppSignerCert'], 'BOOL'), 'CryptVerifyMessageHash': (7, ['PCRYPT_HASH_MESSAGE_PARA', 'BYTE*', 'DWORD', 'BYTE*', 'DWORD*', 'BYTE*', 'DWORD*'], ['pHashPara', 'pbHashedBlob', 'cbHashedBlob', 'pbToBeHashed', 'pcbToBeHashed', 'pbComputedHash', 'pcbComputedHash'], 'BOOL'), 'CryptVerifyMessageSignature': (7, ['PCRYPT_VERIFY_MESSAGE_PARA', 'DWORD', 'CONST BYTE*', 'DWORD', 'BYTE*', 'DWORD*', 'PCCERT_CONTEXT*'], ['pVerifyPara', 'dwSignerIndex', 'pbSignedBlob', 'cbSignedBlob', 'pbDecoded', 'pcbDecoded', 'ppSignerCert'], 'BOOL'), 'CryptVerifyMessageSignatureWithKey': (6, ['PCRYPT_KEY_VERIFY_MESSAGE_PARA', 'PCERT_PUBLIC_KEY_INFO', 'CONST BYTE*', 'DWORD', 'BYTE*', 'DWORD*'], ['pVerifyPara', 'pPublicKeyInfo', 'pbSignedBlob', 'cbSignedBlob', 'pbDecoded', 'pcbDecoded'], 'BOOL'), 'CertCompareCertificate': (3, ['CERTENCODINGTYPE', 'PCERT_INFO', 'PCERT_INFO'], ['dwCertEncodingType', 'pCertId1', 'pCertId2'], 'BOOL'), 'CertCompareCertificateName': (3, ['CERTENCODINGTYPE', 'PCERT_NAME_BLOB', 'PCERT_NAME_BLOB'], ['dwCertEncodingType', 'pCertName1', 'pCertName2'], 'BOOL'), 'CertCompareIntegerBlob': (2, ['PCRYPT_INTEGER_BLOB', 'PCRYPT_INTEGER_BLOB'], ['pInt1', 'pInt2'], 'BOOL'), 'CertComparePublicKeyInfo': (3, ['CERTENCODINGTYPE', 'PCERT_PUBLIC_KEY_INFO', 'PCERT_PUBLIC_KEY_INFO'], ['dwCertEncodingType', 'pPublicKey1', 'pPublicKey2'], 'BOOL'), 'CertFindAttribute': (3, ['LPCSTR', 'DWORD', 'CRYPT_ATTRIBUTE'], ['pszObjId', 'cAttr', 'rgAttr'], 'PCRYPT_ATTRIBUTE'), 'CertFindExtension': (3, ['LPCSTR', 'DWORD', 'CERT_EXTENSION'], ['pszObjId', 'cExtensions', 'rgExtensions'], 'PCERT_EXTENSION'), 'CertFindRDNAttr': (2, ['LPCSTR', 'PCERT_NAME_INFO'], ['pszObjId', 'pName'], 'PCERT_RDN_ATTR'), 'CertGetIntendedKeyUsage': (4, ['CERTENCODINGTYPE', 'PCERT_INFO', 'BYTE*', 'DWORD'], ['dwCertEncodingType', 'pCertInfo', 'pbKeyUsage', 'cbKeyUsage'], 'BOOL'), 'CertGetPublicKeyLength': (2, ['CERTENCODINGTYPE', 'PCERT_PUBLIC_KEY_INFO'], ['dwCertEncodingType', 'pPublicKey'], 'DWORD'), 'CertIsRDNAttrsInCertificateName': (4, ['CERTENCODINGTYPE', 'DWORD', 'PCERT_NAME_BLOB', 'PCERT_RDN'], ['dwCertEncodingType', 'dwFlags', 'pCertName', 'pRDN'], 'BOOL'), 'CertVerifyCRLRevocation': (4, ['CERTENCODINGTYPE', 'PCERT_INFO', 'DWORD', 'PCRL_INFO '], ['dwCertEncodingType', 'pCertId', 'cCrlInfo', 'rgpCrlInfo'], 'BOOL'), 'CertVerifyCRLTimeValidity': (2, ['LPFILETIME', 'PCRL_INFO'], ['pTimeToVerify', 'pCrlInfo'], 'LONG'), 'CertVerifyRevocation': (7, ['CERTENCODINGTYPE', 'DWORD', 'DWORD', 'PVOID ', 'DWORD', 'PCERT_REVOCATION_PARA', 'PCERT_REVOCATION_STATUS'], ['dwEncodingType', 'dwRevType', 'cContext', 'rgpvContext', 'dwFlags', 'pRevPara', 'pRevStatus'], 'BOOL'), 'CertVerifyTimeValidity': (2, ['LPFILETIME', 'PCERT_INFO'], ['pTimeToVerify', 'pCertInfo'], 'LONG'), 'CertVerifyValidityNesting': (2, ['PCERT_INFO', 'PCERT_INFO'], ['pSubjectInfo', 'pIssuerInfo'], 'BOOL'), 'CryptExportPKCS8': (7, ['HCRYPTPROV', 'CRYPTKEYSPEC', 'LPSTR', 'DWORD', 'VOID*', 'BYTE*', 'DWORD*'], ['hCryptProv', 'dwKeySpec', 'pszPrivateKeyObjId', 'dwFlags', 'pvAuxInfo', 'pbPrivateKeyBlob', 'pcbPrivateKeyBlob'], 'BOOL'), 'CryptExportPKCS8Ex': (5, ['CRYPT_PKCS8_EXPORT_PARAMS*', 'DWORD', 'VOID*', 'BYTE*', 'DWORD*'], ['psExportParams', 'dwFlags', 'pvAuxInfo', 'pbPrivateKeyBlob', 'pcbPrivateKeyBlob'], 'BOOL'), 'CryptExportPublicKeyInfo': (5, ['HCRYPTPROV_OR_NCRYPT_KEY_HANDLE', 'CRYPTKEYSPEC', 'CERTENCODINGTYPE', 'PCERT_PUBLIC_KEY_INFO', 'DWORD*'], ['hCryptProvOrNCryptKey', 'dwKeySpec', 'dwCertEncodingType', 'pInfo', 'pcbInfo'], 'BOOL'), 'CryptExportPublicKeyInfoEx': (8, ['HCRYPTPROV_OR_NCRYPT_KEY_HANDLE', 'CRYPTKEYSPEC', 'CERTENCODINGTYPE', 'LPSTR', 'DWORD', 'VOID*', 'PCERT_PUBLIC_KEY_INFO', 'DWORD*'], ['hCryptProvOrNCryptKey', 'dwKeySpec', 'dwCertEncodingType', 'pszPublicKeyObjId', 'dwFlags', 'pvAuxInfo', 'pInfo', 'pcbInfo'], 'BOOL'), 'CryptExportPublicKeyInfoFromBCryptKeyHandle': (7, ['BCRYPT_KEY_HANDLE', 'CERTENCODINGTYPE', 'LPSTR', 'DWORD', 'VOID*', 'PCERT_PUBLIC_KEY_INFO', 'DWORD'], ['hBCryptKey', 'dwCertEncodingType', 'pszPublicKeyObjId', 'dwFlags', 'pvAuxInfo', 'pInfo', 'pcbInfo'], 'BOOL'), 'CryptFindCertificateKeyProvInfo': (3, ['PCCERT_CONTEXT', 'DWORD', 'VOID*'], ['pCert', 'dwFlags', 'pvReserved'], 'BOOL'), 'CryptFindLocalizedName': (1, ['LPCWSTR'], ['pwszCryptName'], 'LPCWSTR'), 'CryptHashCertificate': (7, ['HCRYPTPROV_LEGACY', 'ALG_ID', 'DWORD', 'CONST BYTE*', 'DWORD', 'BYTE*', 'DWORD*'], ['hCryptProv', 'Algid', 'dwFlags', 'pbEncoded', 'cbEncoded', 'pbComputedHash', 'pcbComputedHash'], 'BOOL'), 'CryptHashCertificate2': (7, ['LPCWSTR', 'DWORD', 'VOID*', 'BYTE*', 'DWORD', 'BYTE*', 'DWORD*'], ['pwszCNGHashAlgid', 'dwFlags', 'pvReserved', 'pbEncoded', 'cbEncoded', 'pbComputedHash', 'pcbComputedHash'], 'BOOL'), 'CryptHashPublicKeyInfo': (7, ['HCRYPTPROV_LEGACY', 'ALG_ID', 'DWORD', 'CERTENCODINGTYPE', 'PCERT_PUBLIC_KEY_INFO', 'BYTE*', 'DWORD*'], ['hCryptProv', 'Algid', 'dwFlags', 'dwCertEncodingType', 'pInfo', 'pbComputedHash', 'pcbComputedHash'], 'BOOL'), 'CryptHashToBeSigned': (6, ['HCRYPTPROV_LEGACY', 'CERTENCODINGTYPE', 'CONST BYTE*', 'DWORD', 'BYTE*', 'DWORD*'], ['hCryptProv', 'dwCertEncodingType', 'pbEncoded', 'cbEncoded', 'pbComputedHash', 'pcbComputedHash'], 'BOOL'), 'CryptImportPKCS8': (4, ['CRYPT_PKCS8_IMPORT_PARAMS', 'DWORD', 'HCRYPTPROV*', 'VOID*'], ['sPrivateKeyAndParams', 'dwFlags', 'phCryptProv', 'pvAuxInfo'], 'BOOL'), 'CryptImportPublicKeyInfo': (4, ['HCRYPTPROV', 'CERTENCODINGTYPE', 'PCERT_PUBLIC_KEY_INFO', 'HCRYPTKEY*'], ['hCryptProv', 'dwCertEncodingType', 'pInfo', 'phKey'], 'BOOL'), 'CryptImportPublicKeyInfoEx': (7, ['HCRYPTPROV', 'CERTENCODINGTYPE', 'PCERT_PUBLIC_KEY_INFO', 'ALG_ID', 'DWORD', 'VOID*', 'HCRYPTKEY*'], ['hCryptProv', 'dwCertEncodingType', 'pInfo', 'aiKeyAlg', 'dwFlags', 'pvAuxInfo', 'phKey'], 'BOOL'), 'CryptImportPublicKeyInfoEx2': (5, ['CERTENCODINGTYPE', 'PCERT_PUBLIC_KEY_INFO', 'DWORD', 'VOID*', 'BCRYPT_KEY_HANDLE*'], ['dwCertEncodingType', 'pInfo', 'dwFlags', 'pvAuxInfo', 'phKey'], 'BOOL'), 'CryptMemAlloc': (1, ['ULONG'], ['cbSize'], 'LPVOID'), 'CryptMemFree': (1, ['LPVOID'], ['pv'], 'void'), 'CryptMemRealloc': (2, ['LPVOID', 'ULONG'], ['pv', 'cbSize'], 'LPVOID'), 'CryptQueryObject': (11, ['CRYPTOBJECTTYPE', 'CONST VOID*', 'CRYPTEXPECTEDCONTENTTYPE', 'CRYPTEXPECTEDFORMATTYPE', 'DWORD', 'CERTENCODINGTYPE*', 'CRYPTCONTENTTYPE*', 'CRYPTFORMATTYPE*', 'HCERTSTORE*', 'HCRYPTMSG*', 'CONST VOID**'], ['dwObjectType', 'pvObject', 'dwExpectedContentTypeFlags', 'dwExpectedFormatTypeFlags', 'dwFlags', 'pdwMsgAndCertEncodingType', 'pdwContentType', 'pdwFormatType', 'phCertStore', 'phMsg', 'ppvContext'], 'BOOL'), 'CryptSignAndEncodeCertificate': (9, ['HCRYPTPROV_OR_NCRYPT_KEY_HANDLE', 'CRYPTKEYSPEC', 'CERTENCODINGTYPE', 'LPCSTR', 'CONST VOID*', 'PCRYPT_ALGORITHM_IDENTIFIER', 'CONST VOID*', 'PBYTE', 'DWORD*'], ['hCryptProvOrNCryptKey', 'dwKeySpec', 'dwCertEncodingType', 'lpszStructType', 'pvStructInfo', 'pSignatureAlgorithm', 'pvHashAuxInfo', 'pbEncoded', 'pcbEncoded'], 'BOOL'), 'CryptSignCertificate': (9, ['HCRYPTPROV_OR_NCRYPT_KEY_HANDLE', 'CRYPTKEYSPEC', 'CERTENCODINGTYPE', 'CONST BYTE*', 'DWORD', 'PCRYPT_ALGORITHM_IDENTIFIER', 'CONST VOID*', 'BYTE*', 'DWORD*'], ['hCryptProvOrNCryptKey', 'dwKeySpec', 'dwCertEncodingType', 'pbEncodedToBeSigned', 'cbEncodedToBeSigned', 'pSignatureAlgorithm', 'pvHashAuxInfo', 'pbSignature', 'pcbSignature'], 'BOOL'), 'CryptSIPAddProvider': (1, ['SIP_ADD_NEWPROVIDER*'], ['psNewProv'], 'BOOL'), 'CryptSIPCreateIndirectData': (3, ['SIP_SUBJECTINFO*', 'DWORD*', 'SIP_INDIRECT_DATA*'], ['pSubjectInfo', 'pcbIndirectData', 'pIndirectData'], 'BOOL'), 'CryptSIPGetSignedDataMsg': (5, ['SIP_SUBJECTINFO*', 'CERTENCODINGTYPE*', 'DWORD', 'DWORD*', 'BYTE*'], ['pSubjectInfo', 'pdwEncodingType', 'dwIndex', 'pcbSignedDataMsg', 'pbSignedDataMsg'], 'BOOL'), 'CryptSIPLoad': (3, ['CONST GUID*', 'DWORD', 'SIP_DISPATCH_INFO*'], ['pgSubject', 'dwFlags', 'pSipDispatch'], 'BOOL'), 'CryptSIPPutSignedDataMsg': (5, ['SIP_SUBJECTINFO*', 'CERTENCODINGTYPE*', 'DWORD', 'DWORD*', 'BYTE*'], ['pSubjectInfo', 'pdwEncodingType', 'dwIndex', 'pcbSignedDataMsg', 'pbSignedDataMsg'], 'BOOL'), 'CryptSIPRemoveProvider': (1, ['GUID*'], ['pgProv'], 'BOOL'), 'CryptSIPRemoveSignedDataMsg': (2, ['SIP_SUBJECTINFO*', 'DWORD'], ['pSubjectInfo', 'dwIndex'], 'BOOL'), 'CryptSIPRetrieveSubjectGuid': (3, ['LPCWSTR', 'HANDLE', 'GUID*'], ['FileName', 'hFileIn', 'pgSubject'], 'BOOL'), 'CryptSIPRetrieveSubjectGuidForCatalogFile': (3, ['LPCWSTR', 'HANDLE', 'GUID*'], ['FileName', 'hFileIn', 'pgSubject'], 'BOOL'), 'CryptSIPVerifyIndirectData': (2, ['SIP_SUBJECTINFO*', 'SIP_INDIRECT_DATA*'], ['pSubjectInfo', 'pIndirectData'], 'BOOL'), 'CryptUpdateProtectedState': (5, ['PSID', 'LPCWSTR', 'DWORD', 'DWORD*', 'DWORD*'], ['pOldSid', 'pwszOldPassword', 'dwFlags', 'pdwSuccessCount', 'pdwFailureCount'], 'BOOL'), 'CryptVerifyCertificateSignature': (5, ['HCRYPTPROV_LEGACY', 'CERTENCODINGTYPE', 'BYTE*', 'DWORD', 'PCERT_PUBLIC_KEY_INFO'], ['hCryptProv', 'dwCertEncodingType', 'pbEncoded', 'cbEncoded', 'pPublicKey'], 'BOOL'), 'CryptVerifyCertificateSignatureEx': (8, ['HCRYPTPROV_LEGACY', 'CERTENCODINGTYPE', 'CRYPTSUBJECTTYPE', 'VOID*', 'CRYPTISSUERTYPE', 'VOID*', 'DWORD', 'VOID*'], ['hCryptProv', 'dwCertEncodingType', 'dwSubjectType', 'pvSubject', 'dwIssuerType', 'pvIssuer', 'dwFlags', 'pvReserved'], 'BOOL'), 'CertIsStrongHashToSign': (3, ['PCCERT_STRONG_SIGN_PARA', 'LPCWSTR', 'PCCERT_CONTEXT'], ['pStrongSignPara', 'pwszCNGHashAlgid', 'pSigningCert'], 'BOOL'), 'CryptSIPGetCaps': (2, ['SIP_SUBJECTINFO*', 'SIP_CAP_SET*'], ['pSubjInfo', 'pCaps'], 'BOOL'), 'CertAlgIdToOID': (1, ['DWORD'], ['dwAlgId'], 'LPCSTR'), 'CertGetNameString': (6, ['PCCERT_CONTEXT', 'CERTNAMETYPE', 'CERTNAMEFLAGS', 'VOID*', 'LPTSTR', 'DWORD'], ['pCertContext', 'dwType', 'dwFlags', 'pvTypePara', 'pszNameString', 'cchNameString'], 'DWORD'), 'CertNameToStr': (5, ['CERTENCODINGTYPE', 'PCERT_NAME_BLOB', 'CERTSTRTYPE', 'LPTSTR', 'DWORD'], ['dwCertEncodingType', 'pName', 'dwStrType', 'psz', 'csz'], 'DWORD'), 'CertOIDToAlgId': (1, ['LPCSTR'], ['pszObjId'], 'DWORD'), 'CertRDNValueToStr': (4, ['DWORD', 'PCERT_RDN_VALUE_BLOB', 'LPTSTR', 'DWORD'], ['dwValueType', 'pValue', 'psz', 'csz'], 'DWORD'), 'CertStrToName': (7, ['CERTENCODINGTYPE', 'LPCTSTR', 'CERTSTRTYPE', 'VOID*', 'BYTE*', 'DWORD*', 'LPCTSTR*'], ['dwCertEncodingType', 'pszX500', 'dwStrType', 'pvReserved', 'pbEncoded', 'pcbEncoded', 'ppszError'], 'BOOL'), 'CryptBinaryToString': (5, ['CONST BYTE*', 'DWORD', 'CRYPTSTRINGFLAGS', 'LPTSTR', 'DWORD*'], ['pbBinary', 'cbBinary', 'dwFlags', 'pszString', 'pcchString'], 'BOOL'), 'CryptFormatObject': (9, ['CERTENCODINGTYPE', 'DWORD', 'CRYPTFORMATSTRTYPE', 'VOID*', 'LPCSTR', 'CONST BYTE*', 'DWORD', 'VOID*', 'DWORD*'], ['dwCertEncodingType', 'dwFormatType', 'dwFormatStrType', 'pFormatStruct', 'lpszStructType', 'pbEncoded', 'cbEncoded', 'pbFormat', 'pcbFormat'], 'BOOL'), 'CryptStringToBinary': (7, ['LPCTSTR', 'DWORD', 'CRYPTSTRINGFLAGS', 'BYTE*', 'DWORD*', 'DWORD*', 'CRYPTSTRINGFLAGS*'], ['pszString', 'cchString', 'dwFlags', 'pbBinary', 'pcbBinary', 'pdwSkip', 'pdwFlags'], 'BOOL'), 'CertAddEnhancedKeyUsageIdentifier': (2, ['PCCERT_CONTEXT', 'LPCSTR'], ['pCertContext', 'pszUsageIdentifier'], 'BOOL'), 'CertGetEnhancedKeyUsage': (4, ['PCCERT_CONTEXT', 'CERTFINDFLAGS', 'PCERT_ENHKEY_USAGE', 'DWORD*'], ['pCertContext', 'dwFlags', 'pUsage', 'pcbUsage'], 'BOOL'), 'CertRemoveEnhancedKeyUsageIdentifier': (2, ['PCCERT_CONTEXT', 'LPCSTR'], ['pCertContext', 'pszUsageIdentifier'], 'BOOL'), 'CertSetEnhancedKeyUsage': (2, ['PCCERT_CONTEXT', 'PCERT_ENHKEY_USAGE'], ['pCertContext', 'pUsage'], 'BOOL'), 'CryptCreateKeyIdentifierFromCSP': (8, ['CERTENCODINGTYPE', 'LPCSTR', 'CONST PUBLICKEYSTRUC*', 'DWORD', 'DWORD', 'VOID*', 'BYTE*', 'DWORD*'], ['dwCertEncodingType', 'pszPubKeyOID', 'pPubKeyStruc', 'cbPubKeyStruc', 'dwFlags', 'pvReserved', 'pbHash', 'pcbHash'], 'BOOL'), 'CryptEnumKeyIdentifierProperties': (7, ['CONST CRYPT_HASH_BLOB*', 'DWORD', 'DWORD', 'LPCWSTR', 'VOID*', 'VOID*', 'PFN_CRYPT_ENUM_KEYID_PROP'], ['pKeyIdentifier', 'dwPropId', 'dwFlags', 'pwszComputerName', 'pvReserved', 'pvArg', 'pfnEnum'], 'BOOL'), 'CryptGetKeyIdentifierProperty': (7, ['CONST CRYPT_HASH_BLOB*', 'DWORD', 'DWORD', 'LPCWSTR', 'VOID*', 'VOID*', 'DWORD*'], ['pKeyIdentifier', 'dwPropId', 'dwFlags', 'pwszComputerName', 'pvReserved', 'pvData', 'pcbData'], 'BOOL'), 'CryptSetKeyIdentifierProperty': (6, ['CONST CRYPT_HASH_BLOB*', 'DWORD', 'DWORD', 'LPCWSTR', 'VOID*', 'CONST VOID*'], ['pKeyIdentifier', 'dwPropId', 'dwFlags', 'pwszComputerName', 'pvReserved', 'pvData'], 'BOOL'), 'CryptEnumOIDFunction': (6, ['CERTENCODINGTYPE', 'LPCSTR', 'LPCSTR', 'DWORD', 'VOID*', 'PFN_CRYPT_ENUM_OID_FUNC'], ['dwEncodingType', 'pszFuncName', 'pszOID', 'dwFlags', 'pvArg', 'pfnEnumOIDFunc'], 'BOOL'), 'CryptEnumOIDInfo': (4, ['CRYPTGROUPID', 'DWORD', 'VOID*', 'PFN_CRYPT_ENUM_OID_INFO'], ['dwGroupId', 'dwFlags', 'pvArg', 'pfnEnumOIDInfo'], 'BOOL'), 'CryptFindOIDInfo': (3, ['CRYPTFINDOIDINFOKEYTYPE', 'VOID*', 'CRYPTFINDOIDINFOGROUDID'], ['dwKeyType', 'pvKey', 'dwGroupId'], 'PCCRYPT_OID_INFO'), 'CryptFreeOIDFunctionAddress': (2, ['HCRYPTOIDFUNCADDR', 'DWORD'], ['hFuncAddr', 'dwFlags'], 'BOOL'), 'CryptGetOIDFunctionAddress': (6, ['HCRYPTOIDFUNCSET', 'CERTENCODINGTYPE', 'LPCSTR', 'DWORD', 'VOID**', 'HCRYPTOIDFUNCADDR*'], ['hFuncSet', 'dwEncodingType', 'pszOID', 'dwFlags', 'ppvFuncAddr', 'phFuncAddr'], 'BOOL'), 'CryptGetDefaultOIDFunctionAddress': (6, ['HCRYPTOIDFUNCSET', 'CERTENCODINGTYPE', 'LPCWSTR', 'DWORD', 'VOID**', 'HCRYPTOIDFUNCADDR*'], ['hFuncSet', 'dwEncodingType', 'pwszDll', 'dwFlags', 'ppvFuncAddr', 'phFuncAddr'], 'BOOL'), 'CryptGetDefaultOIDDllList': (4, ['HCRYPTOIDFUNCSET', 'CERTENCODINGTYPE', 'LPWSTR', 'DWORD*'], ['hFuncSet', 'dwEncodingType', 'pwszDllList', 'pcchDllList'], 'BOOL'), 'CryptGetOIDFunctionValue': (7, ['CERTENCODINGTYPE', 'LPCSTR', 'LPCSTR', 'LPCWSTR', 'DWORD*', 'BYTE*', 'DWORD*'], ['dwEncodingType', 'pszFuncName', 'pszOID', 'pwszValueName', 'pdwValueType', 'pbValueData', 'pcbValueData'], 'BOOL'), 'CryptInitOIDFunctionSet': (2, ['LPCSTR', 'DWORD'], ['pszFuncName', 'dwFlags'], 'HCRYPTOIDFUNCSET'), 'CryptInstallOIDFunctionAddress': (6, ['HMODULE', 'CERTENCODINGTYPE', 'LPCSTR', 'DWORD', 'CRYPT_OID_FUNC_ENTRY', 'CRYPTINSTALLOIDFLAGS'], ['hModule', 'dwEncodingType', 'pszFuncName', 'cFuncEntry', 'rgFuncEntry', 'dwFlags'], 'BOOL'), 'CryptRegisterDefaultOIDFunction': (4, ['CERTENCODINGTYPE', 'LPCSTR', 'DWORD', 'LPCWSTR'], ['dwEncodingType', 'pszFuncName', 'dwIndex', 'pwszDll'], 'BOOL'), 'CryptRegisterOIDFunction': (5, ['CERTENCODINGTYPE', 'LPCSTR', 'LPCSTR', 'LPCWSTR', 'LPCSTR'], ['dwEncodingType', 'pszFuncName', 'pszOID', 'pwszDll', 'pszOverrideFuncName'], 'BOOL'), 'CryptRegisterOIDInfo': (2, ['PCCRYPT_OID_INFO', 'DWORD'], ['pInfo', 'dwFlags'], 'BOOL'), 'CryptSetOIDFunctionValue': (7, ['CERTENCODINGTYPE', 'LPCSTR', 'LPCSTR', 'LPCWSTR', 'DWORD', 'CONST BYTE*', 'DWORD'], ['dwEncodingType', 'pszFuncName', 'pszOID', 'pwszValueName', 'dwValueType', 'pbValueData', 'cbValueData'], 'BOOL'), 'CryptUnregisterDefaultOIDFunction': (3, ['CERTENCODINGTYPE', 'LPCSTR', 'LPCWSTR'], ['dwEncodingType', 'pszFuncName', 'pwszDll'], 'BOOL'), 'CryptUnregisterOIDFunction': (3, ['CERTENCODINGTYPE', 'LPCSTR', 'LPCSTR'], ['dwEncodingType', 'pszFuncName', 'pszOID'], 'BOOL'), 'CryptUnregisterOIDInfo': (1, ['PCCRYPT_OID_INFO'], ['pInfo'], 'BOOL'), 'PFXExportCertStore': (4, ['HCERTSTORE', 'CRYPT_DATA_BLOB*', 'LPCWSTR', 'DWORD'], ['hStore', 'pPFX', 'szPassword', 'dwFlags'], 'BOOL'), 'PFXExportCertStoreEx': (5, ['HCERTSTORE', 'CRYPT_DATA_BLOB*', 'LPCWSTR', 'VOID*', 'DWORD'], ['hStore', 'pPFX', 'szPassword', 'pvReserved', 'dwFlags'], 'BOOL'), 'PFXImportCertStore': (3, ['CRYPT_DATA_BLOB*', 'LPCWSTR', 'DWORD'], ['pPFX', 'szPassword', 'dwFlags'], 'HCERTSTORE'), 'PFXIsPFXBlob': (1, ['CRYPT_DATA_BLOB*'], ['pPFX'], 'BOOL'), 'PFXVerifyPassword': (3, ['CRYPT_DATA_BLOB*', 'LPCWSTR', 'DWORD'], ['pPFX', 'szPassword', 'dwFlags'], 'BOOL')}

dict5_dnsapi = {'DnsAcquireContextHandle_': (3, ['BOOL', 'PVOID', 'PHANDLE'], ['CredentialFlags', 'Credentials', 'pContext'], 'DNS_STATUS'), 'DnsExtractRecordsFromMessage_W': (3, ['PDNS_MESSAGE_BUFFER', 'WORD', 'PDNS_RECORD*'], ['pDnsBuffer', 'wMessageLength', 'ppRecord'], 'DNS_STATUS'), 'DnsFree': (2, ['PVOID', 'DNS_FREE_TYPE'], ['pData', 'FreeType'], 'void'), 'DnsFreeProxyName': (1, ['PWSTR'], ['proxyName'], 'void'), 'DnsGetProxyInformation': (5, ['PCWSTR', 'DNS_PROXY_INFORMATION*', 'DNS_PROXY_INFORMATION*', 'DNS_PROXY_COMPLETION_ROUTINE', 'VOID*'], ['hostName', 'proxyInformation', 'defaultProxyInformation', 'completionRoutine', 'completionContext'], 'DNS_STATUS'), 'DnsModifyRecordsInSet_': (6, ['PDNS_RECORD', 'PDNS_RECORD', 'DWORD', 'HANDLE', 'PVOID', 'PVOID'], ['pAddRecords', 'pDeleteRecords', 'Options', 'hContext', 'pExtraList', 'pReserved'], 'DNS_STATUS'), 'DnsNameCompare_': (2, ['PCTSTR', 'PCTSTR'], ['pName1', 'pName2'], 'BOOL'), 'DnsQuery_': (6, ['PCTSTR', 'DNSRECORDTYPE', 'DNSQUERYOPTIONS', 'PVOID', 'PDNS_RECORD*', 'PVOID*'], ['lpstrName', 'wType', 'Options', 'pExtra', 'ppQueryResultsSet', 'pReserved'], 'DNS_STATUS'), 'DnsQueryConfig': (6, ['DNS_CONFIG_TYPE', 'DNSCONFIGFLAGS', 'PCWSTR', 'PVOID', 'PVOID', 'PDWORD'], ['Config', 'Flag', 'pwsAdapterName', 'pReserved', 'pBuffer', 'pBufferLength'], 'DNS_STATUS'), 'DnsRecordCompare': (2, ['PDNS_RECORD', 'PDNS_RECORD'], ['pRecord1', 'pRecord2'], 'BOOL'), 'DnsRecordCopyEx': (3, ['PDNS_RECORD', 'DNS_CHARSET', 'DNS_CHARSET'], ['pRecord', 'CharSetIn', 'CharSetOut'], 'PDNS_RECORD'), 'DnsRecordListFree': (2, ['PDNS_RECORD', 'DNS_FREE_TYPE'], ['pRecordList', 'FreeType'], 'void'), 'DnsRecordSetCompare': (4, ['PDNS_RECORD', 'PDNS_RECORD', 'PDNS_RECORD*', 'PDNS_RECORD*'], ['pRR1', 'pRR2', 'ppDiff1', 'ppDiff2'], 'BOOL'), 'DnsRecordSetCopyEx': (3, ['PDNS_RECORD', 'DNS_CHARSET', 'DNS_CHARSET'], ['pRecordSet', 'CharSetIn', 'CharSetOut'], 'PDNS_RECORD'), 'DnsRecordSetDetach': (1, ['PDNS_RECORD'], ['pRR'], 'PDNS_RECORD'), 'DnsReleaseContextHandle': (1, ['HANDLE'], ['ContextHandle'], 'void'), 'DnsReplaceRecordSet': (5, ['PDNS_RECORD', 'DNSUPDATEFLAGS', 'HANDLE', 'PVOID', 'PVOID'], ['pNewSet', 'Options', 'hContext', 'pExtraInfo', 'pReserved'], 'DNS_STATUS'), 'DnsValidateName_': (2, ['PCTSTR', 'DNS_NAME_FORMAT'], ['pszName', 'Format'], 'DNS_STATUS'), 'DnsWriteQuestionToBuffer_W': (6, ['PDNS_MESSAGE_BUFFER', 'PDWORD', 'PCWSTR', 'DNSRECORDTYPE', 'WORD', 'BOOL'], ['pDnsBuffer', 'pdwBufferSize', 'pszName', 'wType', 'Xid', 'fRecursionDesired'], 'BOOL'), 'DnsCancelQuery': (1, ['PDNS_QUERY_CANCEL'], ['pCancelHandle'], 'DNS_STATUS'), 'DnsQueryEx': (3, ['PDNS_QUERY_REQUEST', 'PDNS_QUERY_RESULT', 'PDNS_QUERY_CANCEL'], ['pQueryRequest', 'pQueryResults', 'pCancelHandle'], 'DNS_STATUS')}

dict5_gdi32 = {'BitBlt': (9, ['HDC', 'INT', 'INT', 'INT', 'INT', 'HDC', 'INT', 'INT', 'RASTEROPERATIONENUM'], ['hdcDest', 'nXDest', 'nYDest', 'nWidth', 'nHeight', 'hdcSrc', 'nXSrc', 'nYSrc', 'dwRop'], 'BOOL'), 'CreateBitmap': (5, ['INT', 'INT', 'UINT', 'UINT', 'CONST VOID*'], ['nWidth', 'nHeight', 'cPlanes', 'cBitsPerPel', 'lpvBits'], 'HBITMAP'), 'CreateBitmapIndirect': (1, ['CONST BITMAP*'], ['lpbm'], 'HBITMAP'), 'CreateCompatibleBitmap': (3, ['HDC', 'INT', 'INT'], ['hdc', 'nWidth', 'nHeight'], 'HBITMAP'), 'CreateDIBitmap': (6, ['HDC', 'CONST BITMAPINFOHEADER*', 'CREATEBITMAPINITFLAG', 'CONST VOID*', 'CONST BITMAPINFO*', 'COLORUSEENUM'], ['hdc', 'lpbmih', 'fdwInit', 'lpbInit', 'lpbmi', 'fuUsage'], 'HBITMAP'), 'CreateDIBSection': (6, ['HDC', 'CONST BITMAPINFO*', 'COLORUSEENUM', 'VOID**', 'HANDLE', 'DWORD'], ['hdc', 'pbmi', 'iUsage', 'ppvBits', 'hSection', 'dwOffset'], 'HBITMAP'), 'ExtFloodFill': (5, ['HDC', 'INT', 'INT', 'COLORREF', 'UINT'], ['hdc', 'nXStart', 'nYStart', 'crColor', 'fuFillType'], 'BOOL'), 'GetBitmapDimensionEx': (2, ['HBITMAP', 'LPSIZE'], ['hBitmap', 'lpDimension'], 'BOOL'), 'GetDIBColorTable': (4, ['HDC', 'UINT', 'UINT', 'RGBQUAD*'], ['hdc', 'uStartIndex', 'cEntries', 'pColors'], 'UINT'), 'GetDIBits': (7, ['HDC', 'HBITMAP', 'UINT', 'UINT', 'LPVOID', 'LPBITMAPINFO', 'COLORUSEENUM'], ['hdc', 'hbmp', 'uStartScan', 'cScanLines', 'lpvBits', 'lpbi', 'uUsage'], 'int'), 'GetPixel': (3, ['HDC', 'INT', 'INT'], ['hdc', 'nXPos', 'nYPos'], 'COLORREF'), 'GetStretchBltMode': (1, ['HDC'], ['hdc'], 'int'), 'MaskBlt': (12, ['HDC', 'INT', 'INT', 'INT', 'INT', 'HDC', 'INT', 'INT', 'HBITMAP', 'INT', 'INT', 'RASTEROPERATIONENUM'], ['hdcDest', 'nXDest', 'nYDest', 'nWidth', 'nHeight', 'hdcSrc', 'nXSrc', 'nYSrc', 'hbmMask', 'xMask', 'yMask', 'dwRop'], 'BOOL'), 'PlgBlt': (10, ['HDC', 'CONST POINT*', 'HDC', 'INT', 'INT', 'INT', 'INT', 'HBITMAP', 'INT', 'INT'], ['hdcDest', 'lpPoint', 'hdcSrc', 'nXSrc', 'nYSrc', 'nWidth', 'nHeight', 'hbmMask', 'xMask', 'yMask'], 'BOOL'), 'SetBitmapDimensionEx': (4, ['HBITMAP', 'INT', 'INT', 'LPSIZE'], ['hBitmap', 'nWidth', 'nHeight', 'lpSize'], 'BOOL'), 'SetDIBColorTable': (4, ['HDC', 'UINT', 'UINT', 'CONST RGBQUAD*'], ['hdc', 'uStartIndex', 'cEntries', 'pColors'], 'UINT'), 'SetDIBits': (7, ['HDC', 'HBITMAP', 'UINT', 'UINT', 'CONST VOID*', 'CONST BITMAPINFO*', 'COLORUSEENUM'], ['hdc', 'hbmp', 'uStartScan', 'cScanLines', 'lpvBits', 'lpbmi', 'fuColorUse'], 'int'), 'SetDIBitsToDevice': (12, ['HDC', 'INT', 'INT', 'DWORD', 'DWORD', 'INT', 'INT', 'UINT', 'UINT', 'CONST VOID*', 'CONST BITMAPINFO*', 'COLORUSEENUM'], ['hdc', 'XDest', 'YDest', 'dwWidth', 'dwHeight', 'XSrc', 'YSrc', 'uStartScan', 'cScanLines', 'lpvBits', 'lpbmi', 'fuColorUse'], 'int'), 'SetPixel': (4, ['HDC', 'INT', 'INT', 'COLORREF'], ['hdc', 'X', 'Y', 'crColor'], 'COLORREF'), 'SetPixelV': (4, ['HDC', 'INT', 'INT', 'COLORREF'], ['hdc', 'X', 'Y', 'crColor'], 'BOOL'), 'SetStretchBltMode': (2, ['HDC', 'STRETCHMODEENUM'], ['hdc', 'iStretchMode'], 'int'), 'StretchBlt': (11, ['HDC', 'INT', 'INT', 'INT', 'INT', 'HDC', 'INT', 'INT', 'INT', 'INT', 'RASTEROPERATIONENUM'], ['hdcDest', 'nXOriginDest', 'nYOriginDest', 'nWidthDest', 'nHeightDest', 'hdcSrc', 'nXOriginSrc', 'nYOriginSrc', 'nWidthSrc', 'nHeightSrc', 'dwRop'], 'BOOL'), 'StretchDIBits': (13, ['HDC', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'CONST VOID*', 'CONST BITMAPINFO*', 'COLORUSEENUM', 'RASTEROPERATIONENUM'], ['hdc', 'XDest', 'YDest', 'nDestWidth', 'nDestHeight', 'XSrc', 'YSrc', 'nSrcWidth', 'nSrcHeight', 'lpBits', 'lpBitsInfo', 'iUsage', 'dwRop'], 'int'), 'CreateDiscardableBitmap': (3, ['HDC', 'INT', 'INT'], ['hdc', 'nWidth', 'nHeight'], 'HBITMAP'), 'FloodFill': (4, ['HDC', 'INT', 'INT', 'COLORREF'], ['hdc', 'nXStart', 'nYStart', 'crFill'], 'BOOL'), 'GetBitmapBits': (3, ['HBITMAP', 'LONG', 'LPVOID'], ['hbmp', 'cbBuffer', 'lpvBits'], 'LONG'), 'SetBitmapBits': (3, ['HBITMAP', 'DWORD', 'CONST VOID*'], ['hbmp', 'cBytes', 'lpBits'], 'LONG'), 'CreateBrushIndirect': (1, ['CONST LOGBRUSH*'], ['lplb'], 'HBRUSH'), 'CreateDIBPatternBrushPt': (2, ['CONST VOID*', 'COLORUSEENUM'], ['lpPackedDIB', 'iUsage'], 'HBRUSH'), 'CreateHatchBrush': (2, ['HATCHSTYLE', 'COLORREF'], ['fnStyle', 'clrref'], 'HBRUSH'), 'CreatePatternBrush': (1, ['HBITMAP'], ['hbmp'], 'HBRUSH'), 'CreateSolidBrush': (1, ['COLORREF'], ['crColor'], 'HBRUSH'), 'GetBrushOrgEx': (2, ['HDC', 'LPPOINT'], ['hdc', 'lppt'], 'BOOL'), 'PatBlt': (6, ['HDC', 'INT', 'INT', 'INT', 'INT', 'RASTEROPERATIONENUM'], ['hdc', 'nXLeft', 'nYLeft', 'nWidth', 'nHeight', 'dwRop'], 'BOOL'), 'SetBrushOrgEx': (4, ['HDC', 'INT', 'INT', 'LPPOINT'], ['hdc', 'nXOrg', 'nYOrg', 'lppt'], 'BOOL'), 'CreateDIBPatternBrush': (2, ['HGLOBAL', 'UINT'], ['hglbDIBPacked', 'fuColorSpec'], 'HBRUSH'), 'ExcludeClipRect': (5, ['HDC', 'INT', 'INT', 'INT', 'INT'], ['hdc', 'nLeftRect', 'nTopRect', 'nRightRect', 'nBottomRect'], 'int'), 'ExtSelectClipRgn': (3, ['HDC', 'HRGN', 'RGNMODE'], ['hdc', 'hrgn', 'fnMode'], 'int'), 'GetClipBox': (2, ['HDC', 'LPRECT'], ['hdc', 'lprc'], 'int'), 'GetClipRgn': (2, ['HDC', 'HRGN'], ['hdc', 'hrgn'], 'int'), 'GetMetaRgn': (2, ['HDC', 'HRGN'], ['hdc', 'hrgn'], 'int'), 'GetRandomRgn': (3, ['HDC', 'HRGN', 'RANDOMRGNENUM'], ['hdc', 'hrgn', 'iNum'], 'int'), 'IntersectClipRect': (5, ['HDC', 'INT', 'INT', 'INT', 'INT'], ['hdc', 'nLeftRect', 'nTopRect', 'nRightRect', 'nBottomRect'], 'int'), 'OffsetClipRgn': (3, ['HDC', 'INT', 'INT'], ['hdc', 'nXOffset', 'nYOffset'], 'int'), 'PtVisible': (3, ['HDC', 'INT', 'INT'], ['hdc', 'X', 'Y'], '[BOOL_NUMBER]'), 'RectVisible': (2, ['HDC', 'CONST RECT*'], ['hdc', 'lprc'], '[BOOL_NUMBER]'), 'SelectClipPath': (2, ['HDC', 'INT'], ['hdc', 'iMode'], 'BOOL'), 'SelectClipRgn': (2, ['HDC', 'HRGN'], ['hdc', 'hrgn'], 'int'), 'SetMetaRgn': (1, ['HDC'], ['hdc'], 'int'), 'AnimatePalette': (4, ['HPALETTE', 'UINT', 'UINT', 'CONST PALETTEENTRY*'], ['hpal', 'iStartIndex', 'cEntries', 'ppe'], 'BOOL'), 'CreateHalftonePalette': (1, ['HDC'], ['hdc'], 'HPALETTE'), 'CreatePalette': (1, ['CONST LOGPALETTE*'], ['lplgpl'], 'HPALETTE'), 'GetColorAdjustment': (2, ['HDC', 'LPCOLORADJUSTMENT'], ['hdc', 'lpca'], 'BOOL'), 'GetNearestColor': (2, ['HDC', 'COLORREF'], ['hdc', 'crColor'], 'COLORREF'), 'GetNearestPaletteIndex': (2, ['HPALETTE', 'COLORREF'], ['hpal', 'crColor'], 'UINT'), 'GetPaletteEntries': (4, ['HPALETTE', 'UINT', 'UINT', 'LPPALETTEENTRY'], ['hpal', 'iStartIndex', 'nEntries', 'lppe'], 'UINT'), 'GetSystemPaletteEntries': (4, ['HDC', 'UINT', 'UINT', 'LPPALETTEENTRY'], ['hdc', 'iStartIndex', 'nEntries', 'lppe'], 'UINT'), 'GetSystemPaletteUse': (1, ['HDC'], ['hdc'], 'UINT'), 'RealizePalette': (1, ['HDC'], ['hdc'], 'UINT'), 'ResizePalette': (2, ['HPALETTE', 'UINT'], ['hpal', 'nEntries'], 'BOOL'), 'SelectPalette': (3, ['HDC', 'HPALETTE', 'BOOL'], ['hdc', 'hpal', 'bForceBackground'], 'HPALETTE'), 'SetColorAdjustment': (2, ['HDC', 'CONST COLORADJUSTMENT*'], ['hdc', 'lpca'], 'BOOL'), 'SetPaletteEntries': (4, ['HPALETTE', 'UINT', 'UINT', 'CONST PALETTEENTRY*'], ['hpal', 'iStart', 'cEntries', 'lppe'], 'UINT'), 'SetSystemPaletteUse': (2, ['HDC', 'UINT'], ['hdc', 'uUsage'], 'UINT'), 'UnrealizeObject': (1, ['HGDIOBJ'], ['hgdiobj'], 'BOOL'), 'UpdateColors': (1, ['HDC'], ['hdc'], 'BOOL'), 'CombineTransform': (3, ['LPXFORM', 'CONST XFORM*', 'CONST XFORM*'], ['lpxformResult', 'lpxform1', 'lpxform2'], 'BOOL'), 'DPtoLP': (3, ['HDC', 'LPPOINT', 'INT'], ['hdc', 'lpPoints', 'nCount'], 'BOOL'), 'GetCurrentPositionEx': (2, ['HDC', 'LPPOINT'], ['hdc', 'lpPoint'], 'BOOL'), 'GetGraphicsMode': (1, ['HDC'], ['hdc'], 'int'), 'GetMapMode': (1, ['HDC'], ['hdc'], 'int'), 'GetViewportExtEx': (2, ['HDC', 'LPSIZE'], ['hdc', 'lpSize'], 'BOOL'), 'GetViewportOrgEx': (2, ['HDC', 'LPPOINT'], ['hdc', 'lpPoint'], 'BOOL'), 'GetWindowExtEx': (2, ['HDC', 'LPSIZE'], ['hdc', 'lpSize'], 'BOOL'), 'GetWindowOrgEx': (2, ['HDC', 'LPPOINT'], ['hdc', 'lpPoint'], 'BOOL'), 'GetWorldTransform': (2, ['HDC', 'LPXFORM'], ['hdc', 'lpXform'], 'BOOL'), 'LPtoDP': (3, ['HDC', 'LPPOINT', 'INT'], ['hdc', 'lpPoints', 'nCount'], 'BOOL'), 'ModifyWorldTransform': (3, ['HDC', 'CONST XFORM*', 'MODIFYWORLDTRANSFORMMODE'], ['hdc', 'lpXform', 'iMode'], 'BOOL'), 'OffsetViewportOrgEx': (4, ['HDC', 'INT', 'INT', 'LPPOINT'], ['hdc', 'nXOffset', 'nYOffset', 'lpPoint'], 'BOOL'), 'OffsetWindowOrgEx': (4, ['HDC', 'INT', 'INT', 'LPPOINT'], ['hdc', 'nXOffset', 'nYOffset', 'lpPoint'], 'BOOL'), 'ScaleViewportExtEx': (6, ['HDC', 'INT', 'INT', 'INT', 'INT', 'LPSIZE'], ['hdc', 'Xnum', 'Xdenom', 'Ynum', 'Ydenom', 'lpSize'], 'BOOL'), 'ScaleWindowExtEx': (6, ['HDC', 'INT', 'INT', 'INT', 'INT', 'LPSIZE'], ['hdc', 'Xnum', 'Xdenom', 'Ynum', 'Ydenom', 'lpSize'], 'BOOL'), 'SetGraphicsMode': (2, ['HDC', 'GRAPHICSMODES'], ['hdc', 'iMode'], 'int'), 'SetMapMode': (2, ['HDC', 'MAPPINGMODE'], ['hdc', 'fnMapMode'], 'int'), 'SetViewportExtEx': (4, ['HDC', 'INT', 'INT', 'LPSIZE'], ['hdc', 'nXExtent', 'nYExtent', 'lpSize'], 'BOOL'), 'SetViewportOrgEx': (4, ['HDC', 'INT', 'INT', 'LPPOINT'], ['hdc', 'X', 'Y', 'lpPoint'], 'BOOL'), 'SetWindowExtEx': (4, ['HDC', 'INT', 'INT', 'LPSIZE'], ['hdc', 'nXExtent', 'nYExtent', 'lpSize'], 'BOOL'), 'SetWindowOrgEx': (4, ['HDC', 'INT', 'INT', 'LPPOINT'], ['hdc', 'X', 'Y', 'lpPoint'], 'BOOL'), 'SetWorldTransform': (2, ['HDC', 'CONST XFORM*'], ['hdc', 'lpXform'], 'BOOL'), 'CancelDC': (1, ['HDC'], ['hdc'], 'BOOL'), 'CreateCompatibleDC': (1, ['HDC'], ['hdc'], 'HDC'), 'CreateDC': (4, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'CONST DEVMODE*'], ['lpszDriver', 'lpszDevice', 'lpszOutput', 'lpInitData'], 'HDC'), 'CreateIC': (4, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'CONST DEVMODE*'], ['lpszDriver', 'lpszDevice', 'lpszOutput', 'lpdvmInit'], 'HDC'), 'DeleteDC': (1, ['HDC'], ['hdc'], 'BOOL'), 'DeleteObject': (1, ['HGDIOBJ'], ['hObject'], 'BOOL'), 'DrawEscape': (4, ['HDC', 'INT', 'INT', 'LPCSTR'], ['hdc', 'nEscape', 'cbInput', 'lpszInData'], 'int'), 'EnumObjects': (4, ['HDC', 'INT', 'GOBJENUMPROC', 'LPARAM'], ['hdc', 'nObjectType', 'lpObjectFunc', 'lParam'], 'int'), 'GetCurrentObject': (2, ['HDC', 'OBJECTTYPE'], ['hdc', 'uObjectType'], 'HGDIOBJ'), 'GetDCBrushColor': (1, ['HDC'], ['hdc'], 'COLORREF'), 'GetDCOrgEx': (2, ['HDC', 'LPPOINT'], ['hdc', 'lpPoint'], 'BOOL'), 'GetDCPenColor': (1, ['HDC'], ['hdc'], 'COLORREF'), 'GetDeviceCaps': (2, ['HDC', 'DEVICECAPSENUM'], ['hdc', 'nIndex'], 'int'), 'GetLayout': (1, ['HDC'], ['hdc'], 'DWORD'), 'GetObject': (3, ['HGDIOBJ', 'INT', 'LPVOID'], ['hgdiobj', 'cbBuffer', 'lpvObject'], 'int'), 'GetObjectType': (1, ['HGDIOBJ'], ['h'], 'DWORD'), 'GetStockObject': (1, ['STOCK_OBJECT'], ['fnObject'], 'HGDIOBJ'), 'ResetDC': (2, ['HDC', 'CONST DEVMODE*'], ['hdc', 'lpInitData'], 'HDC'), 'RestoreDC': (2, ['HDC', 'INT'], ['hdc', 'nSavedDC'], 'BOOL'), 'SaveDC': (1, ['HDC'], ['hdc'], 'int'), 'SelectObject': (2, ['HDC', 'HGDIOBJ'], ['hdc', 'hgdiobj'], 'HGDIOBJ'), 'SetDCBrushColor': (2, ['HDC', 'COLORREF'], ['hdc', 'crColor'], 'COLORREF'), 'SetDCPenColor': (2, ['HDC', 'COLORREF'], ['hdc', 'crColor'], 'COLORREF'), 'SetLayout': (2, ['HDC', 'LAYOUTFLAGS'], ['hdc', 'dwLayout'], 'DWORD'), 'Chord': (9, ['HDC', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT'], ['hdc', 'nLeftRect', 'nTopRect', 'nRightRect', 'nBottomRect', 'nXRadial1', 'nYRadial1', 'nXRadial2', 'nYRadial2'], 'BOOL'), 'Ellipse': (5, ['HDC', 'INT', 'INT', 'INT', 'INT'], ['hdc', 'nLeftRect', 'nTopRect', 'nRightRect', 'nBottomRect'], 'BOOL'), 'Pie': (9, ['HDC', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT'], ['hdc', 'nLeftRect', 'nTopRect', 'nRightRect', 'nBottomRect', 'nXRadial1', 'nYRadial1', 'nXRadial2', 'nYRadial2'], 'BOOL'), 'Polygon': (3, ['HDC', 'CONST POINT*', 'INT'], ['hdc', 'lpPoints', 'nCount'], 'BOOL'), 'PolyPolygon': (4, ['HDC', 'CONST POINT*', 'CONST INT*', 'INT'], ['hdc', 'lpPoints', 'lpPolyCounts', 'nCount'], 'BOOL'), 'Rectangle': (5, ['HDC', 'INT', 'INT', 'INT', 'INT'], ['hdc', 'nLeftRect', 'nTopRect', 'nRightRect', 'nBottomRect'], 'BOOL'), 'RoundRect': (7, ['HDC', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT'], ['hdc', 'nLeftRect', 'nTopRect', 'nRightRect', 'nBottomRect', 'nWidth', 'nHeight'], 'BOOL'), 'AddFontMemResourceEx': (4, ['PVOID', 'DWORD', 'PVOID', 'DWORD*'], ['pbFont', 'cbFont', 'pdv', 'pcFonts'], 'HANDLE'), 'AddFontResource': (1, ['LPCTSTR'], ['lpszFilename'], 'int'), 'AddFontResourceEx': (3, ['LPCTSTR', 'DWORD', 'PVOID'], ['lpszFilename', 'fl', 'pdv'], 'int'), 'CreateFont': (14, ['INT', 'INT', 'INT', 'INT', 'FONTWEIGHT', 'DWORD', 'DWORD', 'DWORD', 'FONTCHARSET', 'FONTOUTPUTPRECISION', 'FONTCLIPPRECISION', 'FONTQUALITY', 'FONTPITCHANDFAMILY', 'LPCTSTR'], ['nHeight', 'nWidth', 'nEscapement', 'nOrientation', 'fnWeight', 'fdwItalic', 'fdwUnderline', 'fdwStrikeOut', 'fdwCharSet', 'fdwOutputPrecision', 'fdwClipPrecision', 'fdwQuality', 'fdwPitchAndFamily', 'lpszFace'], 'HFONT'), 'CreateFontIndirect': (1, ['CONST LOGFONT*'], ['lplf'], 'HFONT'), 'CreateFontIndirectEx': (1, ['CONST ENUMLOGFONTEXDV*'], ['penumlfex'], 'HFONT'), 'CreateScalableFontResource': (4, ['DWORD', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR'], ['fdwHidden', 'lpszFontRes', 'lpszFontFile', 'lpszCurrentPath'], 'BOOL'), 'EnumFontFamiliesEx': (5, ['HDC', 'LPLOGFONT', 'FONTENUMPROC', 'LPARAM', 'DWORD'], ['hdc', 'lpLogfont', 'lpEnumFontFamExProc', 'lParam', 'dwFlags'], 'int'), 'ExtTextOut': (8, ['HDC', 'INT', 'INT', 'EXTTEXTOUTFLAGS', 'CONST RECT*', 'LPCTSTR', 'UINT', 'CONST INT*'], ['hdc', 'X', 'Y', 'fuOptions', 'lprc', 'lpString', 'cbCount', 'lpDx'], 'BOOL'), 'GetAspectRatioFilterEx': (2, ['HDC', 'LPSIZE'], ['hdc', 'lpAspectRatio'], 'BOOL'), 'GetCharABCWidths': (4, ['HDC', 'UINT', 'UINT', 'LPABC'], ['hdc', 'uFirstChar', 'uLastChar', 'lpabc'], 'BOOL'), 'GetCharABCWidthsFloat': (4, ['HDC', 'UINT', 'UINT', 'LPABCFLOAT'], ['hdc', 'iFirstChar', 'iLastChar', 'lpABCF'], 'BOOL'), 'GetCharABCWidthsI': (5, ['HDC', 'UINT', 'UINT', 'LPWORD', 'LPABC'], ['hdc', 'giFirst', 'cgi', 'pgi', 'lpabc'], 'BOOL'), 'GetCharacterPlacement': (6, ['HDC', 'LPCTSTR', 'INT', 'INT', 'LPGCP_RESULTS', 'GCP_FLAGS'], ['hdc', 'lpString', 'nCount', 'nMaxExtent', 'lpResults', 'dwFlags'], 'DWORD'), 'GetCharWidth32': (4, ['HDC', 'UINT', 'UINT', 'LPINT'], ['hdc', 'iFirstChar', 'iLastChar', 'lpBuffer'], 'BOOL'), 'GetCharWidthFloat': (4, ['HDC', 'UINT', 'UINT', 'PFLOAT'], ['hdc', 'iFirstChar', 'iLastChar', 'pxBuffer'], 'BOOL'), 'GetCharWidthI': (5, ['HDC', 'UINT', 'UINT', 'LPWORD', 'LPINT'], ['hdc', 'giFirst', 'cgi', 'pgi', 'lpBuffer'], 'BOOL'), 'GetFontData': (5, ['HDC', 'DWORD', 'DWORD', 'LPVOID', 'DWORD'], ['hdc', 'dwTable', 'dwOffset', 'lpvBuffer', 'cbData'], 'DWORD'), 'GetFontLanguageInfo': (1, ['HDC'], ['hdc'], 'DWORD'), 'GetFontUnicodeRanges': (2, ['HDC', 'LPGLYPHSET'], ['hdc', 'lpgs'], 'DWORD'), 'GetGlyphIndices': (5, ['HDC', 'LPCTSTR', 'INT', 'LPWORD', 'GETGLYPHINDICESFLAG'], ['hdc', 'lpstr', 'c', 'pgi', 'fl'], 'DWORD'), 'GetGlyphOutline': (7, ['HDC', 'UINT', 'GETGLYPHOUTLINEFORMAT', 'LPGLYPHMETRICS', 'DWORD', 'LPVOID', 'CONST MAT2*'], ['hdc', 'uChar', 'uFormat', 'lpgm', 'cbBuffer', 'lpvBuffer', 'lpmat2'], 'DWORD'), 'GetKerningPairs': (3, ['HDC', 'DWORD', 'LPKERNINGPAIR'], ['hdc', 'nNumPairs', 'lpkrnpair'], 'DWORD'), 'GetOutlineTextMetrics': (3, ['HDC', 'UINT', 'LPOUTLINETEXTMETRIC'], ['hdc', 'cbData', 'lpOTM'], 'UINT'), 'GetRasterizerCaps': (2, ['LPRASTERIZER_STATUS', 'UINT'], ['lprs', 'cb'], 'BOOL'), 'GetTextAlign': (1, ['HDC'], ['hdc'], '[TextAlignFlag]'), 'GetTextCharacterExtra': (1, ['HDC'], ['hdc'], 'int'), 'GetTextColor': (1, ['HDC'], ['hdc'], 'COLORREF'), 'GetTextExtentExPoint': (7, ['HDC', 'LPCTSTR', 'INT', 'INT', 'LPINT', 'LPINT', 'LPSIZE'], ['hdc', 'lpszStr', 'cchString', 'nMaxExtent', 'lpnFit', 'alpDx', 'lpSize'], 'BOOL'), 'GetTextExtentExPointI': (7, ['HDC', 'LPWORD', 'INT', 'INT', 'LPINT', 'LPINT', 'LPSIZE'], ['hdc', 'pgiIn', 'cgi', 'nMaxExtent', 'lpnFit', 'alpDx', 'lpSize'], 'BOOL'), 'GetTextExtentPoint32': (4, ['HDC', 'LPCTSTR', 'INT', 'LPSIZE'], ['hdc', 'lpString', 'c', 'lpSize'], 'BOOL'), 'GetTextExtentPointI': (4, ['HDC', 'LPWORD', 'INT', 'LPSIZE'], ['hdc', 'pgiIn', 'cgi', 'lpSize'], 'BOOL'), 'GetTextFace': (3, ['HDC', 'INT', 'LPTSTR'], ['hdc', 'nCount', 'lpFaceName'], 'int'), 'GetTextMetrics': (2, ['HDC', 'LPTEXTMETRIC'], ['hdc', 'lptm'], 'BOOL'), 'PolyTextOut': (3, ['HDC', 'CONST POLYTEXT*', 'INT'], ['hdc', 'pptxt', 'cStrings'], 'BOOL'), 'RemoveFontMemResourceEx': (1, ['HANDLE'], ['fh'], 'BOOL'), 'RemoveFontResource': (1, ['LPCTSTR'], ['lpFileName'], 'BOOL'), 'RemoveFontResourceEx': (3, ['LPCTSTR', 'DWORD', 'PVOID'], ['lpFileName', 'fl', 'pdv'], 'BOOL'), 'SetMapperFlags': (2, ['HDC', 'DWORD'], ['hdc', 'dwFlag'], 'DWORD'), 'SetTextAlign': (2, ['HDC', 'TEXTALIGNFLAG'], ['hdc', 'fMode'], '[TextAlignFlag]'), 'SetTextCharacterExtra': (2, ['HDC', 'INT'], ['hdc', 'nCharExtra'], 'int'), 'SetTextColor': (2, ['HDC', 'COLORREF'], ['hdc', 'crColor'], 'COLORREF'), 'SetTextJustification': (3, ['HDC', 'INT', 'INT'], ['hdc', 'nBreakExtra', 'nBreakCount'], 'BOOL'), 'TextOut': (5, ['HDC', 'INT', 'INT', 'LPCTSTR', 'INT'], ['hdc', 'nXStart', 'nYStart', 'lpString', 'cbString'], 'BOOL'), 'EnumFontFamilies': (4, ['HDC', 'LPCTSTR', 'FONTENUMPROC', 'LPARAM'], ['hdc', 'lpszFamily', 'lpEnumFontFamProc', 'lParam'], 'int'), 'EnumFonts': (4, ['HDC', 'LPCTSTR', 'FONTENUMPROC', 'LPARAM'], ['hdc', 'lpFaceName', 'lpFontFunc', 'lParam'], 'int'), 'GetCharWidth': (4, ['HDC', 'UINT', 'UINT', 'LPINT'], ['hdc', 'iFirstChar', 'iLastChar', 'lpBuffer'], 'BOOL'), 'GetTextExtentPoint': (4, ['HDC', 'LPCTSTR', 'INT', 'LPSIZE'], ['hdc', 'lpString', 'cbString', 'lpSize'], 'BOOL'), 'AngleArc': (6, ['HDC', 'INT', 'INT', 'DWORD', 'FLOAT', 'FLOAT'], ['hdc', 'X', 'Y', 'dwRadius', 'eStartAngle', 'eSweepAngle'], 'BOOL'), 'Arc': (9, ['HDC', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT'], ['hdc', 'nLeftRect', 'nTopRect', 'nRightRect', 'nBottomRect', 'nXStartArc', 'nYStartArc', 'nXEndArc', 'nYEndArc'], 'BOOL'), 'ArcTo': (9, ['HDC', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT'], ['hdc', 'nLeftRect', 'nTopRect', 'nRightRect', 'nBottomRect', 'nXRadial1', 'nYRadial1', 'nXRadial2', 'nYRadial2'], 'BOOL'), 'GetArcDirection': (1, ['HDC'], ['hdc'], 'int'), 'LineDDA': (6, ['INT', 'INT', 'INT', 'INT', 'LINEDDAPROC', 'LPARAM'], ['nXStart', 'nYStart', 'nXEnd', 'nYEnd', 'lpLineFunc', 'lpData'], 'BOOL'), 'LineTo': (3, ['HDC', 'INT', 'INT'], ['hdc', 'nXEnd', 'nYEnd'], 'BOOL'), 'MoveToEx': (4, ['HDC', 'INT', 'INT', 'LPPOINT'], ['hdc', 'X', 'Y', 'lpPoint'], 'BOOL'), 'PolyBezier': (3, ['HDC', 'CONST POINT*', 'DWORD'], ['hdc', 'lppt', 'cPoints'], 'BOOL'), 'PolyBezierTo': (3, ['HDC', 'CONST POINT*', 'DWORD'], ['hdc', 'lppt', 'cCount'], 'BOOL'), 'PolyDraw': (4, ['HDC', 'CONST POINT*', 'POINT_TYPE*', 'INT'], ['hdc', 'lppt', 'lpbTypes', 'cCount'], 'BOOL'), 'Polyline': (3, ['HDC', 'CONST POINT*', 'INT'], ['hdc', 'lppt', 'cPoints'], 'BOOL'), 'PolylineTo': (3, ['HDC', 'CONST POINT*', 'DWORD'], ['hdc', 'lppt', 'cCount'], 'BOOL'), 'PolyPolyline': (4, ['HDC', 'CONST POINT*', 'CONST DWORD*', 'DWORD'], ['hdc', 'lppt', 'lpdwPolyPoints', 'cCount'], 'BOOL'), 'SetArcDirection': (2, ['HDC', 'INT'], ['hdc', 'ArcDirection'], 'int'), 'CloseEnhMetaFile': (1, ['HDC'], ['hdc'], 'HENHMETAFILE'), 'CopyEnhMetaFile': (2, ['HENHMETAFILE', 'LPCTSTR'], ['hemfSrc', 'lpszFile'], 'HENHMETAFILE'), 'CreateEnhMetaFile': (4, ['HDC', 'LPCTSTR', 'CONST RECT*', 'LPCTSTR'], ['hdcRef', 'lpFilename', 'lpRect', 'lpDescription'], 'HDC'), 'DeleteEnhMetaFile': (1, ['HENHMETAFILE'], ['hemf'], 'BOOL'), 'EnumEnhMetaFile': (5, ['HDC', 'HENHMETAFILE', 'ENHMFENUMPROC', 'LPVOID', 'CONST RECT*'], ['hdc', 'hemf', 'lpEnhMetaFunc', 'lpData', 'lpRect'], 'BOOL'), 'GdiComment': (3, ['HDC', 'UINT', 'CONST BYTE*'], ['hdc', 'cbSize', 'lpData'], 'BOOL'), 'GetEnhMetaFile': (1, ['LPCTSTR'], ['lpszMetaFile'], 'HENHMETAFILE'), 'GetEnhMetaFileBits': (3, ['HENHMETAFILE', 'UINT', 'LPBYTE'], ['hemf', 'cbBuffer', 'lpbBuffer'], 'UINT'), 'GetEnhMetaFileDescription': (3, ['HENHMETAFILE', 'UINT', 'LPTSTR'], ['hemf', 'cchBuffer', 'lpszDescription'], 'UINT'), 'GetEnhMetaFileHeader': (3, ['HENHMETAFILE', 'UINT', 'LPENHMETAHEADER'], ['hemf', 'cbBuffer', 'lpemh'], 'UINT'), 'GetEnhMetaFilePaletteEntries': (3, ['HENHMETAFILE', 'UINT', 'LPPALETTEENTRY'], ['hemf', 'cEntries', 'lppe'], 'UINT'), 'GetWinMetaFileBits': (5, ['HENHMETAFILE', 'UINT', 'LPBYTE', 'MAPPINGMODE', 'HDC'], ['hemf', 'cbBuffer', 'lpbBuffer', 'fnMapMode', 'hdcRef'], 'UINT'), 'PlayEnhMetaFile': (3, ['HDC', 'HENHMETAFILE', 'CONST RECT*'], ['hdc', 'hemf', 'lpRect'], 'BOOL'), 'PlayEnhMetaFileRecord': (4, ['HDC', 'LPHANDLETABLE', 'CONST ENHMETARECORD*', 'UINT'], ['hdc', 'lpHandletable', 'lpEnhMetaRecord', 'nHandles'], 'BOOL'), 'SetEnhMetaFileBits': (2, ['UINT', 'CONST BYTE*'], ['cbBuffer', 'lpData'], 'HENHMETAFILE'), 'SetWinMetaFileBits': (4, ['UINT', 'CONST BYTE*', 'HDC', 'CONST METAFILEPICT*'], ['cbBuffer', 'lpbBuffer', 'hdcRef', 'lpmfp'], 'HENHMETAFILE'), 'CloseMetaFile': (1, ['HDC'], ['hdc'], 'HMETAFILE'), 'CopyMetaFile': (2, ['HMETAFILE', 'LPCTSTR'], ['hmfSrc', 'lpszFile'], 'HMETAFILE'), 'CreateMetaFile': (1, ['LPCTSTR'], ['lpszFile'], 'HDC'), 'DeleteMetaFile': (1, ['HMETAFILE'], ['hmf'], 'BOOL'), 'EnumMetaFile': (4, ['HDC', 'HMETAFILE', 'MFENUMPROC', 'LPARAM'], ['hdc', 'hmf', 'lpMetaFunc', 'lParam'], 'BOOL'), 'GetMetaFileBitsEx': (3, ['HMETAFILE', 'UINT', 'LPVOID'], ['hmf', 'nSize', 'lpvData'], 'UINT'), 'PlayMetaFile': (2, ['HDC', 'HMETAFILE'], ['hdc', 'hmf'], 'BOOL'), 'PlayMetaFileRecord': (4, ['HDC', 'LPHANDLETABLE', 'LPMETARECORD', 'UINT'], ['hdc', 'lpHandletable', 'lpMetaRecord', 'nHandles'], 'BOOL'), 'SetMetaFileBitsEx': (2, ['UINT', 'CONST BYTE*'], ['nSize', 'lpData'], 'HMETAFILE'), 'GdiFlush': (0, [], [], 'BOOL'), 'GdiGetBatchLimit': (0, [], [], 'DWORD'), 'GdiSetBatchLimit': (1, ['DWORD'], ['dwLimit'], 'DWORD'), 'GetBkColor': (1, ['HDC'], ['hdc'], 'COLORREF'), 'GetBkMode': (1, ['HDC'], ['hdc'], 'int'), 'GetBoundsRect': (3, ['HDC', 'LPRECT', 'BOUNDSACCUMULATIONFLAGS'], ['hdc', 'lprcBounds', 'flags'], 'UINT'), 'GetROP2': (1, ['HDC'], ['hdc'], 'int'), 'SetBkColor': (2, ['HDC', 'COLORREF'], ['hdc', 'crColor'], 'COLORREF'), 'SetBkMode': (2, ['HDC', 'BKMODEENUM'], ['hdc', 'iBkMode'], 'int'), 'SetBoundsRect': (3, ['HDC', 'CONST RECT*', 'BOUNDSACCUMULATIONFLAGS'], ['hdc', 'lprcBounds', 'flags'], 'UINT'), 'SetROP2': (2, ['HDC', 'ROP2MODEENUM'], ['hdc', 'fnDrawMode'], 'int'), 'AbortPath': (1, ['HDC'], ['hdc'], 'BOOL'), 'BeginPath': (1, ['HDC'], ['hdc'], 'BOOL'), 'CloseFigure': (1, ['HDC'], ['hdc'], 'BOOL'), 'EndPath': (1, ['HDC'], ['hdc'], 'BOOL'), 'FillPath': (1, ['HDC'], ['hdc'], 'BOOL'), 'FlattenPath': (1, ['HDC'], ['hdc'], 'BOOL'), 'GetMiterLimit': (2, ['HDC', 'PFLOAT'], ['hdc', 'peLimit'], 'BOOL'), 'GetPath': (4, ['HDC', 'LPPOINT', 'POINT_TYPE*', 'INT'], ['hdc', 'lpPoints', 'lpTypes', 'nSize'], 'int'), 'PathToRegion': (1, ['HDC'], ['hdc'], 'HRGN'), 'SetMiterLimit': (3, ['HDC', 'FLOAT', 'PFLOAT'], ['hdc', 'eNewLimit', 'peOldLimit'], 'BOOL'), 'StrokeAndFillPath': (1, ['HDC'], ['hdc'], 'BOOL'), 'StrokePath': (1, ['HDC'], ['hdc'], 'BOOL'), 'WidenPath': (1, ['HDC'], ['hdc'], 'BOOL'), 'AbortDoc': (1, ['HDC'], ['hdc'], 'int'), 'StartDoc': (2, ['HDC', 'CONST DOCINFO*'], ['hdc', 'lpdi'], 'int'), 'EndDoc': (1, ['HDC'], ['hdc'], 'int'), 'EndPage': (1, ['HDC'], ['hdc'], 'int'), 'Escape': (5, ['HDC', 'GDIESCAPEFUNCTION', 'INT', 'LPCSTR', 'LPVOID'], ['hdc', 'nEscape', 'cbInput', 'lpvInData', 'lpvOutData'], 'int'), 'ExtEscape': (6, ['HDC', 'INT', 'INT', 'LPCSTR', 'INT', 'LPSTR'], ['hdc', 'nEscape', 'cbInput', 'lpszInData', 'cbOutput', 'lpszOutData'], 'int'), 'SetAbortProc': (2, ['HDC', 'ABORTPROC'], ['hdc', 'lpAbortProc'], 'int'), 'StartPage': (1, ['HDC'], ['hDC'], 'int'), 'CombineRgn': (4, ['HRGN', 'HRGN', 'HRGN', 'RGNMODE'], ['hrgnDest', 'hrgnSrc1', 'hrgnSrc2', 'fnCombineMode'], 'int'), 'CreateEllipticRgn': (4, ['INT', 'INT', 'INT', 'INT'], ['nLeftRect', 'nTopRect', 'nRightRect', 'nBottomRect'], 'HRGN'), 'CreateEllipticRgnIndirect': (1, ['CONST RECT*'], ['lprc'], 'HRGN'), 'CreatePolygonRgn': (3, ['CONST POINT*', 'INT', 'POLYFILLMODES'], ['lppt', 'cPoints', 'fnPolyFillMode'], 'HRGN'), 'CreatePolyPolygonRgn': (4, ['CONST POINT*', 'CONST INT*', 'INT', 'POLYFILLMODES'], ['lppt', 'lpPolyCounts', 'nCount', 'fnPolyFillMode'], 'HRGN'), 'CreateRectRgn': (4, ['INT', 'INT', 'INT', 'INT'], ['nLeftRect', 'nTopRect', 'nRightRect', 'nBottomRect'], 'HRGN'), 'CreateRectRgnIndirect': (1, ['CONST RECT*'], ['lprc'], 'HRGN'), 'CreateRoundRectRgn': (6, ['INT', 'INT', 'INT', 'INT', 'INT', 'INT'], ['nLeftRect', 'nTopRect', 'nRightRect', 'nBottomRect', 'nWidthEllipse', 'nHeightEllipse'], 'HRGN'), 'EqualRgn': (2, ['HRGN', 'HRGN'], ['hSrcRgn1', 'hSrcRgn2'], 'BOOL'), 'ExtCreateRegion': (3, ['CONST XFORM*', 'DWORD', 'CONST RGNDATA*'], ['lpXform', 'nCount', 'lpRgnData'], 'HRGN'), 'FillRgn': (3, ['HDC', 'HRGN', 'HBRUSH'], ['hdc', 'hrgn', 'hbr'], 'BOOL'), 'FrameRgn': (5, ['HDC', 'HRGN', 'HBRUSH', 'INT', 'INT'], ['hdc', 'hrgn', 'hbr', 'nWidth', 'nHeight'], 'BOOL'), 'GetPolyFillMode': (1, ['HDC'], ['hdc'], 'int'), 'GetRegionData': (3, ['HRGN', 'DWORD', 'LPRGNDATA'], ['hRgn', 'dwCount', 'lpRgnData'], 'DWORD'), 'GetRgnBox': (2, ['HRGN', 'LPRECT'], ['hrgn', 'lprc'], 'int'), 'InvertRgn': (2, ['HDC', 'HRGN'], ['hdc', 'hrgn'], 'BOOL'), 'OffsetRgn': (3, ['HRGN', 'INT', 'INT'], ['hrgn', 'nXOffset', 'nYOffset'], 'int'), 'PaintRgn': (2, ['HDC', 'HRGN'], ['hdc', 'hrgn'], 'BOOL'), 'PtInRegion': (3, ['HRGN', 'INT', 'INT'], ['hrgn', 'X', 'Y'], 'BOOL'), 'RectInRegion': (2, ['HRGN', 'CONST RECT*'], ['hrgn', 'lprc'], 'BOOL'), 'SetPolyFillMode': (2, ['HDC', 'POLYFILLMODES'], ['hdc', 'iPolyFillMode'], 'int'), 'SetRectRgn': (5, ['HRGN', 'INT', 'INT', 'INT', 'INT'], ['hrgn', 'nLeftRect', 'nTopRect', 'nRightRect', 'nBottomRect'], 'BOOL'), 'GetTextCharset': (1, ['HDC'], ['hdc'], '[FontCharset-int]'), 'GetTextCharsetInfo': (3, ['HDC', 'LPFONTSIGNATURE', 'DWORD'], ['hdc', 'lpSig', 'dwFlags'], '[FontCharset-int]'), 'TranslateCharsetInfo': (3, ['DWORD*', 'LPCHARSETINFO', 'TRANSLATECHARSETINFOFLAG'], ['lpSrc', 'lpCs', 'dwFlags'], 'BOOL'), 'ChoosePixelFormat': (2, ['HDC', 'CONST PIXELFORMATDESCRIPTOR*'], ['hdc', 'ppfd'], 'int'), 'DescribePixelFormat': (4, ['HDC', 'INT', 'UINT', 'LPPIXELFORMATDESCRIPTOR'], ['hdc', 'iPixelFormat', 'nBytes', 'ppfd'], 'int'), 'GetPixelFormat': (1, ['HDC'], ['hdc'], 'int'), 'SetPixelFormat': (3, ['HDC', 'INT', 'CONST PIXELFORMATDESCRIPTOR*'], ['hdc', 'iPixelFormat', 'ppfd'], 'BOOL'), 'GetEnhMetaFilePixelFormat': (3, ['HENHMETAFILE', 'DWORD', 'CONST PIXELFORMATDESCRIPTOR*'], ['hemf', 'cbBuffer', 'ppfd'], 'UINT'), 'SwapBuffers': (1, ['HDC'], ['hdc'], 'BOOL'), 'CheckColorsInGamut': (4, ['HDC', 'LPVOID', 'LPVOID', 'UINT'], ['hDC', 'lpRGBTriples', 'lpBuffer', 'nCount'], 'BOOL'), 'ColorCorrectPalette': (4, ['HDC', 'HPALETTE', 'DWORD', 'DWORD'], ['hDC', 'hPalette', 'dwFirstEntry', 'dwNumOfEntries'], 'BOOL'), 'ColorMatchToTarget': (3, ['HDC', 'HDC', 'CS_ACTION'], ['hDC', 'hdcTarget', 'uiAction'], 'BOOL'), 'CreateColorSpace': (1, ['LPLOGCOLORSPACE'], ['lpLogColorSpace'], 'HCOLORSPACE'), 'DeleteColorSpace': (1, ['HCOLORSPACE'], ['hColorSpace'], 'BOOL'), 'EnumICMProfiles': (3, ['HDC', 'ICMENUMPROC', 'LPARAM'], ['hDC', 'lpEnumICMProfilesFunc', 'lParam'], 'int'), 'GetColorSpace': (1, ['HDC'], ['hDC'], 'HCOLORSPACE'), 'GetICMProfile': (3, ['HDC', 'LPDWORD', 'LPTSTR'], ['hDC', 'lpcbName', 'lpszFilename'], 'BOOL'), 'GetLogColorSpace': (3, ['HCOLORSPACE', 'LPLOGCOLORSPACE', 'DWORD'], ['hColorSpace', 'lpBuffer', 'nSize'], 'BOOL'), 'SetColorSpace': (2, ['HDC', 'HCOLORSPACE'], ['hDC', 'hColorSpace'], 'HCOLORSPACE'), 'SetICMMode': (2, ['HDC', 'ICM_MODE'], ['hDC', 'iEnableICM'], 'int'), 'SetICMProfile': (2, ['HDC', 'LPTSTR'], ['hDC', 'lpFileName'], 'BOOL'), 'GetDeviceGammaRamp': (2, ['HDC', 'LPVOID'], ['hDC', 'lpRamp'], 'BOOL'), 'SetDeviceGammaRamp': (2, ['HDC', 'LPVOID'], ['hDC', 'lpRamp'], 'BOOL'), 'UpdateICMRegKey': (4, ['DWORD', 'LPTSTR', 'LPTSTR', 'ICM_COMMAND'], ['dwReserved', 'lpszCMID', 'lpszFileName', 'nCommand'], 'BOOL')}

dict5_mpr = {'WNetSetLastError': (3, ['DWORD', 'LPTSTR', 'LPTSTR'], ['err', 'lpError', 'lpProvider'], 'void'), 'MultinetGetConnectionPerformance': (2, ['LPNETRESOURCE', 'LPNETCONNECTINFOSTRUCT'], ['lpNetResource', 'lpNetConnectInfoStruct'], '[ERROR_CODE]'), 'WNetAddConnection2': (4, ['LPNETRESOURCE', 'LPCTSTR', 'LPCTSTR', 'CONNECTFLAGS'], ['lpNetResource', 'lpPassword', 'lpUsername', 'dwFlags'], '[ERROR_CODE]'), 'WNetAddConnection3': (5, ['HWND', 'LPNETRESOURCE', 'LPTSTR', 'LPTSTR', 'CONNECTFLAGS'], ['hwndOwner', 'lpNetResource', 'lpPassword', 'lpUserName', 'dwFlags'], '[ERROR_CODE]'), 'WNetCancelConnection': (2, ['LPCTSTR', 'BOOL'], ['lpName', 'fForce'], '[ERROR_CODE]'), 'WNetCancelConnection2': (3, ['LPCTSTR', 'CONNECTFLAGS', 'BOOL'], ['lpName', 'dwFlags', 'fForce'], '[ERROR_CODE]'), 'WNetCloseEnum': (1, ['HANDLE'], ['hEnum'], '[ERROR_CODE]'), 'WNetConnectionDialog': (2, ['HWND', 'RESOURCETYPE'], ['hwnd', 'dwType'], '[ERROR_CODE]'), 'WNetConnectionDialog1': (1, ['LPCONNECTDLGSTRUCT'], ['lpConnDlgStruct'], '[ERROR_CODE]'), 'WNetDisconnectDialog': (2, ['HWND', 'RESOURCETYPE'], ['hwnd', 'dwType'], '[ERROR_CODE]'), 'WNetDisconnectDialog1': (1, ['LPDISCDLGSTRUCT'], ['lpConnDlgStruct'], '[ERROR_CODE]'), 'WNetEnumResource': (4, ['HANDLE', 'LPDWORD', 'LPNETRESOURCE', 'LPDWORD'], ['hEnum', 'lpcCount', 'lpBuffer', 'lpBufferSize'], '[ERROR_CODE]'), 'WNetGetConnection': (3, ['LPCTSTR', 'LPTSTR', 'LPDWORD'], ['lpLocalName', 'lpRemoteName', 'lpnLength'], '[ERROR_CODE]'), 'WNetGetLastError': (5, ['LPDWORD', 'LPTSTR', 'DWORD', 'LPTSTR', 'DWORD'], ['lpError', 'lpErrorBuf', 'nErrorBufSize', 'lpNameBuf', 'nNameBufSize'], '[ERROR_CODE]'), 'WNetGetNetworkInformation': (2, ['LPCTSTR', 'LPNETINFOSTRUCT'], ['lpProvider', 'lpNetInfoStruct'], '[ERROR_CODE]'), 'WNetGetProviderName': (3, ['DWORD', 'LPTSTR', 'LPDWORD'], ['dwNetType', 'lpProviderName', 'lpBufferSize'], '[ERROR_CODE]'), 'WNetGetResourceInformation': (4, ['LPNETRESOURCE', 'LPVOID', 'LPDWORD', 'LPTSTR*'], ['lpNetResource', 'lpBuffer', 'lpcbBuffer', 'lplpSystem'], '[ERROR_CODE]'), 'WNetGetResourceParent': (3, ['LPNETRESOURCE', 'LPNETRESOURCE', 'LPDWORD'], ['lpNetResource', 'lpBuffer', 'lpcbBuffer'], '[ERROR_CODE]'), 'WNetGetUniversalName': (4, ['LPCTSTR', 'UNIVERSALINFOLEVEL', 'LPVOID', 'LPDWORD'], ['lpLocalPath', 'dwInfoLevel', 'lpBuffer', 'lpBufferSize'], '[ERROR_CODE]'), 'WNetGetUser': (3, ['LPCTSTR', 'LPTSTR', 'LPDWORD'], ['lpName', 'lpUserName', 'lpnLength'], '[ERROR_CODE]'), 'WNetOpenEnum': (5, ['RESOURCESCOPE', 'RESOURCETYPE', 'RESOURCEUSAGE', 'LPNETRESOURCE', 'LPHANDLE'], ['dwScope', 'dwType', 'dwUsage', 'lpNetResource', 'lphEnum'], '[ERROR_CODE]'), 'WNetRestoreConnectionW': (3, ['HWND', 'LPCWSTR', 'BOOL'], ['hwndParent', 'lpDevice', 'fUseUI'], '[ERROR_CODE]'), 'WNetUseConnection': (8, ['HWND', 'LPNETRESOURCE', 'LPCTSTR', 'LPCTSTR', 'CONNECTFLAGS', 'LPTSTR', 'LPDWORD', 'LPDWORD'], ['hwndOwner', 'lpNetResource', 'lpPassword', 'lpUserID', 'dwFlags', 'lpAccessName', 'lpBufferSize', 'lpResult'], '[ERROR_CODE]'), 'WNetAddConnection': (3, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR'], ['lpRemoteName', 'lpPassword', 'lpLocalName'], '[ERROR_CODE]')}

dict5_ncrypt = {'NCryptCreatePersistedKey': (6, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE*', 'LPCWSTR', 'LPCWSTR', 'DWORD', 'DWORD'], ['hProvider', 'phKey', 'pszAlgId', 'pszKeyName', 'dwLegacyKeySpec', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptDecrypt': (8, ['NCRYPT_KEY_HANDLE', 'PBYTE', 'DWORD', 'VOID*', 'PBYTE', 'DWORD', 'DWORD*', 'DWORD'], ['hKey', 'pbInput', 'cbInput', 'pPaddingInfo', 'pbOutput', 'cbOutput', 'pcbResult', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptDeleteKey': (2, ['NCRYPT_KEY_HANDLE', 'DWORD'], ['hKey', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptDeriveKey': (7, ['NCRYPT_SECRET_HANDLE', 'LPCWSTR', 'NCRYPTBUFFERDESC*', 'PBYTE', 'DWORD', 'DWORD*', 'ULONG'], ['hSharedSecret', 'pwszKDF', 'pParameterList', 'pbDerivedKey', 'cbDerivedKey', 'pcbResult', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptEncrypt': (8, ['NCRYPT_KEY_HANDLE', 'PBYTE', 'DWORD', 'VOID*', 'PBYTE', 'DWORD', 'DWORD*', 'DWORD'], ['hKey', 'pbInput', 'cbInput', 'pPaddingInfo', 'pbOutput', 'cbOutput', 'pcbResult', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptEnumAlgorithms': (5, ['NCRYPT_PROV_HANDLE', 'DWORD', 'DWORD*', 'NCRYPTALGORITHMNAME**', 'DWORD'], ['hProvider', 'dwAlgOperations', 'pdwAlgCount', 'ppAlgList', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptEnumKeys': (5, ['NCRYPT_PROV_HANDLE', 'LPCWSTR', 'NCRYPTKEYNAME**', 'PVOID*', 'DWORD'], ['hProvider', 'pszScope', 'ppKeyName', 'ppEnumState', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptEnumStorageProviders': (3, ['DWORD*', 'NCRYPTPROVIDERNAME**', 'DWORD'], ['pdwProviderCount', 'ppProviderList', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptExportKey': (8, ['NCRYPT_KEY_HANDLE', 'NCRYPT_KEY_HANDLE', 'LPCWSTR', 'NCRYPTBUFFERDESC*', 'PBYTE', 'DWORD', 'DWORD*', 'DWORD'], ['hKey', 'hExportKey', 'pszBlobType', 'pParameterList', 'pbOutput', 'cbOutput', 'pcbResult', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptFinalizeKey': (2, ['NCRYPT_KEY_HANDLE', 'DWORD'], ['hKey', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptFreeBuffer': (1, ['PVOID'], ['pvInput'], 'SECURITY_STATUS'), 'NCryptFreeObject': (1, ['NCRYPT_HANDLE'], ['hObject'], 'SECURITY_STATUS'), 'NCryptGetProperty': (6, ['NCRYPT_HANDLE', 'LPCWSTR', 'PBYTE', 'DWORD', 'DWORD*', 'DWORD'], ['hObject', 'pszProperty', 'pbOutput', 'cbOutput', 'pcbResult', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptImportKey': (8, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE', 'LPCWSTR', 'NCRYPTBUFFERDESC*', 'NCRYPT_KEY_HANDLE*', 'PBYTE', 'DWORD', 'DWORD'], ['hProvider', 'hImportKey', 'pszBlobType', 'pParameterList', 'phKey', 'pbData', 'cbData', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptIsAlgSupported': (3, ['NCRYPT_PROV_HANDLE', 'LPCWSTR', 'DWORD'], ['hProvider', 'pszAlgId', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptIsKeyHandle': (1, ['NCRYPT_KEY_HANDLE'], ['hKey'], 'BOOL'), 'NCryptKeyDerivation': (6, ['NCRYPT_KEY_HANDLE', 'NCRYPTBUFFERDESC*', 'PUCHAR', 'DWORD', 'DWORD*', 'ULONG'], ['hKey', 'pParameterList', 'pbDerivedKey', 'cbDerivedKey', 'pcbResult', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptNotifyChangeKey': (3, ['NCRYPT_PROV_HANDLE', 'HANDLE*', 'DWORD'], ['hProvider', 'phEvent', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptOpenKey': (5, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE*', 'LPCWSTR', 'DWORD', 'DWORD'], ['hProvider', 'phKey', 'pszKeyName', 'dwLegacyKeySpec', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptOpenStorageProvider': (3, ['NCRYPT_PROV_HANDLE*', 'LPCWSTR', 'DWORD'], ['phProvider', 'pszProviderName', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptSecretAgreement': (4, ['NCRYPT_KEY_HANDLE', 'NCRYPT_KEY_HANDLE', 'NCRYPT_SECRET_HANDLE*', 'DWORD'], ['hPrivKey', 'hPubKey', 'phSecret', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptSetProperty': (5, ['NCRYPT_HANDLE', 'LPCWSTR', 'PBYTE', 'DWORD', 'DWORD'], ['hObject', 'pszProperty', 'pbInput', 'cbInput', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptSignHash': (8, ['NCRYPT_KEY_HANDLE', 'VOID*', 'PBYTE', 'DWORD', 'PBYTE', 'DWORD', 'DWORD*', 'DWORD'], ['hKey', 'pPaddingInfo', 'pbHashValue', 'cbHashValue', 'pbSignature', 'cbSignature', 'pcbResult', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptTranslateHandle': (6, ['NCRYPT_PROV_HANDLE*', 'NCRYPT_KEY_HANDLE*', 'HCRYPTPROV', 'HCRYPTKEY', 'DWORD', 'DWORD'], ['phProvider', 'phKey', 'hLegacyProv', 'hLegacyKey', 'dwLegacyKeySpec', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptVerifySignature': (7, ['NCRYPT_KEY_HANDLE', 'VOID*', 'PBYTE', 'DWORD', 'PBYTE', 'DWORD', 'DWORD'], ['hKey', 'pPaddingInfo', 'pbHashValue', 'cbHashValue', 'pbSignature', 'cbSignature', 'dwFlags'], 'SECURITY_STATUS'), 'SslChangeNotify': (2, ['HANDLE', 'DWORD'], ['hEvent', 'dwFlags'], 'SECURITY_STATUS'), 'SslComputeClientAuthHash': (8, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE', 'NCRYPT_HASH_HANDLE', 'LPCWSTR', 'PBYTE', 'DWORD', 'DWORD*', 'DWORD'], ['hSslProvider', 'hMasterKey', 'hHandshakeHash', 'pszAlgId', 'pbOutput', 'cbOutput', 'pcbResult', 'dwFlags'], 'SECURITY_STATUS'), 'SslComputeEapKeyBlock': (8, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE', 'PBYTE', 'DWORD', 'PBYTE', 'DWORD', 'DWORD*', 'DWORD'], ['hSslProvider', 'hMasterKey', 'pbRandoms', 'cbRandoms', 'pbOutput', 'cbOutput', 'pcbResult', 'dwFlags'], 'SECURITY_STATUS'), 'SslComputeFinishedHash': (6, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE', 'NCRYPT_HASH_HANDLE', 'PBYTE', 'DWORD', 'DWORD'], ['hSslProvider', 'hMasterKey', 'hHandshakeHash', 'pbOutput', 'cbOutput', 'dwFlags'], 'SECURITY_STATUS'), 'SslCreateClientAuthHash': (6, ['NCRYPT_PROV_HANDLE', 'NCRYPT_HASH_HANDLE*', 'DWORD', 'DWORD', 'LPCWSTR', 'DWORD'], ['hSslProvider', 'phHandshakeHash', 'dwProtocol', 'dwCipherSuite', 'pszHashAlgId', 'dwFlags'], 'SECURITY_STATUS'), 'SslCreateEphemeralKey': (9, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE*', 'DWORD', 'DWORD', 'DWORD', 'DWORD', 'PBYTE', 'DWORD', 'DWORD'], ['hSslProvider', 'phEphemeralKey', 'dwProtocol', 'dwCipherSuite', 'dwKeyType', 'dwKeyBitLen', 'pbParams', 'cbParams', 'dwFlags'], 'SECURITY_STATUS'), 'SslCreateHandshakeHash': (5, ['NCRYPT_PROV_HANDLE', 'NCRYPT_HASH_HANDLE*', 'DWORD', 'DWORD', 'DWORD'], ['hSslProvider', 'phHandshakeHash', 'dwProtocol', 'dwCipherSuite', 'dwFlags'], 'SECURITY_STATUS'), 'SslDecrementProviderReferenceCount': (1, ['NCRYPT_PROV_HANDLE'], ['hSslProvider'], 'SECURITY_STATUS'), 'SslDecryptPacket': (9, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE', 'PBYTE', 'DWORD', 'PBYTE', 'DWORD', 'DWORD*', 'ULONGLONG', 'DWORD'], ['hSslProvider', 'hKey', 'pbInput', 'cbInput', 'pbOutput', 'cbOutput', 'pcbResult', 'SequenceNumber', 'dwFlags'], 'SECURITY_STATUS'), 'SslEncryptPacket': (10, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE', 'PBYTE', 'DWORD', 'PBYTE', 'DWORD', 'DWORD*', 'ULONGLONG', 'SSLCONTENTTYPE', 'DWORD'], ['hSslProvider', 'hKey', 'pbInput', 'cbInput', 'pbOutput', 'cbOutput', 'pcbResult', 'SequenceNumber', 'dwContentType', 'dwFlags'], 'SECURITY_STATUS'), 'SslEnumCipherSuites': (5, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE', 'NCRYPT_SSL_CIPHER_SUITE**', 'PVOID*', 'DWORD'], ['hSslProvider', 'hPrivateKey', 'ppCipherSuite', 'ppEnumState', 'dwFlags'], 'SECURITY_STATUS'), 'SslEnumProtocolProviders': (3, ['DWORD*', 'NCRYPTPROVIDERNAME**', 'DWORD'], ['pdwProviderCount', 'ppProviderList', 'dwFlags'], 'SECURITY_STATUS'), 'SslExportKey': (7, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE', 'LPCWSTR', 'PBYTE', 'DWORD', 'DWORD*', 'DWORD'], ['hSslProvider', 'hKey', 'pszBlobType', 'pbOutput', 'cbOutput', 'pcbResult', 'dwFlags'], 'SECURITY_STATUS'), 'SslFreeBuffer': (1, ['PVOID'], ['pvInput'], 'SECURITY_STATUS'), 'SslFreeObject': (2, ['NCRYPT_HANDLE', 'DWORD'], ['hObject', 'dwFlags'], 'SECURITY_STATUS'), 'SslGenerateMasterKey': (11, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE', 'NCRYPT_KEY_HANDLE', 'NCRYPT_KEY_HANDLE*', 'DWORD', 'DWORD', 'PNCRYPTBUFFERDESC', 'PBYTE', 'DWORD', 'DWORD*', 'DWORD'], ['hSslProvider', 'hPrivateKey', 'hPublicKey', 'phMasterKey', 'dwProtocol', 'dwCipherSuite', 'pParameterList', 'pbOutput', 'cbOutput', 'pcbResult', 'dwFlags'], 'SECURITY_STATUS'), 'SslGenerateSessionKeys': (6, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE', 'NCRYPT_KEY_HANDLE*', 'NCRYPT_KEY_HANDLE*', 'PNCRYPTBUFFERDESC', 'DWORD'], ['hSslProvider', 'hMasterKey', 'phReadKey', 'phWriteKey', 'pParameterList', 'dwFlags'], 'SECURITY_STATUS'), 'SslGetCipherSuitePRFHashAlgorithm': (6, ['NCRYPT_PROV_HANDLE', 'DWORD', 'DWORD', 'DWORD', 'WCHARNCRYPT_SSL_MAX_NAME_SIZE', 'DWORD'], ['hSslProvider', 'dwProtocol', 'dwCipherSuite', 'dwKeyType', 'szPRFHash', 'dwFlags'], 'SECURITY_STATUS'), 'SslGetKeyProperty': (5, ['NCRYPT_KEY_HANDLE', 'LPCWSTR', 'PBYTE', 'DWORD*', 'DWORD'], ['hKey', 'pszProperty', 'ppbOutput', 'pcbOutput', 'dwFlags'], 'SECURITY_STATUS'), 'SslGetProviderProperty': (6, ['NCRYPT_PROV_HANDLE', 'LPCWSTR', 'PBYTE', 'DWORD*', 'PVOID*', 'DWORD'], ['hSslProvider', 'pszProperty', 'ppbOutput', 'pcbOutput', 'ppEnumState', 'dwFlags'], 'SECURITY_STATUS'), 'SslHashHandshake': (5, ['NCRYPT_PROV_HANDLE', 'NCRYPT_HASH_HANDLE', 'PBYTE', 'DWORD', 'DWORD'], ['hSslProvider', 'hHandshakeHash', 'pbInput', 'cbInput', 'dwFlags'], 'SECURITY_STATUS'), 'SslImportKey': (6, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE*', 'LPCWSTR', 'PBYTE', 'DWORD', 'DWORD'], ['hSslProvider', 'phKey', 'pszBlobType', 'pbKeyBlob', 'cbKeyBlob', 'dwFlags'], 'SECURITY_STATUS'), 'SslImportMasterKey': (9, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE', 'NCRYPT_KEY_HANDLE*', 'DWORD', 'DWORD', 'PNCRYPTBUFFERDESC', 'PBYTE', 'DWORD', 'DWORD'], ['hSslProvider', 'hPrivateKey', 'phMasterKey', 'dwProtocol', 'dwCipherSuite', 'pParameterList', 'pbEncryptedKey', 'cbEncryptedKey', 'dwFlags'], 'SECURITY_STATUS'), 'SslIncrementProviderReferenceCount': (1, ['NCRYPT_PROV_HANDLE'], ['hSslProvider'], 'SECURITY_STATUS'), 'SslLookupCipherLengths': (7, ['NCRYPT_PROV_HANDLE', 'DWORD', 'DWORD', 'DWORD', 'NCRYPT_SSL_CIPHER_LENGTHS*', 'DWORD', 'DWORD'], ['hSslProvider', 'dwProtocol', 'dwCipherSuite', 'dwKeyType', 'pCipherLengths', 'cbCipherLengths', 'dwFlags'], 'SECURITY_STATUS'), 'SslLookupCipherSuiteInfo': (6, ['NCRYPT_PROV_HANDLE', 'DWORD', 'DWORD', 'DWORD', 'NCRYPT_SSL_CIPHER_SUITE*', 'DWORD'], ['hSslProvider', 'dwProtocol', 'dwCipherSuite', 'dwKeyType', 'pCipherSuite', 'dwFlags'], 'SECURITY_STATUS'), 'SslOpenPrivateKey': (4, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE*', 'PCCERT_CONTEXT', 'DWORD'], ['hSslProvider', 'phPrivateKey', 'pCertContext', 'dwFlags'], 'SECURITY_STATUS'), 'SslOpenProvider': (3, ['NCRYPT_PROV_HANDLE*', 'LPCWSTR', 'DWORD'], ['phSslProvider', 'pszProviderName', 'dwFlags'], 'SECURITY_STATUS'), 'SslSignHash': (8, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE', 'PBYTE', 'DWORD', 'PBYTE', 'DWORD', 'DWORD*', 'DWORD'], ['hSslProvider', 'hPrivateKey', 'pbHashValue', 'cbHashValue', 'pbSignature', 'cbSignature', 'pcbResult', 'dwFlags'], 'SECURITY_STATUS'), 'SslVerifySignature': (7, ['NCRYPT_PROV_HANDLE', 'NCRYPT_KEY_HANDLE', 'PBYTE', 'DWORD', 'PBYTE', 'DWORD', 'DWORD'], ['hSslProvider', 'hPublicKey', 'pbHashValue', 'cbHashValue', 'pbSignature', 'cbSignature', 'dwFlags'], 'SECURITY_STATUS'), 'NCryptCreateProtectionDescriptor': (3, ['LPCWSTR', 'DWORD', 'NCRYPT_DESCRIPTOR_HANDLE*'], ['pwszDescriptorString', 'dwFlags', 'phDescriptor'], 'NTSTATUS'), 'NCryptCloseProtectionDescriptor': (1, ['NCRYPT_DESCRIPTOR_HANDLE'], ['hDescriptor'], 'NTSTATUS'), 'NCryptGetProtectionDescriptorInfo': (4, ['NCRYPT_DESCRIPTOR_HANDLE', 'CONST NCRYPT_ALLOC_PARA*', 'DWORD', 'VOID*'], ['hDescriptor', 'pMemPara', 'dwInfoType', 'ppvInfo'], 'NTSTATUS'), 'NCryptProtectSecret': (8, ['NCRYPT_DESCRIPTOR_HANDLE', 'DWORD', 'CONST BYTE*', 'ULONG', 'CONST NCRYPT_ALLOC_PARA*', 'HWND', 'BYTE**', 'ULONG*'], ['hDescriptor', 'dwFlags', 'pbData', 'cbData', 'pMemPara', 'hWnd', 'ppbProtectedBlob', 'pcbProtectedBlob'], 'NTSTATUS'), 'NCryptQueryProtectionDescriptorName': (4, ['LPCWSTR', 'LPWSTR', 'SIZE_T*', 'DWORD'], ['pwszName', 'pwszDescriptorString', 'pcDescriptorString', 'dwFlags'], 'NTSTATUS'), 'NCryptRegisterProtectionDescriptorName': (3, ['LPCWSTR', 'LPCWSTR', 'DWORD'], ['pwszName', 'pwszDescriptorString', 'dwFlags'], 'NTSTATUS'), 'NCryptStreamClose': (1, ['NCRYPT_STREAM_HANDLE'], ['hStream'], 'NTSTATUS'), 'NCryptStreamOpenToProtect': (5, ['NCRYPT_DESCRIPTOR_HANDLE', 'DWORD', 'HWND', 'NCRYPT_PROTECT_STREAM_INFO*', 'NCRYPT_STREAM_HANDLE*'], ['hDescriptor', 'dwFlags', 'hWnd', 'pStreamInfo', 'phStream'], 'NTSTATUS'), 'NCryptStreamOpenToUnprotect': (4, ['NCRYPT_PROTECT_STREAM_INFO*', 'DWORD', 'HWND', 'NCRYPT_STREAM_HANDLE*'], ['pStreamInfo', 'dwFlags', 'hWnd', 'phStream'], 'NTSTATUS'), 'NCryptStreamUpdate': (4, ['NCRYPT_STREAM_HANDLE', 'CONST BYTE*', 'SIZE_T', 'BOOL'], ['hStream', 'pbData', 'cbData', 'fFinal'], 'NTSTATUS'), 'NCryptUnprotectSecret': (8, ['NCRYPT_DESCRIPTOR_HANDLE*', 'DWORD', 'CONST BYTE*', 'ULONG', 'CONST NCRYPT_ALLOC_PARA*', 'HWND', 'BYTE**', 'ULONG*'], ['phDescriptor', 'dwFlags', 'pbProtectedBlob', 'cbProtectedBlob', 'pMemPara', 'hWnd', 'ppbData', 'pcbData'], 'NTSTATUS')}

dict5_netapi32 = {'DsAddressToSiteNames': (4, ['LPCTSTR', 'DWORD', 'PSOCKET_ADDRESS', 'LPTSTR**'], ['ComputerName', 'EntryCount', 'SocketAddresses', 'SiteNames'], '[ERROR_CODE]'), 'DsAddressToSiteNamesEx': (5, ['LPCTSTR', 'DWORD', 'PSOCKET_ADDRESS', 'LPTSTR**', 'LPTSTR**'], ['ComputerName', 'EntryCount', 'SocketAddresses', 'SiteNames', 'SubnetNames'], '[ERROR_CODE]'), 'DsDeregisterDnsHostRecords': (5, ['LPTSTR', 'LPTSTR', 'GUID*', 'GUID*', 'LPTSTR'], ['ServerName', 'DnsDomainName', 'DomainGuid', 'DsaGuid', 'DnsHostName'], '[ERROR_CODE]'), 'DsEnumerateDomainTrusts': (4, ['LPTSTR', 'ULONG', 'PDS_DOMAIN_TRUSTS*', 'PULONG'], ['ServerName', 'Flags', 'Domains', 'DomainCount'], '[ERROR_CODE]'), 'DsGetDcCloseW': (1, ['HANDLE'], ['GetDcContextHandle'], 'void'), 'DsGetDcName': (6, ['LPCTSTR', 'LPCTSTR', 'GUID*', 'LPCTSTR', 'DSGETDCNAMEFLAGS', 'PDOMAIN_CONTROLLER_INFO*'], ['ComputerName', 'DomainName', 'DomainGuid', 'SiteName', 'Flags', 'DomainControllerInfo'], '[ERROR_CODE]'), 'DsGetDcNext': (4, ['HANDLE', 'PULONG', 'LPSOCKET_ADDRESS*', 'LPTSTR*'], ['GetDcContextHandle', 'SockAddressCount', 'SockAddresses', 'DnsHostName'], '[ERROR_CODE]'), 'DsGetDcOpen': (7, ['LPCTSTR', 'ULONG', 'LPCTSTR', 'GUID*', 'LPCTSTR', 'ULONG', 'PHANDLE'], ['DnsName', 'OptionFlags', 'SiteName', 'DomainGuid', 'DnsForestName', 'DcFlags', 'RetGetDcContext'], '[ERROR_CODE]'), 'DsGetDcSiteCoverage': (3, ['LPCTSTR', 'PULONG', 'LPTSTR**'], ['ServerName', 'EntryCount', 'SiteNames'], '[ERROR_CODE]'), 'DsGetForestTrustInformationW': (4, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'PLSA_FOREST_TRUST_INFORMATION*'], ['ServerName', 'TrustedDomainName', 'Flags', 'ForestTrustInfo'], '[ERROR_CODE]'), 'DsGetSiteName': (2, ['LPCTSTR', 'LPTSTR*'], ['ComputerName', 'SiteName'], '[ERROR_CODE]'), 'DsMergeForestTrustInformationW': (4, ['LPCWSTR', 'PLSA_FOREST_TRUST_INFORMATION', 'PLSA_FOREST_TRUST_INFORMATION', 'PLSA_FOREST_TRUST_INFORMATION*'], ['DomainName', 'NewForestTrustInfo', 'OldForestTrustInfo', 'ForestTrustInfo'], 'void'), 'DsRoleFreeMemory': (1, ['PVOID'], ['Buffer'], 'void'), 'DsRoleGetPrimaryDomainInformation': (3, ['LPCWSTR', 'DSROLE_PRIMARY_DOMAIN_INFO_LEVEL', 'PBYTE*'], ['lpServer', 'InfoLevel', 'Buffer'], '[ERROR_CODE]'), 'DsValidateSubnetName': (1, ['LPCTSTR'], ['SubnetName'], '[ERROR_CODE]'), 'NetAlertRaise': (3, ['LPCWSTR', 'LPVOID', 'DWORD'], ['AlertEventName', 'Buffer', 'BufferSize'], 'NET_API_STATUS'), 'NetAlertRaiseEx': (4, ['LPCWSTR', 'LPVOID', 'DWORD', 'LPCWSTR'], ['AlertEventName', 'VariableInfo', 'VariableInfoSize', 'ServiceName'], 'NET_API_STATUS'), 'NetapipBufferAllocate': (2, ['DWORD', 'LPVOID*'], ['ByteCount', 'Buffer'], 'NET_API_STATUS'), 'NetApiBufferAllocate': (2, ['DWORD', 'LPVOID*'], ['ByteCount', 'Buffer'], 'NET_API_STATUS'), 'NetApiBufferFree': (1, ['LPVOID'], ['Buffer'], 'NET_API_STATUS'), 'NetApiBufferReallocate': (3, ['LPVOID', 'DWORD', 'LPVOID*'], ['OldBuffer', 'NewByteCount', 'NewBuffer'], 'NET_API_STATUS'), 'NetApiBufferSize': (2, ['LPVOID', 'LPDWORD'], ['Buffer', 'ByteCount'], 'NET_API_STATUS'), 'NetAddAlternateComputerName': (5, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'ULONG'], ['Server', 'AlternateName', 'DomainAccount', 'DomainAccountPassword', 'Reserved'], 'NET_API_STATUS'), 'NetEnumerateComputerNames': (5, ['LPCWSTR', 'NET_COMPUTER_NAME_TYPE', 'ULONG', 'PDWORD', 'LPWSTR**'], ['Server', 'NameType', 'Reserved', 'EntryCount', 'ComputerNames'], 'NET_API_STATUS'), 'NetGetJoinableOUs': (6, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'DWORD*', 'LPWSTR**'], ['lpServer', 'lpDomain', 'lpAccount', 'lpPassword', 'OUCount', 'OUs'], 'NET_API_STATUS'), 'NetGetJoinInformation': (3, ['LPCWSTR', 'LPWSTR*', 'PNETSETUP_JOIN_STATUS'], ['lpServer', 'lpNameBuffer', 'BufferType'], 'NET_API_STATUS'), 'NetJoinDomain': (6, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'DWORD'], ['lpServer', 'lpDomain', 'lpAccountOU', 'lpAccount', 'lpPassword', 'fJoinOptions'], 'NET_API_STATUS'), 'NetLogonSetServiceBits': (3, ['LPWSTR', 'DWORD', 'DWORD'], ['ServerName', 'ServiceBitsOfInterest', 'ServiceBits'], 'NET_API_STATUS'), 'NetProvisionComputerAccount': (8, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'NETSETUP_PROVISION_OPTIONS', 'PBYTE', 'DWORD', 'LPWSTR'], ['lpDomain', 'lpMachineName', 'lpMachineAccountOU', 'lpDcName', 'dwOptions', 'pProvisionBinData', 'pdwProvisionBinDataSize', 'pProvisionTextData'], 'NET_API_STATUS'), 'NetRemoveAlternateComputerName': (5, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'ULONG'], ['Server', 'AlternateName', 'DomainAccount', 'DomainAccountPassword', 'Reserved'], 'NET_API_STATUS'), 'NetRenameMachineInDomain': (5, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'DWORD'], ['lpServer', 'lpNewMachineName', 'lpAccount', 'lpPassword', 'fRenameOptions'], 'NET_API_STATUS'), 'NetRequestOfflineDomainJoin': (4, ['BYTE*', 'DWORD', 'DWORD', 'LPCWSTR'], ['pProvisionBinData', 'cbProvisionBinDataSize', 'dwOptions', 'lpWindowsPath'], 'NET_API_STATUS'), 'NetSetPrimaryComputerName': (5, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'ULONG'], ['Server', 'PrimaryName', 'DomainAccount', 'DomainAccountPassword', 'Reserved'], 'NET_API_STATUS'), 'NetUnjoinDomain': (4, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'DWORD'], ['lpServer', 'lpAccount', 'lpPassword', 'fUnjoinOptions'], 'NET_API_STATUS'), 'NetValidateName': (5, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'NETSETUP_NAME_TYPE'], ['lpServer', 'lpName', 'lpAccount', 'lpPassword', 'NameType'], 'NET_API_STATUS'), 'NetCreateProvisioningPackage': (4, ['PNETSETUP_PROVISIONING_PARAMS', 'PBYTE*', 'DWORD*', 'LPWSTR*'], ['pProvisioningParams', 'pPackageBinData', 'pdwPackageBinDataSize', 'pPackageTextData'], 'NET_API_STATUS'), 'NetRequestProvisioningPackageInstall': (5, ['BYTE*', 'DWORD', 'DWORD', 'LPCWSTR', 'PVOID'], ['pPackageBinData', 'dwPackageBinDataSize', 'dwProvisionOptions', 'lpWindowsPath', 'pvReserved'], 'NET_API_STATUS'), 'NetGetAnyDCName': (3, ['LPCWSTR', 'LPCWSTR', 'LPBYTE*'], ['servername', 'domainname', 'bufptr'], 'NET_API_STATUS'), 'NetGetDCName': (3, ['LPCWSTR', 'LPCWSTR', 'LPBYTE*'], ['servername', 'domainname', 'bufptr'], 'NET_API_STATUS'), 'NetGetDisplayInformationIndex': (4, ['LPCWSTR', 'DWORD', 'LPCWSTR', 'LPDWORD'], ['ServerName', 'Level', 'Prefix', 'Index'], 'NET_API_STATUS'), 'NetQueryDisplayInformation': (7, ['LPCWSTR', 'DWORD', 'DWORD', 'DWORD', 'DWORD', 'LPDWORD', 'PVOID*'], ['ServerName', 'Level', 'Index', 'EntriesRequested', 'PreferredMaximumLength', 'ReturnedEntryCount', 'SortedBuffer'], 'NET_API_STATUS'), 'NetGroupAdd': (4, ['LPCWSTR', 'DWORD', 'LPBYTE', 'LPDWORD'], ['servername', 'level', 'buf', 'parm_err'], 'NET_API_STATUS'), 'NetGroupAddUser': (3, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR'], ['servername', 'GroupName', 'username'], 'NET_API_STATUS'), 'NetGroupDel': (2, ['LPCWSTR', 'LPCWSTR'], ['servername', 'groupname'], 'NET_API_STATUS'), 'NetGroupDelUser': (3, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR'], ['servername', 'GroupName', 'Username'], 'NET_API_STATUS'), 'NetGroupEnum': (7, ['LPCWSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'PDWORD_PTR'], ['servername', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resume_handle'], 'NET_API_STATUS'), 'NetGroupGetInfo': (4, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE*'], ['servername', 'groupname', 'level', 'bufptr'], 'NET_API_STATUS'), 'NetGroupGetUsers': (8, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'PDWORD_PTR'], ['servername', 'groupname', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'ResumeHandle'], 'NET_API_STATUS'), 'NetGroupSetInfo': (5, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE', 'LPDWORD'], ['servername', 'groupname', 'level', 'buf', 'parm_err'], 'NET_API_STATUS'), 'NetGroupSetUsers': (5, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE', 'DWORD'], ['servername', 'groupname', 'level', 'buf', 'totalentries'], 'NET_API_STATUS'), 'NetLocalGroupAdd': (4, ['LPCWSTR', 'DWORD', 'LPBYTE', 'LPDWORD'], ['servername', 'level', 'buf', 'parm_err'], 'NET_API_STATUS'), 'NetLocalGroupAddMembers': (5, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE', 'DWORD'], ['servername', 'groupname', 'level', 'buf', 'totalentries'], 'NET_API_STATUS'), 'NetLocalGroupDel': (2, ['LPCWSTR', 'LPCWSTR'], ['servername', 'groupname'], 'NET_API_STATUS'), 'NetLocalGroupDelMembers': (5, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE', 'DWORD'], ['servername', 'groupname', 'level', 'buf', 'totalentries'], 'NET_API_STATUS'), 'NetLocalGroupEnum': (7, ['LPCWSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'PDWORD_PTR'], ['servername', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resumehandle'], 'NET_API_STATUS'), 'NetLocalGroupGetInfo': (4, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE*'], ['servername', 'groupname', 'level', 'bufptr'], 'NET_API_STATUS'), 'NetLocalGroupGetMembers': (8, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'PDWORD_PTR'], ['servername', 'localgroupname', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resumehandle'], 'NET_API_STATUS'), 'NetLocalGroupSetInfo': (5, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE', 'LPDWORD'], ['servername', 'groupname', 'level', 'buf', 'parm_err'], 'NET_API_STATUS'), 'NetLocalGroupSetMembers': (5, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE', 'DWORD'], ['servername', 'groupname', 'level', 'buf', 'totalentries'], 'NET_API_STATUS'), 'NetMessageBufferSend': (5, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LPBYTE', 'DWORD'], ['servername', 'msgname', 'fromname', 'buf', 'buflen'], 'NET_API_STATUS'), 'NetMessageNameAdd': (2, ['LPCWSTR', 'LPCWSTR'], ['servername', 'msgname'], 'NET_API_STATUS'), 'NetMessageNameDel': (2, ['LPCWSTR', 'LPCWSTR'], ['servername', 'msgname'], 'NET_API_STATUS'), 'NetMessageNameEnum': (7, ['LPCWSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['servername', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resume_handle'], 'NET_API_STATUS'), 'NetMessageNameGetInfo': (4, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE*'], ['servername', 'msgname', 'level', 'bufptr'], 'NET_API_STATUS'), 'NetRemoteComputerSupports': (3, ['LPCWSTR', 'DWORD', 'LPDWORD'], ['UncServerName', 'OptionsWanted', 'OptionsSupported'], 'NET_API_STATUS'), 'NetRemoteTOD': (2, ['LPCWSTR', 'LPBYTE*'], ['UncServerName', 'BufferPtr'], 'NET_API_STATUS'), 'NetScheduleJobAdd': (3, ['LPCWSTR', 'LPBYTE', 'LPDWORD'], ['Servername', 'Buffer', 'JobId'], 'NET_API_STATUS'), 'NetScheduleJobDel': (3, ['LPCWSTR', 'DWORD', 'DWORD'], ['Servername', 'MinJobId', 'MaxJobId'], 'NET_API_STATUS'), 'NetScheduleJobEnum': (6, ['LPCWSTR', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['Servername', 'PointerToBuffer', 'PreferredMaximumLength', 'EntriesRead', 'TotalEntries', 'ResumeHandle'], 'NET_API_STATUS'), 'NetScheduleJobGetInfo': (3, ['LPCWSTR', 'DWORD', 'LPBYTE*'], ['Servername', 'JobId', 'PointerToBuffer'], 'NET_API_STATUS'), 'NetServerDiskEnum': (7, ['LPWSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['servername', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resume_handle'], 'NET_API_STATUS'), 'NetServerEnum': (9, ['LPCWSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'SERVERTYPE', 'LPCWSTR', 'LPDWORD'], ['servername', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'servertype', 'domain', 'resume_handle'], 'NET_API_STATUS'), 'NetServerEnumEx': (9, ['LPCWSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'SERVERTYPE', 'LPCWSTR', 'LPCWSTR'], ['ServerName', 'Level', 'Bufptr', 'PrefMaxlen', 'EntriesRead', 'totalentries', 'servertype', 'domain', 'FirstNameToReturn'], 'NET_API_STATUS'), 'NetServerGetInfo': (3, ['LPWSTR', 'DWORD', 'LPBYTE*'], ['servername', 'level', 'bufptr'], 'NET_API_STATUS'), 'NetServerSetInfo': (4, ['LPWSTR', 'DWORD', 'LPBYTE', 'LPDWORD'], ['servername', 'level', 'buf', 'ParmError'], 'NET_API_STATUS'), 'NetServerSetInfoCommandLine': (2, ['WORD', 'LMSTR '], ['argc', 'argv'], 'NET_API_STATUS'), 'NetServerComputerNameAdd': (3, ['LPWSTR', 'LPWSTR', 'LPWSTR'], ['ServerName', 'EmulatedDomainName', 'EmulatedServerName'], 'NET_API_STATUS'), 'NetServerComputerNameDel': (2, ['LPWSTR', 'LPWSTR'], ['ServerName', 'EmulatedServerName'], 'NET_API_STATUS'), 'NetServerTransportAdd': (3, ['LPWSTR', 'DWORD', 'LPBYTE'], ['servername', 'level', 'bufptr'], 'NET_API_STATUS'), 'NetServerTransportAddEx': (3, ['LPWSTR', 'DWORD', 'LPBYTE'], ['servername', 'level', 'bufptr'], 'NET_API_STATUS'), 'NetServerTransportDel': (3, ['LPWSTR', 'DWORD', 'LPBYTE'], ['servername', 'level', 'bufptr'], 'NET_API_STATUS'), 'NetServerTransportEnum': (7, ['LPWSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['servername', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resumehandle'], 'NET_API_STATUS'), 'NetWkstaTransportEnum': (7, ['LPWSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['servername', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resumehandle'], 'NET_API_STATUS'), 'NetUseAdd': (4, ['LMSTR', 'DWORD', 'LPBYTE', 'LPDWORD'], ['UncServerName', 'Level', 'Buf', 'ParmError'], 'NET_API_STATUS'), 'NetUseDel': (3, ['LMSTR', 'LMSTR', 'DWORD'], ['UncServerName', 'UseName', 'ForceCond'], 'NET_API_STATUS'), 'NetUseEnum': (7, ['LMSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['UncServerName', 'Level', 'BufPtr', 'PreferedMaximumSize', 'EntriesRead', 'TotalEntries', 'ResumeHandle'], 'NET_API_STATUS'), 'NetUseGetInfo': (4, ['LMSTR', 'LMSTR', 'DWORD', 'LPBYTE*'], ['UncServerName', 'UseName', 'Level', 'BufPtr'], 'NET_API_STATUS'), 'NetUserAdd': (4, ['LMSTR', 'DWORD', 'LPBYTE', 'LPDWORD'], ['servername', 'level', 'buf', 'parm_err'], 'NET_API_STATUS'), 'NetUserChangePassword': (4, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR'], ['domainname', 'username', 'oldpassword', 'newpassword'], 'NET_API_STATUS'), 'NetUserDel': (2, ['LPCWSTR', 'LPCWSTR'], ['servername', 'username'], 'NET_API_STATUS'), 'NetUserEnum': (8, ['LPCWSTR', 'DWORD', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['servername', 'level', 'filter', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resume_handle'], 'NET_API_STATUS'), 'NetUserGetGroups': (7, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD'], ['servername', 'username', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries'], 'NET_API_STATUS'), 'NetUserGetInfo': (4, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE*'], ['servername', 'username', 'level', 'bufptr'], 'NET_API_STATUS'), 'NetUserGetLocalGroups': (8, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'NETUSERGETLOCALGROUPSFLAGS', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD'], ['servername', 'username', 'level', 'flags', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries'], 'NET_API_STATUS'), 'NetUserSetGroups': (5, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE', 'DWORD'], ['servername', 'username', 'level', 'buf', 'num_entries'], 'NET_API_STATUS'), 'NetUserSetInfo': (5, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE', 'LPDWORD'], ['servername', 'username', 'level', 'buf', 'parm_err'], 'NET_API_STATUS'), 'NetUserModalsGet': (3, ['LPCWSTR', 'DWORD', 'LPBYTE*'], ['servername', 'level', 'bufptr'], 'NET_API_STATUS'), 'NetUserModalsSet': (4, ['LPCWSTR', 'DWORD', 'LPBYTE', 'LPDWORD'], ['servername', 'level', 'buf', 'parm_err'], 'NET_API_STATUS'), 'NetValidatePasswordPolicyFree': (1, ['LPVOID*'], ['OutputArg'], 'NET_API_STATUS'), 'NetValidatePasswordPolicy': (5, ['LPCWSTR', 'LPVOID', 'NET_VALIDATE_PASSWORD_TYPE', 'LPVOID', 'LPVOID'], ['ServerName', 'Qualifier', 'ValidationType', 'InputArg', 'OutputArg'], 'NET_API_STATUS'), 'NetWkstaGetInfo': (3, ['LPWSTR', 'DWORD', 'LPBYTE*'], ['servername', 'level', 'bufptr'], 'NET_API_STATUS'), 'NetWkstaSetInfo': (4, ['LPWSTR', 'DWORD', 'LPBYTE', 'LPDWORD'], ['servername', 'level', 'buffer', 'parm_err'], 'NET_API_STATUS'), 'NetWkstaUserEnum': (7, ['LPWSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['servername', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resumehandle'], 'NET_API_STATUS'), 'NetWkstaUserGetInfo': (3, ['LPWSTR', 'DWORD', 'LPBYTE*'], ['reserved', 'level', 'bufptr'], 'NET_API_STATUS'), 'NetWkstaUserSetInfo': (4, ['LPWSTR', 'DWORD', 'LPBYTE', 'LPDWORD'], ['reserved', 'level', 'buf', 'parm_err'], 'NET_API_STATUS'), 'NetAddServiceAccount': (4, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'DWORD'], ['ServerName', 'AccountName', 'Reserved', 'Flags'], 'NTSTATUS'), 'NetEnumerateServiceAccounts': (4, ['LPWSTR', 'DWORD', 'DWORD*', 'PZPWSTR*'], ['ServerName', 'Flags', 'AccountsCount', 'Accounts'], 'NTSTATUS'), 'NetIsServiceAccount': (3, ['LPWSTR', 'LPWSTR', 'BOOL*'], ['ServerName', 'AccountName', 'IsService'], 'NTSTATUS'), 'NetRemoveServiceAccount': (3, ['LPWSTR', 'LPWSTR', 'DWORD'], ['ServerName', 'AccountName', 'Flags'], 'NTSTATUS'), 'DavAddConnection': (6, ['HANDLE*', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'PBYTE', 'DWORD'], ['ConnectionHandle', 'RemoteName', 'UserName', 'Password', 'ClientCert', 'CertSize'], '[ERROR_CODE]'), 'DavDeleteConnection': (1, ['HANDLE'], ['ConnectionHandle'], '[ERROR_CODE]'), 'DavFlushFile': (1, ['HANDLE'], ['hFile'], '[ERROR_CODE]'), 'DavGetExtendedError': (4, ['HANDLE', 'DWORD*', 'LPWSTR', 'DWORD*'], ['hFile', 'ExtError', 'ExtErrorString', 'cChSize'], '[ERROR_CODE]'), 'DavGetHTTPFromUNCPath': (3, ['LPCWSTR', 'LPWSTR', 'LPDWORD'], ['UncPath', 'HttpPath', 'lpSize'], '[ERROR_CODE]'), 'DavGetUNCFromHTTPPath': (3, ['LPCWSTR', 'LPWSTR', 'LPDWORD'], ['HttpPath', 'UncPath', 'lpSize'], '[ERROR_CODE]'), 'NetFileClose': (2, ['LMSTR', 'DWORD'], ['servername', 'fileid'], 'NET_API_STATUS'), 'NetFileEnum': (9, ['LMSTR', 'LMSTR', 'LMSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'PDWORD_PTR'], ['servername', 'basepath', 'username', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resume_handle'], 'NET_API_STATUS'), 'NetFileGetInfo': (4, ['LMSTR', 'DWORD', 'DWORD', 'LPBYTE*'], ['servername', 'fileid', 'level', 'bufptr'], 'NET_API_STATUS'), 'NetSessionDel': (3, ['LPWSTR', 'LPWSTR', 'LPWSTR'], ['servername', 'UncClientName', 'username'], 'NET_API_STATUS'), 'NetSessionEnum': (9, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['servername', 'UncClientName', 'username', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resume_handle'], 'NET_API_STATUS'), 'NetSessionGetInfo': (5, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'DWORD', 'LPBYTE*'], ['servername', 'UncClientName', 'username', 'level', 'bufptr'], 'NET_API_STATUS'), 'NetConnectionEnum': (8, ['LMSTR', 'LMSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['servername', 'qualifier', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resume_handle'], 'NET_API_STATUS'), 'NetShareAdd': (4, ['LPWSTR', 'DWORD', 'LPBYTE', 'LPDWORD'], ['servername', 'level', 'buf', 'parm_err'], 'NET_API_STATUS'), 'NetShareCheck': (3, ['LPWSTR', 'LPWSTR', 'LPDWORD'], ['servername', 'device', 'type'], 'NET_API_STATUS'), 'NetShareDel': (3, ['LMSTR', 'LMSTR', 'DWORD'], ['servername', 'netname', 'reserved'], 'NET_API_STATUS'), 'NetShareDelSticky': (3, ['LMSTR', 'LMSTR', 'DWORD'], ['servername', 'netname', 'reserved'], 'NET_API_STATUS'), 'NetShareDelEx': (3, ['LMSTR', 'DWORD', 'LPBYTE'], ['servername', 'level', 'buf'], 'NET_API_STATUS'), 'NetShareEnum': (7, ['LPWSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['servername', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resume_handle'], 'NET_API_STATUS'), 'NetShareEnumSticky': (7, ['LMSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['servername', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resume_handle'], 'NET_API_STATUS'), 'NetShareGetInfo': (4, ['LPWSTR', 'LPWSTR', 'DWORD', 'LPBYTE*'], ['servername', 'netname', 'level', 'bufptr'], 'NET_API_STATUS'), 'NetShareSetInfo': (5, ['LPWSTR', 'LPWSTR', 'DWORD', 'LPBYTE', 'LPDWORD'], ['servername', 'netname', 'level', 'buf', 'parm_err'], 'NET_API_STATUS'), 'NetStatisticsGet': (5, ['LPWSTR', 'LPWSTR', 'DWORD', 'DWORD', 'LPBYTE*'], ['server', 'service', 'level', 'options', 'bufptr'], 'NET_API_STATUS'), 'NetAccessAdd': (4, ['LPCWSTR', 'DWORD', 'LPBYTE', 'LPDWORD'], ['servername', 'level', 'buf', 'parm_err'], 'NET_API_STATUS'), 'NetAccessCheck': (5, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'DWORD', 'LPDWORD'], ['reserved', 'userName', 'resource', 'operation', 'result'], 'NET_API_STATUS'), 'NetAccessDel': (2, ['LPCWSTR', 'LPCWSTR'], ['servername', 'resource'], 'NET_API_STATUS'), 'NetAccessEnum': (9, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['servername', 'BasePath', 'Recursive', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resume_handle'], 'NET_API_STATUS'), 'NetAccessGetInfo': (4, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE*'], ['servername', 'resource', 'level', 'bufptr'], 'NET_API_STATUS'), 'NetAccessGetUserPerms': (4, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LPDWORD'], ['servername', 'UGname', 'resource', 'Perms'], 'NET_API_STATUS'), 'NetAccessSetInfo': (5, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE', 'LPDWORD'], ['servername', 'resource', 'level', 'buf', 'parm_err'], 'NET_API_STATUS'), 'NetAuditClear': (3, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR'], ['server', 'backupfile', 'service'], 'NET_API_STATUS'), 'NetAuditRead': (11, ['LPCWSTR', 'LPCWSTR', 'LPHLOG', 'DWORD', 'LPDWORD', 'DWORD', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD'], ['server', 'service', 'auditloghandle', 'offset', 'reserved1', 'reserved2', 'offsetflag', 'bufptr', 'prefmaxlen', 'bytesread', 'totalavailable'], 'NET_API_STATUS'), 'NetAuditWrite': (5, ['DWORD', 'LPBYTE', 'DWORD', 'LPCWSTR', 'LPBYTE'], ['type', 'buf', 'numbytes', 'service', 'reserved'], 'NET_API_STATUS'), 'NetConfigGet': (5, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LPBYTE*', 'LPDWORD'], ['server', 'component', 'parameter', 'bufptr', 'totalavailable'], 'NET_API_STATUS'), 'NetConfigGetAll': (4, ['LPCWSTR', 'LPCWSTR', 'LPBYTE*', 'LPDWORD'], ['server', 'component', 'bufptr', 'totalavailable'], 'NET_API_STATUS'), 'NetConfigSet': (7, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'DWORD', 'DWORD', 'LPBYTE', 'DWORD'], ['server', 'reserved1', 'component', 'level', 'reserved2', 'buf', 'reserved3'], 'NET_API_STATUS'), 'NetErrorLogClear': (3, ['LPCWSTR', 'LPCWSTR', 'LPBYTE'], ['UncServerName', 'BackupFile', 'Reserved'], 'NET_API_STATUS'), 'NetErrorLogRead': (11, ['LPCWSTR', 'LPWSTR', 'LPHLOG', 'DWORD', 'LPDWORD', 'DWORD', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD'], ['UncServerName', 'Reserved1', 'ErrorLogHandle', 'Offset', 'Reserved2', 'Reserved3', 'OffsetFlag', 'BufPtr', 'PrefMaxSize', 'BytesRead', 'TotalAvailable'], 'NET_API_STATUS'), 'NetErrorLogWrite': (8, ['LPBYTE', 'DWORD', 'LPCWSTR', 'LPBYTE', 'DWORD', 'LPBYTE', 'DWORD', 'LPBYTE'], ['Reserved1', 'Code', 'Component', 'Buffer', 'NumBytes', 'MsgBuf', 'StrCount', 'Reserved2'], 'NET_API_STATUS'), 'NetLocalGroupAddMember': (3, ['LPCWSTR', 'LPCWSTR', 'PSID'], ['servername', 'groupname', 'membersid'], 'NET_API_STATUS'), 'NetLocalGroupDelMember': (3, ['LPCWSTR', 'LPCWSTR', 'PSID'], ['servername', 'groupname', 'membersid'], 'NET_API_STATUS'), 'NetServiceControl': (5, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'DWORD', 'LPBYTE*'], ['servername', 'service', 'opcode', 'arg', 'bufptr'], 'NET_API_STATUS'), 'NetServiceEnum': (7, ['LPCWSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['servername', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resume_handle'], 'NET_API_STATUS'), 'NetServiceGetInfo': (4, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPBYTE*'], ['servername', 'service', 'level', 'bufptr'], 'NET_API_STATUS'), 'NetServiceInstall': (5, ['LPCWSTR', 'LPCWSTR', 'DWORD', 'LPCWSTR ', 'LPBYTE*'], ['servername', 'service', 'argc', 'argv', 'bufptr'], 'NET_API_STATUS'), 'NetWkstaTransportAdd': (4, ['LMSTR', 'DWORD', 'LPBYTE', 'LPDWORD'], ['servername', 'level', 'buf', 'parm_err'], 'NET_API_STATUS'), 'NetWkstaTransportDel': (3, ['LMSTR', 'LMSTR', 'DWORD'], ['servername', 'transportname', 'ucond'], 'NET_API_STATUS'), 'NetDfsAdd': (5, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'LPWSTR', 'DFS_FLAG'], ['DfsEntryPath', 'ServerName', 'PathName', 'Comment', 'Flags'], 'NET_API_STATUS'), 'NetDfsAddFtRoot': (5, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'LPWSTR', 'DWORD'], ['ServerName', 'RootShare', 'FtDfsName', 'Comment', 'Flags'], 'NET_API_STATUS'), 'NetDfsAddRootTarget': (5, ['LPWSTR', 'LPWSTR', 'ULONG', 'LPWSTR', 'ULONG'], ['pDfsPath', 'pTargetPath', 'MajorVersion', 'pComment', 'Flags'], 'NET_API_STATUS'), 'NetDfsAddStdRoot': (4, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'DWORD'], ['ServerName', 'RootShare', 'Comment', 'Flags'], 'NET_API_STATUS'), 'NetDfsAddStdRootForced': (4, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'LPWSTR'], ['ServerName', 'RootShare', 'Comment', 'Store'], 'NET_API_STATUS'), 'NetDfsEnum': (6, ['LPWSTR', 'DWORD', 'DWORD', 'LPBYTE*', 'LPDWORD', 'LPDWORD'], ['DfsName', 'Level', 'PrefMaxLen', 'Buffer', 'EntriesRead', 'ResumeHandle'], 'NET_API_STATUS'), 'NetDfsGetClientInfo': (5, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'DWORD', 'LPBYTE*'], ['DfsEntryPath', 'ServerName', 'ShareName', 'Level', 'Buffer'], 'NET_API_STATUS'), 'NetDfsGetFtContainerSecurity': (4, ['LPWSTR', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR*', 'LPDWORD'], ['DomainName', 'SecurityInformation', 'ppSecurityDescriptor', 'lpcbSecurityDescriptor'], 'NET_API_STATUS'), 'NetDfsGetInfo': (5, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'DWORD', 'LPBYTE*'], ['DfsEntryPath', 'ServerName', 'ShareName', 'Level', 'Buffer'], 'NET_API_STATUS'), 'NetDfsGetSecurity': (4, ['LPWSTR', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR*', 'LPDWORD'], ['DfsEntryPath', 'SecurityInformation', 'ppSecurityDescriptor', 'lpcbSecurityDescriptor'], 'NET_API_STATUS'), 'NetDfsGetStdContainerSecurity': (4, ['LPWSTR', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR*', 'LPDWORD'], ['MachineName', 'SecurityInformation', 'ppSecurityDescriptor', 'lpcbSecurityDescriptor'], 'NET_API_STATUS'), 'NetDfsGetSupportedNamespaceVersion': (3, ['DFS_NAMESPACE_VERSION_ORIGIN', 'PWSTR', 'PDFS_SUPPORTED_NAMESPACE_VERSION_INFO*'], ['Origin', 'pName', 'ppVersionInfo'], 'NET_API_STATUS'), 'NetDfsManagerInitialize': (2, ['LPWSTR', 'DWORD'], ['ServerName', 'Flags'], 'NET_API_STATUS'), 'NetDfsMove': (3, ['LPWSTR', 'LPWSTR', 'DFS_MOVE_FLAG'], ['Path', 'NewPath', 'Flags'], 'NET_API_STATUS'), 'NetDfsRemove': (3, ['LPWSTR', 'LPWSTR', 'LPWSTR'], ['DfsEntryPath', 'ServerName', 'ShareName'], 'NET_API_STATUS'), 'NetDfsRemoveFtRoot': (4, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'DWORD'], ['ServerName', 'RootShare', 'FtDfsName', 'Flags'], 'NET_API_STATUS'), 'NetDfsRemoveFtRootForced': (5, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'LPWSTR', 'DWORD'], ['DomainName', 'ServerName', 'RootShare', 'FtDfsName', 'Flags'], 'NET_API_STATUS'), 'NetDfsRemoveRootTarget': (3, ['LPWSTR', 'LPWSTR', 'DFS_REMOVE_FLAG'], ['pDfsPath', 'pTargetPath', 'Flags'], 'NET_API_STATUS'), 'NetDfsRemoveStdRoot': (3, ['LPWSTR', 'LPWSTR', 'DWORD'], ['ServerName', 'RootShare', 'Flags'], 'NET_API_STATUS'), 'NetDfsSetClientInfo': (5, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'DWORD', 'LPBYTE'], ['DfsEntryPath', 'ServerName', 'ShareName', 'Level', 'Buffer'], 'NET_API_STATUS'), 'NetDfsSetFtContainerSecurity': (3, ['LPWSTR', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR'], ['DomainName', 'SecurityInformation', 'pSecurityDescriptor'], 'NET_API_STATUS'), 'NetDfsSetInfo': (5, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'DWORD', 'LPBYTE'], ['DfsEntryPath', 'ServerName', 'ShareName', 'Level', 'Buffer'], 'NET_API_STATUS'), 'NetDfsSetSecurity': (3, ['LPWSTR', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR'], ['DfsEntryPath', 'SecurityInformation', 'pSecurityDescriptor'], 'NET_API_STATUS'), 'NetDfsSetStdContainerSecurity': (3, ['LPWSTR', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR'], ['MachineName', 'SecurityInformation', 'pSecurityDescriptor'], 'NET_API_STATUS'), 'NetServerAliasAdd': (3, ['LMSTR', 'DWORD', 'LPBYTE'], ['servername', 'level', 'buf'], 'NET_API_STATUS'), 'NetServerAliasDel': (3, ['LMSTR', 'DWORD', 'LPBYTE'], ['servername', 'level', 'buf'], 'NET_API_STATUS'), 'NetServerAliasEnum': (7, ['LMSTR', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['servername', 'level', 'bufptr', 'prefmaxlen', 'entriesread', 'totalentries', 'resumehandle'], 'NET_API_STATUS')}

dict5_ole32 = {'BindMoniker': (4, ['LPMONIKER', 'DWORD', 'REFIID', 'LPVOID*'], ['pmk', 'grfOpt', 'iidResult', 'ppvResult'], 'HRESULT'), 'CLSIDFromProgID': (2, ['LPCOLESTR', 'LPCLSID'], ['lpszProgID', 'lpclsid'], 'HRESULT'), 'CLSIDFromProgIDEx': (2, ['LPCOLESTR', 'LPCLSID'], ['lpszProgID', 'lpclsid'], 'HRESULT'), 'CLSIDFromString': (2, ['LPCOLESTR', 'LPCLSID'], ['lpsz', 'pclsid'], 'HRESULT'), 'CoAddRefServerProcess': (0, [], [], 'ULONG'), 'CoAllowSetForegroundWindow': (2, ['IUNKNOWN*', 'LPVOID'], ['pUnk', 'lpvReserved'], 'HRESULT'), 'CoCancelCall': (2, ['DWORD', 'ULONG'], ['dwThreadId', 'ulTimeout'], 'HRESULT'), 'CoCopyProxy': (2, ['IUNKNOWN*', 'IUNKNOWN**'], ['pProxy', 'ppCopy'], 'HRESULT'), 'CoCreateFreeThreadedMarshaler': (2, ['LPUNKNOWN', 'LPUNKNOWN*'], ['punkOuter', 'ppunkMarshal'], 'HRESULT'), 'CoCreateGuid': (1, ['GUID*'], ['pguid'], 'HRESULT'), 'CoCreateInstance': (5, ['REFCLSID', 'LPUNKNOWN', 'CLSCTX', 'REFIID', 'LPVOID*'], ['rclsid', 'pUnkOuter', 'dwClsContext', 'riid', 'ppv'], 'HRESULT'), 'CoCreateInstanceEx': (6, ['REFCLSID', 'IUNKNOWN*', 'CLSCTX', 'COSERVERINFO*', 'DWORD', 'MULTI_QI*'], ['rclsid', 'punkOuter', 'dwClsCtx', 'pServerInfo', 'dwCount', 'pResults'], 'HRESULT'), 'CoDisableCallCancellation': (1, ['LPVOID'], ['pReserved'], 'HRESULT'), 'CoDisconnectContext': (1, ['DWORD'], ['dwTimeout'], 'HRESULT'), 'CoDisconnectObject': (2, ['LPUNKNOWN', 'DWORD'], ['pUnk', 'dwReserved'], 'HRESULT'), 'CoDosDateTimeToFileTime': (3, ['WORD', 'WORD', 'FILETIME*'], ['nDosDate', 'nDosTime', 'lpFileTime'], 'BOOL'), 'CoEnableCallCancellation': (1, ['LPVOID'], ['pReserved'], 'HRESULT'), 'CoFileTimeNow': (1, ['FILETIME*'], ['lpFileTime'], 'HRESULT'), 'CoFileTimeToDosDateTime': (3, ['FILETIME*', 'LPWORD', 'LPWORD'], ['lpFileTime', 'lpDosDate', 'lpDosTime'], 'BOOL'), 'CoFreeAllLibraries': (0, [], [], 'void'), 'CoFreeLibrary': (1, ['HINSTANCE'], ['hInst'], 'void'), 'CoFreeUnusedLibraries': (0, [], [], 'void'), 'CoFreeUnusedLibrariesEx': (2, ['DWORD', 'DWORD'], ['dwUnloadDelay', 'dwReserved'], 'void'), 'CoGetApartmentType': (2, ['APTTYPE*', 'APTTYPEQUALIFIER*'], ['pAptType', 'pAptQualifier'], 'HRESULT'), 'CoGetCallContext': (2, ['REFIID', 'VOID**'], ['riid', 'ppInterface'], 'HRESULT'), 'CoGetCallerTID': (1, ['LPDWORD'], ['lpdwTID'], 'HRESULT'), 'CoGetCancelObject': (3, ['DWORD', 'REFIID', 'VOID**'], ['dwThreadId', 'iid', 'ppUnk'], 'HRESULT'), 'CoGetClassObject': (5, ['REFCLSID', 'CLSCTX', 'COSERVERINFO*', 'REFIID', 'LPVOID*'], ['rclsid', 'dwClsContext', 'pServerInfo', 'riid', 'ppv'], 'HRESULT'), 'CoGetContextToken': (1, ['ULONG_PTR*'], ['pToken'], 'HRESULT'), 'CoGetCurrentLogicalThreadId': (1, ['GUID*'], ['pguid'], 'HRESULT'), 'CoGetCurrentProcess': (0, [], [], 'DWORD'), 'CoGetInstanceFromFile': (8, ['COSERVERINFO*', 'CLSID*', 'IUNKNOWN*', 'CLSCTX', 'STGM_FLAGS', 'OLECHAR*', 'DWORD', 'MULTI_QI*'], ['pServerInfo', 'pClsid', 'punkOuter', 'dwClsCtx', 'grfMode', 'pwszName', 'dwCount', 'pResults'], 'HRESULT'), 'CoGetInstanceFromIStorage': (7, ['COSERVERINFO*', 'CLSID*', 'IUNKNOWN*', 'CLSCTX', 'STRUCT ISTORAGE*', 'DWORD', 'MULTI_QI*'], ['pServerInfo', 'pClsid', 'punkOuter', 'dwClsCtx', 'pstg', 'dwCount', 'pResults'], 'HRESULT'), 'CoGetInterceptor': (4, ['REFIID', 'IUNKNOWN*', 'REFIID', 'VOID**'], ['iidIntercepted', 'punkOuter', 'iid', 'ppv'], 'HRESULT'), 'CoGetInterfaceAndReleaseStream': (3, ['LPSTREAM', 'REFIID', 'LPVOID*'], ['pStm', 'iid', 'ppv'], 'HRESULT'), 'CoGetMalloc': (2, ['DWORD', 'LPMALLOC*'], ['dwMemContext', 'ppMalloc'], 'HRESULT'), 'CoGetMarshalSizeMax': (6, ['ULONG*', 'REFIID', 'LPUNKNOWN', 'DWORD', 'LPVOID', 'MSHLFLAGS'], ['pulSize', 'riid', 'pUnk', 'dwDestContext', 'pvDestContext', 'mshlflags'], 'HRESULT'), 'CoGetObject': (4, ['LPCWSTR', 'BIND_OPTS*', 'REFIID', 'VOID**'], ['pszName', 'pBindOptions', 'riid', 'ppv'], 'HRESULT'), 'CoGetObjectContext': (2, ['REFIID', 'LPVOID*'], ['riid', 'ppv'], 'HRESULT'), 'CoGetPSClsid': (2, ['REFIID', 'CLSID*'], ['riid', 'pClsid'], 'HRESULT'), 'CoGetStandardMarshal': (6, ['REFIID', 'LPUNKNOWN', 'DWORD', 'LPVOID', 'MSHLFLAGS', 'LPMARSHAL*'], ['riid', 'pUnk', 'dwDestContext', 'pvDestContext', 'mshlflags', 'ppMarshal'], 'HRESULT'), 'CoGetStdMarshalEx': (3, ['LPUNKNOWN', 'DWORD', 'LPUNKNOWN*'], ['pUnkOuter', 'smexflags', 'ppUnkInner'], 'HRESULT'), 'CoGetTreatAsClass': (2, ['REFCLSID', 'LPCLSID'], ['clsidOld', 'pClsidNew'], 'HRESULT'), 'CoImpersonateClient': (0, [], [], 'HRESULT'), 'CoInitialize': (1, ['LPVOID'], ['pvReserved'], 'HRESULT'), 'CoInitializeEx': (2, ['LPVOID', 'COINIT_FLAG'], ['pvReserved', 'dwCoInit'], 'HRESULT'), 'CoInitializeSecurity': (9, ['PSECURITY_DESCRIPTOR', 'LONG', 'SOLE_AUTHENTICATION_SERVICE*', 'VOID*', 'RPC_C_AUTHN_LEVEL', 'RPC_C_IMP_LEVEL', 'VOID*', 'EOLE_AUTHENTICATION_CAPABILITIES', 'VOID*'], ['pSecDesc', 'cAuthSvc', 'asAuthSvc', 'pReserved1', 'dwAuthnLevel', 'dwImpLevel', 'pAuthList', 'dwCapabilities', 'pReserved3'], 'HRESULT'), 'CoInstall': (5, ['IBINDCTX*', 'DWORD', 'UCLSSPEC*', 'QUERYCONTEXT*', 'LPWSTR'], ['pbc', 'dwFlags', 'pClassSpec', 'pQuery', 'pszCodeBase'], 'HRESULT'), 'CoInvalidateRemoteMachineBindings': (1, ['LPOLESTR'], ['pszMachineName'], 'HRESULT'), 'CoIsHandlerConnected': (1, ['LPUNKNOWN'], ['pUnk'], 'BOOL'), 'CoIsOle1Class': (1, ['REFCLSID'], ['rclsid'], 'BOOL'), 'CoLoadLibrary': (2, ['LPOLESTR', 'BOOL'], ['lpszLibName', 'bAutoFree'], 'HINSTANCE'), 'CoLockObjectExternal': (3, ['LPUNKNOWN', 'BOOL', 'BOOL'], ['pUnk', 'fLock', 'fLastUnlockReleases'], 'HRESULT'), 'CoMarshalHresult': (2, ['LPSTREAM', 'HRESULT'], ['pstm', 'hresult'], 'HRESULT'), 'CoMarshalInterface': (6, ['LPSTREAM', 'REFIID', 'LPUNKNOWN', 'DWORD', 'LPVOID', 'MSHLFLAGS'], ['pStm', 'riid', 'pUnk', 'dwDestContext', 'pvDestContext', 'mshlflags'], 'HRESULT'), 'CoMarshalInterThreadInterfaceInStream': (3, ['REFIID', 'LPUNKNOWN', 'LPSTREAM*'], ['riid', 'pUnk', 'ppStm'], 'HRESULT'), 'CoQueryAuthenticationServices': (2, ['DWORD*', 'SOLE_AUTHENTICATION_SERVICE**'], ['pcAuthSvc', 'asAuthSvc'], 'HRESULT'), 'CoQueryClientBlanket': (7, ['DWORD*', 'DWORD*', 'OLECHAR**', 'DWORD*', 'DWORD*', 'RPC_AUTHZ_HANDLE*', 'DWORD*'], ['pAuthnSvc', 'pAuthzSvc', 'pServerPrincName', 'pAuthnLevel', 'pImpLevel', 'pPrivs', 'pCapabilities'], 'HRESULT'), 'CoQueryProxyBlanket': (8, ['IUNKNOWN*', 'DWORD*', 'DWORD*', 'OLECHAR**', 'DWORD*', 'DWORD*', 'RPC_AUTH_IDENTITY_HANDLE*', 'DWORD*'], ['pProxy', 'pwAuthnSvc', 'pAuthzSvc', 'pServerPrincName', 'pAuthnLevel', 'pImpLevel', 'pAuthInfo', 'pCapabilites'], 'HRESULT'), 'CoRegisterClassObject': (5, ['REFCLSID', 'LPUNKNOWN', 'CLSCTX', 'REGCLS', 'LPDWORD'], ['rclsid', 'pUnk', 'dwClsContext', 'flags', 'lpdwRegister'], 'HRESULT'), 'CoRegisterInitializeSpy': (2, ['LPINITIALIZESPY', 'ULARGE_INTEGER*'], ['pSpy', 'puliCookie'], 'HRESULT'), 'CoRegisterMallocSpy': (1, ['LPMALLOCSPY'], ['pMallocSpy'], 'HRESULT'), 'CoRegisterMessageFilter': (2, ['LPMESSAGEFILTER', 'LPMESSAGEFILTER*'], ['lpMessageFilter', 'lplpMessageFilter'], 'HRESULT'), 'CoRegisterPSClsid': (2, ['REFIID', 'REFCLSID'], ['riid', 'rclsid'], 'HRESULT'), 'CoRegisterSurrogate': (1, ['LPSURROGATE'], ['pSurrogate'], 'HRESULT'), 'CoReleaseMarshalData': (1, ['LPSTREAM'], ['pStm'], 'HRESULT'), 'CoReleaseServerProcess': (0, [], [], 'ULONG'), 'CoResumeClassObjects': (0, [], [], 'HRESULT'), 'CoRevertToSelf': (0, [], [], 'HRESULT'), 'CoRevokeClassObject': (1, ['DWORD'], ['dwRegister'], 'HRESULT'), 'CoRevokeInitializeSpy': (1, ['ULARGE_INTEGER'], ['uliCookie'], 'HRESULT'), 'CoRevokeMallocSpy': (0, [], [], 'HRESULT'), 'CoSetCancelObject': (1, ['IUNKNOWN*'], ['pUnk'], 'HRESULT'), 'CoSetProxyBlanket': (8, ['IUNKNOWN*', 'RPC_C_AUTHN_SVC', 'RPC_C_AUTHZ', 'OLECHAR*', 'RPC_C_AUTHN_LEVEL', 'RPC_C_IMP_LEVEL', 'RPC_AUTH_IDENTITY_HANDLE', 'EOLE_AUTHENTICATION_CAPABILITIES'], ['pProxy', 'dwAuthnSvc', 'dwAuthzSvc', 'pServerPrincName', 'dwAuthnLevel', 'dwImpLevel', 'pAuthInfo', 'dwCapabilities'], 'HRESULT'), 'CoSuspendClassObjects': (0, [], [], 'HRESULT'), 'CoSwitchCallContext': (2, ['IUNKNOWN*', 'IUNKNOWN**'], ['pNewObject', 'ppOldObject'], 'HRESULT'), 'CoTaskMemAlloc': (1, ['SIZE_T'], ['cb'], 'LPVOID'), 'CoTaskMemFree': (1, ['LPVOID'], ['pv'], 'void'), 'CoTaskMemRealloc': (2, ['LPVOID', 'SIZE_T'], ['pv', 'cb'], 'LPVOID'), 'CoTestCancel': (0, [], [], 'HRESULT'), 'CoTreatAsClass': (2, ['REFCLSID', 'REFCLSID'], ['clsidOld', 'clsidNew'], 'HRESULT'), 'CoUninitialize': (0, [], [], 'void'), 'CoUnmarshalHresult': (2, ['LPSTREAM', 'HRESULT*'], ['pstm', 'phresult'], 'HRESULT'), 'CoUnmarshalInterface': (3, ['LPSTREAM', 'REFIID', 'LPVOID*'], ['pStm', 'riid', 'ppv'], 'HRESULT'), 'CoWaitForMultipleHandles': (5, ['DWORD', 'DWORD', 'ULONG', 'LPHANDLE', 'LPDWORD'], ['dwFlags', 'dwTimeout', 'cHandles', 'pHandles', 'lpdwindex'], 'HRESULT'), 'CreateAntiMoniker': (1, ['LPMONIKER*'], ['ppmk'], 'HRESULT'), 'CreateBindCtx': (2, ['DWORD', 'LPBC*'], ['reserved', 'ppbc'], 'HRESULT'), 'CreateClassMoniker': (2, ['REFCLSID', 'LPMONIKER*'], ['rclsid', 'ppmk'], 'HRESULT'), 'CreateFileMoniker': (2, ['LPCOLESTR', 'LPMONIKER*'], ['lpszPathName', 'ppmk'], 'HRESULT'), 'CreateGenericComposite': (3, ['LPMONIKER', 'LPMONIKER', 'LPMONIKER*'], ['pmkFirst', 'pmkRest', 'ppmkComposite'], 'HRESULT'), 'CreateItemMoniker': (3, ['LPCOLESTR', 'LPCOLESTR', 'LPMONIKER*'], ['lpszDelim', 'lpszItem', 'ppmk'], 'HRESULT'), 'CreateObjrefMoniker': (2, ['LPUNKNOWN', 'LPMONIKER*'], ['punk', 'ppmk'], 'HRESULT'), 'CreatePointerMoniker': (2, ['LPUNKNOWN', 'LPMONIKER*'], ['punk', 'ppmk'], 'HRESULT'), 'GetClassFile': (2, ['LPCOLESTR', 'CLSID*'], ['szFilename', 'pclsid'], 'HRESULT'), 'GetRunningObjectTable': (2, ['DWORD', 'LPRUNNINGOBJECTTABLE*'], ['reserved', 'pprot'], 'HRESULT'), 'IIDFromString': (2, ['LPCOLESTR', 'LPIID'], ['lpsz', 'lpiid'], 'HRESULT'), 'IsAccelerator': (4, ['HACCEL', 'INT', 'LPMSG', 'WORD*'], ['hAccel', 'cAccelEntries', 'lpMsg', 'lpwCmd'], 'BOOL'), 'IsEqualGUID': (2, ['REFGUID', 'REFGUID'], ['rguid1', 'rguid2'], 'BOOL'), 'MkParseDisplayName': (4, ['LPBC', 'LPCOLESTR', 'ULONG*', 'LPMONIKER*'], ['pbc', 'szUserName', 'pchEaten', 'ppmk'], 'HRESULT'), 'MonikerCommonPrefixWith': (3, ['LPMONIKER', 'LPMONIKER', 'LPMONIKER*'], ['pmkThis', 'pmkOther', 'ppmkCommon'], 'HRESULT'), 'MonikerRelativePathTo': (4, ['LPMONIKER', 'LPMONIKER', 'LPMONIKER*', 'BOOL'], ['pmkSrc', 'pmkDest', 'ppmkRelPath', 'dwReserved'], 'HRESULT'), 'OleDoAutoConvert': (2, ['LPSTORAGE', 'LPCLSID'], ['pStg', 'pClsidNew'], 'HRESULT'), 'OleGetAutoConvert': (2, ['REFCLSID', 'LPCLSID'], ['clsidOld', 'pClsidNew'], 'HRESULT'), 'OleGetIconOfClass': (3, ['REFCLSID', 'LPOLESTR', 'BOOL'], ['rclsid', 'lpszLabel', 'fUseTypeAsLabel'], 'HGLOBAL'), 'OleGetIconOfFile': (2, ['LPOLESTR', 'BOOL'], ['lpszPath', 'fUseFileAsLabel'], 'HGLOBAL'), 'OleRegGetMiscStatus': (3, ['REFCLSID', 'DVASPECT', 'DWORD*'], ['clsid', 'dwAspect', 'pdwStatus'], 'HRESULT'), 'OleRegGetUserType': (3, ['REFCLSID', 'DWORD', 'LPOLESTR*'], ['clsid', 'dwFormOfType', 'pszUserType'], 'HRESULT'), 'OleSetAutoConvert': (2, ['REFCLSID', 'REFCLSID'], ['clsidOld', 'clsidNew'], 'HRESULT'), 'ProgIDFromCLSID': (2, ['REFCLSID', 'LPOLESTR*'], ['clsid', 'lplpszProgID'], 'HRESULT'), 'StringFromCLSID': (2, ['REFCLSID', 'LPOLESTR*'], ['rclsid', 'lplpsz'], 'HRESULT'), 'StringFromGUID2': (3, ['REFGUID', 'LPOLESTR', 'INT'], ['rguid', 'lpsz', 'cchMax'], 'int'), 'StringFromIID': (2, ['REFIID', 'LPOLESTR*'], ['rclsid', 'lplpsz'], 'HRESULT'), 'CoRegisterChannelHook': (2, ['REFGUID', 'ICHANNELHOOK*'], ['ExtensionUuid', 'pChannelHook'], 'HRESULT'), 'CoCreateInstanceFromApp': (6, ['REFCLSID', 'IUNKNOWN*', 'DWORD', 'PVOID', 'DWORD', 'MULTI_QI*'], ['rclsid', 'punkOuter', 'dwClsCtx', 'reserved', 'dwCount', 'pResults'], 'HRESULT'), 'CoDecrementMTAUsage': (1, ['CO_MTA_USAGE_COOKIE'], ['Cookie'], 'HRESULT'), 'CoHandlePriorityEventsFromMessagePump': (0, [], [], 'void'), 'CoIncrementMTAUsage': (1, ['CO_MTA_USAGE_COOKIE*'], ['pCookie'], 'HRESULT'), 'CoSetMessageDispatcher': (1, ['PMESSAGEDISPATCHER'], ['pMessageDispatcher'], 'HRESULT'), 'CreateDataAdviseHolder': (1, ['LPDATAADVISEHOLDER*'], ['ppDAHolder'], 'HRESULT'), 'CreateDataCache': (4, ['LPUNKNOWN', 'REFCLSID', 'REFIID', 'LPVOID*'], ['pUnkOuter', 'rclsid', 'iid', 'ppv'], 'HRESULT'), 'CreateOleAdviseHolder': (1, ['LPOLEADVISEHOLDER*'], ['ppOAHolder'], 'HRESULT'), 'DoDragDrop': (4, ['LPDATAOBJECT', 'LPDROPSOURCE', 'DWORD', 'LPDWORD'], ['pDataObj', 'pDropSource', 'dwOKEffects', 'pdwEffect'], 'HRESULT'), 'OleCreate': (7, ['REFCLSID', 'REFIID', 'OLERENDER', 'LPFORMATETC', 'LPOLECLIENTSITE', 'LPSTORAGE', 'LPVOID*'], ['rclsid', 'riid', 'renderopt', 'pFormatEtc', 'pClientSite', 'pStg', 'ppvObj'], 'HRESULT'), 'OleCreateDefaultHandler': (4, ['REFCLSID', 'LPUNKNOWN', 'REFIID', 'LPVOID*'], ['clsid', 'pUnkOuter', 'riid', 'lplpObj'], 'HRESULT'), 'OleCreateEmbeddingHelper': (6, ['REFCLSID', 'LPUNKNOWN', 'DWORD', 'LPCLASSFACTORY', 'REFIID', 'LPVOID*'], ['clsid', 'pUnkOuter', 'flags', 'pCF', 'riid', 'lplpObj'], 'HRESULT'), 'OleCreateEx': (12, ['REFCLSID', 'REFIID', 'DWORD', 'OLERENDER', 'ULONG', 'DWORD*', 'LPFORMATETC', 'IADVISESINK*', 'DWORD*', 'LPOLECLIENTSITE', 'LPSTORAGE', 'LPVOID*'], ['rclsid', 'riid', 'dwFlags', 'renderopt', 'cFormats', 'rgAdvf', 'rgFormatEtc', 'lpAdviseSink', 'rgdwConnection', 'pClientSite', 'pStg', 'ppvObj'], 'HRESULT'), 'OleCreateFromData': (7, ['LPDATAOBJECT', 'REFIID', 'OLERENDER', 'LPFORMATETC', 'LPOLECLIENTSITE', 'LPSTORAGE', 'LPVOID*'], ['pSrcDataObj', 'riid', 'renderopt', 'pFormatEtc', 'pClientSite', 'pStg', 'ppvObj'], 'HRESULT'), 'OleCreateFromDataEx': (12, ['LPDATAOBJECT', 'REFIID', 'DWORD', 'OLERENDER', 'ULONG', 'DWORD*', 'LPFORMATETC', 'IADVISESINK*', 'DWORD*', 'LPOLECLIENTSITE', 'LPSTORAGE', 'LPVOID*'], ['pSrcDataObj', 'riid', 'dwFlags', 'renderopt', 'cFormats', 'rgAdvf', 'rgFormatEtc', 'lpAdviseSink', 'rgdwConnection', 'pClientSite', 'pStg', 'ppvObj'], 'HRESULT'), 'OleCreateFromFile': (8, ['REFCLSID', 'LPCOLESTR', 'REFIID', 'OLERENDER', 'LPFORMATETC', 'LPOLECLIENTSITE', 'LPSTORAGE', 'LPVOID*'], ['rclsid', 'lpszFileName', 'riid', 'renderopt', 'lpFormatEtc', 'pClientSite', 'pStg', 'ppvObj'], 'HRESULT'), 'OleCreateFromFileEx': (13, ['REFCLSID', 'LPCOLESTR', 'REFIID', 'DWORD', 'OLERENDER', 'ULONG', 'DWORD*', 'LPFORMATETC', 'IADVISESINK*', 'DWORD*', 'LPOLECLIENTSITE', 'LPSTORAGE', 'LPVOID*'], ['rclsid', 'lpszFileName', 'riid', 'dwFlags', 'renderopt', 'cFormats', 'rgAdvf', 'rgFormatEtc', 'lpAdviseSink', 'rgdwConnection', 'pClientSite', 'pStg', 'ppvObj'], 'HRESULT'), 'OleCreateLink': (7, ['LPMONIKER', 'REFIID', 'OLERENDER', 'LPFORMATETC', 'LPOLECLIENTSITE', 'LPSTORAGE', 'LPVOID*'], ['pmkLinkSrc', 'riid', 'renderopt', 'lpFormatEtc', 'pClientSite', 'pStg', 'ppvObj'], 'HRESULT'), 'OleCreateLinkEx': (12, ['LPMONIKER', 'REFIID', 'DWORD', 'OLERENDER', 'ULONG', 'DWORD*', 'LPFORMATETC', 'IADVISESINK*', 'DWORD*', 'LPOLECLIENTSITE', 'LPSTORAGE', 'LPVOID*'], ['pmkLinkSrc', 'riid', 'dwFlags', 'renderopt', 'cFormats', 'rgAdvf', 'rgFormatEtc', 'lpAdviseSink', 'rgdwConnection', 'pClientSite', 'pStg', 'ppvObj'], 'HRESULT'), 'OleCreateLinkFromData': (7, ['LPDATAOBJECT', 'REFIID', 'OLERENDER', 'LPFORMATETC', 'LPOLECLIENTSITE', 'LPSTORAGE', 'LPVOID*'], ['pSrcDataObj', 'riid', 'renderopt', 'pFormatEtc', 'pClientSite', 'pStg', 'ppvObj'], 'HRESULT'), 'OleCreateLinkFromDataEx': (12, ['LPDATAOBJECT', 'REFIID', 'DWORD', 'OLERENDER', 'ULONG', 'DWORD*', 'LPFORMATETC', 'IADVISESINK*', 'DWORD*', 'LPOLECLIENTSITE', 'LPSTORAGE', 'LPVOID*'], ['pSrcDataObj', 'riid', 'dwFlags', 'renderopt', 'cFormats', 'rgAdvf', 'rgFormatEtc', 'lpAdviseSink', 'rgdwConnection', 'pClientSite', 'pStg', 'ppvObj'], 'HRESULT'), 'OleCreateLinkToFile': (7, ['LPCOLESTR', 'REFIID', 'OLERENDER', 'LPFORMATETC', 'LPOLECLIENTSITE', 'LPSTORAGE', 'LPVOID*'], ['lpszFileName', 'riid', 'renderopt', 'lpFormatEtc', 'pClientSite', 'pStg', 'ppvObj'], 'HRESULT'), 'OleCreateLinkToFileEx': (12, ['LPCOLESTR', 'REFIID', 'DWORD', 'OLERENDER', 'ULONG', 'DWORD*', 'LPFORMATETC', 'IADVISESINK*', 'DWORD*', 'LPOLECLIENTSITE', 'LPSTORAGE', 'LPVOID*'], ['lpszFileName', 'riid', 'dwFlags', 'renderopt', 'cFormats', 'rgAdvf', 'rgFormatEtc', 'lpAdviseSink', 'rgdwConnection', 'pClientSite', 'pStg', 'ppvObj'], 'HRESULT'), 'OleCreateMenuDescriptor': (2, ['HMENU', 'LPOLEMENUGROUPWIDTHS'], ['hmenuCombined', 'lpMenuWidths'], 'HOLEMENU'), 'OleCreateStaticFromData': (7, ['LPDATAOBJECT', 'REFIID', 'OLERENDER', 'LPFORMATETC', 'LPOLECLIENTSITE', 'LPSTORAGE', 'LPVOID*'], ['pSrcDataObj', 'iid', 'renderopt', 'pFormatEtc', 'pClientSite', 'pStg', 'ppvObj'], 'HRESULT'), 'OleDestroyMenuDescriptor': (1, ['HOLEMENU'], ['holemenu'], 'VOID'), 'OleDraw': (4, ['LPUNKNOWN', 'DVASPECT', 'HDC', 'LPCRECT'], ['pUnknown', 'dwAspect', 'hdcDraw', 'lprcBounds'], 'HRESULT'), 'OleDuplicateData': (3, ['HANDLE', 'CLIPFORMAT', 'UINT'], ['hSrc', 'cfFormat', 'uiFlags'], 'HANDLE'), 'OleFlushClipboard': (0, [], [], 'HRESULT'), 'OleGetClipboard': (1, ['LPDATAOBJECT*'], ['ppDataObj'], 'HRESULT'), 'OleInitialize': (1, ['LPVOID'], ['pvReserved'], 'HRESULT'), 'OleIsCurrentClipboard': (1, ['LPDATAOBJECT'], ['pDataObj'], 'HRESULT'), 'OleIsRunning': (1, ['LPOLEOBJECT'], ['pObject'], 'BOOL'), 'OleLoad': (5, ['LPSTORAGE', 'REFIID', 'REFCLSID', 'LPOLECLIENTSITE', 'LPVOID*'], ['pStg', 'riid', 'rclsid', 'pClientSite', 'ppvObj'], 'HRESULT'), 'OleLoadFromStream': (3, ['LPSTREAM', 'REFIID', 'LPVOID*'], ['pStm', 'iidInterface', 'ppvObj'], 'HRESULT'), 'OleLockRunning': (3, ['LPUNKNOWN', 'BOOL', 'BOOL'], ['pUnknown', 'fLock', 'fLastUnlockCloses'], 'HRESULT'), 'OleMetafilePictFromIconAndLabel': (4, ['HICON', 'LPOLESTR', 'LPOLESTR', 'UINT'], ['hIcon', 'lpszLabel', 'lpszSourceFile', 'iIconIndex'], 'HGLOBAL'), 'OleNoteObjectVisible': (2, ['LPUNKNOWN', 'BOOL'], ['pUnknown', 'fVisible'], 'HRESULT'), 'OleQueryCreateFromData': (1, ['LPDATAOBJECT'], ['pSrcDataObject'], 'HRESULT'), 'OleQueryLinkFromData': (1, ['LPDATAOBJECT'], ['pSrcDataObject'], 'HRESULT'), 'OleRegEnumFormatEtc': (3, ['REFCLSID', 'DWORD', 'LPENUMFORMATETC*'], ['clsid', 'dwDirection', 'ppenum'], 'HRESULT'), 'OleRegEnumVerbs': (2, ['REFCLSID', 'LPENUMOLEVERB*'], ['clsid', 'ppenum'], 'HRESULT'), 'OleRun': (1, ['LPUNKNOWN'], ['pUnknown'], 'HRESULT'), 'OleSave': (3, ['LPPERSISTSTORAGE', 'LPSTORAGE', 'BOOL'], ['pPS', 'pStg', 'fSameAsLoad'], 'HRESULT'), 'OleSaveToStream': (2, ['LPPERSISTSTREAM', 'LPSTREAM'], ['pPStm', 'pStm'], 'HRESULT'), 'OleSetClipboard': (1, ['LPDATAOBJECT'], ['pDataObj'], 'HRESULT'), 'OleSetContainedObject': (2, ['LPUNKNOWN', 'BOOL'], ['pUnknown', 'fContained'], 'HRESULT'), 'OleSetMenuDescriptor': (5, ['HOLEMENU', 'HWND', 'HWND', 'LPOLEINPLACEFRAME', 'LPOLEINPLACEACTIVEOBJECT'], ['holemenu', 'hwndFrame', 'hwndActiveObject', 'lpFrame', 'lpActiveObj'], 'HRESULT'), 'OleTranslateAccelerator': (3, ['LPOLEINPLACEFRAME', 'LPOLEINPLACEFRAMEINFO', 'LPMSG'], ['lpFrame', 'lpFrameInfo', 'lpmsg'], 'HRESULT'), 'OleUninitialize': (0, [], [], 'void'), 'RegisterDragDrop': (2, ['HWND', 'LPDROPTARGET'], ['hwnd', 'pDropTarget'], 'HRESULT'), 'ReleaseStgMedium': (1, ['LPSTGMEDIUM'], ['pMedium'], 'void'), 'RevokeDragDrop': (1, ['HWND'], ['hwnd'], 'HRESULT'), 'CreateILockBytesOnHGlobal': (3, ['HGLOBAL', 'BOOL', 'ILOCKBYTES**'], ['hGlobal', 'fDeleteOnRelease', 'ppLkbyt'], 'WINOLEAPI'), 'CreateStreamOnHGlobal': (3, ['HGLOBAL', 'BOOL', 'LPSTREAM*'], ['hGlobal', 'fDeleteOnRelease', 'ppstm'], 'WINOLEAPI'), 'FmtIdToPropStgName': (2, ['CONST FMTID*', 'LPOLESTR'], ['pfmtid', 'oszName'], 'HRESULT'), 'FreePropVariantArray': (2, ['ULONG', 'PROPVARIANT*'], ['cVariants', 'rgvars'], 'WINOLEAPI'), 'GetConvertStg': (1, ['ISTORAGE*'], ['pStg'], 'WINOLEAPI'), 'GetHGlobalFromILockBytes': (2, ['ILOCKBYTES*', 'HGLOBAL*'], ['pLkbyt', 'phglobal'], 'WINOLEAPI'), 'GetHGlobalFromStream': (2, ['ISTREAM*', 'HGLOBAL*'], ['pstm', 'phglobal'], 'WINOLEAPI'), 'OleConvertIStorageToOLESTREAM': (2, ['ISTORAGE*', 'LPOLESTREAM'], ['pStg', 'lpolestream'], 'WINOLEAPI'), 'OleConvertIStorageToOLESTREAMEx': (7, ['ISTORAGE*', 'CLIPFORMAT', 'LONG', 'LONG', 'DWORD', 'LPSTGMEDIUM', 'LPOLESTREAM'], ['pStg', 'cfFormat', 'lWidth', 'lHeight', 'dwSize', 'pmedium', 'lpolestm'], 'WINOLEAPI'), 'OleConvertOLESTREAMToIStorage': (3, ['LPOLESTREAM', 'ISTORAGE*', 'CONST DVTARGETDEVICE*'], ['lpolestream', 'pstg', 'ptd'], 'WINOLEAPI'), 'OleConvertOLESTREAMToIStorageEx': (7, ['LPOLESTREAM', 'ISTORAGE*', 'CLIPFORMAT*', 'LONG*', 'LONG*', 'DWORD*', 'LPSTGMEDIUM'], ['lpolestm', 'pstg', 'pcfFormat', 'plWidth', 'plHeight', 'pdwSize', 'pmedium'], 'WINOLEAPI'), 'PropStgNameToFmtId': (2, ['CONST LPOLESTR', 'FMTID*'], ['oszName', 'pfmtid'], 'HRESULT'), 'PropVariantClear': (1, ['PROPVARIANT*'], ['pvar'], 'WINOLEAPI'), 'PropVariantCopy': (2, ['PROPVARIANT*', 'CONST PROPVARIANT*'], ['pvarDest', 'pvarSrc'], 'WINOLEAPI'), 'ReadClassStg': (2, ['ISTORAGE*', 'CLSID*'], ['pStg', 'pclsid'], 'WINOLEAPI'), 'ReadClassStm': (2, ['ISTREAM*', 'CLSID*'], ['pStm', 'pclsid'], 'WINOLEAPI'), 'ReadFmtUserTypeStg': (3, ['ISTORAGE*', 'CLIPFORMAT*', 'LPWSTR*'], ['pStg', 'pcf', 'lplpszUserType'], 'WINOLEAPI'), 'StgConvertPropertyToVariant': (4, ['SERIALIZEDPROPERTYVALUE*', 'USHORT', 'PROPVARIANT*', 'IMEMORYALLOCATOR*'], ['prop', 'CodePage', 'pvar', 'pma'], 'BOOLEAN'), 'SetConvertStg': (2, ['ISTORAGE*', 'BOOL'], ['pStg', 'fConvert'], 'WINOLEAPI'), 'StgConvertVariantToProperty': (7, ['PROPVARIANT*', 'USHORT', 'SERIALIZEDPROPERTYVALUE*', 'ULONG*', 'PROPID', 'BOOLEAN', 'ULONG*'], ['pvar', 'CodePage', 'pprop', 'pcb', 'pid', 'fReserved', 'pcIndirect'], 'SERIALIZEDPROPERTYVALUE*'), 'StgCreateDocfile': (4, ['CONST WCHAR*', 'STGM_FLAGS', 'DWORD', 'ISTORAGE**'], ['pwcsName', 'grfMode', 'reserved', 'ppstgOpen'], 'HRESULT'), 'StgCreateDocfileOnILockBytes': (4, ['ILOCKBYTES*', 'STGM_FLAGS', 'DWORD', 'ISTORAGE**'], ['plkbyt', 'grfMode', 'reserved', 'ppstgOpen'], 'WINOLEAPI'), 'StgCreatePropSetStg': (3, ['ISTORAGE*', 'DWORD', 'IPROPERTYSETSTORAGE**'], ['pStorage', 'dwReserved', 'ppPropSetStg'], 'HRESULT'), 'StgCreatePropStg': (6, ['IUNKNOWN*', 'REFFMTID', 'CONST CLSID*', 'PROPSETFLAG', 'DWORD', 'IPROPERTYSTORAGE**'], ['pUnk', 'fmtid', 'pclsid', 'grfFlags', 'dwReserved', 'ppPropStg'], 'HRESULT'), 'StgCreateStorageEx': (8, ['CONST WCHAR*', 'STGM_FLAGS', 'STGFMT', 'DWORD', 'STGOPTIONS*', 'PSECURITY_DESCRIPTOR*', 'REFIID', 'VOID**'], ['pwcsName', 'grfMode', 'stgfmt', 'grfAttrs', 'pStgOptions', 'pSecurityDescriptor', 'riid', 'ppObjectOpen'], 'WINOLEAPI'), 'StgGetIFillLockBytesOnFile': (2, ['OLECHAR*', 'IFILLLOCKBYTES**'], ['pwcsName', 'ppflb'], 'WINOLEAPI'), 'StgGetIFillLockBytesOnILockBytes': (2, ['ILOCKBYTES*', 'IFILLLOCKBYTES**'], ['pilb', 'ppflb'], 'WINOLEAPI'), 'StgIsStorageFile': (1, ['CONST WCHAR*'], ['pwcsName'], 'WINOLEAPI'), 'StgIsStorageILockBytes': (1, ['ILOCKBYTES*'], ['plkbyt'], 'WINOLEAPI'), 'StgOpenAsyncDocfileOnIFillLockBytes': (4, ['IFILLLOCKBYTES*', 'STGM_FLAGS', 'ASYNC_MODE_FLAGS', 'ISTORAGE**'], ['ppflb', 'grfmode', 'asyncFlags', 'ppstgOpen'], 'WINOLEAPI'), 'StgOpenPropStg': (5, ['IUNKNOWN*', 'REFFMTID', 'PROPSETFLAG', 'DWORD', 'IPROPERTYSTORAGE**'], ['pUnk', 'fmtid', 'grfFlags', 'dwReserved', 'ppPropStg'], 'HRESULT'), 'StgOpenStorage': (6, ['CONST WCHAR*', 'ISTORAGE*', 'STGM_FLAGS', 'SNB', 'DWORD', 'ISTORAGE**'], ['pwcsName', 'pstgPriority', 'grfMode', 'snbExclude', 'reserved', 'ppstgOpen'], 'HRESULT'), 'StgOpenStorageEx': (8, ['CONST WCHAR*', 'STGM_FLAGS', 'STGFMT', 'DWORD', 'STGOPTIONS*', 'VOID*', 'REFIID', 'VOID**'], ['pwcsName', 'grfMode', 'stgfmt', 'grfAttrs', 'pStgOptions', 'reserved2', 'riid', 'ppObjectOpen'], 'HRESULT'), 'StgOpenStorageOnILockBytes': (6, ['ILOCKBYTES*', 'ISTORAGE*', 'STGM_FLAGS', 'SNB', 'DWORD', 'ISTORAGE**'], ['plkbyt', 'pStgPriority', 'grfMode', 'snbExclude', 'reserved', 'ppstgOpen'], 'WINOLEAPI'), 'StgPropertyLengthAsVariant': (4, ['SERIALIZEDPROPERTYVALUE*', 'ULONG', 'USHORT', 'BYTE'], ['pProp', 'cbProp', 'CodePage', 'bReserved'], 'ULONG'), 'StgSetTimes': (4, ['WCHAR CONST*', 'FILETIME CONST*', 'FILETIME CONST*', 'FILETIME CONST*'], ['lpszName', 'pctime', 'patime', 'pmtime'], 'WINOLEAPI'), 'WriteClassStg': (2, ['ISTORAGE*', 'REFCLSID'], ['pStg', 'rclsid'], 'WINOLEAPI'), 'WriteClassStm': (2, ['ISTREAM*', 'REFCLSID'], ['pStm', 'rclsid'], 'WINOLEAPI'), 'WriteFmtUserTypeStg': (3, ['ISTORAGE*', 'CLIPFORMAT', 'LPWSTR*'], ['pStg', 'cf', 'lpszUserType'], 'WINOLEAPI'), 'CoGetModuleType': (2, ['LPCWSTR', 'INT*'], ['pwszFile', 'pModuleType'], 'HRESULT')}
dict5_gdiplus = {'GdiplusStartup': (3, ['ULONG_PTR*', 'CONST GDIPLUSSTARTUPINPUT*', 'GDIPLUSSTARTUPOUTPUT*'], ['token', 'input', 'output'], 'GpStatus'), 'GdiplusShutdown': (1, ['ULONG_PTR'], ['token'], 'void'), 'GdipCreatePath': (2, ['GPFILLMODE', 'GPPATH**'], ['brushMode', 'path'], 'GpStatus'), 'GdipCreatePath2': (5, ['GDIPCONST GPPOINTF*', 'GDIPCONST PATHPOINTTYPE*', 'INT', 'GPFILLMODE', 'GPPATH**'], ['points', 'types', 'count', 'fillMode', 'path'], 'GpStatus'), 'GdipCreatePath2I': (5, ['GDIPCONST GPPOINT*', 'GDIPCONST PATHPOINTTYPE*', 'INT', 'GPFILLMODE', 'GPPATH**'], ['points', 'types', 'count', 'fillMode', 'path'], 'GpStatus'), 'GdipClonePath': (2, ['GPPATH*', 'GPPATH**'], ['path', 'clonePath'], 'GpStatus'), 'GdipDeletePath': (1, ['GPPATH*'], ['path'], 'GpStatus'), 'GdipResetPath': (1, ['GPPATH*'], ['path'], 'GpStatus'), 'GdipGetPointCount': (2, ['GPPATH*', 'INT*'], ['path', 'count'], 'GpStatus'), 'GdipGetPathTypes': (3, ['GPPATH*', 'PATHPOINTTYPE*', 'INT'], ['path', 'types', 'count'], 'GpStatus'), 'GdipGetPathPoints': (3, ['GPPATH*', 'GPPOINTF*', 'INT'], ['path', 'points', 'count'], 'GpStatus'), 'GdipGetPathPointsI': (3, ['GPPATH*', 'GPPOINT*', 'INT'], ['path', 'points', 'count'], 'GpStatus'), 'GdipGetPathFillMode': (2, ['GPPATH*', 'GPFILLMODE*'], ['path', 'fillmode'], 'GpStatus'), 'GdipSetPathFillMode': (2, ['GPPATH*', 'GPFILLMODE'], ['path', 'fillmode'], 'GpStatus'), 'GdipGetPathData': (2, ['GPPATH*', 'GPPATHDATA*'], ['path', 'pathData'], 'GpStatus'), 'GdipStartPathFigure': (1, ['GPPATH*'], ['path'], 'GpStatus'), 'GdipClosePathFigure': (1, ['GPPATH*'], ['path'], 'GpStatus'), 'GdipClosePathFigures': (1, ['GPPATH*'], ['path'], 'GpStatus'), 'GdipSetPathMarker': (1, ['GPPATH*'], ['path'], 'GpStatus'), 'GdipClearPathMarkers': (1, ['GPPATH*'], ['path'], 'GpStatus'), 'GdipReversePath': (1, ['GPPATH*'], ['path'], 'GpStatus'), 'GdipGetPathLastPoint': (2, ['GPPATH*', 'GPPOINTF*'], ['path', 'lastPoint'], 'GpStatus'), 'GdipAddPathLine': (5, ['GPPATH*', 'REAL', 'REAL', 'REAL', 'REAL'], ['path', 'x1', 'y1', 'x2', 'y2'], 'GpStatus'), 'GdipAddPathLine2': (3, ['GPPATH*', 'GDIPCONST GPPOINTF*', 'INT'], ['path', 'points', 'count'], 'GpStatus'), 'GdipAddPathArc': (7, ['GPPATH*', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL'], ['path', 'x', 'y', 'width', 'height', 'startAngle', 'sweepAngle'], 'GpStatus'), 'GdipAddPathBezier': (9, ['GPPATH*', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL'], ['path', 'x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], 'GpStatus'), 'GdipAddPathBeziers': (3, ['GPPATH*', 'GDIPCONST GPPOINTF*', 'INT'], ['path', 'points', 'count'], 'GpStatus'), 'GdipAddPathCurve': (3, ['GPPATH*', 'GDIPCONST GPPOINTF*', 'INT'], ['path', 'points', 'count'], 'GpStatus'), 'GdipAddPathCurve2': (4, ['GPPATH*', 'GDIPCONST GPPOINTF*', 'INT', 'REAL'], ['path', 'points', 'count', 'tension'], 'GpStatus'), 'GdipAddPathCurve3': (6, ['GPPATH*', 'GDIPCONST GPPOINTF*', 'INT', 'INT', 'INT', 'REAL'], ['path', 'points', 'count', 'offset', 'numberOfSegments', 'tension'], 'GpStatus'), 'GdipAddPathClosedCurve': (3, ['GPPATH*', 'GDIPCONST GPPOINTF*', 'INT'], ['path', 'points', 'count'], 'GpStatus'), 'GdipAddPathClosedCurve2': (4, ['GPPATH*', 'GDIPCONST GPPOINTF*', 'INT', 'REAL'], ['path', 'points', 'count', 'tension'], 'GpStatus'), 'GdipAddPathRectangle': (5, ['GPPATH*', 'REAL', 'REAL', 'REAL', 'REAL'], ['path', 'x', 'y', 'width', 'height'], 'GpStatus'), 'GdipAddPathRectangles': (3, ['GPPATH*', 'GDIPCONST GPRECTF*', 'INT'], ['path', 'rects', 'count'], 'GpStatus'), 'GdipAddPathEllipse': (5, ['GPPATH*', 'REAL', 'REAL', 'REAL', 'REAL'], ['path', 'x', 'y', 'width', 'height'], 'GpStatus'), 'GdipAddPathPie': (7, ['GPPATH*', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL'], ['path', 'x', 'y', 'width', 'height', 'startAngle', 'sweepAngle'], 'GpStatus'), 'GdipAddPathPolygon': (3, ['GPPATH*', 'GDIPCONST GPPOINTF*', 'INT'], ['path', 'points', 'count'], 'GpStatus'), 'GdipAddPathPath': (3, ['GPPATH*', 'GDIPCONST GPPATH*', 'BOOL'], ['path', 'addingPath', 'connect'], 'GpStatus'), 'GdipAddPathString': (8, ['GPPATH*', 'GDIPCONST WCHAR*', 'INT', 'GDIPCONST GPFONTFAMILY*', 'INT', 'REAL', 'GDIPCONST RECTF*', 'GDIPCONST GPSTRINGFORMAT*'], ['path', 'string', 'length', 'family', 'style', 'emSize', 'layoutRect', 'format'], 'GpStatus'), 'GdipAddPathStringI': (8, ['GPPATH*', 'GDIPCONST WCHAR*', 'INT', 'GDIPCONST GPFONTFAMILY*', 'INT', 'REAL', 'GDIPCONST RECT*', 'GDIPCONST GPSTRINGFORMAT*'], ['path', 'string', 'length', 'family', 'style', 'emSize', 'layoutRect', 'format'], 'GpStatus'), 'GdipAddPathLineI': (5, ['GPPATH*', 'INT', 'INT', 'INT', 'INT'], ['path', 'x1', 'y1', 'x2', 'y2'], 'GpStatus'), 'GdipAddPathLine2I': (3, ['GPPATH*', 'GDIPCONST GPPOINT*', 'INT'], ['path', 'points', 'count'], 'GpStatus'), 'GdipAddPathArcI': (7, ['GPPATH*', 'INT', 'INT', 'INT', 'INT', 'REAL', 'REAL'], ['path', 'x', 'y', 'width', 'height', 'startAngle', 'sweepAngle'], 'GpStatus'), 'GdipAddPathBezierI': (9, ['GPPATH*', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT'], ['path', 'x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], 'GpStatus'), 'GdipAddPathBeziersI': (3, ['GPPATH*', 'GDIPCONST GPPOINT*', 'INT'], ['path', 'points', 'count'], 'GpStatus'), 'GdipAddPathCurveI': (3, ['GPPATH*', 'GDIPCONST GPPOINT*', 'INT'], ['path', 'points', 'count'], 'GpStatus'), 'GdipAddPathCurve2I': (4, ['GPPATH*', 'GDIPCONST GPPOINT*', 'INT', 'REAL'], ['path', 'points', 'count', 'tension'], 'GpStatus'), 'GdipAddPathCurve3I': (6, ['GPPATH*', 'GDIPCONST GPPOINT*', 'INT', 'INT', 'INT', 'REAL'], ['path', 'points', 'count', 'offset', 'numberOfSegments', 'tension'], 'GpStatus'), 'GdipAddPathClosedCurveI': (3, ['GPPATH*', 'GDIPCONST GPPOINT*', 'INT'], ['path', 'points', 'count'], 'GpStatus'), 'GdipAddPathClosedCurve2I': (4, ['GPPATH*', 'GDIPCONST GPPOINT*', 'INT', 'REAL'], ['path', 'points', 'count', 'tension'], 'GpStatus'), 'GdipAddPathRectangleI': (5, ['GPPATH*', 'INT', 'INT', 'INT', 'INT'], ['path', 'x', 'y', 'width', 'height'], 'GpStatus'), 'GdipAddPathRectanglesI': (3, ['GPPATH*', 'GDIPCONST GPRECT*', 'INT'], ['path', 'rects', 'count'], 'GpStatus'), 'GdipAddPathEllipseI': (5, ['GPPATH*', 'INT', 'INT', 'INT', 'INT'], ['path', 'x', 'y', 'width', 'height'], 'GpStatus'), 'GdipAddPathPieI': (7, ['GPPATH*', 'INT', 'INT', 'INT', 'INT', 'REAL', 'REAL'], ['path', 'x', 'y', 'width', 'height', 'startAngle', 'sweepAngle'], 'GpStatus'), 'GdipAddPathPolygonI': (3, ['GPPATH*', 'GDIPCONST GPPOINT*', 'INT'], ['path', 'points', 'count'], 'GpStatus'), 'GdipFlattenPath': (3, ['GPPATH*', 'GPMATRIX*', 'REAL'], ['path', 'matrix', 'flatness'], 'GpStatus'), 'GdipWindingModeOutline': (3, ['GPPATH*', 'GPMATRIX*', 'REAL'], ['path', 'matrix', 'flatness'], 'GpStatus'), 'GdipWidenPath': (4, ['GPPATH*', 'GPPEN*', 'GPMATRIX*', 'REAL'], ['nativePath', 'pen', 'matrix', 'flatness'], 'GpStatus'), 'GdipWarpPath': (10, ['GPPATH*', 'GPMATRIX*', 'GDIPCONST GPPOINTF*', 'INT', 'REAL', 'REAL', 'REAL', 'REAL', 'WARPMODE', 'REAL'], ['path', 'matrix', 'points', 'count', 'srcx', 'srcy', 'srcwidth', 'srcheight', 'warpMode', 'flatness'], 'GpStatus'), 'GdipTransformPath': (2, ['GPPATH*', 'GPMATRIX*'], ['path', 'matrix'], 'GpStatus'), 'GdipGetPathWorldBounds': (4, ['GPPATH*', 'GPRECTF*', 'GDIPCONST GPMATRIX*', 'GDIPCONST GPPEN*'], ['path', 'bounds', 'matrix', 'pen'], 'GpStatus'), 'GdipGetPathWorldBoundsI': (4, ['GPPATH*', 'GPRECT*', 'GDIPCONST GPMATRIX*', 'GDIPCONST GPPEN*'], ['path', 'bounds', 'matrix', 'pen'], 'GpStatus'), 'GdipIsVisiblePathPoint': (5, ['GPPATH*', 'REAL', 'REAL', 'GPGRAPHICS*', 'BOOL*'], ['path', 'x', 'y', 'graphics', 'result'], 'GpStatus'), 'GdipIsVisiblePathPointI': (5, ['GPPATH*', 'INT', 'INT', 'GPGRAPHICS*', 'BOOL*'], ['path', 'x', 'y', 'graphics', 'result'], 'GpStatus'), 'GdipIsOutlineVisiblePathPoint': (6, ['GPPATH*', 'REAL', 'REAL', 'GPPEN*', 'GPGRAPHICS*', 'BOOL*'], ['path', 'x', 'y', 'pen', 'graphics', 'result'], 'GpStatus'), 'GdipIsOutlineVisiblePathPointI': (6, ['GPPATH*', 'INT', 'INT', 'GPPEN*', 'GPGRAPHICS*', 'BOOL*'], ['path', 'x', 'y', 'pen', 'graphics', 'result'], 'GpStatus'), 'GdipCreatePathIter': (2, ['GPPATHITERATOR**', 'GPPATH*'], ['iterator', 'path'], 'GpStatus'), 'GdipDeletePathIter': (1, ['GPPATHITERATOR*'], ['iterator'], 'GpStatus'), 'GdipPathIterNextSubpath': (5, ['GPPATHITERATOR*', 'INT*', 'INT*', 'INT*', 'BOOL*'], ['iterator', 'resultCount', 'startIndex', 'endIndex', 'isClosed'], 'GpStatus'), 'GdipPathIterNextSubpathPath': (4, ['GPPATHITERATOR*', 'INT*', 'GPPATH*', 'BOOL*'], ['iterator', 'resultCount', 'path', 'isClosed'], 'GpStatus'), 'GdipPathIterNextPathType': (5, ['GPPATHITERATOR*', 'INT*', 'PATHPOINTTYPE*', 'INT*', 'INT*'], ['iterator', 'resultCount', 'pathType', 'startIndex', 'endIndex'], 'GpStatus'), 'GdipPathIterNextMarker': (4, ['GPPATHITERATOR*', 'INT*', 'INT*', 'INT*'], ['iterator', 'resultCount', 'startIndex', 'endIndex'], 'GpStatus'), 'GdipPathIterNextMarkerPath': (3, ['GPPATHITERATOR*', 'INT*', 'GPPATH*'], ['iterator', 'resultCount', 'path'], 'GpStatus'), 'GdipPathIterGetCount': (2, ['GPPATHITERATOR*', 'INT*'], ['iterator', 'count'], 'GpStatus'), 'GdipPathIterGetSubpathCount': (2, ['GPPATHITERATOR*', 'INT*'], ['iterator', 'count'], 'GpStatus'), 'GdipPathIterIsValid': (2, ['GPPATHITERATOR*', 'BOOL*'], ['iterator', 'valid'], 'GpStatus'), 'GdipPathIterHasCurve': (2, ['GPPATHITERATOR*', 'BOOL*'], ['iterator', 'hasCurve'], 'GpStatus'), 'GdipPathIterRewind': (1, ['GPPATHITERATOR*'], ['iterator'], 'GpStatus'), 'GdipPathIterEnumerate': (5, ['GPPATHITERATOR*', 'INT*', 'GPPOINTF*', 'PATHPOINTTYPE*', 'INT'], ['iterator', 'resultCount', 'points', 'types', 'count'], 'GpStatus'), 'GdipPathIterCopyData': (6, ['GPPATHITERATOR*', 'INT*', 'GPPOINTF*', 'PATHPOINTTYPE*', 'INT', 'INT'], ['iterator', 'resultCount', 'points', 'types', 'startIndex', 'endIndex'], 'GpStatus'), 'GdipCreateMatrix': (1, ['GPMATRIX**'], ['matrix'], 'GpStatus'), 'GdipCreateMatrix2': (7, ['REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'GPMATRIX**'], ['m11', 'm12', 'm21', 'm22', 'dx', 'dy', 'matrix'], 'GpStatus'), 'GdipCreateMatrix3': (3, ['GDIPCONST GPRECTF*', 'GDIPCONST GPPOINTF*', 'GPMATRIX**'], ['rect', 'dstplg', 'matrix'], 'GpStatus'), 'GdipCreateMatrix3I': (3, ['GDIPCONST GPRECT*', 'GDIPCONST GPPOINT*', 'GPMATRIX**'], ['rect', 'dstplg', 'matrix'], 'GpStatus'), 'GdipCloneMatrix': (2, ['GPMATRIX*', 'GPMATRIX**'], ['matrix', 'cloneMatrix'], 'GpStatus'), 'GdipDeleteMatrix': (1, ['GPMATRIX*'], ['matrix'], 'GpStatus'), 'GdipSetMatrixElements': (7, ['GPMATRIX*', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL'], ['matrix', 'm11', 'm12', 'm21', 'm22', 'dx', 'dy'], 'GpStatus'), 'GdipMultiplyMatrix': (3, ['GPMATRIX*', 'GPMATRIX*', 'GPMATRIXORDER'], ['matrix', 'matrix2', 'order'], 'GpStatus'), 'GdipTranslateMatrix': (4, ['GPMATRIX*', 'REAL', 'REAL', 'GPMATRIXORDER'], ['matrix', 'offsetX', 'offsetY', 'order'], 'GpStatus'), 'GdipScaleMatrix': (4, ['GPMATRIX*', 'REAL', 'REAL', 'GPMATRIXORDER'], ['matrix', 'scaleX', 'scaleY', 'order'], 'GpStatus'), 'GdipRotateMatrix': (3, ['GPMATRIX*', 'REAL', 'GPMATRIXORDER'], ['matrix', 'angle', 'order'], 'GpStatus'), 'GdipShearMatrix': (4, ['GPMATRIX*', 'REAL', 'REAL', 'GPMATRIXORDER'], ['matrix', 'shearX', 'shearY', 'order'], 'GpStatus'), 'GdipInvertMatrix': (1, ['GPMATRIX*'], ['matrix'], 'GpStatus'), 'GdipTransformMatrixPoints': (3, ['GPMATRIX*', 'GPPOINTF*', 'INT'], ['matrix', 'pts', 'count'], 'GpStatus'), 'GdipTransformMatrixPointsI': (3, ['GPMATRIX*', 'GPPOINT*', 'INT'], ['matrix', 'pts', 'count'], 'GpStatus'), 'GdipVectorTransformMatrixPoints': (3, ['GPMATRIX*', 'GPPOINTF*', 'INT'], ['matrix', 'pts', 'count'], 'GpStatus'), 'GdipVectorTransformMatrixPointsI': (3, ['GPMATRIX*', 'GPPOINT*', 'INT'], ['matrix', 'pts', 'count'], 'GpStatus'), 'GdipGetMatrixElements': (2, ['GDIPCONST GPMATRIX*', 'REAL*'], ['matrix', 'matrixOut'], 'GpStatus'), 'GdipIsMatrixInvertible': (2, ['GDIPCONST GPMATRIX*', 'BOOL*'], ['matrix', 'result'], 'GpStatus'), 'GdipIsMatrixIdentity': (2, ['GDIPCONST GPMATRIX*', 'BOOL*'], ['matrix', 'result'], 'GpStatus'), 'GdipIsMatrixEqual': (3, ['GDIPCONST GPMATRIX*', 'GDIPCONST GPMATRIX*', 'BOOL*'], ['matrix', 'matrix2', 'result'], 'GpStatus'), 'GdipCreateRegion': (1, ['GPREGION**'], ['region'], 'GpStatus'), 'GdipCreateRegionRect': (2, ['GDIPCONST GPRECTF*', 'GPREGION**'], ['rect', 'region'], 'GpStatus'), 'GdipCreateRegionRectI': (2, ['GDIPCONST GPRECT*', 'GPREGION**'], ['rect', 'region'], 'GpStatus'), 'GdipCreateRegionPath': (2, ['GPPATH*', 'GPREGION**'], ['path', 'region'], 'GpStatus'), 'GdipCreateRegionRgnData': (3, ['GDIPCONST BYTE*', 'INT', 'GPREGION**'], ['regionData', 'size', 'region'], 'GpStatus'), 'GdipCreateRegionHrgn': (2, ['HRGN', 'GPREGION**'], ['hRgn', 'region'], 'GpStatus'), 'GdipCloneRegion': (2, ['GPREGION*', 'GPREGION**'], ['region', 'cloneRegion'], 'GpStatus'), 'GdipDeleteRegion': (1, ['GPREGION*'], ['region'], 'GpStatus'), 'GdipSetInfinite': (1, ['GPREGION*'], ['region'], 'GpStatus'), 'GdipSetEmpty': (1, ['GPREGION*'], ['region'], 'GpStatus'), 'GdipCombineRegionRect': (3, ['GPREGION*', 'GDIPCONST GPRECTF*', 'COMBINEMODE'], ['region', 'rect', 'combineMode'], 'GpStatus'), 'GdipCombineRegionRectI': (3, ['GPREGION*', 'GDIPCONST GPRECT*', 'COMBINEMODE'], ['region', 'rect', 'combineMode'], 'GpStatus'), 'GdipCombineRegionPath': (3, ['GPREGION*', 'GPPATH*', 'COMBINEMODE'], ['region', 'path', 'combineMode'], 'GpStatus'), 'GdipCombineRegionRegion': (3, ['GPREGION*', 'GPREGION*', 'COMBINEMODE'], ['region', 'region2', 'combineMode'], 'GpStatus'), 'GdipTranslateRegion': (3, ['GPREGION*', 'REAL', 'REAL'], ['region', 'dx', 'dy'], 'GpStatus'), 'GdipTranslateRegionI': (3, ['GPREGION*', 'INT', 'INT'], ['region', 'dx', 'dy'], 'GpStatus'), 'GdipTransformRegion': (2, ['GPREGION*', 'GPMATRIX*'], ['region', 'matrix'], 'GpStatus'), 'GdipGetRegionBounds': (3, ['GPREGION*', 'GPGRAPHICS*', 'GPRECTF*'], ['region', 'graphics', 'rect'], 'GpStatus'), 'GdipGetRegionBoundsI': (3, ['GPREGION*', 'GPGRAPHICS*', 'GPRECT*'], ['region', 'graphics', 'rect'], 'GpStatus'), 'GdipGetRegionHRgn': (3, ['GPREGION*', 'GPGRAPHICS*', 'HRGN*'], ['region', 'graphics', 'hRgn'], 'GpStatus'), 'GdipIsEmptyRegion': (3, ['GPREGION*', 'GPGRAPHICS*', 'BOOL*'], ['region', 'graphics', 'result'], 'GpStatus'), 'GdipIsInfiniteRegion': (3, ['GPREGION*', 'GPGRAPHICS*', 'BOOL*'], ['region', 'graphics', 'result'], 'GpStatus'), 'GdipIsEqualRegion': (4, ['GPREGION*', 'GPREGION*', 'GPGRAPHICS*', 'BOOL*'], ['region', 'region2', 'graphics', 'result'], 'GpStatus'), 'GdipGetRegionDataSize': (2, ['GPREGION*', 'UINT*'], ['region', 'bufferSize'], 'GpStatus'), 'GdipGetRegionData': (4, ['GPREGION*', 'BYTE*', 'UINT', 'UINT*'], ['region', 'buffer', 'bufferSize', 'sizeFilled'], 'GpStatus'), 'GdipIsVisibleRegionPoint': (5, ['GPREGION*', 'REAL', 'REAL', 'GPGRAPHICS*', 'BOOL*'], ['region', 'x', 'y', 'graphics', 'result'], 'GpStatus'), 'GdipIsVisibleRegionPointI': (5, ['GPREGION*', 'INT', 'INT', 'GPGRAPHICS*', 'BOOL*'], ['region', 'x', 'y', 'graphics', 'result'], 'GpStatus'), 'GdipIsVisibleRegionRect': (7, ['GPREGION*', 'REAL', 'REAL', 'REAL', 'REAL', 'GPGRAPHICS*', 'BOOL*'], ['region', 'x', 'y', 'width', 'height', 'graphics', 'result'], 'GpStatus'), 'GdipIsVisibleRegionRectI': (7, ['GPREGION*', 'INT', 'INT', 'INT', 'INT', 'GPGRAPHICS*', 'BOOL*'], ['region', 'x', 'y', 'width', 'height', 'graphics', 'result'], 'GpStatus'), 'GdipGetRegionScansCount': (3, ['GPREGION*', 'UINT*', 'GPMATRIX*'], ['region', 'count', 'matrix'], 'GpStatus'), 'GdipGetRegionScans': (4, ['GPREGION*', 'GPRECTF*', 'INT*', 'GPMATRIX*'], ['region', 'rects', 'count', 'matrix'], 'GpStatus'), 'GdipGetRegionScansI': (4, ['GPREGION*', 'GPRECT*', 'INT*', 'GPMATRIX*'], ['region', 'rects', 'count', 'matrix'], 'GpStatus'), 'GdipCloneBrush': (2, ['GPBRUSH*', 'GPBRUSH**'], ['brush', 'cloneBrush'], 'GpStatus'), 'GdipDeleteBrush': (1, ['GPBRUSH*'], ['brush'], 'GpStatus'), 'GdipGetBrushType': (2, ['GPBRUSH*', 'GPBRUSHTYPE*'], ['brush', 'type'], 'GpStatus'), 'GdipCreateHatchBrush': (4, ['GPHATCHSTYLE', 'ARGB', 'ARGB', 'GPHATCH**'], ['hatchstyle', 'forecol', 'backcol', 'brush'], 'GpStatus'), 'GdipGetHatchStyle': (2, ['GPHATCH*', 'GPHATCHSTYLE*'], ['brush', 'hatchstyle'], 'GpStatus'), 'GdipGetHatchForegroundColor': (2, ['GPHATCH*', 'ARGB*'], ['brush', 'forecol'], 'GpStatus'), 'GdipGetHatchBackgroundColor': (2, ['GPHATCH*', 'ARGB*'], ['brush', 'backcol'], 'GpStatus'), 'GdipCreateTexture': (3, ['GPIMAGE*', 'GPWRAPMODE', 'GPTEXTURE**'], ['image', 'wrapmode', 'texture'], 'GpStatus'), 'GdipCreateTexture2': (7, ['GPIMAGE*', 'GPWRAPMODE', 'REAL', 'REAL', 'REAL', 'REAL', 'GPTEXTURE**'], ['image', 'wrapmode', 'x', 'y', 'width', 'height', 'texture'], 'GpStatus'), 'GdipCreateTextureIA': (7, ['GPIMAGE*', 'GDIPCONST GPIMAGEATTRIBUTES*', 'REAL', 'REAL', 'REAL', 'REAL', 'GPTEXTURE**'], ['image', 'imageAttributes', 'x', 'y', 'width', 'height', 'texture'], 'GpStatus'), 'GdipCreateTexture2I': (7, ['GPIMAGE*', 'GPWRAPMODE', 'INT', 'INT', 'INT', 'INT', 'GPTEXTURE**'], ['image', 'wrapmode', 'x', 'y', 'width', 'height', 'texture'], 'GpStatus'), 'GdipCreateTextureIAI': (7, ['GPIMAGE*', 'GDIPCONST GPIMAGEATTRIBUTES*', 'INT', 'INT', 'INT', 'INT', 'GPTEXTURE**'], ['image', 'imageAttributes', 'x', 'y', 'width', 'height', 'texture'], 'GpStatus'), 'GdipGetTextureTransform': (2, ['GPTEXTURE*', 'GPMATRIX*'], ['brush', 'matrix'], 'GpStatus'), 'GdipSetTextureTransform': (2, ['GPTEXTURE*', 'GDIPCONST GPMATRIX*'], ['brush', 'matrix'], 'GpStatus'), 'GdipResetTextureTransform': (1, ['GPTEXTURE*'], ['brush'], 'GpStatus'), 'GdipMultiplyTextureTransform': (3, ['GPTEXTURE*', 'GDIPCONST GPMATRIX*', 'GPMATRIXORDER'], ['brush', 'matrix', 'order'], 'GpStatus'), 'GdipTranslateTextureTransform': (4, ['GPTEXTURE*', 'REAL', 'REAL', 'GPMATRIXORDER'], ['brush', 'dx', 'dy', 'order'], 'GpStatus'), 'GdipScaleTextureTransform': (4, ['GPTEXTURE*', 'REAL', 'REAL', 'GPMATRIXORDER'], ['brush', 'sx', 'sy', 'order'], 'GpStatus'), 'GdipRotateTextureTransform': (3, ['GPTEXTURE*', 'REAL', 'GPMATRIXORDER'], ['brush', 'angle', 'order'], 'GpStatus'), 'GdipSetTextureWrapMode': (2, ['GPTEXTURE*', 'GPWRAPMODE'], ['brush', 'wrapmode'], 'GpStatus'), 'GdipGetTextureWrapMode': (2, ['GPTEXTURE*', 'GPWRAPMODE*'], ['brush', 'wrapmode'], 'GpStatus'), 'GdipGetTextureImage': (2, ['GPTEXTURE*', 'GPIMAGE**'], ['brush', 'image'], 'GpStatus'), 'GdipCreateSolidFill': (2, ['ARGB', 'GPSOLIDFILL**'], ['color', 'brush'], 'GpStatus'), 'GdipSetSolidFillColor': (2, ['GPSOLIDFILL*', 'ARGB'], ['brush', 'color'], 'GpStatus'), 'GdipGetSolidFillColor': (2, ['GPSOLIDFILL*', 'ARGB*'], ['brush', 'color'], 'GpStatus'), 'GdipCreateLineBrush': (6, ['GDIPCONST GPPOINTF*', 'GDIPCONST GPPOINTF*', 'ARGB', 'ARGB', 'GPWRAPMODE', 'GPLINEGRADIENT**'], ['point1', 'point2', 'color1', 'color2', 'wrapMode', 'lineGradient'], 'GpStatus'), 'GdipCreateLineBrushI': (6, ['GDIPCONST GPPOINT*', 'GDIPCONST GPPOINT*', 'ARGB', 'ARGB', 'GPWRAPMODE', 'GPLINEGRADIENT**'], ['point1', 'point2', 'color1', 'color2', 'wrapMode', 'lineGradient'], 'GpStatus'), 'GdipCreateLineBrushFromRect': (6, ['GDIPCONST GPRECTF*', 'ARGB', 'ARGB', 'LINEARGRADIENTMODE', 'GPWRAPMODE', 'GPLINEGRADIENT**'], ['rect', 'color1', 'color2', 'mode', 'wrapMode', 'lineGradient'], 'GpStatus'), 'GdipCreateLineBrushFromRectI': (6, ['GDIPCONST GPRECT*', 'ARGB', 'ARGB', 'LINEARGRADIENTMODE', 'GPWRAPMODE', 'GPLINEGRADIENT**'], ['rect', 'color1', 'color2', 'mode', 'wrapMode', 'lineGradient'], 'GpStatus'), 'GdipCreateLineBrushFromRectWithAngle': (7, ['GDIPCONST GPRECTF*', 'ARGB', 'ARGB', 'REAL', 'BOOL', 'GPWRAPMODE', 'GPLINEGRADIENT**'], ['rect', 'color1', 'color2', 'angle', 'isAngleScalable', 'wrapMode', 'lineGradient'], 'GpStatus'), 'GdipCreateLineBrushFromRectWithAngleI': (7, ['GDIPCONST GPRECT*', 'ARGB', 'ARGB', 'REAL', 'BOOL', 'GPWRAPMODE', 'GPLINEGRADIENT**'], ['rect', 'color1', 'color2', 'angle', 'isAngleScalable', 'wrapMode', 'lineGradient'], 'GpStatus'), 'GdipSetLineColors': (3, ['GPLINEGRADIENT*', 'ARGB', 'ARGB'], ['brush', 'color1', 'color2'], 'GpStatus'), 'GdipGetLineColors': (2, ['GPLINEGRADIENT*', 'ARGB*'], ['brush', 'colors'], 'GpStatus'), 'GdipGetLineRect': (2, ['GPLINEGRADIENT*', 'GPRECTF*'], ['brush', 'rect'], 'GpStatus'), 'GdipGetLineRectI': (2, ['GPLINEGRADIENT*', 'GPRECT*'], ['brush', 'rect'], 'GpStatus'), 'GdipSetLineGammaCorrection': (2, ['GPLINEGRADIENT*', 'BOOL'], ['brush', 'useGammaCorrection'], 'GpStatus'), 'GdipGetLineGammaCorrection': (2, ['GPLINEGRADIENT*', 'BOOL*'], ['brush', 'useGammaCorrection'], 'GpStatus'), 'GdipGetLineBlendCount': (2, ['GPLINEGRADIENT*', 'INT*'], ['brush', 'count'], 'GpStatus'), 'GdipGetLineBlend': (4, ['GPLINEGRADIENT*', 'REAL*', 'REAL*', 'INT'], ['brush', 'blend', 'positions', 'count'], 'GpStatus'), 'GdipSetLineBlend': (4, ['GPLINEGRADIENT*', 'GDIPCONST REAL*', 'GDIPCONST REAL*', 'INT'], ['brush', 'blend', 'positions', 'count'], 'GpStatus'), 'GdipGetLinePresetBlendCount': (2, ['GPLINEGRADIENT*', 'INT*'], ['brush', 'count'], 'GpStatus'), 'GdipGetLinePresetBlend': (4, ['GPLINEGRADIENT*', 'ARGB*', 'REAL*', 'INT'], ['brush', 'blend', 'positions', 'count'], 'GpStatus'), 'GdipSetLinePresetBlend': (4, ['GPLINEGRADIENT*', 'GDIPCONST ARGB*', 'GDIPCONST REAL*', 'INT'], ['brush', 'blend', 'positions', 'count'], 'GpStatus'), 'GdipSetLineSigmaBlend': (3, ['GPLINEGRADIENT*', 'REAL', 'REAL'], ['brush', 'focus', 'scale'], 'GpStatus'), 'GdipSetLineLinearBlend': (3, ['GPLINEGRADIENT*', 'REAL', 'REAL'], ['brush', 'focus', 'scale'], 'GpStatus'), 'GdipSetLineWrapMode': (2, ['GPLINEGRADIENT*', 'GPWRAPMODE'], ['brush', 'wrapmode'], 'GpStatus'), 'GdipGetLineWrapMode': (2, ['GPLINEGRADIENT*', 'GPWRAPMODE*'], ['brush', 'wrapmode'], 'GpStatus'), 'GdipGetLineTransform': (2, ['GPLINEGRADIENT*', 'GPMATRIX*'], ['brush', 'matrix'], 'GpStatus'), 'GdipSetLineTransform': (2, ['GPLINEGRADIENT*', 'GDIPCONST GPMATRIX*'], ['brush', 'matrix'], 'GpStatus'), 'GdipResetLineTransform': (1, ['GPLINEGRADIENT*'], ['brush'], 'GpStatus'), 'GdipMultiplyLineTransform': (3, ['GPLINEGRADIENT*', 'GDIPCONST GPMATRIX*', 'GPMATRIXORDER'], ['brush', 'matrix', 'order'], 'GpStatus'), 'GdipTranslateLineTransform': (4, ['GPLINEGRADIENT*', 'REAL', 'REAL', 'GPMATRIXORDER'], ['brush', 'dx', 'dy', 'order'], 'GpStatus'), 'GdipScaleLineTransform': (4, ['GPLINEGRADIENT*', 'REAL', 'REAL', 'GPMATRIXORDER'], ['brush', 'sx', 'sy', 'order'], 'GpStatus'), 'GdipRotateLineTransform': (3, ['GPLINEGRADIENT*', 'REAL', 'GPMATRIXORDER'], ['brush', 'angle', 'order'], 'GpStatus'), 'GdipCreatePathGradient': (4, ['GDIPCONST GPPOINTF*', 'INT', 'GPWRAPMODE', 'GPPATHGRADIENT**'], ['points', 'count', 'wrapMode', 'polyGradient'], 'GpStatus'), 'GdipCreatePathGradientI': (4, ['GDIPCONST GPPOINT*', 'INT', 'GPWRAPMODE', 'GPPATHGRADIENT**'], ['points', 'count', 'wrapMode', 'polyGradient'], 'GpStatus'), 'GdipCreatePathGradientFromPath': (2, ['GDIPCONST GPPATH*', 'GPPATHGRADIENT**'], ['path', 'polyGradient'], 'GpStatus'), 'GdipGetPathGradientCenterColor': (2, ['GPPATHGRADIENT*', 'ARGB*'], ['brush', 'colors'], 'GpStatus'), 'GdipSetPathGradientCenterColor': (2, ['GPPATHGRADIENT*', 'ARGB'], ['brush', 'colors'], 'GpStatus'), 'GdipGetPathGradientSurroundColorsWithCount': (3, ['GPPATHGRADIENT*', 'ARGB*', 'INT*'], ['brush', 'color', 'count'], 'GpStatus'), 'GdipSetPathGradientSurroundColorsWithCount': (3, ['GPPATHGRADIENT*', 'GDIPCONST ARGB*', 'INT*'], ['brush', 'color', 'count'], 'GpStatus'), 'GdipGetPathGradientPath': (2, ['GPPATHGRADIENT*', 'GPPATH*'], ['brush', 'path'], 'GpStatus'), 'GdipSetPathGradientPath': (2, ['GPPATHGRADIENT*', 'GDIPCONST GPPATH*'], ['brush', 'path'], 'GpStatus'), 'GdipGetPathGradientCenterPoint': (2, ['GPPATHGRADIENT*', 'GPPOINTF*'], ['brush', 'points'], 'GpStatus'), 'GdipGetPathGradientCenterPointI': (2, ['GPPATHGRADIENT*', 'GPPOINT*'], ['brush', 'points'], 'GpStatus'), 'GdipSetPathGradientCenterPoint': (2, ['GPPATHGRADIENT*', 'GDIPCONST GPPOINTF*'], ['brush', 'points'], 'GpStatus'), 'GdipSetPathGradientCenterPointI': (2, ['GPPATHGRADIENT*', 'GDIPCONST GPPOINT*'], ['brush', 'points'], 'GpStatus'), 'GdipGetPathGradientRect': (2, ['GPPATHGRADIENT*', 'GPRECTF*'], ['brush', 'rect'], 'GpStatus'), 'GdipGetPathGradientRectI': (2, ['GPPATHGRADIENT*', 'GPRECT*'], ['brush', 'rect'], 'GpStatus'), 'GdipGetPathGradientPointCount': (2, ['GPPATHGRADIENT*', 'INT*'], ['brush', 'count'], 'GpStatus'), 'GdipGetPathGradientSurroundColorCount': (2, ['GPPATHGRADIENT*', 'INT*'], ['brush', 'count'], 'GpStatus'), 'GdipSetPathGradientGammaCorrection': (2, ['GPPATHGRADIENT*', 'BOOL'], ['brush', 'useGammaCorrection'], 'GpStatus'), 'GdipGetPathGradientGammaCorrection': (2, ['GPPATHGRADIENT*', 'BOOL*'], ['brush', 'useGammaCorrection'], 'GpStatus'), 'GdipGetPathGradientBlendCount': (2, ['GPPATHGRADIENT*', 'INT*'], ['brush', 'count'], 'GpStatus'), 'GdipGetPathGradientBlend': (4, ['GPPATHGRADIENT*', 'REAL*', 'REAL*', 'INT'], ['brush', 'blend', 'positions', 'count'], 'GpStatus'), 'GdipSetPathGradientBlend': (4, ['GPPATHGRADIENT*', 'GDIPCONST REAL*', 'GDIPCONST REAL*', 'INT'], ['brush', 'blend', 'positions', 'count'], 'GpStatus'), 'GdipGetPathGradientPresetBlendCount': (2, ['GPPATHGRADIENT*', 'INT*'], ['brush', 'count'], 'GpStatus'), 'GdipGetPathGradientPresetBlend': (4, ['GPPATHGRADIENT*', 'ARGB*', 'REAL*', 'INT'], ['brush', 'blend', 'positions', 'count'], 'GpStatus'), 'GdipSetPathGradientPresetBlend': (4, ['GPPATHGRADIENT*', 'GDIPCONST ARGB*', 'GDIPCONST REAL*', 'INT'], ['brush', 'blend', 'positions', 'count'], 'GpStatus'), 'GdipSetPathGradientSigmaBlend': (3, ['GPPATHGRADIENT*', 'REAL', 'REAL'], ['brush', 'focus', 'scale'], 'GpStatus'), 'GdipSetPathGradientLinearBlend': (3, ['GPPATHGRADIENT*', 'REAL', 'REAL'], ['brush', 'focus', 'scale'], 'GpStatus'), 'GdipGetPathGradientWrapMode': (2, ['GPPATHGRADIENT*', 'GPWRAPMODE*'], ['brush', 'wrapmode'], 'GpStatus'), 'GdipSetPathGradientWrapMode': (2, ['GPPATHGRADIENT*', 'GPWRAPMODE'], ['brush', 'wrapmode'], 'GpStatus'), 'GdipGetPathGradientTransform': (2, ['GPPATHGRADIENT*', 'GPMATRIX*'], ['brush', 'matrix'], 'GpStatus'), 'GdipSetPathGradientTransform': (2, ['GPPATHGRADIENT*', 'GPMATRIX*'], ['brush', 'matrix'], 'GpStatus'), 'GdipResetPathGradientTransform': (1, ['GPPATHGRADIENT*'], ['brush'], 'GpStatus'), 'GdipMultiplyPathGradientTransform': (3, ['GPPATHGRADIENT*', 'GDIPCONST GPMATRIX*', 'GPMATRIXORDER'], ['brush', 'matrix', 'order'], 'GpStatus'), 'GdipTranslatePathGradientTransform': (4, ['GPPATHGRADIENT*', 'REAL', 'REAL', 'GPMATRIXORDER'], ['brush', 'dx', 'dy', 'order'], 'GpStatus'), 'GdipScalePathGradientTransform': (4, ['GPPATHGRADIENT*', 'REAL', 'REAL', 'GPMATRIXORDER'], ['brush', 'sx', 'sy', 'order'], 'GpStatus'), 'GdipRotatePathGradientTransform': (3, ['GPPATHGRADIENT*', 'REAL', 'GPMATRIXORDER'], ['brush', 'angle', 'order'], 'GpStatus'), 'GdipGetPathGradientFocusScales': (3, ['GPPATHGRADIENT*', 'REAL*', 'REAL*'], ['brush', 'xScale', 'yScale'], 'GpStatus'), 'GdipSetPathGradientFocusScales': (3, ['GPPATHGRADIENT*', 'REAL', 'REAL'], ['brush', 'xScale', 'yScale'], 'GpStatus'), 'GdipCreatePen1': (4, ['ARGB', 'REAL', 'GPUNIT', 'GPPEN**'], ['color', 'width', 'unit', 'pen'], 'GpStatus'), 'GdipCreatePen2': (4, ['GPBRUSH*', 'REAL', 'GPUNIT', 'GPPEN**'], ['brush', 'width', 'unit', 'pen'], 'GpStatus'), 'GdipClonePen': (2, ['GPPEN*', 'GPPEN**'], ['pen', 'clonepen'], 'GpStatus'), 'GdipDeletePen': (1, ['GPPEN*'], ['pen'], 'GpStatus'), 'GdipSetPenWidth': (2, ['GPPEN*', 'REAL'], ['pen', 'width'], 'GpStatus'), 'GdipGetPenWidth': (2, ['GPPEN*', 'REAL*'], ['pen', 'width'], 'GpStatus'), 'GdipSetPenUnit': (2, ['GPPEN*', 'GPUNIT'], ['pen', 'unit'], 'GpStatus'), 'GdipGetPenUnit': (2, ['GPPEN*', 'GPUNIT*'], ['pen', 'unit'], 'GpStatus'), 'GdipSetPenLineCap197819': (4, ['GPPEN*', 'GPLINECAP', 'GPLINECAP', 'GPDASHCAP'], ['pen', 'startCap', 'endCap', 'dashCap'], 'GpStatus'), 'GdipSetPenStartCap': (2, ['GPPEN*', 'GPLINECAP'], ['pen', 'startCap'], 'GpStatus'), 'GdipSetPenEndCap': (2, ['GPPEN*', 'GPLINECAP'], ['pen', 'endCap'], 'GpStatus'), 'GdipSetPenDashCap197819': (2, ['GPPEN*', 'GPDASHCAP'], ['pen', 'dashCap'], 'GpStatus'), 'GdipGetPenStartCap': (2, ['GPPEN*', 'GPLINECAP*'], ['pen', 'startCap'], 'GpStatus'), 'GdipGetPenEndCap': (2, ['GPPEN*', 'GPLINECAP*'], ['pen', 'endCap'], 'GpStatus'), 'GdipGetPenDashCap197819': (2, ['GPPEN*', 'GPDASHCAP*'], ['pen', 'dashCap'], 'GpStatus'), 'GdipSetPenLineJoin': (2, ['GPPEN*', 'GPLINEJOIN'], ['pen', 'lineJoin'], 'GpStatus'), 'GdipGetPenLineJoin': (2, ['GPPEN*', 'GPLINEJOIN*'], ['pen', 'lineJoin'], 'GpStatus'), 'GdipSetPenCustomStartCap': (2, ['GPPEN*', 'GPCUSTOMLINECAP*'], ['pen', 'customCap'], 'GpStatus'), 'GdipGetPenCustomStartCap': (2, ['GPPEN*', 'GPCUSTOMLINECAP**'], ['pen', 'customCap'], 'GpStatus'), 'GdipSetPenCustomEndCap': (2, ['GPPEN*', 'GPCUSTOMLINECAP*'], ['pen', 'customCap'], 'GpStatus'), 'GdipGetPenCustomEndCap': (2, ['GPPEN*', 'GPCUSTOMLINECAP**'], ['pen', 'customCap'], 'GpStatus'), 'GdipSetPenMiterLimit': (2, ['GPPEN*', 'REAL'], ['pen', 'miterLimit'], 'GpStatus'), 'GdipGetPenMiterLimit': (2, ['GPPEN*', 'REAL*'], ['pen', 'miterLimit'], 'GpStatus'), 'GdipSetPenMode': (2, ['GPPEN*', 'GPPENALIGNMENT'], ['pen', 'penMode'], 'GpStatus'), 'GdipGetPenMode': (2, ['GPPEN*', 'GPPENALIGNMENT*'], ['pen', 'penMode'], 'GpStatus'), 'GdipSetPenTransform': (2, ['GPPEN*', 'GPMATRIX*'], ['pen', 'matrix'], 'GpStatus'), 'GdipGetPenTransform': (2, ['GPPEN*', 'GPMATRIX*'], ['pen', 'matrix'], 'GpStatus'), 'GdipResetPenTransform': (1, ['GPPEN*'], ['pen'], 'GpStatus'), 'GdipMultiplyPenTransform': (3, ['GPPEN*', 'GDIPCONST GPMATRIX*', 'GPMATRIXORDER'], ['pen', 'matrix', 'order'], 'GpStatus'), 'GdipTranslatePenTransform': (4, ['GPPEN*', 'REAL', 'REAL', 'GPMATRIXORDER'], ['pen', 'dx', 'dy', 'order'], 'GpStatus'), 'GdipScalePenTransform': (4, ['GPPEN*', 'REAL', 'REAL', 'GPMATRIXORDER'], ['pen', 'sx', 'sy', 'order'], 'GpStatus'), 'GdipRotatePenTransform': (3, ['GPPEN*', 'REAL', 'GPMATRIXORDER'], ['pen', 'angle', 'order'], 'GpStatus'), 'GdipSetPenColor': (2, ['GPPEN*', 'ARGB'], ['pen', 'argb'], 'GpStatus'), 'GdipGetPenColor': (2, ['GPPEN*', 'ARGB*'], ['pen', 'argb'], 'GpStatus'), 'GdipSetPenBrushFill': (2, ['GPPEN*', 'GPBRUSH*'], ['pen', 'brush'], 'GpStatus'), 'GdipGetPenBrushFill': (2, ['GPPEN*', 'GPBRUSH**'], ['pen', 'brush'], 'GpStatus'), 'GdipGetPenFillType': (2, ['GPPEN*', 'GPPENTYPE*'], ['pen', 'type'], 'GpStatus'), 'GdipGetPenDashStyle': (2, ['GPPEN*', 'GPDASHSTYLE*'], ['pen', 'dashstyle'], 'GpStatus'), 'GdipSetPenDashStyle': (2, ['GPPEN*', 'GPDASHSTYLE'], ['pen', 'dashstyle'], 'GpStatus'), 'GdipGetPenDashOffset': (2, ['GPPEN*', 'REAL*'], ['pen', 'offset'], 'GpStatus'), 'GdipSetPenDashOffset': (2, ['GPPEN*', 'REAL'], ['pen', 'offset'], 'GpStatus'), 'GdipGetPenDashCount': (2, ['GPPEN*', 'INT*'], ['pen', 'count'], 'GpStatus'), 'GdipSetPenDashArray': (3, ['GPPEN*', 'GDIPCONST REAL*', 'INT'], ['pen', 'dash', 'count'], 'GpStatus'), 'GdipGetPenDashArray': (3, ['GPPEN*', 'REAL*', 'INT'], ['pen', 'dash', 'count'], 'GpStatus'), 'GdipGetPenCompoundCount': (2, ['GPPEN*', 'INT*'], ['pen', 'count'], 'GpStatus'), 'GdipSetPenCompoundArray': (3, ['GPPEN*', 'GDIPCONST REAL*', 'INT'], ['pen', 'dash', 'count'], 'GpStatus'), 'GdipGetPenCompoundArray': (3, ['GPPEN*', 'REAL*', 'INT'], ['pen', 'dash', 'count'], 'GpStatus'), 'GdipCreateCustomLineCap': (5, ['GPPATH*', 'GPPATH*', 'GPLINECAP', 'REAL', 'GPCUSTOMLINECAP**'], ['fillPath', 'strokePath', 'baseCap', 'baseInset', 'customCap'], 'GpStatus'), 'GdipDeleteCustomLineCap': (1, ['GPCUSTOMLINECAP*'], ['customCap'], 'GpStatus'), 'GdipCloneCustomLineCap': (2, ['GPCUSTOMLINECAP*', 'GPCUSTOMLINECAP**'], ['customCap', 'clonedCap'], 'GpStatus'), 'GdipGetCustomLineCapType': (2, ['GPCUSTOMLINECAP*', 'CUSTOMLINECAPTYPE*'], ['customCap', 'capType'], 'GpStatus'), 'GdipSetCustomLineCapStrokeCaps': (3, ['GPCUSTOMLINECAP*', 'GPLINECAP', 'GPLINECAP'], ['customCap', 'startCap', 'endCap'], 'GpStatus'), 'GdipGetCustomLineCapStrokeCaps': (3, ['GPCUSTOMLINECAP*', 'GPLINECAP*', 'GPLINECAP*'], ['customCap', 'startCap', 'endCap'], 'GpStatus'), 'GdipSetCustomLineCapStrokeJoin': (2, ['GPCUSTOMLINECAP*', 'GPLINEJOIN'], ['customCap', 'lineJoin'], 'GpStatus'), 'GdipGetCustomLineCapStrokeJoin': (2, ['GPCUSTOMLINECAP*', 'GPLINEJOIN*'], ['customCap', 'lineJoin'], 'GpStatus'), 'GdipSetCustomLineCapBaseCap': (2, ['GPCUSTOMLINECAP*', 'GPLINECAP'], ['customCap', 'baseCap'], 'GpStatus'), 'GdipGetCustomLineCapBaseCap': (2, ['GPCUSTOMLINECAP*', 'GPLINECAP*'], ['customCap', 'baseCap'], 'GpStatus'), 'GdipSetCustomLineCapBaseInset': (2, ['GPCUSTOMLINECAP*', 'REAL'], ['customCap', 'inset'], 'GpStatus'), 'GdipGetCustomLineCapBaseInset': (2, ['GPCUSTOMLINECAP*', 'REAL*'], ['customCap', 'inset'], 'GpStatus'), 'GdipSetCustomLineCapWidthScale': (2, ['GPCUSTOMLINECAP*', 'REAL'], ['customCap', 'widthScale'], 'GpStatus'), 'GdipGetCustomLineCapWidthScale': (2, ['GPCUSTOMLINECAP*', 'REAL*'], ['customCap', 'widthScale'], 'GpStatus'), 'GdipCreateAdjustableArrowCap': (4, ['REAL', 'REAL', 'BOOL', 'GPADJUSTABLEARROWCAP**'], ['height', 'width', 'isFilled', 'cap'], 'GpStatus'), 'GdipSetAdjustableArrowCapHeight': (2, ['GPADJUSTABLEARROWCAP*', 'REAL'], ['cap', 'height'], 'GpStatus'), 'GdipGetAdjustableArrowCapHeight': (2, ['GPADJUSTABLEARROWCAP*', 'REAL*'], ['cap', 'height'], 'GpStatus'), 'GdipSetAdjustableArrowCapWidth': (2, ['GPADJUSTABLEARROWCAP*', 'REAL'], ['cap', 'width'], 'GpStatus'), 'GdipGetAdjustableArrowCapWidth': (2, ['GPADJUSTABLEARROWCAP*', 'REAL*'], ['cap', 'width'], 'GpStatus'), 'GdipSetAdjustableArrowCapMiddleInset': (2, ['GPADJUSTABLEARROWCAP*', 'REAL'], ['cap', 'middleInset'], 'GpStatus'), 'GdipGetAdjustableArrowCapMiddleInset': (2, ['GPADJUSTABLEARROWCAP*', 'REAL*'], ['cap', 'middleInset'], 'GpStatus'), 'GdipSetAdjustableArrowCapFillState': (2, ['GPADJUSTABLEARROWCAP*', 'BOOL'], ['cap', 'fillState'], 'GpStatus'), 'GdipGetAdjustableArrowCapFillState': (2, ['GPADJUSTABLEARROWCAP*', 'BOOL*'], ['cap', 'fillState'], 'GpStatus'), 'GdipLoadImageFromStream': (2, ['ISTREAM*', 'GPIMAGE**'], ['stream', 'image'], 'GpStatus'), 'GdipLoadImageFromFile': (2, ['GDIPCONST WCHAR*', 'GPIMAGE**'], ['filename', 'image'], 'GpStatus'), 'GdipLoadImageFromStreamICM': (2, ['ISTREAM*', 'GPIMAGE**'], ['stream', 'image'], 'GpStatus'), 'GdipLoadImageFromFileICM': (2, ['GDIPCONST WCHAR*', 'GPIMAGE**'], ['filename', 'image'], 'GpStatus'), 'GdipCloneImage': (2, ['GPIMAGE*', 'GPIMAGE**'], ['image', 'cloneImage'], 'GpStatus'), 'GdipDisposeImage': (1, ['GPIMAGE*'], ['image'], 'GpStatus'), 'GdipSaveImageToFile': (4, ['GPIMAGE*', 'GDIPCONST WCHAR*', 'GDIPCONST CLSID*', 'GDIPCONST ENCODERPARAMETERS*'], ['image', 'filename', 'clsidEncoder', 'encoderParams'], 'GpStatus'), 'GdipSaveImageToStream': (4, ['GPIMAGE*', 'ISTREAM*', 'GDIPCONST CLSID*', 'GDIPCONST ENCODERPARAMETERS*'], ['image', 'stream', 'clsidEncoder', 'encoderParams'], 'GpStatus'), 'GdipSaveAdd': (2, ['GPIMAGE*', 'GDIPCONST ENCODERPARAMETERS*'], ['image', 'encoderParams'], 'GpStatus'), 'GdipSaveAddImage': (3, ['GPIMAGE*', 'GPIMAGE*', 'GDIPCONST ENCODERPARAMETERS*'], ['image', 'newImage', 'encoderParams'], 'GpStatus'), 'GdipGetImageGraphicsContext': (2, ['GPIMAGE*', 'GPGRAPHICS**'], ['image', 'graphics'], 'GpStatus'), 'GdipGetImageBounds': (3, ['GPIMAGE*', 'GPRECTF*', 'GPUNIT*'], ['image', 'srcRect', 'srcUnit'], 'GpStatus'), 'GdipGetImageDimension': (3, ['GPIMAGE*', 'REAL*', 'REAL*'], ['image', 'width', 'height'], 'GpStatus'), 'GdipGetImageType': (2, ['GPIMAGE*', 'IMAGETYPE*'], ['image', 'type'], 'GpStatus'), 'GdipGetImageWidth': (2, ['GPIMAGE*', 'UINT*'], ['image', 'width'], 'GpStatus'), 'GdipGetImageHeight': (2, ['GPIMAGE*', 'UINT*'], ['image', 'height'], 'GpStatus'), 'GdipGetImageHorizontalResolution': (2, ['GPIMAGE*', 'REAL*'], ['image', 'resolution'], 'GpStatus'), 'GdipGetImageVerticalResolution': (2, ['GPIMAGE*', 'REAL*'], ['image', 'resolution'], 'GpStatus'), 'GdipGetImageFlags': (2, ['GPIMAGE*', 'UINT*'], ['image', 'flags'], 'GpStatus'), 'GdipGetImageRawFormat': (2, ['GPIMAGE*', 'GUID*'], ['image', 'format'], 'GpStatus'), 'GdipGetImagePixelFormat': (2, ['GPIMAGE*', 'PIXELFORMAT*'], ['image', 'format'], 'GpStatus'), 'GdipGetImageThumbnail': (6, ['GPIMAGE*', 'UINT', 'UINT', 'GPIMAGE**', 'GETTHUMBNAILIMAGEABORT', 'VOID*'], ['image', 'thumbWidth', 'thumbHeight', 'thumbImage', 'callback', 'callbackData'], 'GpStatus'), 'GdipGetEncoderParameterListSize': (3, ['GPIMAGE*', 'GDIPCONST CLSID*', 'UINT*'], ['image', 'clsidEncoder', 'size'], 'GpStatus'), 'GdipGetEncoderParameterList': (4, ['GPIMAGE*', 'GDIPCONST CLSID*', 'UINT', 'ENCODERPARAMETERS*'], ['image', 'clsidEncoder', 'size', 'buffer'], 'GpStatus'), 'GdipImageGetFrameDimensionsCount': (2, ['GPIMAGE*', 'UINT*'], ['image', 'count'], 'GpStatus'), 'GdipImageGetFrameDimensionsList': (3, ['GPIMAGE*', 'GUID*', 'UINT'], ['image', 'dimensionIDs', 'count'], 'GpStatus'), 'GdipImageGetFrameCount': (3, ['GPIMAGE*', 'GDIPCONST GUID*', 'UINT*'], ['image', 'dimensionID', 'count'], 'GpStatus'), 'GdipImageSelectActiveFrame': (3, ['GPIMAGE*', 'GDIPCONST GUID*', 'UINT'], ['image', 'dimensionID', 'frameIndex'], 'GpStatus'), 'GdipImageRotateFlip': (2, ['GPIMAGE*', 'ROTATEFLIPTYPE'], ['image', 'rfType'], 'GpStatus'), 'GdipGetImagePalette': (3, ['GPIMAGE*', 'COLORPALETTE*', 'INT'], ['image', 'palette', 'size'], 'GpStatus'), 'GdipSetImagePalette': (2, ['GPIMAGE*', 'GDIPCONST COLORPALETTE*'], ['image', 'palette'], 'GpStatus'), 'GdipGetImagePaletteSize': (2, ['GPIMAGE*', 'INT*'], ['image', 'size'], 'GpStatus'), 'GdipGetPropertyCount': (2, ['GPIMAGE*', 'UINT*'], ['image', 'numOfProperty'], 'GpStatus'), 'GdipGetPropertyIdList': (3, ['GPIMAGE*', 'UINT', 'PROPID*'], ['image', 'numOfProperty', 'list'], 'GpStatus'), 'GdipGetPropertyItemSize': (3, ['GPIMAGE*', 'PROPID', 'UINT*'], ['image', 'propId', 'size'], 'GpStatus'), 'GdipGetPropertyItem': (3, ['GPIMAGE*', 'PROPID', 'PROPERTYITEM*'], ['image', 'propId', 'buffer'], 'GpStatus'), 'GdipGetPropertySize': (3, ['GPIMAGE*', 'UINT*', 'UINT*'], ['image', 'totalBufferSize', 'numProperties'], 'GpStatus'), 'GdipGetAllPropertyItems': (4, ['GPIMAGE*', 'UINT', 'UINT', 'PROPERTYITEM*'], ['image', 'totalBufferSize', 'numProperties', 'allItems'], 'GpStatus'), 'GdipRemovePropertyItem': (2, ['GPIMAGE*', 'PROPID'], ['image', 'propId'], 'GpStatus'), 'GdipSetPropertyItem': (2, ['GPIMAGE*', 'GDIPCONST PROPERTYITEM*'], ['image', 'item'], 'GpStatus'), 'GdipFindFirstImageItem': (2, ['GPIMAGE*', 'IMAGEITEMDATA*'], ['image', 'item'], 'GpStatus'), 'GdipFindNextImageItem': (2, ['GPIMAGE*', 'IMAGEITEMDATA*'], ['image', 'item'], 'GpStatus'), 'GdipGetImageItemData': (2, ['GPIMAGE*', 'IMAGEITEMDATA*'], ['image', 'item'], 'GpStatus'), 'GdipImageForceValidation': (1, ['GPIMAGE*'], ['image'], 'GpStatus'), 'GdipCreateBitmapFromStream': (2, ['ISTREAM*', 'GPBITMAP**'], ['stream', 'bitmap'], 'GpStatus'), 'GdipCreateBitmapFromFile': (2, ['GDIPCONST WCHAR*', 'GPBITMAP**'], ['filename', 'bitmap'], 'GpStatus'), 'GdipCreateBitmapFromStreamICM': (2, ['ISTREAM*', 'GPBITMAP**'], ['stream', 'bitmap'], 'GpStatus'), 'GdipCreateBitmapFromFileICM': (2, ['GDIPCONST WCHAR*', 'GPBITMAP**'], ['filename', 'bitmap'], 'GpStatus'), 'GdipCreateBitmapFromScan0': (6, ['INT', 'INT', 'INT', 'PIXELFORMAT', 'BYTE*', 'GPBITMAP**'], ['width', 'height', 'stride', 'format', 'scan0', 'bitmap'], 'GpStatus'), 'GdipCreateBitmapFromGraphics': (4, ['INT', 'INT', 'GPGRAPHICS*', 'GPBITMAP**'], ['width', 'height', 'target', 'bitmap'], 'GpStatus'), 'GdipCreateBitmapFromDirectDrawSurface': (2, ['IDIRECTDRAWSURFACE7*', 'GPBITMAP**'], ['surface', 'bitmap'], 'GpStatus'), 'GdipCreateBitmapFromGdiDib': (3, ['GDIPCONST BITMAPINFO*', 'VOID*', 'GPBITMAP**'], ['gdiBitmapInfo', 'gdiBitmapData', 'bitmap'], 'GpStatus'), 'GdipCreateBitmapFromHBITMAP': (3, ['HBITMAP', 'HPALETTE', 'GPBITMAP**'], ['hbm', 'hpal', 'bitmap'], 'GpStatus'), 'GdipCreateHBITMAPFromBitmap': (3, ['GPBITMAP*', 'HBITMAP*', 'ARGB'], ['bitmap', 'hbmReturn', 'background'], 'GpStatus'), 'GdipCreateBitmapFromHICON': (2, ['HICON', 'GPBITMAP**'], ['hicon', 'bitmap'], 'GpStatus'), 'GdipCreateHICONFromBitmap': (2, ['GPBITMAP*', 'HICON*'], ['bitmap', 'hbmReturn'], 'GpStatus'), 'GdipCreateBitmapFromResource': (3, ['HINSTANCE', 'GDIPCONST WCHAR*', 'GPBITMAP**'], ['hInstance', 'lpBitmapName', 'bitmap'], 'GpStatus'), 'GdipCloneBitmapArea': (7, ['REAL', 'REAL', 'REAL', 'REAL', 'PIXELFORMAT', 'GPBITMAP*', 'GPBITMAP**'], ['x', 'y', 'width', 'height', 'format', 'srcBitmap', 'dstBitmap'], 'GpStatus'), 'GdipCloneBitmapAreaI': (7, ['INT', 'INT', 'INT', 'INT', 'PIXELFORMAT', 'GPBITMAP*', 'GPBITMAP**'], ['x', 'y', 'width', 'height', 'format', 'srcBitmap', 'dstBitmap'], 'GpStatus'), 'GdipBitmapLockBits': (5, ['GPBITMAP*', 'GDIPCONST GPRECT*', 'IMAGELOCKMODE', 'PIXELFORMAT', 'BITMAPDATA*'], ['bitmap', 'rect', 'flags', 'format', 'lockedBitmapData'], 'GpStatus'), 'GdipBitmapUnlockBits': (2, ['GPBITMAP*', 'BITMAPDATA*'], ['bitmap', 'lockedBitmapData'], 'GpStatus'), 'GdipBitmapGetPixel': (4, ['GPBITMAP*', 'INT', 'INT', 'ARGB*'], ['bitmap', 'x', 'y', 'color'], 'GpStatus'), 'GdipBitmapSetPixel': (4, ['GPBITMAP*', 'INT', 'INT', 'ARGB'], ['bitmap', 'x', 'y', 'color'], 'GpStatus'), 'GdipImageSetAbort': (2, ['GPIMAGE*', 'GDIPLUSABORT*'], ['pImage', 'pIAbort'], 'GpStatus'), 'GdipGraphicsSetAbort': (2, ['GPGRAPHICS*', 'GDIPLUSABORT*'], ['pGraphics', 'pIAbort'], 'GpStatus'), 'GdipBitmapConvertFormat': (6, ['GPBITMAP*', 'PIXELFORMAT', 'DITHERTYPE', 'PALETTETYPE', 'COLORPALETTE*', 'REAL'], ['pInputBitmap', 'format', 'dithertype', 'palettetype', 'palette', 'alphaThresholdPercent'], 'GpStatus'), 'GdipInitializePalette': (5, ['COLORPALETTE*', 'PALETTETYPE', 'INT', 'BOOL', 'GPBITMAP*'], ['palette', 'palettetype', 'optimalColors', 'useTransparentColor', 'bitmap'], 'GpStatus'), 'GdipBitmapApplyEffect': (6, ['GPBITMAP*', 'CGPEFFECT*', 'RECT*', 'BOOL', 'VOID**', 'INT*'], ['bitmap', 'effect', 'roi', 'useAuxData', 'auxData', 'auxDataSize'], 'GpStatus'), 'GdipBitmapCreateApplyEffect': (9, ['GPBITMAP**', 'INT', 'CGPEFFECT*', 'RECT*', 'RECT*', 'GPBITMAP**', 'BOOL', 'VOID**', 'INT*'], ['inputBitmaps', 'numInputs', 'effect', 'roi', 'outputRect', 'outputBitmap', 'useAuxData', 'auxData', 'auxDataSize'], 'GpStatus'), 'GdipBitmapGetHistogram': (7, ['GPBITMAP*', 'HISTOGRAMFORMAT', 'UINT', 'UINT*', 'UINT*', 'UINT*', 'UINT*'], ['bitmap', 'format', 'NumberOfEntries', 'channel0', 'channel1', 'channel2', 'channel3'], 'GpStatus'), 'GdipBitmapGetHistogramSize': (2, ['HISTOGRAMFORMAT', 'UINT*'], ['format', 'NumberOfEntries'], 'GpStatus'), 'GdipBitmapSetResolution': (3, ['GPBITMAP*', 'REAL', 'REAL'], ['bitmap', 'xdpi', 'ydpi'], 'GpStatus'), 'GdipCreateImageAttributes': (1, ['GPIMAGEATTRIBUTES**'], ['imageattr'], 'GpStatus'), 'GdipCloneImageAttributes': (2, ['GDIPCONST GPIMAGEATTRIBUTES*', 'GPIMAGEATTRIBUTES**'], ['imageattr', 'cloneImageattr'], 'GpStatus'), 'GdipDisposeImageAttributes': (1, ['GPIMAGEATTRIBUTES*'], ['imageattr'], 'GpStatus'), 'GdipSetImageAttributesToIdentity': (2, ['GPIMAGEATTRIBUTES*', 'COLORADJUSTTYPE'], ['imageattr', 'type'], 'GpStatus'), 'GdipResetImageAttributes': (2, ['GPIMAGEATTRIBUTES*', 'COLORADJUSTTYPE'], ['imageattr', 'type'], 'GpStatus'), 'GdipSetImageAttributesColorMatrix': (6, ['GPIMAGEATTRIBUTES*', 'COLORADJUSTTYPE', 'BOOL', 'GDIPCONST COLORMATRIX*', 'GDIPCONST COLORMATRIX*', 'COLORMATRIXFLAGS'], ['imageattr', 'type', 'enableFlag', 'colorMatrix', 'grayMatrix', 'flags'], 'GpStatus'), 'GdipSetImageAttributesThreshold': (4, ['GPIMAGEATTRIBUTES*', 'COLORADJUSTTYPE', 'BOOL', 'REAL'], ['imageattr', 'type', 'enableFlag', 'threshold'], 'GpStatus'), 'GdipSetImageAttributesGamma': (4, ['GPIMAGEATTRIBUTES*', 'COLORADJUSTTYPE', 'BOOL', 'REAL'], ['imageattr', 'type', 'enableFlag', 'gamma'], 'GpStatus'), 'GdipSetImageAttributesNoOp': (3, ['GPIMAGEATTRIBUTES*', 'COLORADJUSTTYPE', 'BOOL'], ['imageattr', 'type', 'enableFlag'], 'GpStatus'), 'GdipSetImageAttributesColorKeys': (5, ['GPIMAGEATTRIBUTES*', 'COLORADJUSTTYPE', 'BOOL', 'ARGB', 'ARGB'], ['imageattr', 'type', 'enableFlag', 'colorLow', 'colorHigh'], 'GpStatus'), 'GdipSetImageAttributesOutputChannel': (4, ['GPIMAGEATTRIBUTES*', 'COLORADJUSTTYPE', 'BOOL', 'COLORCHANNELFLAGS'], ['imageattr', 'type', 'enableFlag', 'channelFlags'], 'GpStatus'), 'GdipSetImageAttributesOutputChannelColorProfile': (4, ['GPIMAGEATTRIBUTES*', 'COLORADJUSTTYPE', 'BOOL', 'GDIPCONST WCHAR*'], ['imageattr', 'type', 'enableFlag', 'colorProfileFilename'], 'GpStatus'), 'GdipSetImageAttributesRemapTable': (5, ['GPIMAGEATTRIBUTES*', 'COLORADJUSTTYPE', 'BOOL', 'UINT', 'GDIPCONST COLORMAP*'], ['imageattr', 'type', 'enableFlag', 'mapSize', 'map'], 'GpStatus'), 'GdipSetImageAttributesWrapMode': (4, ['GPIMAGEATTRIBUTES*', 'GPWRAPMODE', 'ARGB', 'BOOL'], ['imageAttr', 'wrap', 'argb', 'clamp'], 'GpStatus'), 'GdipSetImageAttributesICMMode': (2, ['GPIMAGEATTRIBUTES*', 'BOOL'], ['imageAttr', 'on'], 'GpStatus'), 'GdipGetImageAttributesAdjustedPalette': (3, ['GPIMAGEATTRIBUTES*', 'COLORPALETTE*', 'COLORADJUSTTYPE'], ['imageAttr', 'colorPalette', 'colorAdjustType'], 'GpStatus'), 'GdipFlush': (2, ['GPGRAPHICS*', 'GPFLUSHINTENTION'], ['graphics', 'intention'], 'GpStatus'), 'GdipCreateFromHDC': (2, ['HDC', 'GPGRAPHICS**'], ['hdc', 'graphics'], 'GpStatus'), 'GdipCreateFromHDC2': (3, ['HDC', 'HANDLE', 'GPGRAPHICS**'], ['hdc', 'hDevice', 'graphics'], 'GpStatus'), 'GdipCreateFromHWND': (2, ['HWND', 'GPGRAPHICS**'], ['hwnd', 'graphics'], 'GpStatus'), 'GdipCreateFromHWNDICM': (2, ['HWND', 'GPGRAPHICS**'], ['hwnd', 'graphics'], 'GpStatus'), 'GdipDeleteGraphics': (1, ['GPGRAPHICS*'], ['graphics'], 'GpStatus'), 'GdipGetDC': (2, ['GPGRAPHICS*', 'HDC*'], ['graphics', 'hdc'], 'GpStatus'), 'GdipReleaseDC': (2, ['GPGRAPHICS*', 'HDC'], ['graphics', 'hdc'], 'GpStatus'), 'GdipSetCompositingMode': (2, ['GPGRAPHICS*', 'COMPOSITINGMODE'], ['graphics', 'compositingMode'], 'GpStatus'), 'GdipGetCompositingMode': (2, ['GPGRAPHICS*', 'COMPOSITINGMODE*'], ['graphics', 'compositingMode'], 'GpStatus'), 'GdipSetRenderingOrigin': (3, ['GPGRAPHICS*', 'INT', 'INT'], ['graphics', 'x', 'y'], 'GpStatus'), 'GdipGetRenderingOrigin': (3, ['GPGRAPHICS*', 'INT*', 'INT*'], ['graphics', 'x', 'y'], 'GpStatus'), 'GdipSetCompositingQuality': (2, ['GPGRAPHICS*', 'COMPOSITINGQUALITY'], ['graphics', 'compositingQuality'], 'GpStatus'), 'GdipGetCompositingQuality': (2, ['GPGRAPHICS*', 'COMPOSITINGQUALITY*'], ['graphics', 'compositingQuality'], 'GpStatus'), 'GdipSetSmoothingMode': (2, ['GPGRAPHICS*', 'SMOOTHINGMODE'], ['graphics', 'smoothingMode'], 'GpStatus'), 'GdipGetSmoothingMode': (2, ['GPGRAPHICS*', 'SMOOTHINGMODE*'], ['graphics', 'smoothingMode'], 'GpStatus'), 'GdipSetPixelOffsetMode': (2, ['GPGRAPHICS*', 'PIXELOFFSETMODE'], ['graphics', 'pixelOffsetMode'], 'GpStatus'), 'GdipGetPixelOffsetMode': (2, ['GPGRAPHICS*', 'PIXELOFFSETMODE*'], ['graphics', 'pixelOffsetMode'], 'GpStatus'), 'GdipSetTextRenderingHint': (2, ['GPGRAPHICS*', 'TEXTRENDERINGHINT'], ['graphics', 'mode'], 'GpStatus'), 'GdipGetTextRenderingHint': (2, ['GPGRAPHICS*', 'TEXTRENDERINGHINT*'], ['graphics', 'mode'], 'GpStatus'), 'GdipSetTextContrast': (2, ['GPGRAPHICS*', 'UINT'], ['graphics', 'contrast'], 'GpStatus'), 'GdipGetTextContrast': (2, ['GPGRAPHICS*', 'UINT*'], ['graphics', 'contrast'], 'GpStatus'), 'GdipSetInterpolationMode': (2, ['GPGRAPHICS*', 'INTERPOLATIONMODE'], ['graphics', 'interpolationMode'], 'GpStatus'), 'GdipGetInterpolationMode': (2, ['GPGRAPHICS*', 'INTERPOLATIONMODE*'], ['graphics', 'interpolationMode'], 'GpStatus'), 'GdipSetWorldTransform': (2, ['GPGRAPHICS*', 'GPMATRIX*'], ['graphics', 'matrix'], 'GpStatus'), 'GdipResetWorldTransform': (1, ['GPGRAPHICS*'], ['graphics'], 'GpStatus'), 'GdipMultiplyWorldTransform': (3, ['GPGRAPHICS*', 'GDIPCONST GPMATRIX*', 'GPMATRIXORDER'], ['graphics', 'matrix', 'order'], 'GpStatus'), 'GdipTranslateWorldTransform': (4, ['GPGRAPHICS*', 'REAL', 'REAL', 'GPMATRIXORDER'], ['graphics', 'dx', 'dy', 'order'], 'GpStatus'), 'GdipScaleWorldTransform': (4, ['GPGRAPHICS*', 'REAL', 'REAL', 'GPMATRIXORDER'], ['graphics', 'sx', 'sy', 'order'], 'GpStatus'), 'GdipRotateWorldTransform': (3, ['GPGRAPHICS*', 'REAL', 'GPMATRIXORDER'], ['graphics', 'angle', 'order'], 'GpStatus'), 'GdipGetWorldTransform': (2, ['GPGRAPHICS*', 'GPMATRIX*'], ['graphics', 'matrix'], 'GpStatus'), 'GdipResetPageTransform': (1, ['GPGRAPHICS*'], ['graphics'], 'GpStatus'), 'GdipGetPageUnit': (2, ['GPGRAPHICS*', 'GPUNIT*'], ['graphics', 'unit'], 'GpStatus'), 'GdipGetPageScale': (2, ['GPGRAPHICS*', 'REAL*'], ['graphics', 'scale'], 'GpStatus'), 'GdipSetPageUnit': (2, ['GPGRAPHICS*', 'GPUNIT'], ['graphics', 'unit'], 'GpStatus'), 'GdipSetPageScale': (2, ['GPGRAPHICS*', 'REAL'], ['graphics', 'scale'], 'GpStatus'), 'GdipGetDpiX': (2, ['GPGRAPHICS*', 'REAL*'], ['graphics', 'dpi'], 'GpStatus'), 'GdipGetDpiY': (2, ['GPGRAPHICS*', 'REAL*'], ['graphics', 'dpi'], 'GpStatus'), 'GdipTransformPoints': (5, ['GPGRAPHICS*', 'GPCOORDINATESPACE', 'GPCOORDINATESPACE', 'GPPOINTF*', 'INT'], ['graphics', 'destSpace', 'srcSpace', 'points', 'count'], 'GpStatus'), 'GdipTransformPointsI': (5, ['GPGRAPHICS*', 'GPCOORDINATESPACE', 'GPCOORDINATESPACE', 'GPPOINT*', 'INT'], ['graphics', 'destSpace', 'srcSpace', 'points', 'count'], 'GpStatus'), 'GdipGetNearestColor': (2, ['GPGRAPHICS*', 'ARGB*'], ['graphics', 'argb'], 'GpStatus'), 'GdipCreateHalftonePalette': (0, [], [], 'HPALETTE'), 'GdipDrawLine': (6, ['GPGRAPHICS*', 'GPPEN*', 'REAL', 'REAL', 'REAL', 'REAL'], ['graphics', 'pen', 'x1', 'y1', 'x2', 'y2'], 'GpStatus'), 'GdipDrawLineI': (6, ['GPGRAPHICS*', 'GPPEN*', 'INT', 'INT', 'INT', 'INT'], ['graphics', 'pen', 'x1', 'y1', 'x2', 'y2'], 'GpStatus'), 'GdipDrawLines': (4, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPPOINTF*', 'INT'], ['graphics', 'pen', 'points', 'count'], 'GpStatus'), 'GdipDrawLinesI': (4, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPPOINT*', 'INT'], ['graphics', 'pen', 'points', 'count'], 'GpStatus'), 'GdipDrawArc': (8, ['GPGRAPHICS*', 'GPPEN*', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL'], ['graphics', 'pen', 'x', 'y', 'width', 'height', 'startAngle', 'sweepAngle'], 'GpStatus'), 'GdipDrawArcI': (8, ['GPGRAPHICS*', 'GPPEN*', 'INT', 'INT', 'INT', 'INT', 'REAL', 'REAL'], ['graphics', 'pen', 'x', 'y', 'width', 'height', 'startAngle', 'sweepAngle'], 'GpStatus'), 'GdipDrawBezier': (10, ['GPGRAPHICS*', 'GPPEN*', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL'], ['graphics', 'pen', 'x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], 'GpStatus'), 'GdipDrawBezierI': (10, ['GPGRAPHICS*', 'GPPEN*', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT'], ['graphics', 'pen', 'x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], 'GpStatus'), 'GdipDrawBeziers': (4, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPPOINTF*', 'INT'], ['graphics', 'pen', 'points', 'count'], 'GpStatus'), 'GdipDrawBeziersI': (4, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPPOINT*', 'INT'], ['graphics', 'pen', 'points', 'count'], 'GpStatus'), 'GdipDrawRectangle': (6, ['GPGRAPHICS*', 'GPPEN*', 'REAL', 'REAL', 'REAL', 'REAL'], ['graphics', 'pen', 'x', 'y', 'width', 'height'], 'GpStatus'), 'GdipDrawRectangleI': (6, ['GPGRAPHICS*', 'GPPEN*', 'INT', 'INT', 'INT', 'INT'], ['graphics', 'pen', 'x', 'y', 'width', 'height'], 'GpStatus'), 'GdipDrawRectangles': (4, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPRECTF*', 'INT'], ['graphics', 'pen', 'rects', 'count'], 'GpStatus'), 'GdipDrawRectanglesI': (4, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPRECT*', 'INT'], ['graphics', 'pen', 'rects', 'count'], 'GpStatus'), 'GdipDrawEllipse': (6, ['GPGRAPHICS*', 'GPPEN*', 'REAL', 'REAL', 'REAL', 'REAL'], ['graphics', 'pen', 'x', 'y', 'width', 'height'], 'GpStatus'), 'GdipDrawEllipseI': (6, ['GPGRAPHICS*', 'GPPEN*', 'INT', 'INT', 'INT', 'INT'], ['graphics', 'pen', 'x', 'y', 'width', 'height'], 'GpStatus'), 'GdipDrawPie': (8, ['GPGRAPHICS*', 'GPPEN*', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL'], ['graphics', 'pen', 'x', 'y', 'width', 'height', 'startAngle', 'sweepAngle'], 'GpStatus'), 'GdipDrawPieI': (8, ['GPGRAPHICS*', 'GPPEN*', 'INT', 'INT', 'INT', 'INT', 'REAL', 'REAL'], ['graphics', 'pen', 'x', 'y', 'width', 'height', 'startAngle', 'sweepAngle'], 'GpStatus'), 'GdipDrawPolygon': (4, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPPOINTF*', 'INT'], ['graphics', 'pen', 'points', 'count'], 'GpStatus'), 'GdipDrawPolygonI': (4, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPPOINT*', 'INT'], ['graphics', 'pen', 'points', 'count'], 'GpStatus'), 'GdipDrawPath': (3, ['GPGRAPHICS*', 'GPPEN*', 'GPPATH*'], ['graphics', 'pen', 'path'], 'GpStatus'), 'GdipDrawCurve': (4, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPPOINTF*', 'INT'], ['graphics', 'pen', 'points', 'count'], 'GpStatus'), 'GdipDrawCurveI': (4, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPPOINT*', 'INT'], ['graphics', 'pen', 'points', 'count'], 'GpStatus'), 'GdipDrawCurve2': (5, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPPOINTF*', 'INT', 'REAL'], ['graphics', 'pen', 'points', 'count', 'tension'], 'GpStatus'), 'GdipDrawCurve2I': (5, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPPOINT*', 'INT', 'REAL'], ['graphics', 'pen', 'points', 'count', 'tension'], 'GpStatus'), 'GdipDrawCurve3': (7, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPPOINTF*', 'INT', 'INT', 'INT', 'REAL'], ['graphics', 'pen', 'points', 'count', 'offset', 'numberOfSegments', 'tension'], 'GpStatus'), 'GdipDrawCurve3I': (7, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPPOINT*', 'INT', 'INT', 'INT', 'REAL'], ['graphics', 'pen', 'points', 'count', 'offset', 'numberOfSegments', 'tension'], 'GpStatus'), 'GdipDrawClosedCurve': (4, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPPOINTF*', 'INT'], ['graphics', 'pen', 'points', 'count'], 'GpStatus'), 'GdipDrawClosedCurveI': (4, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPPOINT*', 'INT'], ['graphics', 'pen', 'points', 'count'], 'GpStatus'), 'GdipDrawClosedCurve2': (5, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPPOINTF*', 'INT', 'REAL'], ['graphics', 'pen', 'points', 'count', 'tension'], 'GpStatus'), 'GdipDrawClosedCurve2I': (5, ['GPGRAPHICS*', 'GPPEN*', 'GDIPCONST GPPOINT*', 'INT', 'REAL'], ['graphics', 'pen', 'points', 'count', 'tension'], 'GpStatus'), 'GdipGraphicsClear': (2, ['GPGRAPHICS*', 'ARGB'], ['graphics', 'color'], 'GpStatus'), 'GdipFillRectangle': (6, ['GPGRAPHICS*', 'GPBRUSH*', 'REAL', 'REAL', 'REAL', 'REAL'], ['graphics', 'brush', 'x', 'y', 'width', 'height'], 'GpStatus'), 'GdipFillRectangleI': (6, ['GPGRAPHICS*', 'GPBRUSH*', 'INT', 'INT', 'INT', 'INT'], ['graphics', 'brush', 'x', 'y', 'width', 'height'], 'GpStatus'), 'GdipFillRectangles': (4, ['GPGRAPHICS*', 'GPBRUSH*', 'GDIPCONST GPRECTF*', 'INT'], ['graphics', 'brush', 'rects', 'count'], 'GpStatus'), 'GdipFillRectanglesI': (4, ['GPGRAPHICS*', 'GPBRUSH*', 'GDIPCONST GPRECT*', 'INT'], ['graphics', 'brush', 'rects', 'count'], 'GpStatus'), 'GdipFillPolygon': (5, ['GPGRAPHICS*', 'GPBRUSH*', 'GDIPCONST GPPOINTF*', 'INT', 'GPFILLMODE'], ['graphics', 'brush', 'points', 'count', 'fillMode'], 'GpStatus'), 'GdipFillPolygonI': (5, ['GPGRAPHICS*', 'GPBRUSH*', 'GDIPCONST GPPOINT*', 'INT', 'GPFILLMODE'], ['graphics', 'brush', 'points', 'count', 'fillMode'], 'GpStatus'), 'GdipFillPolygon2': (4, ['GPGRAPHICS*', 'GPBRUSH*', 'GDIPCONST GPPOINTF*', 'INT'], ['graphics', 'brush', 'points', 'count'], 'GpStatus'), 'GdipFillPolygon2I': (4, ['GPGRAPHICS*', 'GPBRUSH*', 'GDIPCONST GPPOINT*', 'INT'], ['graphics', 'brush', 'points', 'count'], 'GpStatus'), 'GdipFillEllipse': (6, ['GPGRAPHICS*', 'GPBRUSH*', 'REAL', 'REAL', 'REAL', 'REAL'], ['graphics', 'brush', 'x', 'y', 'width', 'height'], 'GpStatus'), 'GdipFillEllipseI': (6, ['GPGRAPHICS*', 'GPBRUSH*', 'INT', 'INT', 'INT', 'INT'], ['graphics', 'brush', 'x', 'y', 'width', 'height'], 'GpStatus'), 'GdipFillPie': (8, ['GPGRAPHICS*', 'GPBRUSH*', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL'], ['graphics', 'brush', 'x', 'y', 'width', 'height', 'startAngle', 'sweepAngle'], 'GpStatus'), 'GdipFillPieI': (8, ['GPGRAPHICS*', 'GPBRUSH*', 'INT', 'INT', 'INT', 'INT', 'REAL', 'REAL'], ['graphics', 'brush', 'x', 'y', 'width', 'height', 'startAngle', 'sweepAngle'], 'GpStatus'), 'GdipFillPath': (3, ['GPGRAPHICS*', 'GPBRUSH*', 'GPPATH*'], ['graphics', 'brush', 'path'], 'GpStatus'), 'GdipFillClosedCurve': (4, ['GPGRAPHICS*', 'GPBRUSH*', 'GDIPCONST GPPOINTF*', 'INT'], ['graphics', 'brush', 'points', 'count'], 'GpStatus'), 'GdipFillClosedCurveI': (4, ['GPGRAPHICS*', 'GPBRUSH*', 'GDIPCONST GPPOINT*', 'INT'], ['graphics', 'brush', 'points', 'count'], 'GpStatus'), 'GdipFillClosedCurve2': (6, ['GPGRAPHICS*', 'GPBRUSH*', 'GDIPCONST GPPOINTF*', 'INT', 'REAL', 'GPFILLMODE'], ['graphics', 'brush', 'points', 'count', 'tension', 'fillMode'], 'GpStatus'), 'GdipFillClosedCurve2I': (6, ['GPGRAPHICS*', 'GPBRUSH*', 'GDIPCONST GPPOINT*', 'INT', 'REAL', 'GPFILLMODE'], ['graphics', 'brush', 'points', 'count', 'tension', 'fillMode'], 'GpStatus'), 'GdipFillRegion': (3, ['GPGRAPHICS*', 'GPBRUSH*', 'GPREGION*'], ['graphics', 'brush', 'region'], 'GpStatus'), 'GdipDrawImageFX': (7, ['GPGRAPHICS*', 'GPIMAGE*', 'GPRECTF*', 'GPMATRIX*', 'CGPEFFECT*', 'GPIMAGEATTRIBUTES*', 'GPUNIT'], ['graphics', 'image', 'source', 'xForm', 'effect', 'imageAttributes', 'srcUnit'], 'GpStatus'), 'GdipDrawImage': (4, ['GPGRAPHICS*', 'GPIMAGE*', 'REAL', 'REAL'], ['graphics', 'image', 'x', 'y'], 'GpStatus'), 'GdipDrawImageI': (4, ['GPGRAPHICS*', 'GPIMAGE*', 'INT', 'INT'], ['graphics', 'image', 'x', 'y'], 'GpStatus'), 'GdipDrawImageRect': (6, ['GPGRAPHICS*', 'GPIMAGE*', 'REAL', 'REAL', 'REAL', 'REAL'], ['graphics', 'image', 'x', 'y', 'width', 'height'], 'GpStatus'), 'GdipDrawImageRectI': (6, ['GPGRAPHICS*', 'GPIMAGE*', 'INT', 'INT', 'INT', 'INT'], ['graphics', 'image', 'x', 'y', 'width', 'height'], 'GpStatus'), 'GdipDrawImagePoints': (4, ['GPGRAPHICS*', 'GPIMAGE*', 'GDIPCONST GPPOINTF*', 'INT'], ['graphics', 'image', 'dstpoints', 'count'], 'GpStatus'), 'GdipDrawImagePointsI': (4, ['GPGRAPHICS*', 'GPIMAGE*', 'GDIPCONST GPPOINT*', 'INT'], ['graphics', 'image', 'dstpoints', 'count'], 'GpStatus'), 'GdipDrawImagePointRect': (9, ['GPGRAPHICS*', 'GPIMAGE*', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'GPUNIT'], ['graphics', 'image', 'x', 'y', 'srcx', 'srcy', 'srcwidth', 'srcheight', 'srcUnit'], 'GpStatus'), 'GdipDrawImagePointRectI': (9, ['GPGRAPHICS*', 'GPIMAGE*', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'GPUNIT'], ['graphics', 'image', 'x', 'y', 'srcx', 'srcy', 'srcwidth', 'srcheight', 'srcUnit'], 'GpStatus'), 'GdipDrawImageRectRect': (14, ['GPGRAPHICS*', 'GPIMAGE*', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'REAL', 'GPUNIT', 'GDIPCONST GPIMAGEATTRIBUTES*', 'DRAWIMAGEABORT', 'VOID*'], ['graphics', 'image', 'dstx', 'dsty', 'dstwidth', 'dstheight', 'srcx', 'srcy', 'srcwidth', 'srcheight', 'srcUnit', 'imageAttributes', 'callback', 'callbackData'], 'GpStatus'), 'GdipDrawImageRectRectI': (14, ['GPGRAPHICS*', 'GPIMAGE*', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'INT', 'GPUNIT', 'GDIPCONST GPIMAGEATTRIBUTES*', 'DRAWIMAGEABORT', 'VOID*'], ['graphics', 'image', 'dstx', 'dsty', 'dstwidth', 'dstheight', 'srcx', 'srcy', 'srcwidth', 'srcheight', 'srcUnit', 'imageAttributes', 'callback', 'callbackData'], 'GpStatus'), 'GdipDrawImagePointsRect': (12, ['GPGRAPHICS*', 'GPIMAGE*', 'GDIPCONST GPPOINTF*', 'INT', 'REAL', 'REAL', 'REAL', 'REAL', 'GPUNIT', 'GDIPCONST GPIMAGEATTRIBUTES*', 'DRAWIMAGEABORT', 'VOID*'], ['graphics', 'image', 'points', 'count', 'srcx', 'srcy', 'srcwidth', 'srcheight', 'srcUnit', 'imageAttributes', 'callback', 'callbackData'], 'GpStatus'), 'GdipDrawImagePointsRectI': (12, ['GPGRAPHICS*', 'GPIMAGE*', 'GDIPCONST GPPOINT*', 'INT', 'INT', 'INT', 'INT', 'INT', 'GPUNIT', 'GDIPCONST GPIMAGEATTRIBUTES*', 'DRAWIMAGEABORT', 'VOID*'], ['graphics', 'image', 'points', 'count', 'srcx', 'srcy', 'srcwidth', 'srcheight', 'srcUnit', 'imageAttributes', 'callback', 'callbackData'], 'GpStatus'), 'GdipEnumerateMetafileDestPoint': (5, ['GPGRAPHICS*', 'GDIPCONST GPMETAFILE*', 'ENUMERATEMETAFILEPROC', 'VOID*', 'GDIPCONST GPIMAGEATTRIBUTES*'], ['graphics', 'metafile', 'callback', 'callbackData', 'imageAttributes'], 'GpStatus'), 'GdipEnumerateMetafileDestPointI': (5, ['GPGRAPHICS*', 'GDIPCONST GPMETAFILE*', 'ENUMERATEMETAFILEPROC', 'VOID*', 'GDIPCONST GPIMAGEATTRIBUTES*'], ['graphics', 'metafile', 'callback', 'callbackData', 'imageAttributes'], 'GpStatus'), 'GdipEnumerateMetafileDestRect': (5, ['GPGRAPHICS*', 'GDIPCONST GPMETAFILE*', 'ENUMERATEMETAFILEPROC', 'VOID*', 'GDIPCONST GPIMAGEATTRIBUTES*'], ['graphics', 'metafile', 'callback', 'callbackData', 'imageAttributes'], 'GpStatus'), 'GdipEnumerateMetafileDestRectI': (5, ['GPGRAPHICS*', 'GDIPCONST GPMETAFILE*', 'ENUMERATEMETAFILEPROC', 'VOID*', 'GDIPCONST GPIMAGEATTRIBUTES*'], ['graphics', 'metafile', 'callback', 'callbackData', 'imageAttributes'], 'GpStatus'), 'GdipEnumerateMetafileDestPoints': (7, ['GPGRAPHICS*', 'GDIPCONST GPMETAFILE*', 'GDIPCONST POINTF*', 'INT', 'ENUMERATEMETAFILEPROC', 'VOID*', 'GDIPCONST GPIMAGEATTRIBUTES*'], ['graphics', 'metafile', 'destPoints', 'count', 'callback', 'callbackData', 'imageAttributes'], 'GpStatus'), 'GdipEnumerateMetafileDestPointsI': (7, ['GPGRAPHICS*', 'GDIPCONST GPMETAFILE*', 'GDIPCONST POINT*', 'INT', 'ENUMERATEMETAFILEPROC', 'VOID*', 'GDIPCONST GPIMAGEATTRIBUTES*'], ['graphics', 'metafile', 'destPoints', 'count', 'callback', 'callbackData', 'imageAttributes'], 'GpStatus'), 'GdipEnumerateMetafileSrcRectDestPoint': (6, ['GPGRAPHICS*', 'GDIPCONST GPMETAFILE*', 'UNIT', 'ENUMERATEMETAFILEPROC', 'VOID*', 'GDIPCONST GPIMAGEATTRIBUTES*'], ['graphics', 'metafile', 'srcUnit', 'callback', 'callbackData', 'imageAttributes'], 'GpStatus'), 'GdipEnumerateMetafileSrcRectDestPointI': (6, ['GPGRAPHICS*', 'GDIPCONST GPMETAFILE*', 'UNIT', 'ENUMERATEMETAFILEPROC', 'VOID*', 'GDIPCONST GPIMAGEATTRIBUTES*'], ['graphics', 'metafile', 'srcUnit', 'callback', 'callbackData', 'imageAttributes'], 'GpStatus'), 'GdipEnumerateMetafileSrcRectDestRect': (6, ['GPGRAPHICS*', 'GDIPCONST GPMETAFILE*', 'UNIT', 'ENUMERATEMETAFILEPROC', 'VOID*', 'GDIPCONST GPIMAGEATTRIBUTES*'], ['graphics', 'metafile', 'srcUnit', 'callback', 'callbackData', 'imageAttributes'], 'GpStatus'), 'GdipEnumerateMetafileSrcRectDestRectI': (6, ['GPGRAPHICS*', 'GDIPCONST GPMETAFILE*', 'UNIT', 'ENUMERATEMETAFILEPROC', 'VOID*', 'GDIPCONST GPIMAGEATTRIBUTES*'], ['graphics', 'metafile', 'srcUnit', 'callback', 'callbackData', 'imageAttributes'], 'GpStatus'), 'GdipEnumerateMetafileSrcRectDestPoints': (8, ['GPGRAPHICS*', 'GDIPCONST GPMETAFILE*', 'GDIPCONST POINTF*', 'INT', 'UNIT', 'ENUMERATEMETAFILEPROC', 'VOID*', 'GDIPCONST GPIMAGEATTRIBUTES*'], ['graphics', 'metafile', 'destPoints', 'count', 'srcUnit', 'callback', 'callbackData', 'imageAttributes'], 'GpStatus'), 'GdipEnumerateMetafileSrcRectDestPointsI': (8, ['GPGRAPHICS*', 'GDIPCONST GPMETAFILE*', 'GDIPCONST POINT*', 'INT', 'UNIT', 'ENUMERATEMETAFILEPROC', 'VOID*', 'GDIPCONST GPIMAGEATTRIBUTES*'], ['graphics', 'metafile', 'destPoints', 'count', 'srcUnit', 'callback', 'callbackData', 'imageAttributes'], 'GpStatus'), 'GdipPlayMetafileRecord': (5, ['GDIPCONST GPMETAFILE*', 'EMFPLUSRECORDTYPE', 'UINT', 'UINT', 'GDIPCONST BYTE*'], ['metafile', 'recordType', 'flags', 'dataSize', 'data'], 'GpStatus'), 'GdipSetClipGraphics': (3, ['GPGRAPHICS*', 'GPGRAPHICS*', 'COMBINEMODE'], ['graphics', 'srcgraphics', 'combineMode'], 'GpStatus'), 'GdipSetClipRect': (6, ['GPGRAPHICS*', 'REAL', 'REAL', 'REAL', 'REAL', 'COMBINEMODE'], ['graphics', 'x', 'y', 'width', 'height', 'combineMode'], 'GpStatus'), 'GdipSetClipRectI': (6, ['GPGRAPHICS*', 'INT', 'INT', 'INT', 'INT', 'COMBINEMODE'], ['graphics', 'x', 'y', 'width', 'height', 'combineMode'], 'GpStatus'), 'GdipSetClipPath': (3, ['GPGRAPHICS*', 'GPPATH*', 'COMBINEMODE'], ['graphics', 'path', 'combineMode'], 'GpStatus'), 'GdipSetClipRegion': (3, ['GPGRAPHICS*', 'GPREGION*', 'COMBINEMODE'], ['graphics', 'region', 'combineMode'], 'GpStatus'), 'GdipSetClipHrgn': (3, ['GPGRAPHICS*', 'HRGN', 'COMBINEMODE'], ['graphics', 'hRgn', 'combineMode'], 'GpStatus'), 'GdipResetClip': (1, ['GPGRAPHICS*'], ['graphics'], 'GpStatus'), 'GdipTranslateClip': (3, ['GPGRAPHICS*', 'REAL', 'REAL'], ['graphics', 'dx', 'dy'], 'GpStatus'), 'GdipTranslateClipI': (3, ['GPGRAPHICS*', 'INT', 'INT'], ['graphics', 'dx', 'dy'], 'GpStatus'), 'GdipGetClip': (2, ['GPGRAPHICS*', 'GPREGION*'], ['graphics', 'region'], 'GpStatus'), 'GdipGetClipBounds': (2, ['GPGRAPHICS*', 'GPRECTF*'], ['graphics', 'rect'], 'GpStatus'), 'GdipGetClipBoundsI': (2, ['GPGRAPHICS*', 'GPRECT*'], ['graphics', 'rect'], 'GpStatus'), 'GdipIsClipEmpty': (2, ['GPGRAPHICS*', 'BOOL*'], ['graphics', 'result'], 'GpStatus'), 'GdipGetVisibleClipBounds': (2, ['GPGRAPHICS*', 'GPRECTF*'], ['graphics', 'rect'], 'GpStatus'), 'GdipGetVisibleClipBoundsI': (2, ['GPGRAPHICS*', 'GPRECT*'], ['graphics', 'rect'], 'GpStatus'), 'GdipIsVisibleClipEmpty': (2, ['GPGRAPHICS*', 'BOOL*'], ['graphics', 'result'], 'GpStatus'), 'GdipIsVisiblePoint': (4, ['GPGRAPHICS*', 'REAL', 'REAL', 'BOOL*'], ['graphics', 'x', 'y', 'result'], 'GpStatus'), 'GdipIsVisiblePointI': (4, ['GPGRAPHICS*', 'INT', 'INT', 'BOOL*'], ['graphics', 'x', 'y', 'result'], 'GpStatus'), 'GdipIsVisibleRect': (6, ['GPGRAPHICS*', 'REAL', 'REAL', 'REAL', 'REAL', 'BOOL*'], ['graphics', 'x', 'y', 'width', 'height', 'result'], 'GpStatus'), 'GdipIsVisibleRectI': (6, ['GPGRAPHICS*', 'INT', 'INT', 'INT', 'INT', 'BOOL*'], ['graphics', 'x', 'y', 'width', 'height', 'result'], 'GpStatus'), 'GdipSaveGraphics': (2, ['GPGRAPHICS*', 'GRAPHICSSTATE*'], ['graphics', 'state'], 'GpStatus'), 'GdipRestoreGraphics': (2, ['GPGRAPHICS*', 'GRAPHICSSTATE'], ['graphics', 'state'], 'GpStatus'), 'GdipBeginContainer': (5, ['GPGRAPHICS*', 'GDIPCONST GPRECTF*', 'GDIPCONST GPRECTF*', 'GPUNIT', 'GRAPHICSCONTAINER*'], ['graphics', 'dstrect', 'srcrect', 'unit', 'state'], 'GpStatus'), 'GdipBeginContainerI': (5, ['GPGRAPHICS*', 'GDIPCONST GPRECT*', 'GDIPCONST GPRECT*', 'GPUNIT', 'GRAPHICSCONTAINER*'], ['graphics', 'dstrect', 'srcrect', 'unit', 'state'], 'GpStatus'), 'GdipBeginContainer2': (2, ['GPGRAPHICS*', 'GRAPHICSCONTAINER*'], ['graphics', 'state'], 'GpStatus'), 'GdipEndContainer': (2, ['GPGRAPHICS*', 'GRAPHICSCONTAINER'], ['graphics', 'state'], 'GpStatus'), 'GdipGetMetafileHeaderFromWmf': (3, ['HMETAFILE', 'GDIPCONST WMFPLACEABLEFILEHEADER*', 'METAFILEHEADER*'], ['hWmf', 'wmfPlaceableFileHeader', 'header'], 'GpStatus'), 'GdipGetMetafileHeaderFromEmf': (2, ['HENHMETAFILE', 'METAFILEHEADER*'], ['hEmf', 'header'], 'GpStatus'), 'GdipGetMetafileHeaderFromFile': (2, ['GDIPCONST WCHAR*', 'METAFILEHEADER*'], ['filename', 'header'], 'GpStatus'), 'GdipGetMetafileHeaderFromStream': (2, ['ISTREAM*', 'METAFILEHEADER*'], ['stream', 'header'], 'GpStatus'), 'GdipGetMetafileHeaderFromMetafile': (2, ['GPMETAFILE*', 'METAFILEHEADER*'], ['metafile', 'header'], 'GpStatus'), 'GdipGetHemfFromMetafile': (2, ['GPMETAFILE*', 'HENHMETAFILE*'], ['metafile', 'hEmf'], 'GpStatus'), 'GdipCreateStreamOnFile': (3, ['GDIPCONST WCHAR*', 'UINT', 'ISTREAM**'], ['filename', 'access', 'stream'], 'GpStatus'), 'GdipCreateMetafileFromWmf': (4, ['HMETAFILE', 'BOOL', 'GDIPCONST WMFPLACEABLEFILEHEADER*', 'GPMETAFILE**'], ['hWmf', 'deleteWmf', 'wmfPlaceableFileHeader', 'metafile'], 'GpStatus'), 'GdipCreateMetafileFromEmf': (3, ['HENHMETAFILE', 'BOOL', 'GPMETAFILE**'], ['hEmf', 'deleteEmf', 'metafile'], 'GpStatus'), 'GdipCreateMetafileFromFile': (2, ['GDIPCONST WCHAR*', 'GPMETAFILE**'], ['file', 'metafile'], 'GpStatus'), 'GdipCreateMetafileFromWmfFile': (3, ['GDIPCONST WCHAR*', 'GDIPCONST WMFPLACEABLEFILEHEADER*', 'GPMETAFILE**'], ['file', 'wmfPlaceableFileHeader', 'metafile'], 'GpStatus'), 'GdipCreateMetafileFromStream': (2, ['ISTREAM*', 'GPMETAFILE**'], ['stream', 'metafile'], 'GpStatus'), 'GdipRecordMetafile': (6, ['HDC', 'EMFTYPE', 'GDIPCONST GPRECTF*', 'METAFILEFRAMEUNIT', 'GDIPCONST WCHAR*', 'GPMETAFILE**'], ['referenceHdc', 'type', 'frameRect', 'frameUnit', 'description', 'metafile'], 'GpStatus'), 'GdipRecordMetafileI': (6, ['HDC', 'EMFTYPE', 'GDIPCONST GPRECT*', 'METAFILEFRAMEUNIT', 'GDIPCONST WCHAR*', 'GPMETAFILE**'], ['referenceHdc', 'type', 'frameRect', 'frameUnit', 'description', 'metafile'], 'GpStatus'), 'GdipRecordMetafileFileName': (7, ['GDIPCONST WCHAR*', 'HDC', 'EMFTYPE', 'GDIPCONST GPRECTF*', 'METAFILEFRAMEUNIT', 'GDIPCONST WCHAR*', 'GPMETAFILE**'], ['fileName', 'referenceHdc', 'type', 'frameRect', 'frameUnit', 'description', 'metafile'], 'GpStatus'), 'GdipRecordMetafileFileNameI': (7, ['GDIPCONST WCHAR*', 'HDC', 'EMFTYPE', 'GDIPCONST GPRECT*', 'METAFILEFRAMEUNIT', 'GDIPCONST WCHAR*', 'GPMETAFILE**'], ['fileName', 'referenceHdc', 'type', 'frameRect', 'frameUnit', 'description', 'metafile'], 'GpStatus'), 'GdipRecordMetafileStream': (7, ['ISTREAM*', 'HDC', 'EMFTYPE', 'GDIPCONST GPRECTF*', 'METAFILEFRAMEUNIT', 'GDIPCONST WCHAR*', 'GPMETAFILE**'], ['stream', 'referenceHdc', 'type', 'frameRect', 'frameUnit', 'description', 'metafile'], 'GpStatus'), 'GdipRecordMetafileStreamI': (7, ['ISTREAM*', 'HDC', 'EMFTYPE', 'GDIPCONST GPRECT*', 'METAFILEFRAMEUNIT', 'GDIPCONST WCHAR*', 'GPMETAFILE**'], ['stream', 'referenceHdc', 'type', 'frameRect', 'frameUnit', 'description', 'metafile'], 'GpStatus'), 'GdipSetMetafileDownLevelRasterizationLimit': (2, ['GPMETAFILE*', 'UINT'], ['metafile', 'metafileRasterizationLimitDpi'], 'GpStatus'), 'GdipGetMetafileDownLevelRasterizationLimit': (2, ['GDIPCONST GPMETAFILE*', 'UINT*'], ['metafile', 'metafileRasterizationLimitDpi'], 'GpStatus'), 'GdipGetImageDecodersSize': (2, ['UINT*', 'UINT*'], ['numDecoders', 'size'], 'GpStatus'), 'GdipGetImageDecoders': (3, ['UINT', 'UINT', 'IMAGECODECINFO*'], ['numDecoders', 'size', 'decoders'], 'GpStatus'), 'GdipGetImageEncodersSize': (2, ['UINT*', 'UINT*'], ['numEncoders', 'size'], 'GpStatus'), 'GdipGetImageEncoders': (3, ['UINT', 'UINT', 'IMAGECODECINFO*'], ['numEncoders', 'size', 'encoders'], 'GpStatus'), 'GdipComment': (3, ['GPGRAPHICS*', 'UINT', 'GDIPCONST BYTE*'], ['graphics', 'sizeData', 'data'], 'GpStatus'), 'GdipCreateFontFamilyFromName': (3, ['GDIPCONST WCHAR*', 'GPFONTCOLLECTION*', 'GPFONTFAMILY**'], ['name', 'fontCollection', 'FontFamily'], 'GpStatus'), 'GdipDeleteFontFamily': (1, ['GPFONTFAMILY*'], ['FontFamily'], 'GpStatus'), 'GdipCloneFontFamily': (2, ['GPFONTFAMILY*', 'GPFONTFAMILY**'], ['FontFamily', 'clonedFontFamily'], 'GpStatus'), 'GdipGetGenericFontFamilySansSerif': (1, ['GPFONTFAMILY**'], ['nativeFamily'], 'GpStatus'), 'GdipGetGenericFontFamilySerif': (1, ['GPFONTFAMILY**'], ['nativeFamily'], 'GpStatus'), 'GdipGetGenericFontFamilyMonospace': (1, ['GPFONTFAMILY**'], ['nativeFamily'], 'GpStatus'), 'GdipGetFamilyName': (3, ['GDIPCONST GPFONTFAMILY*', 'LPWSTR', 'LANGID'], ['family', 'name', 'language'], 'GpStatus'), 'GdipIsStyleAvailable': (3, ['GDIPCONST GPFONTFAMILY*', 'INT', 'BOOL*'], ['family', 'style', 'IsStyleAvailable'], 'GpStatus'), 'GdipFontCollectionEnumerable': (3, ['GPFONTCOLLECTION*', 'GPGRAPHICS*', 'INT*'], ['fontCollection', 'graphics', 'numFound'], 'GpStatus'), 'GdipFontCollectionEnumerate': (5, ['GPFONTCOLLECTION*', 'INT', 'GPFONTFAMILY* ', 'INT*', 'GPGRAPHICS*'], ['fontCollection', 'numSought', 'gpfamilies', 'numFound', 'graphics'], 'GpStatus'), 'GdipGetEmHeight': (3, ['GDIPCONST GPFONTFAMILY*', 'FONTSTYLE', 'UINT16*'], ['family', 'style', 'EmHeight'], 'GpStatus'), 'GdipGetCellAscent': (3, ['GDIPCONST GPFONTFAMILY*', 'INT', 'UINT16*'], ['family', 'style', 'CellAscent'], 'GpStatus'), 'GdipGetCellDescent': (3, ['GDIPCONST GPFONTFAMILY*', 'INT', 'UINT16*'], ['family', 'style', 'CellDescent'], 'GpStatus'), 'GdipGetLineSpacing': (3, ['GDIPCONST GPFONTFAMILY*', 'FONTSTYLE', 'UINT16*'], ['family', 'style', 'LineSpacing'], 'GpStatus'), 'GdipCreateFontFromDC': (2, ['HDC', 'GPFONT**'], ['hdc', 'font'], 'GpStatus'), 'GdipCreateFontFromLogfont': (3, ['HDC', 'GDIPCONST LOGFONT*', 'GPFONT**'], ['hdc', 'logfont', 'font'], 'GpStatus'), 'GdipCreateFont': (5, ['GDIPCONST GPFONTFAMILY*', 'REAL', 'FONTSTYLE', 'UNIT', 'GPFONT**'], ['fontFamily', 'emSize', 'style', 'unit', 'font'], 'GpStatus'), 'GdipCloneFont': (2, ['GPFONT*', 'GPFONT**'], ['font', 'cloneFont'], 'GpStatus'), 'GdipDeleteFont': (1, ['GPFONT*'], ['font'], 'GpStatus'), 'GdipGetFamily': (2, ['GPFONT*', 'GPFONTFAMILY**'], ['font', 'family'], 'GpStatus'), 'GdipGetFontStyle': (2, ['GPFONT*', 'FONTSTYLE*'], ['font', 'style'], 'GpStatus'), 'GdipGetFontSize': (2, ['GPFONT*', 'REAL*'], ['font', 'size'], 'GpStatus'), 'GdipGetFontUnit': (2, ['GPFONT*', 'UNIT*'], ['font', 'unit'], 'GpStatus'), 'GdipGetFontHeight': (3, ['GDIPCONST GPFONT*', 'GDIPCONST GPGRAPHICS*', 'REAL*'], ['font', 'graphics', 'height'], 'GpStatus'), 'GdipGetFontHeightGivenDPI': (3, ['GDIPCONST GPFONT*', 'REAL', 'REAL*'], ['font', 'dpi', 'height'], 'GpStatus'), 'GdipGetLogFont': (3, ['GPFONT*', 'GPGRAPHICS*', 'LOGFONT*'], ['font', 'graphics', 'logfont'], 'GpStatus'), 'GdipNewInstalledFontCollection': (1, ['GPFONTCOLLECTION**'], ['fontCollection'], 'GpStatus'), 'GdipNewPrivateFontCollection': (1, ['GPFONTCOLLECTION**'], ['fontCollection'], 'GpStatus'), 'GdipDeletePrivateFontCollection': (1, ['GPFONTCOLLECTION**'], ['fontCollection'], 'GpStatus'), 'GdipGetFontCollectionFamilyCount': (2, ['GPFONTCOLLECTION*', 'INT*'], ['fontCollection', 'numFound'], 'GpStatus'), 'GdipGetFontCollectionFamilyList': (4, ['GPFONTCOLLECTION*', 'INT', 'GPFONTFAMILY* ', 'INT*'], ['fontCollection', 'numSought', 'gpfamilies', 'numFound'], 'GpStatus'), 'GdipPrivateAddFontFile': (2, ['GPFONTCOLLECTION*', 'GDIPCONST WCHAR*'], ['fontCollection', 'filename'], 'GpStatus'), 'GdipPrivateAddMemoryFont': (3, ['GPFONTCOLLECTION*', 'GDIPCONST VOID*', 'INT'], ['fontCollection', 'memory', 'length'], 'GpStatus'), 'GdipDrawString': (7, ['GPGRAPHICS*', 'GDIPCONST WCHAR*', 'INT', 'GDIPCONST GPFONT*', 'GDIPCONST RECTF*', 'GDIPCONST GPSTRINGFORMAT*', 'GDIPCONST GPBRUSH*'], ['graphics', 'string', 'length', 'font', 'layoutRect', 'stringFormat', 'brush'], 'GpStatus'), 'GdipMeasureString': (9, ['GPGRAPHICS*', 'GDIPCONST WCHAR*', 'INT', 'GDIPCONST GPFONT*', 'GDIPCONST RECTF*', 'GDIPCONST GPSTRINGFORMAT*', 'RECTF*', 'INT*', 'INT*'], ['graphics', 'string', 'length', 'font', 'layoutRect', 'stringFormat', 'boundingBox', 'codepointsFitted', 'linesFilled'], 'GpStatus'), 'GdipMeasureCharacterRanges': (7, ['GPGRAPHICS*', 'GDIPCONST WCHAR*', 'INT', 'GDIPCONST GPFONT*', 'GDIPCONST GPSTRINGFORMAT*', 'INT', 'GPREGION**'], ['graphics', 'string', 'length', 'font', 'stringFormat', 'regionCount', 'regions'], 'GpStatus'), 'GdipDrawDriverString': (8, ['GPGRAPHICS*', 'GDIPCONST UINT16*', 'INT', 'GDIPCONST GPFONT*', 'GDIPCONST GPBRUSH*', 'GDIPCONST POINTF*', 'DRIVERSTRINGOPTIONS', 'GDIPCONST GPMATRIX*'], ['graphics', 'text', 'length', 'font', 'brush', 'positions', 'flags', 'matrix'], 'GpStatus'), 'GdipMeasureDriverString': (8, ['GPGRAPHICS*', 'GDIPCONST UINT16*', 'INT', 'GDIPCONST GPFONT*', 'GDIPCONST POINTF*', 'DRIVERSTRINGOPTIONS', 'GDIPCONST GPMATRIX*', 'RECTF*'], ['graphics', 'text', 'length', 'font', 'positions', 'flags', 'matrix', 'boundingBox'], 'GpStatus'), 'GdipCreateStringFormat': (3, ['STRINGFORMATFLAGS', 'LANGID', 'GPSTRINGFORMAT**'], ['formatAttributes', 'language', 'format'], 'GpStatus'), 'GdipStringFormatGetGenericDefault': (1, ['GPSTRINGFORMAT**'], ['format'], 'GpStatus'), 'GdipStringFormatGetGenericTypographic': (1, ['GPSTRINGFORMAT**'], ['format'], 'GpStatus'), 'GdipDeleteStringFormat': (1, ['GPSTRINGFORMAT*'], ['format'], 'GpStatus'), 'GdipCloneStringFormat': (2, ['GDIPCONST GPSTRINGFORMAT*', 'GPSTRINGFORMAT**'], ['format', 'newFormat'], 'GpStatus'), 'GdipSetStringFormatFlags': (2, ['GPSTRINGFORMAT*', 'STRINGFORMATFLAGS'], ['format', 'flags'], 'GpStatus'), 'GdipGetStringFormatFlags': (2, ['GDIPCONST GPSTRINGFORMAT*', 'STRINGFORMATFLAGS*'], ['format', 'flags'], 'GpStatus'), 'GdipSetStringFormatAlign': (2, ['GPSTRINGFORMAT*', 'STRINGALIGNMENT'], ['format', 'align'], 'GpStatus'), 'GdipGetStringFormatAlign': (2, ['GDIPCONST GPSTRINGFORMAT*', 'STRINGALIGNMENT*'], ['format', 'align'], 'GpStatus'), 'GdipSetStringFormatLineAlign': (2, ['GPSTRINGFORMAT*', 'STRINGALIGNMENT'], ['format', 'align'], 'GpStatus'), 'GdipGetStringFormatLineAlign': (2, ['GDIPCONST GPSTRINGFORMAT*', 'STRINGALIGNMENT*'], ['format', 'align'], 'GpStatus'), 'GdipSetStringFormatTrimming': (2, ['GPSTRINGFORMAT*', 'STRINGTRIMMING'], ['format', 'trimming'], 'GpStatus'), 'GdipGetStringFormatTrimming': (2, ['GDIPCONST GPSTRINGFORMAT*', 'STRINGTRIMMING*'], ['format', 'trimming'], 'GpStatus'), 'GdipSetStringFormatHotkeyPrefix': (2, ['GPSTRINGFORMAT*', 'HOTKEYPREFIX'], ['format', 'hotkeyPrefix'], 'GpStatus'), 'GdipGetStringFormatHotkeyPrefix': (2, ['GDIPCONST GPSTRINGFORMAT*', 'HOTKEYPREFIX*'], ['format', 'hotkeyPrefix'], 'GpStatus'), 'GdipSetStringFormatTabStops': (4, ['GPSTRINGFORMAT*', 'REAL', 'INT', 'GDIPCONST REAL*'], ['format', 'firstTabOffset', 'count', 'tabStops'], 'GpStatus'), 'GdipGetStringFormatTabStops': (4, ['GDIPCONST GPSTRINGFORMAT*', 'INT', 'REAL*', 'REAL*'], ['format', 'count', 'firstTabOffset', 'tabStops'], 'GpStatus'), 'GdipGetStringFormatTabStopCount': (2, ['GDIPCONST GPSTRINGFORMAT*', 'INT*'], ['format', 'count'], 'GpStatus'), 'GdipSetStringFormatDigitSubstitution': (3, ['GPSTRINGFORMAT*', 'LANGID', 'STRINGDIGITSUBSTITUTE'], ['format', 'language', 'substitute'], 'GpStatus'), 'GdipGetStringFormatDigitSubstitution': (3, ['GDIPCONST GPSTRINGFORMAT*', 'LANGID*', 'STRINGDIGITSUBSTITUTE*'], ['format', 'language', 'substitute'], 'GpStatus'), 'GdipGetStringFormatMeasurableCharacterRangeCount': (2, ['GDIPCONST GPSTRINGFORMAT*', 'INT*'], ['format', 'count'], 'GpStatus'), 'GdipSetStringFormatMeasurableCharacterRanges': (3, ['GPSTRINGFORMAT*', 'INT', 'GDIPCONST CHARACTERRANGE*'], ['format', 'rangeCount', 'ranges'], 'GpStatus'), 'GdipCreateCachedBitmap': (3, ['GPBITMAP*', 'GPGRAPHICS*', 'GPCACHEDBITMAP**'], ['bitmap', 'graphics', 'cachedBitmap'], 'GpStatus'), 'GdipDeleteCachedBitmap': (1, ['GPCACHEDBITMAP*'], ['cachedBitmap'], 'GpStatus'), 'GdipDrawCachedBitmap': (4, ['GPGRAPHICS*', 'GPCACHEDBITMAP*', 'INT', 'INT'], ['graphics', 'cachedBitmap', 'x', 'y'], 'GpStatus'), 'GdipEmfToWmfBits': (5, ['HENHMETAFILE', 'UINT', 'LPBYTE', 'INT', 'INT'], ['hemf', 'cbData16', 'pData16', 'iMapMode', 'eFlags'], 'UINT'), 'GdipSetImageAttributesCachedBackground': (2, ['GPIMAGEATTRIBUTES*', 'BOOL'], ['imageattr', 'enableFlag'], 'GpStatus'), 'GdipTestControl': (2, ['GPTESTCONTROLENUM', 'VOID*'], ['control', 'param'], 'GpStatus'), 'GdiplusNotificationHook': (1, ['ULONG_PTR*'], ['token'], 'GpStatus'), 'GdiplusNotificationUnhook': (1, ['ULONG_PTR'], ['token'], 'VOID'), 'GdipConvertToEmfPlus': (6, ['CONST GPGRAPHICS*', 'GPMETAFILE*', 'INT*', 'EMFTYPE', 'CONST WCHAR*', 'GPMETAFILE**'], ['refGraphics', 'metafile', 'conversionFailureFlag', 'emfType', 'description', 'out_metafile'], 'GpStatus'), 'GdipConvertToEmfPlusToFile': (7, ['CONST GPGRAPHICS*', 'GPMETAFILE*', 'INT*', 'CONST WCHAR*', 'EMFTYPE', 'CONST WCHAR*', 'GPMETAFILE**'], ['refGraphics', 'metafile', 'conversionFailureFlag', 'filename', 'emfType', 'description', 'out_metafile'], 'GpStatus'), 'GdipConvertToEmfPlusToStream': (7, ['CONST GPGRAPHICS*', 'GPMETAFILE*', 'INT*', 'ISTREAM*', 'EMFTYPE', 'CONST WCHAR*', 'GPMETAFILE**'], ['refGraphics', 'metafile', 'conversionFailureFlag', 'stream', 'emfType', 'description', 'out_metafile'], 'GpStatus')}

dict5_oleaut32 = {'OleIconToCursor': (2, ['HINSTANCE', 'HICON'], ['hinstExe', 'hIcon'], 'HCURSOR'), 'OleCreateFontIndirect': (3, ['LPFONTDESC', 'REFIID', 'LPVOID*'], ['lpFontDesc', 'riid', 'lplpvObj'], 'HRESULT'), 'OleCreatePictureIndirect': (4, ['LPPICTDESC', 'REFIID', 'BOOL', 'LPVOID*'], ['lpPictDesc', 'riid', 'fOwn', 'lplpvObj'], 'HRESULT'), 'OleLoadPicture': (5, ['LPSTREAM', 'LONG', 'BOOL', 'REFIID', 'LPVOID*'], ['lpstream', 'lSize', 'fRunmode', 'riid', 'lplpvObj'], 'HRESULT'), 'OleLoadPictureEx': (8, ['LPSTREAM', 'LONG', 'BOOL', 'REFIID', 'DWORD', 'DWORD', 'OLELOADPICTUREEXFLAGS', 'LPVOID*'], ['lpstream', 'lSize', 'fRunmode', 'riid', 'xSizeDesired', 'ySizeDesired', 'dwFlags', 'lplpvObj'], 'HRESULT'), 'OleCreatePropertyFrame': (11, ['HWND', 'UINT', 'UINT', 'LPCOLESTR', 'ULONG', 'LPUNKNOWN*', 'ULONG', 'LPCLSID', 'LCID', 'DWORD', 'LPVOID'], ['hwndOwner', 'x', 'y', 'lpszCaption', 'cObjects', 'ppUnk', 'cPages', 'pPageClsID', 'lcid', 'dwReserved', 'pvReserved'], 'HRESULT'), 'OleCreatePropertyFrameIndirect': (1, ['LPOCPFIPARAMS'], ['lpParams'], 'HRESULT'), 'OleLoadPicturePath': (6, ['LPOLESTR', 'LPUNKNOWN', 'DWORD', 'OLE_COLOR', 'REFIID', 'LPVOID*'], ['szURLorPath', 'punkCaller', 'dwReserved', 'clrReserved', 'riid', 'ppvRet'], 'HRESULT'), 'OleTranslateColor': (3, ['OLE_COLOR', 'HPALETTE', 'COLORREF*'], ['clr', 'hpal', 'lpcolorref'], 'HRESULT'), 'SafeArrayAccessData': (2, ['SAFEARRAY*', 'VOID**'], ['psa', 'ppvData'], 'HRESULT'), 'SafeArrayAllocData': (1, ['SAFEARRAY*'], ['psa'], 'HRESULT'), 'SafeArrayAllocDescriptor': (2, ['UINT', 'SAFEARRAY**'], ['cDims', 'ppsaOut'], 'HRESULT'), 'SafeArrayAllocDescriptorEx': (3, ['VARTYPE', 'UINT', 'SAFEARRAY**'], ['vt', 'cDims', 'ppsaOut'], 'HRESULT'), 'SafeArrayCopy': (2, ['SAFEARRAY*', 'SAFEARRAY**'], ['psa', 'ppsaOut'], 'HRESULT'), 'SafeArrayCopyData': (2, ['SAFEARRAY*', 'SAFEARRAY*'], ['psaSource', 'psaTarget'], 'HRESULT'), 'SafeArrayCreate': (3, ['VARTYPE', 'UINT', 'SAFEARRAYBOUND*'], ['vt', 'cDims', 'rgsabound'], 'SAFEARRAY*'), 'SafeArrayCreateEx': (4, ['VARTYPE', 'UINT', 'SAFEARRAYBOUND*', 'PVOID'], ['vt', 'cDims', 'rgsabound', 'pvExtra'], 'SAFEARRAY*'), 'SafeArrayCreateVector': (3, ['VARTYPE', 'LONG', 'ULONG'], ['vt', 'lLbound', 'cElements'], 'SAFEARRAY*'), 'SafeArrayCreateVectorEx': (4, ['VARTYPE', 'LONG', 'ULONG', 'PVOID'], ['vt', 'lLbound', 'cElements', 'pvExtra'], 'SAFEARRAY*'), 'SafeArrayDestroy': (1, ['SAFEARRAY*'], ['psa'], 'HRESULT'), 'SafeArrayDestroyData': (1, ['SAFEARRAY*'], ['psa'], 'HRESULT'), 'SafeArrayDestroyDescriptor': (1, ['SAFEARRAY*'], ['psa'], 'HRESULT'), 'SafeArrayGetDim': (1, ['SAFEARRAY*'], ['psa'], 'UINT'), 'SafeArrayGetElement': (3, ['SAFEARRAY*', 'LONG*', 'VOID*'], ['psa', 'rgIndices', 'pv'], 'HRESULT'), 'SafeArrayGetElemsize': (1, ['SAFEARRAY*'], ['psa'], 'UINT'), 'SafeArrayGetIID': (2, ['SAFEARRAY*', 'GUID*'], ['psa', 'pguid'], 'HRESULT'), 'SafeArrayGetLBound': (3, ['SAFEARRAY*', 'UINT', 'LONG*'], ['psa', 'nDim', 'plLbound'], 'HRESULT'), 'SafeArrayGetRecordInfo': (2, ['SAFEARRAY*', 'IRECORDINFO**'], ['psa', 'prinfo'], 'HRESULT'), 'SafeArrayGetUBound': (3, ['SAFEARRAY*', 'UINT', 'LONG*'], ['psa', 'nDim', 'plUbound'], 'HRESULT'), 'SafeArrayGetVartype': (2, ['SAFEARRAY*', 'VARTYPE*'], ['psa', 'pvt'], 'HRESULT'), 'SafeArrayLock': (1, ['SAFEARRAY*'], ['psa'], 'HRESULT'), 'SafeArrayPtrOfIndex': (3, ['SAFEARRAY*', 'LONG*', 'VOID**'], ['psa', 'rgIndices', 'ppvData'], 'HRESULT'), 'SafeArrayPutElement': (3, ['SAFEARRAY*', 'LONG*', 'VOID*'], ['psa', 'rgIndices', 'pv'], 'HRESULT'), 'SafeArrayRedim': (2, ['SAFEARRAY*', 'SAFEARRAYBOUND*'], ['psa', 'psaboundNew'], 'HRESULT'), 'SafeArraySetIID': (2, ['SAFEARRAY*', 'REFGUID'], ['psa', 'guid'], 'HRESULT'), 'SafeArraySetRecordInfo': (2, ['SAFEARRAY*', 'IRECORDINFO*'], ['psa', 'prinfo'], 'HRESULT'), 'SafeArrayUnaccessData': (1, ['SAFEARRAY*'], ['psa'], 'HRESULT'), 'SafeArrayUnlock': (1, ['SAFEARRAY*'], ['psa'], 'HRESULT'), 'BstrFromVector': (2, ['SAFEARRAY*', 'BSTR*'], ['psa', 'pbstr'], 'HRESULT'), 'SetOaNoCache': (0, [], [], 'void'), 'VarBstrCat': (3, ['BSTR', 'BSTR', 'LPBSTR'], ['bstrLeft', 'bstrRight', 'pbstrResult'], 'HRESULT'), 'VarBstrCmp': (4, ['BSTR', 'BSTR', 'LCID', 'ULONG'], ['bstrLeft', 'bstrRight', 'lcid', 'dwFlags'], 'HRESULT'), 'VectorFromBstr': (2, ['BSTR', 'SAFEARRAY**'], ['bstr', 'ppsa'], 'HRESULT'), 'VarCyAbs': (2, ['CY', 'LPCY'], ['cyIn', 'pcyResult'], 'HRESULT'), 'VarCyAdd': (3, ['CY', 'CY', 'LPCY'], ['cyLeft', 'cyRight', 'pcyResult'], 'HRESULT'), 'VarCyCmp': (2, ['CY', 'CY'], ['cyLeft', 'cyRight'], 'HRESULT'), 'VarCyCmpR8': (2, ['CY', 'DOUBLE'], ['cyLeft', 'dblRight'], 'HRESULT'), 'VarCyFix': (2, ['CY', 'LPCY'], ['cyIn', 'pcyResult'], 'HRESULT'), 'VarCyInt': (2, ['CY', 'LPCY'], ['cyIn', 'pcyResult'], 'HRESULT'), 'VarCyMul': (3, ['CY', 'CY', 'LPCY'], ['cyLeft', 'cyRight', 'pcyResult'], 'HRESULT'), 'VarCyMulI4': (3, ['CY', 'LONG', 'LPCY'], ['cyLeft', 'lRight', 'pcyResult'], 'HRESULT'), 'VarCyMulI8': (3, ['CY', 'LONG64', 'LPCY'], ['cyLeft', 'lRight', 'pcyResult'], 'HRESULT'), 'VarCyNeg': (2, ['CY', 'LPCY'], ['cyIn', 'pcyResult'], 'HRESULT'), 'VarCyRound': (3, ['CY', 'INT', 'LPCY'], ['cyIn', 'cDecimals', 'pcyResult'], 'HRESULT'), 'VarCySub': (3, ['CY', 'CY', 'LPCY'], ['cyLeft', 'cyRight', 'pcyResult'], 'HRESULT'), 'GetVarConversionLocaleSetting': (1, ['ULONG*'], ['dwFlags'], 'HRESULT'), 'SetVarConversionLocaleSetting': (1, ['ULONG'], ['dwFlags'], 'HRESULT'), 'VarI1FromUI1': (2, ['BYTE', 'CHAR*'], ['bIn', 'pcOut'], 'HRESULT'), 'VarI1FromUI2': (2, ['USHORT', 'CHAR*'], ['uiIn', 'pcOut'], 'HRESULT'), 'VarI1FromUI4': (2, ['ULONG', 'CHAR*'], ['ulIn', 'pcOut'], 'HRESULT'), 'VarI1FromUI8': (2, ['ULONG64', 'CHAR*'], ['i64In', 'pcOut'], 'HRESULT'), 'VarI1FromI2': (2, ['SHORT', 'CHAR*'], ['uiIn', 'pcOut'], 'HRESULT'), 'VarI1FromI4': (2, ['LONG', 'CHAR*'], ['lIn', 'pcOut'], 'HRESULT'), 'VarI1FromI8': (2, ['LONG64', 'CHAR*'], ['i64In', 'pcOut'], 'HRESULT'), 'VarI1FromR4': (2, ['FLOAT', 'CHAR*'], ['fltIn', 'pcOut'], 'HRESULT'), 'VarI1FromR8': (2, ['DOUBLE', 'CHAR*'], ['dblIn', 'pcOut'], 'HRESULT'), 'VarI1FromCy': (2, ['CY', 'CHAR*'], ['cyIn', 'pcOut'], 'HRESULT'), 'VarI1FromDec': (2, ['CONST DECIMAL*', 'CHAR*'], ['pdecIn', 'pcOut'], 'HRESULT'), 'VarI1FromDate': (2, ['DATE', 'CHAR*'], ['dateIn', 'pcOut'], 'HRESULT'), 'VarI1FromStr': (4, ['LPCOLESTR', 'LCID', 'ULONG', 'CHAR*'], ['strIn', 'lcid', 'dwFlags', 'pcOut'], 'HRESULT'), 'VarI1FromDisp': (3, ['IDISPATCH*', 'LCID', 'CHAR*'], ['pdispIn', 'lcid', 'pcOut'], 'HRESULT'), 'VarI1FromBool': (2, ['VARIANT_BOOL', 'CHAR*'], ['boolIn', 'pcOut'], 'HRESULT'), 'VarUI1FromUI2': (2, ['USHORT', 'BYTE*'], ['uiIn', 'pbOut'], 'HRESULT'), 'VarUI1FromUI4': (2, ['ULONG', 'BYTE*'], ['ulIn', 'pbOut'], 'HRESULT'), 'VarUI1FromUI8': (2, ['ULONG64', 'BYTE*'], ['i64In', 'pbOut'], 'HRESULT'), 'VarUI1FromI1': (2, ['CHAR', 'BYTE*'], ['cIn', 'pbOut'], 'HRESULT'), 'VarUI1FromI2': (2, ['SHORT', 'BYTE*'], ['sIn', 'pbOut'], 'HRESULT'), 'VarUI1FromI4': (2, ['LONG', 'BYTE*'], ['lIn', 'pbOut'], 'HRESULT'), 'VarUI1FromI8': (2, ['LONG64', 'BYTE*'], ['i64In', 'pbOut'], 'HRESULT'), 'VarUI1FromR4': (2, ['FLOAT', 'BYTE*'], ['fltIn', 'pbOut'], 'HRESULT'), 'VarUI1FromR8': (2, ['DOUBLE', 'BYTE*'], ['dblIn', 'pbOut'], 'HRESULT'), 'VarUI1FromCy': (2, ['CY', 'BYTE*'], ['cyIn', 'pbOut'], 'HRESULT'), 'VarUI1FromDec': (2, ['CONST DECIMAL*', 'BYTE*'], ['pdecIn', 'pbOut'], 'HRESULT'), 'VarUI1FromDate': (2, ['DATE', 'BYTE*'], ['dateIn', 'pbOut'], 'HRESULT'), 'VarUI1FromStr': (4, ['LPCOLESTR', 'LCID', 'ULONG', 'BYTE*'], ['strIn', 'lcid', 'dwFlags', 'pbOut'], 'HRESULT'), 'VarUI1FromDisp': (3, ['IDISPATCH*', 'LCID', 'BYTE*'], ['pdispIn', 'lcid', 'pbOut'], 'HRESULT'), 'VarUI1FromBool': (2, ['VARIANT_BOOL', 'BYTE*'], ['boolIn', 'pbOut'], 'HRESULT'), 'VarI2FromUI1': (2, ['BYTE', 'SHORT*'], ['bIn', 'psOut'], 'HRESULT'), 'VarI2FromUI2': (2, ['USHORT', 'SHORT*'], ['uiIn', 'psOut'], 'HRESULT'), 'VarI2FromUI4': (2, ['ULONG', 'SHORT*'], ['ulIn', 'psOut'], 'HRESULT'), 'VarI2FromUI8': (2, ['ULONG64', 'SHORT*'], ['ui64In', 'psOut'], 'HRESULT'), 'VarI2FromI1': (2, ['CHAR', 'SHORT*'], ['cIn', 'psOut'], 'HRESULT'), 'VarI2FromI4': (2, ['LONG', 'SHORT*'], ['lIn', 'psOut'], 'HRESULT'), 'VarI2FromI8': (2, ['LONG64', 'SHORT*'], ['i64In', 'psOut'], 'HRESULT'), 'VarI2FromR4': (2, ['FLOAT', 'SHORT*'], ['fltIn', 'psOut'], 'HRESULT'), 'VarI2FromR8': (2, ['DOUBLE', 'SHORT*'], ['dblIn', 'psOut'], 'HRESULT'), 'VarI2FromCy': (2, ['CY', 'SHORT*'], ['cyIn', 'psOut'], 'HRESULT'), 'VarI2FromDec': (2, ['CONST DECIMAL*', 'SHORT*'], ['pdecIn', 'psOut'], 'HRESULT'), 'VarI2FromDate': (2, ['DATE', 'SHORT*'], ['dateIn', 'psOut'], 'HRESULT'), 'VarI2FromStr': (4, ['LPCOLESTR', 'LCID', 'ULONG', 'SHORT*'], ['strIn', 'lcid', 'dwFlags', 'psOut'], 'HRESULT'), 'VarI2FromDisp': (3, ['IDISPATCH*', 'LCID', 'SHORT*'], ['pdispIn', 'lcid', 'psOut'], 'HRESULT'), 'VarI2FromBool': (2, ['VARIANT_BOOL', 'SHORT*'], ['boolIn', 'psOut'], 'HRESULT'), 'VarUI2FromI1': (2, ['CHAR', 'USHORT*'], ['cIn', 'puiOut'], 'HRESULT'), 'VarUI2FromI2': (2, ['SHORT', 'USHORT*'], ['uiIn', 'puiOut'], 'HRESULT'), 'VarUI2FromI4': (2, ['LONG', 'USHORT*'], ['lIn', 'puiOut'], 'HRESULT'), 'VarUI2FromI8': (2, ['LONG64', 'USHORT*'], ['i64In', 'puiOut'], 'HRESULT'), 'VarUI2FromUI1': (2, ['BYTE', 'USHORT*'], ['bIn', 'puiOut'], 'HRESULT'), 'VarUI2FromUI4': (2, ['ULONG', 'USHORT*'], ['ulIn', 'puiOut'], 'HRESULT'), 'VarUI2FromUI8': (2, ['ULONG64', 'USHORT*'], ['i64In', 'puiOut'], 'HRESULT'), 'VarUI2FromR4': (2, ['FLOAT', 'USHORT*'], ['fltIn', 'puiOut'], 'HRESULT'), 'VarUI2FromR8': (2, ['DOUBLE', 'USHORT*'], ['dblIn', 'puiOut'], 'HRESULT'), 'VarUI2FromCy': (2, ['CY', 'USHORT*'], ['cyIn', 'puiOut'], 'HRESULT'), 'VarUI2FromDec': (2, ['CONST DECIMAL*', 'USHORT*'], ['pdecIn', 'puiOut'], 'HRESULT'), 'VarUI2FromDate': (2, ['DATE', 'USHORT*'], ['dateIn', 'puiOut'], 'HRESULT'), 'VarUI2FromStr': (4, ['LPCOLESTR', 'LCID', 'ULONG', 'USHORT*'], ['strIn', 'lcid', 'dwFlags', 'puiOut'], 'HRESULT'), 'VarUI2FromDisp': (3, ['IDISPATCH*', 'LCID', 'USHORT*'], ['pdispIn', 'lcid', 'puiOut'], 'HRESULT'), 'VarUI2FromBool': (2, ['VARIANT_BOOL', 'USHORT*'], ['boolIn', 'puiOut'], 'HRESULT'), 'VarI4FromUI2': (2, ['USHORT', 'LONG*'], ['uiIn', 'plOut'], 'HRESULT'), 'VarI4FromUI4': (2, ['ULONG', 'LONG*'], ['ulIn', 'plOut'], 'HRESULT'), 'VarI4FromUI8': (2, ['ULONG64', 'LONG*'], ['ui64In', 'plOut'], 'HRESULT'), 'VarI4FromI1': (2, ['CHAR', 'LONG*'], ['cIn', 'plOut'], 'HRESULT'), 'VarI4FromUI1': (2, ['BYTE', 'LONG*'], ['bIn', 'plOut'], 'HRESULT'), 'VarI4FromI2': (2, ['SHORT', 'LONG*'], ['sIn', 'plOut'], 'HRESULT'), 'VarI4FromI8': (2, ['LONG64', 'LONG*'], ['i64In', 'plOut'], 'HRESULT'), 'VarI4FromR4': (2, ['FLOAT', 'LONG*'], ['fltIn', 'plOut'], 'HRESULT'), 'VarI4FromR8': (2, ['DOUBLE', 'LONG*'], ['dblIn', 'plOut'], 'HRESULT'), 'VarI4FromCy': (2, ['CY', 'LONG*'], ['cyIn', 'plOut'], 'HRESULT'), 'VarI4FromDec': (2, ['CONST DECIMAL*', 'LONG*'], ['pdecIn', 'plOut'], 'HRESULT'), 'VarI4FromDate': (2, ['DATE', 'LONG*'], ['dateIn', 'plOut'], 'HRESULT'), 'VarI4FromStr': (4, ['LPCOLESTR', 'LCID', 'ULONG', 'LONG*'], ['strIn', 'lcid', 'dwFlags', 'plOut'], 'HRESULT'), 'VarI4FromDisp': (3, ['IDISPATCH*', 'LCID', 'LONG*'], ['pdispIn', 'lcid', 'plOut'], 'HRESULT'), 'VarI4FromBool': (2, ['VARIANT_BOOL', 'LONG*'], ['boolIn', 'plOut'], 'HRESULT'), 'VarUI4FromUI2': (2, ['USHORT', 'ULONG*'], ['uiIn', 'pulOut'], 'HRESULT'), 'VarUI4FromI1': (2, ['CHAR', 'ULONG*'], ['cIn', 'pulOut'], 'HRESULT'), 'VarUI4FromI2': (2, ['SHORT', 'ULONG*'], ['uiIn', 'pulOut'], 'HRESULT'), 'VarUI4FromUI1': (2, ['BYTE', 'ULONG*'], ['bIn', 'pulOut'], 'HRESULT'), 'VarUI4FromUI8': (2, ['ULONG64', 'ULONG*'], ['ui64In', 'plOut'], 'HRESULT'), 'VarUI4FromI4': (2, ['LONG', 'ULONG*'], ['lIn', 'pulOut'], 'HRESULT'), 'VarUI4FromI8': (2, ['LONG64', 'ULONG*'], ['i64In', 'plOut'], 'HRESULT'), 'VarUI4FromR4': (2, ['FLOAT', 'ULONG*'], ['fltIn', 'pulOut'], 'HRESULT'), 'VarUI4FromR8': (2, ['DOUBLE', 'ULONG*'], ['dblIn', 'pulOut'], 'HRESULT'), 'VarUI4FromCy': (2, ['CY', 'ULONG*'], ['cyIn', 'pulOut'], 'HRESULT'), 'VarUI4FromDec': (2, ['CONST DECIMAL*', 'ULONG*'], ['pdecIn', 'pulOut'], 'HRESULT'), 'VarUI4FromDate': (2, ['DATE', 'ULONG*'], ['dateIn', 'pulOut'], 'HRESULT'), 'VarUI4FromStr': (4, ['LPCOLESTR', 'LCID', 'ULONG', 'ULONG*'], ['strIn', 'lcid', 'dwFlags', 'pulOut'], 'HRESULT'), 'VarUI4FromDisp': (3, ['IDISPATCH*', 'LCID', 'ULONG*'], ['pdispIn', 'lcid', 'pulOut'], 'HRESULT'), 'VarUI4FromBool': (2, ['VARIANT_BOOL', 'ULONG*'], ['boolIn', 'pulOut'], 'HRESULT'), 'VarR4FromUI2': (2, ['USHORT', 'FLOAT*'], ['uiIn', 'pfltOut'], 'HRESULT'), 'VarR4FromUI4': (2, ['ULONG', 'FLOAT*'], ['ulIn', 'pfltOut'], 'HRESULT'), 'VarR4FromUI8': (2, ['ULONG64', 'FLOAT*'], ['ui64In', 'pfltOut'], 'HRESULT'), 'VarR4FromI1': (2, ['CHAR', 'FLOAT*'], ['cIn', 'pfltOut'], 'HRESULT'), 'VarR4FromUI1': (2, ['BYTE', 'FLOAT*'], ['bIn', 'pfltOut'], 'HRESULT'), 'VarR4FromI2': (2, ['SHORT', 'FLOAT*'], ['sIn', 'pfltOut'], 'HRESULT'), 'VarR4FromI4': (2, ['LONG', 'FLOAT*'], ['lIn', 'pfltOut'], 'HRESULT'), 'VarR4FromI8': (2, ['LONG64', 'FLOAT*'], ['i64In', 'pfltOut'], 'HRESULT'), 'VarR4FromR8': (2, ['DOUBLE', 'FLOAT*'], ['dblIn', 'pfltOut'], 'HRESULT'), 'VarR4FromCy': (2, ['CY', 'FLOAT*'], ['cyIn', 'pfltOut'], 'HRESULT'), 'VarR4FromDec': (2, ['CONST DECIMAL*', 'FLOAT*'], ['pdecIn', 'pfltOut'], 'HRESULT'), 'VarR4FromDate': (2, ['DATE', 'FLOAT*'], ['dateIn', 'pfltOut'], 'HRESULT'), 'VarR4FromStr': (4, ['LPCOLESTR', 'LCID', 'ULONG', 'FLOAT*'], ['strIn', 'lcid', 'dwFlags', 'pfltOut'], 'HRESULT'), 'VarR4FromDisp': (3, ['IDISPATCH*', 'LCID', 'FLOAT*'], ['pdispIn', 'lcid', 'pfltOut'], 'HRESULT'), 'VarR4FromBool': (2, ['VARIANT_BOOL', 'FLOAT*'], ['boolIn', 'pfltOut'], 'HRESULT'), 'VarR8FromUI2': (2, ['USHORT', 'DOUBLE*'], ['uiIn', 'pdblOut'], 'HRESULT'), 'VarR8FromUI4': (2, ['ULONG', 'DOUBLE*'], ['ulIn', 'pdblOut'], 'HRESULT'), 'VarR8FromUI8': (2, ['ULONG64', 'DOUBLE*'], ['ui64In', 'pdblOut'], 'HRESULT'), 'VarR8FromI1': (2, ['CHAR', 'DOUBLE*'], ['cIn', 'pdblOut'], 'HRESULT'), 'VarR8FromUI1': (2, ['BYTE', 'DOUBLE*'], ['bIn', 'pdblOut'], 'HRESULT'), 'VarR8FromI2': (2, ['SHORT', 'DOUBLE*'], ['sIn', 'pdblOut'], 'HRESULT'), 'VarR8FromI4': (2, ['LONG', 'DOUBLE*'], ['lIn', 'pdblOut'], 'HRESULT'), 'VarR8FromI8': (2, ['LONG64', 'DOUBLE*'], ['i64In', 'pdblOut'], 'HRESULT'), 'VarR8FromR4': (2, ['FLOAT', 'DOUBLE*'], ['fltIn', 'pdblOut'], 'HRESULT'), 'VarR8FromCy': (2, ['CY', 'DOUBLE*'], ['cyIn', 'pdblOut'], 'HRESULT'), 'VarR8FromDec': (2, ['CONST DECIMAL*', 'DOUBLE*'], ['pdecIn', 'pdblOut'], 'HRESULT'), 'VarR8FromDate': (2, ['DATE', 'DOUBLE*'], ['dateIn', 'pdblOut'], 'HRESULT'), 'VarR8FromStr': (4, ['LPCOLESTR', 'LCID', 'ULONG', 'DOUBLE*'], ['strIn', 'lcid', 'dwFlags', 'pdblOut'], 'HRESULT'), 'VarR8FromDisp': (3, ['IDISPATCH*', 'LCID', 'DOUBLE*'], ['pdispIn', 'lcid', 'pdblOut'], 'HRESULT'), 'VarR8FromBool': (2, ['VARIANT_BOOL', 'DOUBLE*'], ['boolIn', 'pdblOut'], 'HRESULT'), 'VarDateFromUI2': (2, ['USHORT', 'DATE*'], ['uiIn', 'pdateOut'], 'HRESULT'), 'VarDateFromUI4': (2, ['ULONG', 'DATE*'], ['ulIn', 'pdateOut'], 'HRESULT'), 'VarDateFromUI8': (2, ['ULONG64', 'DATE*'], ['ui64In', 'pdateOut'], 'HRESULT'), 'VarDateFromI1': (2, ['CHAR', 'DATE*'], ['cIn', 'pdateOut'], 'HRESULT'), 'VarDateFromUI1': (2, ['BYTE', 'DATE*'], ['bIn', 'pdateOut'], 'HRESULT'), 'VarDateFromI2': (2, ['SHORT', 'DATE*'], ['sIn', 'pdateOut'], 'HRESULT'), 'VarDateFromI4': (2, ['LONG', 'DATE*'], ['lIn', 'pdateOut'], 'HRESULT'), 'VarDateFromI8': (2, ['LONG64', 'DATE*'], ['i64In', 'pdateOut'], 'HRESULT'), 'VarDateFromR4': (2, ['FLOAT', 'DATE*'], ['fltIn', 'pdateOut'], 'HRESULT'), 'VarDateFromR8': (2, ['DOUBLE', 'DATE*'], ['dblIn', 'pdateOut'], 'HRESULT'), 'VarDateFromCy': (2, ['CY', 'DATE*'], ['cyIn', 'pdateOut'], 'HRESULT'), 'VarDateFromDec': (2, ['CONST DECIMAL*', 'DATE*'], ['pdecIn', 'pdateOut'], 'HRESULT'), 'VarDateFromStr': (4, ['LPCOLESTR', 'LCID', 'ULONG', 'DATE*'], ['strIn', 'lcid', 'dwFlags', 'pdateOut'], 'HRESULT'), 'VarDateFromDisp': (3, ['IDISPATCH*', 'LCID', 'DATE*'], ['pdispIn', 'lcid', 'pdateOut'], 'HRESULT'), 'VarDateFromBool': (2, ['VARIANT_BOOL', 'DATE*'], ['boolIn', 'pdateOut'], 'HRESULT'), 'VarCyFromUI2': (2, ['USHORT', 'CY*'], ['uiIn', 'pcyOut'], 'HRESULT'), 'VarCyFromUI4': (2, ['ULONG', 'CY*'], ['ulIn', 'pcyOut'], 'HRESULT'), 'VarCyFromUI8': (2, ['ULONG64', 'CY*'], ['ui64In', 'pcyOut'], 'HRESULT'), 'VarCyFromI1': (2, ['CHAR', 'CY*'], ['cIn', 'pcyOut'], 'HRESULT'), 'VarCyFromUI1': (2, ['BYTE', 'CY*'], ['bIn', 'pcyOut'], 'HRESULT'), 'VarCyFromI2': (2, ['SHORT', 'CY*'], ['sIn', 'pcyOut'], 'HRESULT'), 'VarCyFromI4': (2, ['LONG', 'CY*'], ['lIn', 'pcyOut'], 'HRESULT'), 'VarCyFromI8': (2, ['LONG64', 'CY*'], ['i64In', 'pcyOut'], 'HRESULT'), 'VarCyFromR4': (2, ['FLOAT', 'CY*'], ['fltIn', 'pcyOut'], 'HRESULT'), 'VarCyFromR8': (2, ['DOUBLE', 'CY*'], ['dblIn', 'pcyOut'], 'HRESULT'), 'VarCyFromDec': (2, ['CONST DECIMAL*', 'CY*'], ['pdecIn', 'pcyOut'], 'HRESULT'), 'VarCyFromDate': (2, ['DATE', 'CY*'], ['dateIn', 'pcyOut'], 'HRESULT'), 'VarCyFromStr': (4, ['LPCOLESTR', 'LCID', 'ULONG', 'CY*'], ['strIn', 'lcid', 'dwFlags', 'pcyOut'], 'HRESULT'), 'VarCyFromDisp': (3, ['IDISPATCH*', 'LCID', 'CY*'], ['pdispIn', 'lcid', 'pcyOut'], 'HRESULT'), 'VarCyFromBool': (2, ['VARIANT_BOOL', 'CY*'], ['boolIn', 'pcyOut'], 'HRESULT'), 'VarBstrFromUI2': (4, ['USHORT', 'LCID', 'ULONG', 'BSTR*'], ['uiIn', 'lcid', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarBstrFromUI4': (4, ['ULONG', 'LCID', 'ULONG', 'BSTR*'], ['ulIn', 'lcid', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarBstrFromUI8': (4, ['ULONG64', 'LCID', 'UNSIGNED LONG', 'BSTR*'], ['ui64In', 'lcid', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarBstrFromI1': (4, ['CHAR', 'LCID', 'ULONG', 'BSTR*'], ['cIn', 'lcid', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarBstrFromUI1': (4, ['BYTE', 'LCID', 'ULONG', 'BSTR*'], ['bVal', 'lcid', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarBstrFromI2': (4, ['SHORT', 'LCID', 'ULONG', 'BSTR*'], ['iVal', 'lcid', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarBstrFromI4': (4, ['LONG', 'LCID', 'ULONG', 'BSTR*'], ['lIn', 'lcid', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarBstrFromI8': (4, ['LONG64', 'LCID', 'UNSIGNED LONG', 'BSTR*'], ['i64In', 'lcid', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarBstrFromR4': (4, ['FLOAT', 'LCID', 'ULONG', 'BSTR*'], ['fltIn', 'lcid', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarBstrFromR8': (4, ['DOUBLE', 'LCID', 'ULONG', 'BSTR*'], ['dblIn', 'lcid', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarBstrFromCy': (4, ['CY', 'LCID', 'ULONG', 'BSTR*'], ['cyIn', 'lcid', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarBstrFromDec': (4, ['CONST DECIMAL*', 'LCID', 'ULONG', 'BSTR*'], ['pdecIn', 'lcid', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarBstrFromDate': (4, ['DATE', 'LCID', 'ULONG', 'BSTR*'], ['dateIn', 'lcid', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarBstrFromDisp': (4, ['IDISPATCH*', 'LCID', 'ULONG', 'BSTR*'], ['pdispIn', 'lcid', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarBstrFromBool': (4, ['VARIANT_BOOL', 'LCID', 'ULONG', 'BSTR*'], ['boolIn', 'lcid', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarBoolFromUI2': (2, ['USHORT', 'VARIANT_BOOL*'], ['uiIn', 'pboolOut'], 'HRESULT'), 'VarBoolFromUI4': (2, ['ULONG', 'VARIANT_BOOL*'], ['ulIn', 'pboolOut'], 'HRESULT'), 'VarBoolFromUI8': (2, ['ULONG64', 'VARIANT_BOOL*'], ['i64In', 'pboolOut'], 'HRESULT'), 'VarBoolFromI1': (2, ['CHAR', 'VARIANT_BOOL*'], ['cIn', 'pboolOut'], 'HRESULT'), 'VarBoolFromUI1': (2, ['BYTE', 'VARIANT_BOOL*'], ['bIn', 'pboolOut'], 'HRESULT'), 'VarBoolFromI2': (2, ['SHORT', 'VARIANT_BOOL*'], ['sIn', 'pboolOut'], 'HRESULT'), 'VarBoolFromI4': (2, ['LONG', 'VARIANT_BOOL*'], ['lIn', 'pboolOut'], 'HRESULT'), 'VarBoolFromI8': (2, ['LONG64', 'VARIANT_BOOL*'], ['i64In', 'pboolOut'], 'HRESULT'), 'VarBoolFromR4': (2, ['FLOAT', 'VARIANT_BOOL*'], ['fltIn', 'pboolOut'], 'HRESULT'), 'VarBoolFromR8': (2, ['DOUBLE', 'VARIANT_BOOL*'], ['dblIn', 'pboolOut'], 'HRESULT'), 'VarBoolFromCy': (2, ['CY', 'VARIANT_BOOL*'], ['cyIn', 'pboolOut'], 'HRESULT'), 'VarBoolFromDec': (2, ['CONST DECIMAL*', 'VARIANT_BOOL*'], ['pdecIn', 'pboolOut'], 'HRESULT'), 'VarBoolFromDate': (2, ['DATE', 'VARIANT_BOOL*'], ['dateIn', 'pboolOut'], 'HRESULT'), 'VarBoolFromStr': (4, ['LPCOLESTR', 'LCID', 'ULONG', 'VARIANT_BOOL*'], ['strIn', 'lcid', 'dwFlags', 'pboolOut'], 'HRESULT'), 'VarBoolFromDisp': (3, ['IDISPATCH*', 'LCID', 'VARIANT_BOOL*'], ['pdispIn', 'lcid', 'pboolOut'], 'HRESULT'), 'VarDecFromUI2': (2, ['USHORT', 'DECIMAL*'], ['uiIn', 'pdecOut'], 'HRESULT'), 'VarDecFromUI4': (2, ['ULONG', 'DECIMAL*'], ['ulIn', 'pdecOut'], 'HRESULT'), 'VarDecFromUI8': (2, ['ULONG64', 'DECIMAL*'], ['ui64In', 'pdecOut'], 'HRESULT'), 'VarDecFromI1': (2, ['CHAR', 'DECIMAL*'], ['cIn', 'pdecOut'], 'HRESULT'), 'VarDecFromUI1': (2, ['BYTE', 'DECIMAL*'], ['bIn', 'pdecOut'], 'HRESULT'), 'VarDecFromI2': (2, ['SHORT', 'DECIMAL*'], ['uiIn', 'pdecOut'], 'HRESULT'), 'VarDecFromI4': (2, ['LONG', 'DECIMAL*'], ['lIn', 'pdecOut'], 'HRESULT'), 'VarDecFromI8': (2, ['LONG64', 'DECIMAL*'], ['i64In', 'pdecOut'], 'HRESULT'), 'VarDecFromR4': (2, ['FLOAT', 'DECIMAL*'], ['fltIn', 'pdecOut'], 'HRESULT'), 'VarDecFromR8': (2, ['DOUBLE', 'DECIMAL*'], ['dblIn', 'pdecOut'], 'HRESULT'), 'VarDecFromCy': (2, ['CY', 'DECIMAL*'], ['cyIn', 'pdecOut'], 'HRESULT'), 'VarDecFromDate': (2, ['DATE', 'DECIMAL*'], ['dateIn', 'pdecOut'], 'HRESULT'), 'VarDecFromStr': (4, ['LPCOLESTR', 'LCID', 'ULONG', 'DECIMAL*'], ['strIn', 'lcid', 'dwFlags', 'pdecOut'], 'HRESULT'), 'VarDecFromDisp': (3, ['IDISPATCH*', 'LCID', 'DECIMAL*'], ['pdispIn', 'lcid', 'pdecOut'], 'HRESULT'), 'VarDecFromBool': (2, ['VARIANT_BOOL', 'DECIMAL*'], ['boolIn', 'pdecOut'], 'HRESULT'), 'VarI8FromBool': (2, ['VARIANT_BOOL', 'LONG64*'], ['boolIn', 'pi64Out'], 'HRESULT'), 'VarI8FromCy': (2, ['CY', 'LONG64*'], ['cyIn', 'pi64Out'], 'HRESULT'), 'VarI8FromDate': (2, ['DATE', 'LONG64*'], ['dateIn', 'pi64Out'], 'HRESULT'), 'VarI8FromDec': (2, ['CONST DECIMAL*', 'LONG64*'], ['pdecIn', 'pi64Out'], 'HRESULT'), 'VarI8FromDisp': (3, ['IDISPATCH*', 'LCID', 'LONG64*'], ['pdispIn', 'lcid', 'pi64Out'], 'HRESULT'), 'VarI8FromI1': (2, ['CHAR', 'LONG64*'], ['cIn', 'pi64Out'], 'HRESULT'), 'VarI8FromI2': (2, ['SHORT', 'LONG64*'], ['sIn', 'pi64Out'], 'HRESULT'), 'VarI8FromR4': (2, ['FLOAT', 'LONG64*'], ['fltIn', 'pi64Out'], 'HRESULT'), 'VarI8FromR8': (2, ['DOUBLE', 'LONG64*'], ['dblIn', 'pi64Out'], 'HRESULT'), 'VarI8FromStr': (4, ['LPCOLESTR', 'LCID', 'UNSIGNED LONG', 'LONG64*'], ['strIn', 'lcid', 'dwFlags', 'pi64Out'], 'HRESULT'), 'VarI8FromUI1': (2, ['BYTE', 'LONG64*'], ['bIn', 'pi64Out'], 'HRESULT'), 'VarI8FromUI2': (2, ['USHORT', 'LONG64*'], ['uiIn', 'pi64Out'], 'HRESULT'), 'VarI8FromUI4': (2, ['ULONG', 'LONG64*'], ['ulIn', 'pi64Out'], 'HRESULT'), 'VarI8FromUI8': (2, ['ULONG64', 'LONG64*'], ['ui64In', 'pi64Out'], 'HRESULT'), 'VarUI8FromBool': (2, ['VARIANT_BOOL', 'ULONG64*'], ['boolIn', 'pi64Out'], 'HRESULT'), 'VarUI8FromCy': (2, ['CY', 'ULONG64*'], ['cyIn', 'pi64Out'], 'HRESULT'), 'VarUI8FromDate': (2, ['DATE', 'ULONG64*'], ['dateIn', 'pi64Out'], 'HRESULT'), 'VarUI8FromDec': (2, ['CONST DECIMAL*', 'ULONG64*'], ['pdecIn', 'pi64Out'], 'HRESULT'), 'VarUI8FromDisp': (3, ['IDISPATCH*', 'LCID', 'ULONG64*'], ['pdispIn', 'lcid', 'pi64Out'], 'HRESULT'), 'VarUI8FromI1': (2, ['CHAR', 'ULONG64*'], ['cIn', 'pi64Out'], 'HRESULT'), 'VarUI8FromI2': (2, ['SHORT', 'ULONG64*'], ['sIn', 'pi64Out'], 'HRESULT'), 'VarUI8FromI8': (2, ['LONG64', 'ULONG64*'], ['ui64In', 'pi64Out'], 'HRESULT'), 'VarUI8FromR4': (2, ['FLOAT', 'ULONG64*'], ['fltIn', 'pi64Out'], 'HRESULT'), 'VarUI8FromR8': (2, ['DOUBLE', 'ULONG64*'], ['dblIn', 'pi64Out'], 'HRESULT'), 'VarUI8FromStr': (4, ['LPCOLESTR', 'LCID', 'UNSIGNED LONG', 'ULONG64*'], ['strIn', 'lcid', 'dwFlags', 'pi64Out'], 'HRESULT'), 'VarUI8FromUI1': (2, ['BYTE', 'ULONG64*'], ['bIn', 'pi64Out'], 'HRESULT'), 'VarUI8FromUI2': (2, ['USHORT', 'ULONG64*'], ['uiIn', 'pi64Out'], 'HRESULT'), 'VarUI8FromUI4': (2, ['ULONG', 'ULONG64*'], ['ulIn', 'pi64Out'], 'HRESULT'), 'DosDateTimeToVariantTime': (3, ['USHORT', 'USHORT', 'DOUBLE*'], ['wDosDate', 'wDosTime', 'pvtime'], 'INT'), 'GetAltMonthNames': (2, ['LCID', 'LPOLESTR**'], ['lcid', 'prgp'], 'HRESULT'), 'SystemTimeToVariantTime': (2, ['LPSYSTEMTIME', 'DOUBLE*'], ['lpSystemTime', 'pvtime'], 'INT'), 'VarDateFromUdate': (3, ['UDATE*', 'ULONG', 'DATE*'], ['pudateIn', 'dwFlags', 'pdateOut'], 'HRESULT'), 'VarDateFromUdateEx': (4, ['UDATE*', 'LCID', 'ULONG', 'DATE*'], ['pudateIn', 'lcid', 'dwFlags', 'pdateOut'], 'HRESULT'), 'VariantTimeToDosDateTime': (3, ['DOUBLE', 'USHORT*', 'USHORT*'], ['vtime', 'pwDosDate', 'pwDosTime'], 'INT'), 'VariantTimeToSystemTime': (2, ['DOUBLE', 'LPSYSTEMTIME'], ['vtime', 'lpSystemTime'], 'INT'), 'VarUdateFromDate': (3, ['DATE', 'ULONG', 'UDATE*'], ['dateIn', 'dwFlags', 'pudateOut'], 'HRESULT'), 'VarDecAbs': (2, ['LPDECIMAL', 'LPDECIMAL'], ['pdecIn', 'pdecResult'], 'HRESULT'), 'VarDecAdd': (3, ['LPDECIMAL', 'LPDECIMAL', 'LPDECIMAL'], ['pdecLeft', 'pdecRight', 'pdecResult'], 'HRESULT'), 'VarDecCmp': (2, ['LPDECIMAL', 'LPDECIMAL'], ['pdecLeft', 'pdecRight'], 'HRESULT'), 'VarDecCmpR8': (2, ['LPDECIMAL', 'DOUBLE'], ['pdecLeft', 'dblRight'], 'HRESULT'), 'VarDecDiv': (3, ['LPDECIMAL', 'LPDECIMAL', 'LPDECIMAL'], ['pdecLeft', 'pdecRight', 'pdecResult'], 'HRESULT'), 'VarDecFix': (2, ['LPDECIMAL', 'LPDECIMAL'], ['pdecIn', 'pdecResult'], 'HRESULT'), 'VarDecInt': (2, ['LPDECIMAL', 'LPDECIMAL'], ['pdecIn', 'pdecResult'], 'HRESULT'), 'VarDecMul': (3, ['LPDECIMAL', 'LPDECIMAL', 'LPDECIMAL'], ['pdecLeft', 'pdecRight', 'pdecResult'], 'HRESULT'), 'VarDecNeg': (2, ['LPDECIMAL', 'LPDECIMAL'], ['pdecIn', 'pdecResult'], 'HRESULT'), 'VarDecRound': (3, ['LPDECIMAL', 'INT', 'LPDECIMAL'], ['pdecIn', 'cDecimals', 'pdecResult'], 'HRESULT'), 'VarDecSub': (3, ['LPDECIMAL', 'LPDECIMAL', 'LPDECIMAL'], ['pdecLeft', 'pdecRight', 'pdecResult'], 'HRESULT'), 'VarNumFromParseNum': (4, ['NUMPARSE*', 'BYTE*', 'ULONG', 'VARIANT*'], ['pnumprs', 'rgbDig', 'dwVtBits', 'pvar'], 'HRESULT'), 'VarParseNumFromStr': (5, ['LPCOLESTR', 'LCID', 'ULONG', 'NUMPARSE*', 'BYTE*'], ['strIn', 'lcid', 'dwFlags', 'pnumprs', 'rgbDig'], 'HRESULT'), 'BSTR_UserFree': (2, ['UNSIGNED LONG*', 'BSTR*'], ['pFlags', 'pBstr'], 'void'), 'BSTR_UserFree64': (2, ['UNSIGNED LONG*', 'BSTR*'], ['pFlags', 'pBstr'], 'void'), 'BSTR_UserMarshal': (3, ['UNSIGNED LONG*', 'UNSIGNED CHAR*', 'BSTR*'], ['pFlags', 'pBuffer', 'pBstr'], 'unsigned char*'), 'BSTR_UserMarshal64': (3, ['UNSIGNED LONG*', 'UNSIGNED CHAR*', 'BSTR*'], ['pFlags', 'pBuffer', 'pBstr'], 'unsigned char*'), 'BSTR_UserSize': (3, ['UNSIGNED LONG*', 'UNSIGNED LONG', 'BSTR*'], ['pFlags', 'Offset', 'pBstr'], 'unsigned long'), 'BSTR_UserSize64': (3, ['UNSIGNED LONG*', 'UNSIGNED LONG', 'BSTR*'], ['pFlags', 'Offset', 'pBstr'], 'unsigned long'), 'BSTR_UserUnmarshal': (3, ['UNSIGNED LONG*', 'UNSIGNED CHAR*', 'BSTR*'], ['pFlags', 'pBuffer', 'pBstr'], 'unsigned char*'), 'BSTR_UserUnmarshal64': (3, ['UNSIGNED LONG*', 'UNSIGNED CHAR*', 'BSTR*'], ['pFlags', 'pBuffer', 'pBstr'], 'unsigned char*'), 'LPSAFEARRAY_Marshal': (4, ['UNSIGNED LONG*', 'UNSIGNED CHAR*', 'LPSAFEARRAY*', 'CONST IID*'], ['pFlags', 'pBuffer', 'ppSafeArray', 'piid'], 'unsigned char*'), 'LPSAFEARRAY_Size': (4, ['UNSIGNED LONG*', 'UNSIGNED LONG', 'LPSAFEARRAY*', 'CONST IID*'], ['pFlags', 'Offset', 'ppSafeArray', 'piid'], 'unsigned long'), 'LPSAFEARRAY_Unmarshal': (4, ['UNSIGNED LONG*', 'UNSIGNED CHAR*', 'LPSAFEARRAY*', 'CONST IID*'], ['pFlags', 'pBuffer', 'ppSafeArray', 'piid'], 'unsigned char*'), 'LPSAFEARRAY_UserFree': (2, ['UNSIGNED LONG*', 'LPSAFEARRAY*'], ['pFlags', 'ppSafeArray'], 'void'), 'LPSAFEARRAY_UserMarshal': (3, ['UNSIGNED LONG*', 'UNSIGNED CHAR*', 'LPSAFEARRAY*'], ['pFlags', 'pBuffer', 'ppSafeArray'], 'unsigned char*'), 'LPSAFEARRAY_UserSize': (3, ['UNSIGNED LONG*', 'UNSIGNED LONG', 'LPSAFEARRAY*'], ['pFlags', 'Offset', 'ppSafeArray'], 'unsigned long'), 'LPSAFEARRAY_UserUnmarshal': (3, ['UNSIGNED LONG*', 'UNSIGNED CHAR*', 'LPSAFEARRAY*'], ['pFlags', 'pBuffer', 'ppSafeArray'], 'unsigned char*'), 'VARIANT_UserFree': (2, ['UNSIGNED LONG*', 'VARIANT*'], ['pFlags', 'pVariant'], 'void'), 'VARIANT_UserFree64': (2, ['UNSIGNED LONG*', 'VARIANT*'], ['pFlags', 'pVariant'], 'void'), 'VARIANT_UserMarshal': (3, ['UNSIGNED LONG*', 'UNSIGNED CHAR*', 'VARIANT*'], ['pFlags', 'pBuffer', 'pVariant'], 'unsigned char*'), 'VARIANT_UserMarshal64': (3, ['UNSIGNED LONG*', 'UNSIGNED CHAR*', 'VARIANT*'], ['pFlags', 'pBuffer', 'pVariant'], 'unsigned char*'), 'VARIANT_UserSize': (3, ['UNSIGNED LONG*', 'UNSIGNED LONG', 'VARIANT*'], ['pFlags', 'Offset', 'pVariant'], 'unsigned long'), 'VARIANT_UserSize64': (3, ['UNSIGNED LONG*', 'UNSIGNED LONG', 'VARIANT*'], ['pFlags', 'Offset', 'pVariant'], 'unsigned long'), 'VARIANT_UserUnmarshal': (3, ['UNSIGNED LONG*', 'UNSIGNED CHAR*', 'VARIANT*'], ['pFlags', 'pBuffer', 'pVariant'], 'unsigned char*'), 'VARIANT_UserUnmarshal64': (3, ['UNSIGNED LONG*', 'UNSIGNED CHAR*', 'VARIANT*'], ['pFlags', 'pBuffer', 'pVariant'], 'unsigned char*'), 'SysAllocString': (1, ['CONST OLECHAR*'], ['psz'], 'BSTR'), 'SysAllocStringByteLen': (2, ['LPCSTR', 'UINT'], ['psz', 'len'], 'BSTR'), 'SysAllocStringLen': (2, ['CONST OLECHAR*', 'UINT'], ['strIn', 'ui'], 'BSTR'), 'SysFreeString': (1, ['BSTR'], ['bstrString'], 'void'), 'SysReAllocString': (2, ['BSTR*', 'CONST OLECHAR*'], ['pbstr', 'psz'], 'INT'), 'SysReAllocStringLen': (3, ['BSTR*', 'CONST OLECHAR*', 'UNSIGNED INT'], ['pbstr', 'psz', 'len'], 'INT'), 'SysStringByteLen': (1, ['BSTR'], ['bstr'], 'UINT'), 'SysStringLen': (1, ['BSTR'], ['bstr'], 'UINT'), 'VarAbs': (2, ['LPVARIANT', 'LPVARIANT'], ['pvarIn', 'pvarResult'], 'HRESULT'), 'VarAdd': (3, ['LPVARIANT', 'LPVARIANT', 'LPVARIANT'], ['pvarLeft', 'pvarRight', 'pvarResult'], 'HRESULT'), 'VarAnd': (3, ['LPVARIANT', 'LPVARIANT', 'LPVARIANT'], ['pvarLeft', 'pvarRight', 'pvarResult'], 'HRESULT'), 'VarCat': (3, ['LPVARIANT', 'LPVARIANT', 'LPVARIANT'], ['pvarLeft', 'pvarRight', 'pvarResult'], 'HRESULT'), 'VarCmp': (4, ['LPVARIANT', 'LPVARIANT', 'LCID', 'ULONG'], ['pvarLeft', 'pvarRight', 'lcid', 'dwFlags'], 'HRESULT'), 'VarDiv': (3, ['LPVARIANT', 'LPVARIANT', 'LPVARIANT'], ['pvarLeft', 'pvarRight', 'pvarResult'], 'HRESULT'), 'VarEqv': (3, ['LPVARIANT', 'LPVARIANT', 'LPVARIANT'], ['pvarLeft', 'pvarRight', 'pvarResult'], 'HRESULT'), 'VarFix': (2, ['LPVARIANT', 'LPVARIANT'], ['pvarIn', 'pvarResult'], 'HRESULT'), 'VarIdiv': (3, ['LPVARIANT', 'LPVARIANT', 'LPVARIANT'], ['pvarLeft', 'pvarRight', 'pvarResult'], 'HRESULT'), 'VarImp': (3, ['LPVARIANT', 'LPVARIANT', 'LPVARIANT'], ['pvarLeft', 'pvarRight', 'pvarResult'], 'HRESULT'), 'VarInt': (2, ['LPVARIANT', 'LPVARIANT'], ['pvarIn', 'pvarResult'], 'HRESULT'), 'VarMod': (3, ['LPVARIANT', 'LPVARIANT', 'LPVARIANT'], ['pvarLeft', 'pvarRight', 'pvarResult'], 'HRESULT'), 'VarMul': (3, ['LPVARIANT', 'LPVARIANT', 'LPVARIANT'], ['pvarLeft', 'pvarRight', 'pvarResult'], 'HRESULT'), 'VarNeg': (2, ['LPVARIANT', 'LPVARIANT'], ['pvarIn', 'pvarResult'], 'HRESULT'), 'VarNot': (2, ['LPVARIANT', 'LPVARIANT'], ['pvarIn', 'pvarResult'], 'HRESULT'), 'VarOr': (3, ['LPVARIANT', 'LPVARIANT', 'LPVARIANT'], ['pvarLeft', 'pvarRight', 'pvarResult'], 'HRESULT'), 'VarPow': (3, ['LPVARIANT', 'LPVARIANT', 'LPVARIANT'], ['pvarLeft', 'pvarRight', 'pvarResult'], 'HRESULT'), 'VarR4CmpR8': (2, ['FLOAT', 'DOUBLE'], ['fltLeft', 'dblRight'], 'HRESULT'), 'VarR8Pow': (3, ['DOUBLE', 'DOUBLE', 'DOUBLE*'], ['dblLeft', 'dblRight', 'pdblResult'], 'HRESULT'), 'VarR8Round': (3, ['DOUBLE', 'INT', 'DOUBLE*'], ['dblIn', 'cDecimals', 'pdblResult'], 'HRESULT'), 'VarRound': (3, ['LPVARIANT', 'INT', 'LPVARIANT'], ['pvarIn', 'cDecimals', 'pvarResult'], 'HRESULT'), 'VarSub': (3, ['LPVARIANT', 'LPVARIANT', 'LPVARIANT'], ['pvarLeft', 'pvarRight', 'pvarResult'], 'HRESULT'), 'VarXor': (3, ['LPVARIANT', 'LPVARIANT', 'LPVARIANT'], ['pvarLeft', 'pvarRight', 'pvarResult'], 'HRESULT'), 'VariantChangeType': (4, ['VARIANTARG*', 'CONST VARIANTARG*', 'USHORT', 'VARTYPE'], ['pvargDest', 'pvarSrc', 'wFlags', 'vt'], 'HRESULT'), 'VariantChangeTypeEx': (5, ['VARIANTARG*', 'CONST VARIANTARG*', 'LCID', 'USHORT', 'VARTYPE'], ['pvargDest', 'pvarSrc', 'lcid', 'wFlags', 'vt'], 'HRESULT'), 'VariantClear': (1, ['VARIANTARG*'], ['pvarg'], 'HRESULT'), 'VariantCopy': (2, ['VARIANTARG*', 'CONST VARIANTARG*'], ['pvargDest', 'pvargSrc'], 'HRESULT'), 'VariantCopyInd': (2, ['VARIANT*', 'CONST VARIANTARG*'], ['pvarDest', 'pvargSrc'], 'HRESULT'), 'VariantInit': (1, ['VARIANTARG*'], ['pvarg'], 'void'), 'CreateDispTypeInfo': (3, ['INTERFACEDATA*', 'LCID', 'ITYPEINFO**'], ['pidata', 'lcid', 'pptinfo'], 'HRESULT'), 'CreateStdDispatch': (4, ['IUNKNOWN*', 'VOID*', 'ITYPEINFO*', 'IUNKNOWN**'], ['punkOuter', 'pvThis', 'ptinfo', 'ppunkStdDisp'], 'HRESULT'), 'DispCallFunc': (8, ['VOID*', 'ULONG_PTR', 'CALLCONV', 'VARTYPE', 'UINT', 'VARTYPE*', 'VARIANTARG**', 'VARIANT*'], ['pvInstance', 'oVft', 'cc', 'vtReturn', 'cActuals', 'prgvt', 'prgpvarg', 'pvargResult'], 'HRESULT'), 'DispGetIDsOfNames': (4, ['ITYPEINFO*', 'OLECHAR**', 'UINT', 'DISPID*'], ['ptinfo', 'rgszNames', 'cNames', 'rgdispid'], 'HRESULT'), 'DispGetParam': (5, ['DISPPARAMS*', 'UINT', 'VARTYPE', 'VARIANT*', 'UINT*'], ['pdispparams', 'position', 'vtTarg', 'pvarResult', 'puArgErr'], 'HRESULT'), 'DispInvoke': (8, ['VOID*', 'ITYPEINFO*', 'DISPID', 'WORD', 'DISPPARAMS*', 'VARIANT*', 'EXCEPINFO*', 'UINT*'], ['_this', 'ptinfo', 'dispidMember', 'wFlags', 'pparams', 'pvarResult', 'pexcepinfo', 'puArgErr'], 'HRESULT'), 'CreateErrorInfo': (1, ['ICREATEERRORINFO**'], ['pperrinfo'], 'HRESULT'), 'GetErrorInfo': (2, ['ULONG', 'IERRORINFO**'], ['dwReserved', 'pperrinfo'], 'HRESULT'), 'SetErrorInfo': (2, ['ULONG', 'IERRORINFO*'], ['dwReserved', 'perrinfo'], 'HRESULT'), 'VarFormat': (6, ['LPVARIANT', 'LPOLESTR', 'INT', 'INT', 'ULONG', 'BSTR*'], ['pvarIn', 'pstrFormat', 'iFirstDay', 'iFirstWeek', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarFormatCurrency': (7, ['LPVARIANT', 'INT', 'INT', 'INT', 'INT', 'ULONG', 'BSTR*'], ['pvarIn', 'iNumDig', 'iIncLead', 'iUseParens', 'iGroup', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarFormatDateTime': (4, ['LPVARIANT', 'INT', 'ULONG', 'BSTR*'], ['pvarIn', 'iNamedFormat', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarFormatFromTokens': (6, ['LPVARIANT', 'LPOLESTR', 'LPBYTE', 'ULONG', 'BSTR*', 'LCID'], ['pvarIn', 'pstrFormat', 'pbTokCur', 'dwFlags', 'pbstrOut', 'lcid'], 'HRESULT'), 'VarFormatNumber': (7, ['LPVARIANT', 'INT', 'INT', 'INT', 'INT', 'ULONG', 'BSTR*'], ['pvarIn', 'iNumDig', 'iIncLead', 'iUseParens', 'iGroup', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarFormatPercent': (7, ['LPVARIANT', 'INT', 'INT', 'INT', 'INT', 'ULONG', 'BSTR*'], ['pvarIn', 'iNumDig', 'iIncLead', 'iUseParens', 'iGroup', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarMonthName': (4, ['INT', 'INT', 'ULONG', 'BSTR*'], ['iMonth', 'fAbbrev', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'VarTokenizeFormatString': (7, ['LPOLESTR', 'LPBYTE', 'INT', 'INT', 'INT', 'LCID', 'INT*'], ['pstrFormat', 'rgbTok', 'cbTok', 'iFirstDay', 'iFirstWeek', 'lcid', 'pcbActual'], 'HRESULT'), 'VarWeekdayName': (5, ['INT', 'INT', 'INT', 'ULONG', 'BSTR*'], ['iWeekday', 'fAbbrev', 'iFirstDay', 'dwFlags', 'pbstrOut'], 'HRESULT'), 'OleLoadPictureFile': (2, ['VARIANT', 'LPDISPATCH*'], ['varFileName', 'lplpdispPicture'], 'HRESULT'), 'OleLoadPictureFileEx': (5, ['VARIANT', 'DWORD', 'DWORD', 'DWORD', 'LPDISPATCH*'], ['varFileName', 'xSizeDesired', 'ySizeDesired', 'dwFlags', 'lplpdispPicture'], 'HRESULT'), 'OleSavePictureFile': (2, ['LPDISPATCH', 'BSTR'], ['lpdispPicture', 'bstrFileName'], 'HRESULT'), 'GetActiveObject': (3, ['REFCLSID', 'VOID*', 'IUNKNOWN**'], ['rclsid', 'pvReserved', 'ppunk'], 'HRESULT'), 'RegisterActiveObject': (4, ['IUNKNOWN*', 'REFCLSID', 'DWORD', 'DWORD*'], ['punk', 'rclsid', 'dwFlags', 'pdwRegister'], 'HRESULT'), 'RevokeActiveObject': (2, ['DWORD', 'VOID*'], ['dwRegister', 'pvReserved'], 'HRESULT'), 'CreateTypeLib': (3, ['SYSKIND', 'LPCOLESTR', 'ICREATETYPELIB**'], ['syskind', 'szFile', 'ppctlib'], 'HRESULT'), 'CreateTypeLib2': (3, ['SYSKIND', 'LPCOLESTR', 'ICREATETYPELIB2**'], ['syskind', 'szFile', 'ppctlib'], 'HRESULT'), 'OACreateTypeLib2': (3, ['SYSKIND', 'LPCOLESTR', 'ICREATETYPELIB2**'], ['syskind', 'szFile', 'ppctlib'], 'HRESULT'), 'OaBuildVersion': (0, [], [], 'ULONG'), 'LHashValOfNameSys': (3, ['SYSKIND', 'LCID', 'CONST OLECHAR*'], ['syskind', 'lcid', 'szName'], 'ULONG'), 'LHashValOfNameSysA': (3, ['SYSKIND', 'LCID', 'LPCSTR'], ['syskind', 'lcid', 'szName'], 'ULONG'), 'LoadRegTypeLib': (5, ['REFGUID', 'WORD', 'WORD', 'LCID', 'ITYPELIB**'], ['rguid', 'wVerMajor', 'wVerMinor', 'lcid', 'pptlib'], 'HRESULT'), 'LoadTypeLib': (2, ['LPCOLESTR', 'ITYPELIB**'], ['szFile', 'pptlib'], 'HRESULT'), 'LoadTypeLibEx': (3, ['LPCOLESTR', 'REGKIND', 'ITYPELIB**'], ['szFile', 'regkind', 'pptlib'], 'HRESULT'), 'OaEnablePerUserTLibRegistration': (0, [], [], 'void'), 'QueryPathOfRegTypeLib': (5, ['REFGUID', 'USHORT', 'USHORT', 'LCID', 'LPBSTR'], ['guid', 'wMaj', 'wMin', 'lcid', 'lpbstrPathName'], 'HRESULT'), 'RegisterTypeLib': (3, ['ITYPELIB*', 'LPCOLESTR', 'LPCOLESTR'], ['ptlib', 'szFullPath', 'szHelpDir'], 'HRESULT'), 'RegisterTypeLibForUser': (3, ['ITYPELIB*', 'OLECHAR*', 'OLECHAR*'], ['ptlib', 'szFullPath', 'szHelpDir'], 'HRESULT'), 'UnRegisterTypeLib': (5, ['REFGUID', 'WORD', 'WORD', 'LCID', 'SYSKIND'], ['libID', 'wVerMajor', 'wVerMinor', 'lcid', 'syskind'], 'HRESULT'), 'UnRegisterTypeLibForUser': (5, ['REFGUID', 'WORD', 'WORD', 'LCID', 'SYSKIND'], ['libID', 'wMajorVerNum', 'wMinorVerNum', 'lcid', 'syskind'], 'HRESULT'), 'ClearCustData': (1, ['LPCUSTDATA'], ['pCustData'], 'void'), 'GetRecordInfoFromGuids': (6, ['REFGUID', 'ULONG', 'ULONG', 'LCID', 'REFGUID', 'IRECORDINFO**'], ['rGuidTypeLib', 'uVerMajor', 'uVerMinor', 'lcid', 'rGuidTypeInfo', 'ppRecInfo'], 'HRESULT'), 'GetRecordInfoFromTypeInfo': (2, ['ITYPEINFO*', 'IRECORDINFO**'], ['pTypeInfo', 'ppRecInfo'], 'HRESULT')}
dict5_shell32 = {'DuplicateIcon': (2, ['HINSTANCE', 'HICON'], ['hInst', 'hIcon'], 'HICON'), 'ExtractAssociatedIcon': (3, ['HINSTANCE', 'LPTSTR', 'LPWORD'], ['hInst', 'lpIconPath', 'lpiIcon'], 'HICON'), 'ExtractIcon': (3, ['HINSTANCE', 'LPCTSTR', 'UINT'], ['hInst', 'lpszExeFileName', 'nIconIndex'], 'HICON'), 'ExtractIconEx': (5, ['LPCTSTR', 'INT', 'HICON*', 'HICON*', 'UINT'], ['lpszFile', 'nIconIndex', 'phiconLarge', 'phiconSmall', 'nIcons'], 'UINT'), 'AssocCreateForClasses': (4, ['CONST ASSOCIATIONELEMENT*', 'ULONG', 'REFIID', 'VOID**'], ['rgClasses', 'cClasses', 'riid', 'ppv'], 'HRESULT'), 'AssocGetDetailsOfPropKey': (5, ['ISHELLFOLDER*', 'PCUITEMID_CHILD', 'PROPERTYKEY*', 'VARIANT*', 'BOOL*'], ['psf', 'pidl', 'pkey', 'pv', 'pfFoundPropKey'], 'HRESULT'), 'CallCPLEntry16': (6, ['HINSTANCE', 'FARPROC16', 'HWND', 'UINT', 'LPARAM', 'LPARAM'], ['hInst', 'lpfnEntry', 'hwndCPL', 'msg', 'lParam1', 'lParam2'], 'int'), 'CDefFolderMenu_Create2': (9, ['PCIDLIST_ABSOLUTE', 'HWND', 'UINT', 'PCUITEMID_CHILD_ARRAY*', 'ISHELLFOLDER*', 'LPFNDFMCALLBACK', 'UINT', 'CONST HKEY*', 'ICONTEXTMENU**'], ['pidlFolder', 'hwnd', 'cidl', 'apidl', 'psf', 'lpfn', 'nKeys', 'ahkeys', 'ppcm'], 'HRESULT'), 'CIDLData_CreateFromIDArray': (4, ['PCIDLIST_ABSOLUTE', 'UINT', 'PCUIDLIST_RELATIVE_ARRAY', 'IDATAOBJECT**'], ['pidlFolder', 'cidl', 'apidl', 'ppdtobj'], 'HRESULT'), 'CommandLineToArgvW': (2, ['LPCWSTR', 'INT*'], ['lpCmdLine', 'pNumArgs'], 'LPWSTR*'), 'DAD_AutoScroll': (3, ['HWND', 'AUTO_SCROLL_DATA*', 'CONST POINT*'], ['hwnd', 'pad', 'pptNow'], 'BOOL'), 'DAD_DragEnterEx': (2, ['HWND', 'CONST POINT'], ['hwndTarget', 'ptStart'], 'BOOL'), 'DAD_DragLeave': (0, [], [], 'BOOL'), 'DAD_DragMove': (1, ['POINT'], ['pt'], 'BOOL'), 'DAD_SetDragImage': (2, ['HIMAGELIST', 'POINT*'], ['him', 'pptOffset'], 'BOOL'), 'DAD_ShowDragImage': (1, ['BOOL'], ['fShow'], 'BOOL'), 'DoEnvironmentSubst': (2, ['LPTSTR', 'UINT'], ['pszString', 'cchString'], 'DWORD'), 'DragAcceptFiles': (2, ['HWND', 'BOOL'], ['hWnd', 'fAccept'], 'VOID'), 'DragFinish': (1, ['HDROP'], ['hDrop'], 'VOID'), 'DragQueryFile': (4, ['HDROP', 'UINT', 'LPTSTR', 'UINT'], ['hDrop', 'iFile', 'lpszFile', 'cch'], 'UINT'), 'DragQueryPoint': (2, ['HDROP', 'LPPOINT'], ['hDrop', 'lppt'], 'BOOL'), 'DriveType': (1, ['INT'], ['iDrive'], 'int'), 'ExtractAssociatedIconEx': (4, ['HINSTANCE', 'LPTSTR', 'LPWORD', 'LPWORD'], ['hInst', 'lpIconPath', 'lpiIconIndex', 'lpiIconId'], 'HICON'), 'FileIconInit': (1, ['BOOL'], ['fRestoreCache'], 'BOOL'), 'FindExecutable': (3, ['LPCTSTR', 'LPCTSTR', 'LPTSTR'], ['lpFile', 'lpDirectory', 'lpResult'], 'HINSTANCE'), 'GetCurrentProcessExplicitAppUserModelID': (1, ['PWSTR*'], ['AppID'], 'HRESULT'), 'GetFileNameFromBrowse': (7, ['HWND', 'LPWSTR', 'UINT', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR'], ['hwnd', 'pszFilePath', 'cchFilePath', 'pszWorkingDir', 'pszDefExt', 'pszFilters', 'szTitle'], 'BOOL'), 'GUIDFromString': (2, ['LPCTSTR', 'LPGUID'], ['psz', 'pguid'], 'BOOL'), 'ILAppendID': (3, ['PIDLIST_RELATIVE', 'LPSHITEMID', 'BOOL'], ['pidl', 'pmkid', 'fAppend'], 'PIDLIST_RELATIVE'), 'ILClone': (1, ['PCUIDLIST_RELATIVE'], ['pidl'], 'PIDLIST_RELATIVE'), 'ILCloneFirst': (1, ['PCUIDLIST_RELATIVE'], ['pidl'], 'PITEMID_CHILD'), 'ILCombine': (2, ['PCIDLIST_ABSOLUTE', 'PCUIDLIST_RELATIVE'], ['pidl1', 'pidl2'], 'PIDLIST_ABSOLUTE'), 'ILCreateFromPath': (1, ['LPCSTR'], ['pszPath'], 'PIDLIST_ABSOLUTE'), 'ILFindChild': (2, ['PCIDLIST_ABSOLUTE', 'PCIDLIST_ABSOLUTE'], ['pidlParent', 'pidlChild'], 'PUIDLIST_RELATIVE'), 'ILFindLastID': (1, ['PCUIDLIST_RELATIVE'], ['pidl'], 'PUITEMID_CHILD'), 'ILFree': (1, ['PIDLIST_RELATIVE'], ['pidl'], 'void'), 'ILGetNext': (1, ['PCUIDLIST_RELATIVE'], ['pidl'], 'PUIDLIST_RELATIVE'), 'ILGetSize': (1, ['PCUIDLIST_RELATIVE'], ['pidl'], 'UINT'), 'ILIsEqual': (2, ['PCIDLIST_ABSOLUTE', 'PCIDLIST_ABSOLUTE'], ['pidl1', 'pidl2'], 'BOOL'), 'ILIsParent': (3, ['PCIDLIST_ABSOLUTE', 'PCIDLIST_ABSOLUTE', 'BOOL'], ['pidl1', 'pidl2', 'fImmediate'], 'BOOL'), 'ILLoadFromStream': (2, ['ISTREAM*', 'PIDLIST_RELATIVE*'], ['pstm', 'pidl'], 'HRESULT'), 'ILRemoveLastID': (1, ['PUIDLIST_RELATIVE'], ['pidl'], 'BOOL'), 'ILSaveToStream': (2, ['ISTREAM*', 'PCUIDLIST_RELATIVE'], ['pstm', 'pidl'], 'HRESULT'), 'InitNetworkAddressControl': (0, [], [], 'BOOL'), 'IsNetDrive': (1, ['INT'], ['iDrive'], 'int'), 'IsUserAnAdmin': (0, [], [], 'BOOL'), 'LinkWindow_RegisterClass': (0, [], [], 'BOOL'), 'LinkWindow_UnregisterClass': (0, [], [], 'BOOL'), 'NTSHChangeNotifyDeregister': (1, ['ULONG'], ['ulID'], 'BOOL'), 'SHChangeNotify': (4, ['SHELLCHANGENOTIFYEVENT', 'SHELLCHANGENOTIFYFLAG', 'LPCVOID', 'LPCVOID'], ['wEventId', 'uFlags', 'dwItem1', 'dwItem2'], 'void'), 'NTSHChangeNotifyRegister': (6, ['HWND', 'INT', 'LONG', 'UINT', 'INT', 'SHCHANGENOTIFYENTRY*'], ['hwnd', 'fSources', 'fEvents', 'wMsg', 'cEntries', 'pfsne'], 'ULONG'), 'OpenRegStream': (4, ['HKEY', 'LPCWSTR', 'LPCWSTR', 'STGM_FLAGS'], ['hkey', 'pszSubkey', 'pszValue', 'grfMode'], 'IStream*'), 'ParseField': (4, ['LPCTSTR*', 'INT', 'LPTSTR*', 'INT'], ['szData', 'n', 'szBuf', 'iBufLen'], 'bool'), 'PathCleanupSpec': (2, ['LPCWSTR', 'LPWSTR'], ['pszDir', 'pszSpec'], 'int'), 'PathGetShortPath': (1, ['LPWSTR'], ['pszLongPath'], 'void'), 'PathIsExe': (1, ['LPCWSTR'], ['szfile'], 'int'), 'PathIsSlow': (2, ['LPCTSTR', 'DWORD'], ['pszFile', 'dwFileAttr'], 'BOOL'), 'PathMakeUniqueName': (5, ['LPWSTR', 'UINT', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR'], ['pszUniqueName', 'cchMax', 'pszTemplate', 'pszLongPlate', 'pszDir'], 'BOOL'), 'PathProcessCommand': (4, ['LPCWSTR', 'LPWSTR', 'INT', 'PPCF_FLAGS'], ['lpSrc', 'lpDest', 'iDestMax', 'dwFlags'], 'LONG'), 'PathResolve': (3, ['LPWSTR', 'LPCWSTR*', 'PRF_FLAGS'], ['pszPath', 'dirs', 'fFlags'], 'BOOL'), 'PathYetAnotherMakeUniqueName': (4, ['LPWSTR', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR'], ['pszUniqueName', 'pszPath', 'pszShort', 'pszFileSpec'], 'BOOL'), 'PickIconDlg': (4, ['HWND', 'LPWSTR', 'UINT', 'INT*'], ['hwnd', 'pszIconPath', 'cchIconPath', 'piIconIndex'], 'int'), 'ReadCabinetState': (2, ['CABINETSTATE*', 'INT'], ['pcs', 'cLength'], 'BOOL'), 'RealDriveType': (2, ['INT', 'BOOL'], ['iDrive', 'fOKToHitNet'], 'int'), 'RestartDialog': (3, ['HWND', 'LPCWSTR', 'EWX_FLAGS'], ['hParent', 'pszPrompt', 'dwReturn'], 'int'), 'RestartDialogEx': (4, ['HWND', 'LPCWSTR', 'EWX_FLAGS', 'SHTDN_REASON'], ['hParent', 'pszPrompt', 'dwReturn', 'dwReasonCode'], 'int'), 'SetCurrentProcessExplicitAppUserModelID': (1, ['PCWSTR'], ['AppID'], 'HRESULT'), 'SHAddFromPropSheetExtArray': (3, ['HPSXA', 'LPFNADDPROPSHEETPAGE', 'LPARAM'], ['hpsxa', 'lpfnAddPage', 'lParam'], 'int'), 'SHAddToRecentDocs': (2, ['SHARD', 'LPCVOID'], ['uFlags', 'pv'], 'void'), 'SHAlloc': (1, ['SIZE_T'], ['cb'], 'LPVOID'), 'SHAppBarMessage': (2, ['DWORD', 'PAPPBARDATA'], ['dwMessage', 'pData'], 'UINT_PTR'), 'SHAssocEnumHandlers': (3, ['LPCWSTR', 'ASSOC_FILTER', 'IENUMASSOCHANDLERS**'], ['pszExtra', 'afFilter', 'ppEnumHandler'], 'HRESULT'), 'SHAssocEnumHandlersForProtocolByApplication': (3, ['PCWSTR', 'REFIID', 'VOID**'], ['protocol', 'riid', 'enumHandlers'], 'HRESULT'), 'SHBindToFolderIDListParent': (5, ['ISHELLFOLDER*', 'PCUIDLIST_RELATIVE', 'REFIID', 'VOID**', 'PCUITEMID_CHILD*'], ['psfRoot', 'pidl', 'riid', 'ppv', 'ppidlLast'], 'HRESULT'), 'SHBindToObject': (5, ['ISHELLFOLDER*', 'PCUIDLIST_RELATIVE', 'IBINDCTX*', 'REFIID', 'VOID**'], ['psf', 'pidl', 'pbc', 'riid', 'ppv'], 'HRESULT'), 'SHBindToParent': (4, ['PCIDLIST_ABSOLUTE', 'REFIID', 'VOID**', 'PCUITEMID_CHILD*'], ['pidl', 'riid', 'ppv', 'ppidlLast'], 'HRESULT'), 'SHBrowseForFolder': (1, ['LPBROWSEINFO'], ['lpbi'], 'PIDLIST_ABSOLUTE'), 'SHChangeNotification_Lock': (4, ['HANDLE', 'DWORD', 'PIDLIST_ABSOLUTE**', 'LONG*'], ['hChange', 'dwProcId', 'pppidl', 'plEvent'], 'HANDLE'), 'SHChangeNotification_Unlock': (1, ['HANDLE'], ['hLock'], 'BOOL'), 'SHChangeNotifyDeregister': (1, ['ULONG'], ['ulID'], 'BOOL'), 'SHChangeNotifyRegister': (6, ['HWND', 'INT', 'LONG', 'UINT', 'INT', 'CONST SHCHANGENOTIFYENTRY*'], ['hwnd', 'fSources', 'fEvents', 'wMsg', 'cEntries', 'pshcne'], 'ULONG'), 'SHChangeNotifyRegisterThread': (1, ['SCNRT_STATUS'], ['status'], 'void'), 'SHCloneSpecialIDList': (3, ['HWND', 'CSIDL', 'BOOL'], ['hwndOwner', 'csidl', 'fCreate'], 'PIDLIST_ABSOLUTE'), 'SHCLSIDFromString': (2, ['LPCWSTR', 'CLSID*'], ['psz', 'pclsid'], 'HRESULT'), 'SHCoCreateInstance': (5, ['LPCWSTR', 'CONST CLSID*', 'IUNKNOWN*', 'REFIID', 'VOID**'], ['pszCLSID', 'pclsid', 'pUnkOuter', 'riid', 'ppv'], 'HRESULT'), 'SHCreateAssociationRegistration': (2, ['REFIID', 'VOID**'], ['riid', 'ppv'], 'HRESULT'), 'SHCreateDataObject': (6, ['PCIDLIST_ABSOLUTE', 'UINT', 'PCUITEMID_CHILD_ARRAY', 'IDATAOBJECT*', 'REFIID', 'VOID**'], ['pidlFolder', 'cidl', 'apidl', 'pdtInner', 'riid', 'ppv'], 'HRESULT'), 'SHCreateDefaultContextMenu': (3, ['CONST DEFCONTEXTMENU*', 'REFIID', 'VOID**'], ['pdcm', 'riid', 'ppv'], 'HRESULT'), 'SHCreateDefaultExtractIcon': (2, ['REFIID', 'VOID**'], ['riid', 'ppv'], 'HRESULT'), 'SHCreateDefaultPropertiesOp': (2, ['ISHELLITEM*', 'IFILEOPERATION**'], ['psi', 'ppFileOp'], 'HRESULT'), 'SHCreateDirectory': (2, ['HWND', 'LPCWSTR'], ['hwnd', 'pszPath'], 'int'), 'SHCreateDirectoryEx': (3, ['HWND', 'LPCTSTR', 'CONST SECURITY_ATTRIBUTES*'], ['hwnd', 'pszPath', 'psa'], 'int'), 'SHCreateFileExtractIconW': (4, ['LPCWSTR', 'FILEATTRIBUTES', 'REFIID', 'VOID**'], ['pszFile', 'dwFileAttributes', 'riid', 'ppv'], 'HRESULT'), 'SHCreateItemFromParsingName': (4, ['PCWSTR', 'IBINDCTX*', 'REFIID', 'VOID**'], ['pszPath', 'pbc', 'riid', 'ppv'], 'HRESULT'), 'SHCreateItemFromRelativeName': (5, ['ISHELLITEM*', 'PCWSTR', 'IBINDCTX*', 'REFIID', 'VOID**'], ['psiParent', 'pszName', 'pbc', 'riid', 'ppv'], 'HRESULT'), 'SHCreateItemInKnownFolder': (5, ['REFKNOWNFOLDERID', 'KNOWN_FOLDER_FLAG|DWORD', 'PCWSTR', 'REFIID', 'VOID**'], ['kfid', 'dwKFFlags', 'pszItem', 'riid', 'ppv'], 'HRESULT'), 'SHCreateProcessAsUserW': (1, ['PSHCREATEPROCESSINFOW'], ['pscpi'], 'BOOL'), 'SHCreatePropSheetExtArray': (3, ['HKEY', 'LPCWSTR', 'UINT'], ['hkey', 'pszSubkey', 'max_iface'], 'HPSXA'), 'SHCreateQueryCancelAutoPlayMoniker': (1, ['IMONIKER**'], ['ppmoniker'], 'HRESULT'), 'SHCreateShellFolderViewEx': (2, ['LPCSFV', 'ISHELLVIEW**'], ['pcsfv', 'ppsv'], 'HRESULT'), 'SHCreateShellFolderView': (2, ['CONST SFV_CREATE*', 'ISHELLVIEW**'], ['pcsfv', 'ppsv'], 'HRESULT'), 'SHCreateShellItem': (4, ['PCIDLIST_ABSOLUTE', 'ISHELLFOLDER*', 'PCUITEMID_CHILD', 'ISHELLITEM**'], ['pidlParent', 'psfParent', 'pidl', 'ppsi'], 'HRESULT'), 'SHCreateItemWithParent': (5, ['PCIDLIST_ABSOLUTE', 'ISHELLFOLDER*', 'PCUITEMID_CHILD', 'REFIID', 'VOID**'], ['pidlParent', 'psfParent', 'pidl', 'riid', 'ppvItem'], 'HRESULT'), 'SHCreateItemFromIDList': (3, ['PCIDLIST_ABSOLUTE', 'REFIID', 'VOID**'], ['pidl', 'riid', 'ppv'], 'HRESULT'), 'SHCreateShellItemArray': (5, ['PCIDLIST_ABSOLUTE', 'ISHELLFOLDER*', 'UINT', 'PCUITEMID_CHILD_ARRAY', 'ISHELLITEMARRAY**'], ['pidlParent', 'psf', 'cidl', 'ppidl', 'ppsiItemArray'], 'HRESULT'), 'SHCreateShellItemArrayFromDataObject': (3, ['IDATAOBJECT*', 'REFIID', 'VOID**'], ['pdo', 'riid', 'ppv'], 'HRESULT'), 'SHCreateShellItemArrayFromIDLists': (3, ['UINT', 'PCIDLIST_ABSOLUTE_ARRAY', 'ISHELLITEMARRAY**'], ['cidl', 'rgpidl', 'ppsiItemArray'], 'HRESULT'), 'SHCreateShellItemArrayFromShellItem': (3, ['ISHELLITEM*', 'REFIID', 'VOID**'], ['psi', 'riid', 'ppv'], 'HRESULT'), 'SHCreateStdEnumFmtEtc': (3, ['UINT', 'CONST FORMATETC ', 'IENUMFORMATETC**'], ['cfmt', 'afmt', 'ppenumFormatEtc'], 'HRESULT'), 'SHDefExtractIcon': (6, ['LPCTSTR', 'INT', 'SHDEFEXTRACTICON_FLAGS', 'HICON*', 'HICON*', 'UINT'], ['pszIconFile', 'iIndex', 'uFlags', 'phiconLarge', 'phiconSmall', 'nIconSize'], 'HRESULT'), 'SHDestroyPropSheetExtArray': (1, ['HPSXA'], ['hpsxa'], 'void'), 'SHDoDragDrop': (5, ['HWND', 'IDATAOBJECT*', 'IDROPSOURCE*', 'DWORD', 'DWORD*'], ['hwnd', 'pdtobj', 'pdsrc', 'dwEffect', 'pdwEffect'], 'HRESULT'), 'Shell_GetCachedImageIndex': (3, ['LPCTSTR', 'INT', 'UINT'], ['pszIconPath', 'iIconIndex', 'uIconFlags'], 'int'), 'Shell_GetImageLists': (2, ['HIMAGELIST*', 'HIMAGELIST*'], ['phiml', 'phimlSmall'], 'BOOL'), 'Shell_MergeMenus': (6, ['HMENU', 'HMENU', 'UINT', 'UINT', 'UINT', 'MERGE_MENU_FLAGS'], ['hmDst', 'hmSrc', 'uInsert', 'uIDAdjust', 'uIDAdjustMax', 'uFlags'], 'UINT'), 'Shell_NotifyIcon': (2, ['DWORD', 'PNOTIFYICONDATA'], ['dwMessage', 'lpdata'], 'BOOL'), 'Shell_NotifyIconGetRect': (2, ['CONST NOTIFYICONIDENTIFIER*', 'RECT*'], ['identifier', 'iconLocation'], 'HRESULT'), 'ShellAbout': (4, ['HWND', 'LPCTSTR', 'LPCTSTR', 'HICON'], ['hWnd', 'szApp', 'szOtherStuff', 'hIcon'], 'int'), 'ShellExecuteEx': (1, ['LPSHELLEXECUTEINFO'], ['lpExecInfo'], 'BOOL'), 'SHEmptyRecycleBin': (3, ['HWND', 'LPCTSTR', 'SHERB_FLAGS'], ['hwnd', 'pszRootPath', 'dwFlags'], 'HRESULT'), 'SHEnumerateUnreadMailAccountsW': (4, ['HKEY', 'DWORD', 'LPWSTR', 'INT'], ['hKeyUser', 'dwIndex', 'pszMailAddress', 'cchMailAddress'], 'HRESULT'), 'SHEvaluateSystemCommandTemplate': (4, ['PCWSTR', 'PWSTR*', 'PWSTR*', 'PWSTR*'], ['pszCmdTemplate', 'ppszApplication', 'ppszCommandLine', 'ppszParameters'], 'HRESULT'), 'ShellExecute': (6, ['HWND', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'SHOWWINDOWCMD'], ['hwnd', 'lpOperation', 'lpFile', 'lpParameters', 'lpDirectory', 'nShowCmd'], 'HINSTANCE'), 'SHExtractIconsW': (8, ['LPCWSTR', 'INT', 'INT', 'INT', 'HICON*', 'UINT*', 'UINT', 'LRFLAGS'], ['pszFileName', 'nIconIndex', 'cxIcon', 'cyIcon', 'phIcon', 'pIconId', 'nIcons', 'flags'], 'UINT'), 'SHFind_InitMenuPopup': (4, ['HMENU', 'HWND', 'UINT', 'UINT'], ['hmenu', 'hwnd', 'idCmdFirst', 'idCmdLast'], 'IContextMenu*'), 'SHFindFiles': (2, ['PCIDLIST_ABSOLUTE', 'PCIDLIST_ABSOLUTE'], ['pidlFolder', 'pidlSaveFile'], 'BOOL'), 'SHFlushClipboard': (0, [], [], 'HRESULT'), 'SHFlushSFCache': (0, [], [], 'void'), 'SHFormatDrive': (4, ['HWND', 'UINT', 'UINT', 'UINT'], ['hwnd', 'drive', 'fmtID', 'options'], 'DWORD'), 'SHFree': (1, ['VOID*'], ['pv'], 'void'), 'SHFreeNameMappings': (1, ['HANDLE'], ['hNameMappings'], 'void'), 'SHFileOperation': (1, ['LPSHFILEOPSTRUCT'], ['lpFileOp'], 'int'), 'SHGetAttributesFromDataObject': (4, ['IDATAOBJECT*', 'SFGAOF_DWORD', 'SFGAOF_DWORD*', 'UINT*'], ['pdo', 'dwAttributeMask', 'pdwAttributes', 'pcItems'], 'HRESULT'), 'SHGetDataFromIDList': (5, ['ISHELLFOLDER*', 'PCUITEMID_CHILD', 'SHGETDATAFROMIDLISTFORMATS', 'PVOID', 'INT'], ['psf', 'pidl', 'nFormat', 'pv', 'cb'], 'HRESULT'), 'SHGetDesktopFolder': (1, ['ISHELLFOLDER**'], ['ppshf'], 'HRESULT'), 'SHGetDiskFreeSpace': (4, ['LPCTSTR', 'ULARGE_INTEGER*', 'ULARGE_INTEGER*', 'ULARGE_INTEGER*'], ['pszVolume', 'pqwFreeCaller', 'pqwTot', 'pqwFree'], 'BOOL'), 'SHGetDiskFreeSpaceEx': (4, ['LPCTSTR', 'ULARGE_INTEGER*', 'ULARGE_INTEGER*', 'ULARGE_INTEGER*'], ['pszVolume', 'pqwFreeCaller', 'pqwTot', 'pqwFree'], 'BOOL'), 'SHGetDriveMedia': (2, ['LPCWSTR', 'DWORD*'], ['pszDrive', 'pdwMediaContent'], 'HRESULT'), 'SHGetFileInfo': (5, ['LPCTSTR', 'FILEATTRIBUTES', 'SHFILEINFO*', 'UINT', 'SHGFI_FLAGS'], ['pszPath', 'dwFileAttributes', 'psfi', 'cbFileInfo', 'uFlags'], 'DWORD_PTR'), 'SHGetFolderLocation': (5, ['HWND', 'CSIDL', 'HANDLE', 'DWORD', 'PIDLIST_ABSOLUTE*'], ['hwndOwner', 'nFolder', 'hToken', 'dwReserved', 'ppidl'], 'HRESULT'), 'SHGetFolderPath': (5, ['HWND', 'INT', 'HANDLE', 'SHGETFOLDERPATHFLAGS', 'LPTSTR'], ['hwndOwner', 'nFolder', 'hToken', 'dwFlags', 'pszPath'], 'HRESULT'), 'SHGetFolderPathAndSubDir': (6, ['HWND', 'CSIDL', 'HANDLE', 'SHGETFOLDERPATHFLAGS', 'LPCTSTR', 'LPTSTR'], ['hwnd', 'csidl', 'hToken', 'dwFlags', 'pszSubDir', 'pszPath'], 'HRESULT'), 'SHGetIconOverlayIndex': (2, ['LPCTSTR', 'INT'], ['pszIconPath', 'iIconIndex'], 'int'), 'SHGetIDListFromObject': (2, ['IUNKNOWN*', 'PIDLIST_ABSOLUTE*'], ['punk', 'ppidl'], 'HRESULT'), 'SHGetImageList': (3, ['INT', 'REFIID', 'VOID**'], ['iImageList', 'riid', 'ppv'], 'HRESULT'), 'SHGetInstanceExplorer': (1, ['IUNKNOWN**'], ['ppunk'], 'HRESULT'), 'SHGetItemFromDataObject': (4, ['IDATAOBJECT*', 'DATAOBJ_GET_ITEM_FLAGS', 'REFIID', 'VOID**'], ['pdtobj', 'dwFlags', 'riid', 'ppv'], 'HRESULT'), 'SHGetItemFromObject': (3, ['IUNKNOWN*', 'REFIID', 'VOID**'], ['punk', 'riid', 'ppv'], 'HRESULT'), 'SHGetKnownFolderIDList': (4, ['REFKNOWNFOLDERID', 'KNOWN_FOLDER_FLAG|DWORD', 'HANDLE', 'PIDLIST_ABSOLUTE*'], ['rfid', 'dwFlags', 'hToken', 'ppidl'], 'HRESULT'), 'SHGetKnownFolderItem': (5, ['REFKNOWNFOLDERID', 'KNOWN_FOLDER_FLAG', 'HANDLE', 'REFIID', 'VOID**'], ['rfid', 'dwFlags', 'hToken', 'riid', 'ppv'], 'HRESULT'), 'SHGetKnownFolderPath': (4, ['REFKNOWNFOLDERID', 'KNOWN_FOLDER_FLAG|DWORD', 'HANDLE', 'PWSTR*'], ['rfid', 'dwFlags', 'hToken', 'ppszPath'], 'HRESULT'), 'SHGetLocalizedName': (4, ['LPCWSTR', 'LPWSTR', 'UINT', 'INT*'], ['pszPath', 'pszResModule', 'cch', 'pidsRes'], 'HRESULT'), 'SHGetMalloc': (1, ['LPMALLOC*'], ['ppMalloc'], 'HRESULT'), 'SHGetNameFromIDList': (3, ['PCIDLIST_ABSOLUTE', 'SIGDN', 'PWSTR*'], ['pidl', 'sigdnName', 'ppszName'], 'HRESULT'), 'SHGetNameFromPropertyKey': (2, ['REFPROPERTYKEY', 'PWSTR*'], ['propkey', 'ppszCanonicalName'], 'HRESULT'), 'SHGetNewLinkInfo': (5, ['LPCTSTR', 'LPCTSTR', 'LPTSTR', 'BOOL*', 'SHGNLI_FLAGS'], ['pszLinkTo', 'pszDir', 'pszName', 'pfMustCopy', 'uFlags'], 'BOOL'), 'SHGetPathFromIDListEx': (4, ['PCIDLIST_ABSOLUTE', 'PWSTR', 'DWORD', 'GPFIDL_FLAGS'], ['pidl', 'pszPath', 'cchPath', 'uOpts'], 'BOOL'), 'SHGetPathFromIDList': (2, ['PCIDLIST_ABSOLUTE', 'LPTSTR'], ['pidl', 'pszPath'], 'BOOL'), 'SHGetRealIDL': (3, ['ISHELLFOLDER*', 'PCUITEMID_CHILD', 'PITEMID_CHILD*'], ['psf', 'pidlSimple', 'ppidlReal'], 'HRESULT'), 'SHGetSetFolderCustomSettings': (3, ['LPSHFOLDERCUSTOMSETTINGS', 'LPCTSTR', 'DWORD'], ['pfcs', 'pszPath', 'dwReadWrite'], 'HRESULT'), 'SHGetSetSettings': (3, ['LPSHELLSTATE', 'SSF_FLAGS', 'BOOL'], ['lpss', 'dwMask', 'bSet'], 'void'), 'SHGetSettings': (2, ['LPSHELLFLAGSTATE', 'SSF_FLAGS'], ['lpsfs', 'dwMask'], 'void'), 'SHGetShellStyleHInstance': (0, [], [], 'HINSTANCE'), 'SHGetSpecialFolderLocation': (3, ['HWND', 'CSIDL', 'PIDLIST_ABSOLUTE*'], ['hwndOwner', 'nFolder', 'ppidl'], 'HRESULT'), 'SHGetSpecialFolderPath': (4, ['HWND', 'LPTSTR', 'CSIDL', 'BOOL'], ['hwndOwner', 'lpszPath', 'csidl', 'fCreate'], 'BOOL'), 'SHGetStockIconInfo': (3, ['SHSTOCKICONID', 'SHGSI_FLAGS', 'SHSTOCKICONINFO*'], ['siid', 'uFlags', 'psii'], 'HRESULT'), 'SHGetTemporaryPropertyForItem': (3, ['ISHELLITEM*', 'REFPROPERTYKEY', 'PROPVARIANT*'], ['psi', 'pk', 'ppropvarInk'], 'HRESULT'), 'SHGetUnreadMailCountW': (6, ['HKEY', 'LPCWSTR', 'DWORD*', 'FILETIME*', 'LPCWSTR', 'INT'], ['hKeyUser', 'pszMailAddress', 'pdwCount', 'pFileTime', 'pszShellExecuteCommand', 'cchShellExecuteCommand'], 'HRESULT'), 'SHHandleUpdateImage': (1, ['PCIDLIST_ABSOLUTE'], ['pidlExtra'], 'int'), 'SHILCreateFromPath': (3, ['LPCWSTR', 'PIDLIST_ABSOLUTE*', 'DWORD*'], ['pszPath', 'ppidl', 'rgflnOut'], 'HRESULT'), 'SHInvokePrinterCommand': (5, ['HWND', 'UINT', 'LPCTSTR', 'LPCTSTR', 'BOOL'], ['hwnd', 'uAction', 'lpBuf1', 'lpBuf2', 'fModal'], 'BOOL'), 'SHIsFileAvailableOffline': (2, ['LPCWSTR', 'LPDWORD'], ['pszPath', 'pdwStatus'], 'HRESULT'), 'SHLimitInputEdit': (2, ['HWND', 'ISHELLFOLDER*'], ['hwndEdit', 'psf'], 'HRESULT'), 'SHLoadInProc': (1, ['REFCLSID'], ['rclsid'], 'HRESULT'), 'SHLoadNonloadedIconOverlayIdentifiers': (0, [], [], 'HRESULT'), 'SHLoadOLE': (1, ['LPARAM'], ['lParam'], 'HRESULT'), 'SHLocalStrDup': (2, ['LPCWSTR', 'LPWSTR*'], ['psz', 'ppsz'], 'HRESULT'), 'SHMapIDListToImageListIndexAsync': (9, ['ISHELLTASKSCHEDULER*', 'ISHELLFOLDER*', 'LPCITEMIDLIST', 'GIL_INPUT_FLAGS', 'PFNASYNCICONTASKBALLBACK', 'VOID*', 'VOID*', 'INT*', 'INT*'], ['pts', 'psf', 'pidl', 'flags', 'pfn', 'pvData', 'pvHint', 'piIndex', 'piIndexSel'], 'HRESULT'), 'SHMapPIDLToSystemImageListIndex': (3, ['ISHELLFOLDER*', 'PCUITEMID_CHILD', 'INT*'], ['psf', 'pidl', 'piIndex'], 'int'), 'SHMultiFileProperties': (2, ['IDATAOBJECT*', 'DWORD'], ['pdtobj', 'dwFlags'], 'HRESULT'), 'SHObjectProperties': (4, ['HWND', 'DWORD', 'PCWSTR', 'PCWSTR'], ['hwnd', 'shopObjectType', 'pszObjectName', 'pszPropertyPage'], 'BOOL'), 'SHOpenFolderAndSelectItems': (4, ['PCIDLIST_ABSOLUTE', 'UINT', 'PCUITEMID_CHILD_ARRAY*', 'OFASI_FLAGS'], ['pidlFolder', 'cidl', 'apidl', 'dwFlags'], 'HRESULT'), 'SHOpenPropSheetW': (7, ['LPCWSTR', 'HKEY ', 'UINT', 'CONST CLSID*', 'IDATAOBJECT*', 'ISHELLBROWSER*', 'LPCWSTR'], ['pszCaption', 'ahkeys', 'ckeys', 'pclsidDef', 'pdtobj', 'psb', 'pStartPage'], 'BOOL'), 'SHOpenWithDialog': (2, ['HWND', 'CONST OPENASINFO*'], ['hwndParent', 'poainfo'], 'HRESULT'), 'SHParseDisplayName': (5, ['LPCWSTR', 'IBINDCTX*', 'PIDLIST_ABSOLUTE*', 'SFGAOF', 'SFGAOF*'], ['pszName', 'pbc', 'ppidl', 'sfgaoIn', 'psfgaoOut'], 'HRESULT'), 'SHPathPrepareForWrite': (4, ['HWND', 'IUNKNOWN*', 'LPCTSTR', 'SHPPFW_FLAGS'], ['hwnd', 'punkEnableModless', 'pszPath', 'dwFlags'], 'HRESULT'), 'SHQueryRecycleBin': (2, ['LPCTSTR', 'LPSHQUERYRBINFO'], ['pszRootPath', 'pSHQueryRBInfo'], 'HRESULT'), 'SHQueryUserNotificationState': (1, ['QUERY_USER_NOTIFICATION_STATE*'], ['pquns'], 'HRESULT'), 'SHRemoveLocalizedName': (1, ['LPCWSTR'], ['pszPath'], 'HRESULT'), 'SHReplaceFromPropSheetExtArray': (4, ['HPSXA', 'UINT', 'LPFNADDPROPSHEETPAGE', 'LPARAM'], ['hpsxa', 'uPageID', 'lpfnReplaceWith', 'lParam'], 'UINT'), 'SHResolveLibrary': (1, ['ISHELLITEM*'], ['psiLibrary'], 'HRESULT'), 'SHRestricted': (1, ['RESTRICTIONS'], ['rest'], 'DWORD'), 'SHRunControlPanel': (2, ['LPCWSTR', 'HWND'], ['lpcszCmdLine', 'hwndMsgParent'], 'BOOL'), 'SHSetDefaultProperties': (4, ['HWND', 'ISHELLITEM*', 'FILEOP_FLAGS_DWORD', 'IFILEOPERATIONPROGRESSSINK*'], ['hwnd', 'psi', 'dwFileOpFlags', 'pfops'], 'HRESULT'), 'SHSetFolderPath': (4, ['CSIDL', 'HANDLE', 'DWORD', 'LPCTSTR'], ['csidl', 'hToken', 'dwFlags', 'pszPath'], 'HRESULT'), 'SHSetInstanceExplorer': (1, ['IUNKNOWN*'], ['punk'], 'void'), 'SHSetKnownFolderPath': (4, ['REFKNOWNFOLDERID', 'KNOWN_FOLDER_FLAG|DWORD', 'HANDLE', 'PCWSTR'], ['rfid', 'dwFlags', 'hToken', 'pszPath'], 'HRESULT'), 'SHSetLocalizedName': (3, ['LPCWSTR', 'LPCWSTR', 'INT'], ['pszPath', 'pszResModule', 'idsRes'], 'HRESULT'), 'SHSetTemporaryPropertyForItem': (3, ['ISHELLITEM*', 'REFPROPERTYKEY', 'REFPROPVARIANT'], ['psi', 'propkey', 'propvar'], 'HRESULT'), 'SHSetUnreadMailCountW': (3, ['LPCWSTR', 'DWORD', 'LPCWSTR'], ['pszMailAddress', 'dwCount', 'pszShellExecuteCommand'], 'HRESULT'), 'SHShellFolderView_Message': (3, ['HWND', 'UINT', 'LPARAM'], ['hwnd', 'uMsg', 'lparam'], 'LRESULT'), 'SHShowManageLibraryUI': (5, ['ISHELLITEM*', 'HWND', 'LPCWSTR', 'LPCWSTR', 'LIBRARYMANAGEDIALOGOPTIONS'], ['psiLibrary', 'hwndOwner', 'pszTitle', 'pszInstruction', 'lmdOptions'], 'HRESULT'), 'SHSimpleIDListFromPath': (1, ['LPCWSTR'], ['pszPath'], 'PIDLIST_ABSOLUTE'), 'SHStartNetConnectionDialogW': (3, ['HWND', 'LPCWSTR', 'DWORD'], ['hwnd', 'pszRemoteName', 'dwType'], 'HRESULT'), 'SHTestTokenMembership': (2, ['HANDLE', 'ULONG'], ['hToken', 'ulRID'], 'BOOL'), 'SHUpdateImage': (4, ['LPCTSTR', 'INT', 'SHUPDATEIMAGE_FLAGS', 'INT'], ['pszHashItem', 'iIndex', 'uFlags', 'iImageIndex'], 'void'), 'SHValidateUNC': (3, ['HWND', 'LPWSTR', 'UINT'], ['hwndOwner', 'pszFile', 'fConnect'], 'BOOL'), 'SignalFileOpen': (1, ['PCIDLIST_ABSOLUTE'], ['pidl'], 'BOOL'), 'StgMakeUniqueName': (5, ['ISTORAGE*', 'PCWSTR', 'STGM_FLAGS', 'REFIID', 'VOID**'], ['pstgParent', 'pszFileSpec', 'grfMode', 'riid', 'ppv'], 'HRESULT'), 'Win32DeleteFile': (1, ['LPCTSTR'], ['pszFileName'], 'BOOL'), 'WOWShellExecute': (7, ['HWND', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'SHOWWINDOWCMD', 'VOID*'], ['hwnd', 'lpOperation', 'lpFile', 'lpParameters', 'lpDirectory', 'nShowCmd', 'lpfnCBWinExec'], 'HINSTANCE'), 'WriteCabinetState': (1, ['CABINETSTATE*'], ['pcs'], 'BOOL'), 'RunFileDlg': (6, ['HWND', 'HICON', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'RUNFILEDLGFLAGS'], ['hwndOwner', 'hIcon', 'lpszDirectory', 'lpszTitle', 'lpszDescription', 'uFlags'], 'VOID'), 'StrRetToStrN': (4, ['LPTSTR', 'UINT', 'LPSTRRET', 'LPCITEMIDLIST'], ['pszOut', 'cchOut', 'pStrRet', 'pidl'], 'BOOL'), 'PifMgr_CloseProperties': (2, ['HANDLE', 'UINT'], ['hProps', 'flOpt'], 'int'), 'PifMgr_OpenProperties': (4, ['LPCWSTR', 'LPCWSTR', 'UINT', 'UINT'], ['pszApp', 'lpszPIF', 'hInf', 'flOpt'], 'HANDLE'), 'PifMgr_GetProperties': (5, ['HANDLE', 'LPCSTR', 'VOID*', 'INT', 'UINT'], ['hProps', 'pszGroup', 'lpProps', 'cbProps', 'flOpt'], 'int'), 'PifMgr_SetProperties': (5, ['HANDLE', 'LPCSTR', 'VOID*', 'INT', 'UINT'], ['hProps', 'pszGroup', 'lpProps', 'cbProps', 'flOpt'], 'int'), 'SHAddDefaultPropertiesByExt': (2, ['PCWSTR', 'IPROPERTYSTORE*'], ['pszExt', 'pPropStore'], 'HRESULT'), 'SHGetPropertyStoreForWindow': (3, ['HWND', 'REFIID', 'VOID**'], ['hwnd', 'riid', 'ppv'], 'HRESULT'), 'SHGetPropertyStoreFromIDList': (4, ['PCIDLIST_ABSOLUTE', 'GETPROPERTYSTOREFLAGS', 'REFIID', 'VOID**'], ['pidl', 'flags', 'riid', 'ppv'], 'HRESULT'), 'SHGetPropertyStoreFromParsingName': (5, ['PCWSTR', 'IBINDCTX*', 'GETPROPERTYSTOREFLAGS', 'REFIID', 'VOID**'], ['pszPath', 'pbc', 'flags', 'riid', 'ppv'], 'HRESULT'), 'SHPropStgCreate': (8, ['IPROPERTYSETSTORAGE*', 'REFFMTID', 'CONST CLSID*', 'PROPSETFLAG', 'STGM_FLAGS', 'DWORD', 'IPROPERTYSTORAGE**', 'UINT*'], ['psstg', 'fmtid', 'pclsid', 'grfFlags', 'grfMode', 'dwDisposition', 'ppstg', 'puCodePage'], 'HRESULT'), 'SHPropStgReadMultiple': (5, ['IPROPERTYSTORAGE*', 'CODEPAGEENUM', 'ULONG', 'PROPSPEC CONST', 'PROPVARIANT'], ['pps', 'uCodePage', 'cpspec', 'rgpspec', 'rgvar'], 'HRESULT'), 'SHPropStgWriteMultiple': (6, ['IPROPERTYSTORAGE*', 'UINT*', 'ULONG', 'PROPSPEC CONST', 'PROPVARIANT', 'PROPID'], ['pps', 'uCodePage', 'cpspec', 'rgpspec', 'rgvar', 'propidNameFirst'], 'HRESULT'), 'AddCommasExportW': (2, ['DWORD', 'LPWSTR'], ['value', 'pwszBuf'], 'LPWSTR'), 'AppCompat_RunDLLW': (4, ['HWND', 'HINSTANCE', 'LPWSTR', 'INT'], ['unusedHwnd', 'unusedHinstance', 'commandLine', 'unusedInt'], 'void'), 'CheckStagingArea': (0, [], [], 'HRESULT'), 'CreateAutoListParser': (2, ['REFIID', 'PVOID*'], ['riid', 'ppv'], 'HRESULT'), 'CreateInfoTipFromItem': (5, ['ISHELLFOLDER2*', 'ITEMIDLIST*', 'LPCWSTR', 'REFIID', 'PVOID*'], ['psf', 'pidl', 'pText', 'riid', 'ppv'], 'HRESULT'), 'CreateInfoTipFromItem2': (6, ['ISHELLFOLDER2*', 'ITEMIDLIST*', 'PROPERTYKEY*', 'LPCWSTR', 'REFIID', 'PVOID*'], ['psf', 'pidl', 'pPropKey', 'pText', 'riid', 'ppv'], 'HRESULT'), 'DisconnectWindowDialog': (1, ['HWND'], ['hwndUnused'], 'void'), 'GetAppPathFromLink': (3, ['ISHELLITEM*', 'LPWSTR', 'DWORD'], ['pItem', 'pwszPathBuffer', 'dwBufferLen'], 'HRESULT'), 'GetSqmableFileName': (3, ['LPCWSTR', 'LPWSTR', 'UINT'], ['pwszFileName', 'pwszSqmName', 'sqmNameBufLen'], 'BOOL'), 'Int64ToString': (6, ['INT64', 'LPWSTR', 'UINT', 'BOOL', 'NUMBERFMT*', 'NUMBERFMT_FLAGS'], ['number', 'pwszBuf', 'bufLen', 'useNumberFormat', 'pFormatInfo', 'dwFlags'], 'int'), 'IsElevationRequired': (1, ['LPCWSTR'], ['lpwszExeFile'], 'BOOL'), 'IsSearchEnabled': (0, [], [], 'BOOL'), 'LargeIntegerToString': (6, ['LARGE_INTEGER*', 'LPWSTR', 'UINT', 'BOOL', 'NUMBERFMT*', 'NUMBERFMT_FLAGS'], ['pNumber', 'pwszBuf', 'bufLen', 'useNumberFormat', 'pFormatInfo', 'dwFlags'], 'int'), 'PathGetPathDisplayName': (3, ['LPCWSTR', 'LPWSTR', 'DWORD'], ['pwszPath', 'pwszDisplayName', 'displayNameLen'], 'HRESULT'), 'PathIsTemporary': (1, ['LPCTSTR'], ['pszFile'], 'BOOL'), 'Printer_AddPrinterPropPages': (2, ['LPCWSTR', 'PROPSHEETHEADER*'], ['printer', 'pPropHeader'], 'void'), 'Printer_LoadIconsW': (3, ['LPCWSTR', 'HICON*', 'HICON*'], ['printerName', 'phLargeIcon', 'phSmallIcon'], 'void'), 'Printers_RegisterWindowW': (4, ['LPCWSTR', 'DWORD', 'BOOL*', 'HWND*'], ['pwszPrinter', 'pidlType', 'pWinCreated', 'phwnd'], 'BOOL'), 'Printers_UnregisterWindow': (2, ['CLASSPIDL*', 'HWND'], ['pClassPidl', 'hwnd'], 'void'), 'RefreshBrowserLayout': (1, ['ISHELLITEM*'], ['pItem'], 'HRESULT'), 'RunAsNewUser_RunDLLW': (4, ['HWND', 'HINSTANCE', 'LPCWSTR', 'SHOWWINDOWCMD'], ['hWnd', 'hIinstance', 'lpszFileMapName', 'nCmdShow'], 'int'), 'SHGetUserDisplayName': (2, ['LPWSTR', 'UINT'], ['pwszName', 'pBufLen'], 'HRESULT'), 'SHGetUserPicturePathEx': (7, ['LPCWSTR', 'SGUPP_FLAGS', 'LPCWSTR', 'LPWSTR', 'UINT', 'LPWSTR', 'UINT'], ['pwszUserOrPicName', 'sguppFlags', 'pwszDesiredSrcExt', 'pwszPicPath', 'picPathLen', 'pwszSrcPath', 'srcLen'], 'HRESULT'), 'SHHelpShortcuts_RunDLL': (4, ['HWND', 'HINSTANCE', 'LPCTSTR', 'INT'], ['hwndParent', 'unusedHinstance', 'commandLine', 'unusedInt'], 'void'), 'SHResolveUserNames': (3, ['LPCWSTR', 'LPWSTR', 'UINT'], ['pwszSids', 'pwszNames', 'nameLen'], 'HRESULT'), 'SHSettingsChanged': (2, ['WPARAM', 'LPCWSTR'], ['wParam', 'lParam'], 'void'), 'SHShouldShowWizards': (1, ['IUNKNOWN*'], ['pUnk'], 'BOOL'), 'SHTestTokenPrivilegeW': (2, ['HANDLE', 'LPCWSTR'], ['hToken', 'pwszPrivilege'], 'BOOL'), 'SHUserGetPasswordHint': (2, ['PCWSTR', 'PWSTR*'], ['pwszUserName', 'ppwszHint'], 'HRESULT'), 'SHUserSetPasswordHint': (2, ['PCWSTR', 'PCWSTR'], ['pwszUserName', 'pwszPasswordHint'], 'HRESULT'), 'ShellExecCmdLine': (6, ['HWND', 'LPCWSTR', 'LPCWSTR', 'SHOWWINDOWCMD', 'LPVOID', 'SECL_FLAGS'], ['hwnd', 'pwszCommand', 'pwszStartDir', 'nShow', 'pUnused', 'dwSeclFlags'], 'HRESULT'), 'ShortSizeFormatExportW': (2, ['DWORD', 'LPWSTR'], ['value', 'pwszBuf'], 'LPWSTR')}

dict5_secur32 = {'GetComputerObjectName': (3, ['EXTENDED_NAME_FORMAT', 'LPTSTR', 'PULONG'], ['NameFormat', 'lpNameBuffer', 'lpnSize'], 'BOOLEAN'), 'GetUserNameEx': (3, ['EXTENDED_NAME_FORMAT', 'LPTSTR', 'PULONG'], ['NameFormat', 'lpNameBuffer', 'lpnSize'], 'BOOLEAN'), 'TranslateName': (5, ['LPCTSTR', 'EXTENDED_NAME_FORMAT', 'EXTENDED_NAME_FORMAT', 'LPTSTR', 'PULONG'], ['lpAccountName', 'AccountNameFormat', 'DesiredNameFormat', 'lpTranslatedName', 'nSize'], 'BOOLEAN'), 'EnumerateSecurityPackages': (2, ['PULONG', 'PSECPKGINFO*'], ['pcPackages', 'ppPackageInfo'], 'SECURITY_STATUS'), 'InitSecurityInterface': (0, [], [], 'PSecurityFunctionTable'), 'QuerySecurityPackageInfo': (2, ['SEC_CHAR*', 'PSECPKGINFO*'], ['pszPackageName', 'ppPackageInfo'], 'SECURITY_STATUS'), 'AcquireCredentialsHandle': (9, ['SEC_CHAR*', 'SEC_CHAR*', 'SECCREDENTIALUSE', 'PLUID', 'PVOID', 'SEC_GET_KEY_FN', 'PVOID', 'PCREDHANDLE', 'PTIMESTAMP'], ['pszPrincipal', 'pszPackage', 'fCredentialUse', 'pvLogonID', 'pAuthData', 'pGetKeyFn', 'pvGetKeyArgument', 'phCredential', 'ptsExpiry'], 'SECURITY_STATUS'), 'ExportSecurityContext': (4, ['PCTXTHANDLE', 'ULONG', 'PSECBUFFER', 'HANDLE*'], ['phContext', 'fFlags', 'pPackedContext', 'pToken'], 'SECURITY_STATUS'), 'FreeCredentialsHandle': (1, ['PCREDHANDLE'], ['phCredential'], 'SECURITY_STATUS'), 'ImportSecurityContext': (4, ['PSECURITY_STRING', 'PSECBUFFER', 'HANDLE', 'PCTXTHANDLE'], ['pszPackage', 'pPackedContext', 'pToken', 'phContext'], 'SECURITY_STATUS'), 'QueryCredentialsAttributes': (3, ['PCREDHANDLE', 'ULONG', 'PVOID'], ['phCredential', 'ulAttribute', 'pBuffer'], 'SECURITY_STATUS'), 'AcceptSecurityContext': (9, ['PCREDHANDLE', 'PCTXTHANDLE', 'PSECBUFFERDESC', 'ACCEPTSECURITYCONTEXTREQUESTFLAGS', 'ULONG', 'PCTXTHANDLE', 'PSECBUFFERDESC', 'ACCEPTSECURITYCONTEXTRETFLAGS*', 'PTIMESTAMP'], ['phCredential', 'phContext', 'pInput', 'fContextReq', 'TargetDataRep', 'phNewContext', 'pOutput', 'pfContextAttr', 'ptsTimeStamp'], 'SECURITY_STATUS'), 'ApplyControlToken': (2, ['PCTXTHANDLE', 'PSECBUFFERDESC'], ['phContext', 'pInput'], 'SECURITY_STATUS'), 'CompleteAuthToken': (2, ['PCTXTHANDLE', 'PSECBUFFERDESC'], ['phContext', 'pToken'], 'SECURITY_STATUS'), 'DeleteSecurityContext': (1, ['PCTXTHANDLE'], ['phContext'], 'SECURITY_STATUS'), 'FreeContextBuffer': (1, ['PVOID'], ['pvContextBuffer'], 'SECURITY_STATUS'), 'ImpersonateSecurityContext': (1, ['PCTXTHANDLE'], ['phContext'], 'SECURITY_STATUS'), 'InitializeSecurityContext': (12, ['PCREDHANDLE', 'PCTXTHANDLE', 'SEC_CHAR*', 'INITIALIZESECURITYCONTEXTREQUESTFLAGS', 'ULONG', 'ULONG', 'PSECBUFFERDESC', 'ULONG', 'PCTXTHANDLE', 'PSECBUFFERDESC', 'INITIALIZESECURITYCONTEXTRETFLAGS*', 'PTIMESTAMP'], ['phCredential', 'phContext', 'pszTargetName', 'fContextReq', 'Reserved1', 'TargetDataRep', 'pInput', 'Reserved2', 'phNewContext', 'pOutput', 'pfContextAttr', 'ptsExpiry'], 'SECURITY_STATUS'), 'QueryContextAttributes': (3, ['PCTXTHANDLE', 'SECCONTEXTATTR', 'PVOID'], ['phContext', 'ulAttribute', 'pBuffer'], 'SECURITY_STATUS'), 'QuerySecurityContextToken': (2, ['PCTXTHANDLE', 'HANDLE*'], ['phContext', 'phToken'], 'SECURITY_STATUS'), 'SetContextAttributes': (4, ['PCTXTHANDLE', 'SECCONTEXTATTR', 'VOID*', 'ULONG'], ['phContext', 'ulAttribute', 'pBuffer', 'cbBuffer'], 'SECURITY_STATUS'), 'RevertSecurityContext': (1, ['PCTXTHANDLE'], ['phContext'], 'SECURITY_STATUS'), 'DecryptMessage': (4, ['PCTXTHANDLE', 'PSECBUFFERDESC', 'ULONG', 'PULONG'], ['phContext', 'pMessage', 'MessageSeqNo', 'pfQOP'], 'SECURITY_STATUS'), 'EncryptMessage': (4, ['PCTXTHANDLE', 'ULONG', 'PSECBUFFERDESC', 'ULONG'], ['phContext', 'fQOP', 'pMessage', 'MessageSeqNo'], 'SECURITY_STATUS'), 'MakeSignature': (4, ['PCTXTHANDLE', 'ULONG', 'PSECBUFFERDESC', 'ULONG'], ['phContext', 'fQOP', 'pMessage', 'MessageSeqNo'], 'SECURITY_STATUS'), 'VerifySignature': (4, ['PCTXTHANDLE', 'PSECBUFFERDESC', 'ULONG', 'PULONG'], ['phContext', 'pMessage', 'MessageSeqNo', 'pfQOP'], 'SECURITY_STATUS'), 'LsaCallAuthenticationPackage': (7, ['HANDLE', 'ULONG', 'PVOID', 'ULONG', 'PVOID*', 'PULONG', 'PNTSTATUS'], ['LsaHandle', 'AuthenticationPackage', 'ProtocolSubmitBuffer', 'SubmitBufferLength', 'ProtocolReturnBuffer', 'ReturnBufferLength', 'ProtocolStatus'], 'NTSTATUS'), 'LsaConnectUntrusted': (1, ['PHANDLE'], ['LsaHandle'], 'NTSTATUS'), 'LsaDeregisterLogonProcess': (1, ['HANDLE'], ['LsaHandle'], 'NTSTATUS'), 'LsaEnumerateLogonSessions': (2, ['PULONG', 'PLUID*'], ['LogonSessionCount', 'LogonSessionList'], 'NTSTATUS'), 'LsaFreeReturnBuffer': (1, ['PVOID'], ['Buffer'], 'NTSTATUS'), 'LsaGetLogonSessionData': (2, ['PLUID', 'PSECURITY_LOGON_SESSION_DATA*'], ['LogonId', 'ppLogonSessionData'], 'NTSTATUS'), 'LsaLogonUser': (14, ['HANDLE', 'PLSA_STRING', 'SECURITY_LOGON_TYPE', 'ULONG', 'PVOID', 'ULONG', 'PTOKEN_GROUPS', 'PTOKEN_SOURCE', 'PVOID*', 'PULONG', 'PLUID', 'PHANDLE', 'PQUOTA_LIMITS', 'PNTSTATUS'], ['LsaHandle', 'OriginName', 'LogonType', 'AuthenticationPackage', 'AuthenticationInformation', 'AuthenticationInformationLength', 'LocalGroups', 'SourceContext', 'ProfileBuffer', 'ProfileBufferLength', 'LogonId', 'Token', 'Quotas', 'SubStatus'], 'NTSTATUS'), 'LsaLookupAuthenticationPackage': (3, ['HANDLE', 'PLSA_STRING', 'PULONG'], ['LsaHandle', 'PackageName', 'AuthenticationPackage'], 'NTSTATUS'), 'LsaRegisterLogonProcess': (3, ['PLSA_STRING', 'PHANDLE', 'PLSA_OPERATIONAL_MODE'], ['LogonProcessName', 'LsaHandle', 'SecurityMode'], 'NTSTATUS'), 'SaslAcceptSecurityContext': (9, ['PCREDHANDLE', 'PCTXTHANDLE', 'PSECBUFFERDESC', 'ACCEPTSECURITYCONTEXTREQUESTFLAGS', 'UNSIGNED LONG', 'PCTXTHANDLE', 'PSECBUFFERDESC', 'ACCEPTSECURITYCONTEXTRETFLAGS*', 'PTIMESTAMP'], ['phCredential', 'phContext', 'pInput', 'fContextReq', 'TargetDataRep', 'phNewContext', 'pOutput', 'pfContextAttr', 'ptsExpiry'], 'SECURITY_STATUS'), 'SaslEnumerateProfiles': (2, ['LPTSTR*', 'ULONG*'], ['ProfileList', 'ProfileCount'], 'SECURITY_STATUS'), 'SaslGetContextOption': (5, ['PCTXTHANDLE', 'ULONG', 'PVOID', 'ULONG', 'PULONG'], ['ContextHandle', 'Option', 'Value', 'Size', 'Needed'], 'SECURITY_STATUS'), 'SaslGetProfilePackage': (2, ['LPTSTR', 'PSECPKGINFO*'], ['ProfileName', 'PackageInfo'], 'SECURITY_STATUS'), 'SaslIdentifyPackage': (2, ['PSECBUFFERDESC', 'PSECPKGINFO*'], ['pInput', 'PackageInfo'], 'SECURITY_STATUS'), 'SaslInitializeSecurityContext': (12, ['PCREDHANDLE', 'PCTXTHANDLE', 'LPTSTR', 'INITIALIZESECURITYCONTEXTREQUESTFLAGS', 'UNSIGNED LONG', 'UNSIGNED LONG', 'PSECBUFFERDESC', 'UNSIGNED LONG', 'PCTXTHANDLE', 'PSECBUFFERDESC', 'INITIALIZESECURITYCONTEXTRETFLAGS-UNSIGNED-LONG*', 'PTIMESTAMP'], ['phCredential', 'phContext', 'pszTargetName', 'fContextReq', 'Reserved1', 'TargetDataRep', 'pInput', 'Reserved2', 'phNewContext', 'pOutput', 'pfContextAttr', 'ptsExpiry'], 'SECURITY_STATUS'), 'SaslSetContextOption': (4, ['PCTXTHANDLE', 'ULONG', 'PVOID', 'ULONG'], ['ContextHandle', 'Option', 'Value', 'Size'], 'SECURITY_STATUS'), 'AddSecurityPackage': (2, ['LPTSTR', 'PSECURITY_PACKAGE_OPTIONS'], ['pszPackageName', 'pOptions'], 'SECURITY_STATUS'), 'ChangeAccountPassword': (8, ['SEC_WCHAR*', 'SEC_WCHAR*', 'SEC_WCHAR*', 'SEC_WCHAR*', 'SEC_WCHAR*', 'BOOLEAN', 'UNSIGNED LONG', 'PSECBUFFERDESC'], ['pszPackageName', 'pszDomainName', 'pszAccountName', 'pszOldPassword', 'pszNewPassword', 'bImpersonating', 'dwReserved', 'pOutput'], 'SECURITY_STATUS'), 'DeleteSecurityPackage': (1, ['LPTSTR'], ['pszPackageName'], 'SECURITY_STATUS'), 'LsaRegisterPolicyChangeNotification': (2, ['POLICY_NOTIFICATION_INFORMATION_CLASS', 'HANDLE'], ['InformationClass', 'NotificationEventHandle'], 'NTSTATUS'), 'LsaUnregisterPolicyChangeNotification': (2, ['POLICY_NOTIFICATION_INFORMATION_CLASS', 'HANDLE'], ['InformationClass', 'NotificationEventHandle'], 'NTSTATUS')}

dict5_shlwapi = {'SHAllocShared': (3, ['CONST VOID*', 'DWORD', 'DWORD'], ['pvData', 'dwSize', 'dwDestinationProcessId'], 'HANDLE'), 'ShellMessageBox': (5, ['HINSTANCE', 'HWND', 'LPCTSTR', 'LPCTSTR', 'MESSAGEBOXTYPE'], ['hInst', 'hWnd', 'pszMsg', 'pszTitle', 'fuStyle'], '[MessageBoxResult]'), 'SHGetViewStatePropertyBag': (5, ['PCIDLIST_ABSOLUTE', 'LPCWSTR', 'DWORD', 'REFIID', 'VOID**'], ['pidl', 'pszBagName', 'dwFlags', 'riid', 'ppv'], 'HRESULT'), 'SHLockShared': (2, ['HANDLE*', 'DWORD'], ['hData', 'dwOtherProcId'], 'LPVOID'), 'SHUnlockShared': (1, ['VOID*'], ['pvData'], 'BOOL'), 'SHFreeShared': (2, ['HANDLE', 'DWORD'], ['hData', 'dwSourceProcId'], 'BOOL'), 'StrStrNW': (3, ['LPCWSTR', 'LPCWSTR', 'UINT'], ['lpFirst', 'lpSrch', 'cchMax'], 'LPCWSTR'), 'StrStrNIW': (3, ['LPCWSTR', 'LPCWSTR', 'UINT'], ['lpFirst', 'lpSrch', 'cchMax'], 'LPCWSTR'), 'ColorAdjustLuma': (3, ['COLORREF', 'INT', 'BOOL'], ['clrRGB', 'n', 'fScale'], 'COLORREF'), 'ColorHLSToRGB': (3, ['WORD', 'WORD', 'WORD'], ['wHue', 'wLuminance', 'wSaturation'], 'COLORREF'), 'ColorRGBToHLS': (4, ['COLORREF', 'WORD*', 'WORD*', 'WORD*'], ['clrRGB', 'pwHue', 'pwLuminance', 'pwSaturation'], 'void'), 'SHCreateShellPalette': (1, ['HDC'], ['hdc'], 'HPALETTE'), 'SHGetInverseCMAP': (2, ['BYTE*', 'ULONG'], ['pbMap', 'cbMap'], 'HRESULT'), 'PathAddBackslash': (1, ['LPTSTR'], ['lpszPath'], 'LPTSTR'), 'PathAddExtension': (2, ['LPTSTR', 'LPCTSTR'], ['pszPath', 'pszExtension'], 'BOOL'), 'PathAppend': (2, ['LPTSTR', 'LPCTSTR'], ['pszPath', 'pszMore'], 'BOOL'), 'PathBuildRoot': (2, ['LPTSTR', 'INT'], ['szRoot', 'iDrive'], 'LPTSTR'), 'PathCanonicalize': (2, ['LPTSTR', 'LPCTSTR'], ['lpszDst', 'lpszSrc'], 'BOOL'), 'PathCombine': (3, ['LPTSTR', 'LPCTSTR', 'LPCTSTR'], ['lpszDest', 'lpszDir', 'lpszFile'], 'LPTSTR'), 'PathCommonPrefix': (3, ['LPCTSTR', 'LPCTSTR', 'LPTSTR'], ['pszFile1', 'pszFile2', 'pszPath'], 'int'), 'PathCompactPath': (3, ['HDC', 'LPTSTR', 'UINT'], ['hDC', 'lpszPath', 'dx'], 'BOOL'), 'PathCompactPathEx': (4, ['LPTSTR', 'LPCTSTR', 'UINT', 'DWORD'], ['pszOut', 'pszSrc', 'cchMax', 'dwFlags'], 'BOOL'), 'PathCreateFromUrl': (4, ['PCTSTR', 'PTSTR', 'DWORD*', 'DWORD'], ['pszUrl', 'pszPath', 'pcchPath', 'dwFlags'], 'HRESULT'), 'PathCreateFromUrlAlloc': (3, ['PCWSTR', 'PWSTR*', 'DWORD'], ['pszIn', 'ppszOut', 'dwFlags'], 'HRESULT'), 'PathFileExists': (1, ['LPCTSTR'], ['pszPath'], 'BOOL'), 'PathFindExtension': (1, ['PTSTR'], ['pszPath'], 'PTSTR'), 'PathFindFileName': (1, ['PTSTR'], ['pPath'], 'PTSTR'), 'PathFindNextComponent': (1, ['PTSTR'], ['pszPath'], 'PTSTR'), 'PathFindOnPath': (2, ['LPTSTR', 'LPCTSTR*'], ['pszFile', 'ppszOtherDirs'], 'BOOL'), 'PathFindSuffixArray': (3, ['LPCTSTR', 'CONST LPCTSTR*', 'INT'], ['pszPath', 'apszSuffix', 'iArraySize'], 'LPCTSTR'), 'PathGetArgs': (1, ['PTSTR'], ['pszPath'], 'PTSTR'), 'PathGetCharType': (1, ['TCHAR'], ['ch'], 'UINT'), 'PathGetDriveNumber': (1, ['LPCTSTR'], ['lpsz'], 'int'), 'PathIsContentType': (2, ['LPCTSTR', 'LPCTSTR'], ['pszPath', 'pszContentType'], 'BOOL'), 'PathIsDirectory': (1, ['LPCTSTR'], ['pszPath'], 'BOOL'), 'PathIsDirectoryEmpty': (1, ['LPCTSTR'], ['pszPath'], 'BOOL'), 'PathIsFileSpec': (1, ['LPCTSTR'], ['lpszPath'], 'BOOL'), 'PathIsHTMLFile': (1, ['LPCTSTR'], ['pszFile'], 'BOOL'), 'PathIsLFNFileSpec': (1, ['LPCTSTR'], ['pszName'], 'BOOL'), 'PathIsNetworkPath': (1, ['LPCTSTR'], ['pszPath'], 'BOOL'), 'PathIsPrefix': (2, ['LPCTSTR', 'LPCTSTR'], ['pszPrefix', 'pszPath'], 'BOOL'), 'PathIsRelative': (1, ['LPCTSTR'], ['lpszPath'], 'BOOL'), 'PathIsRoot': (1, ['LPCTSTR'], ['pPath'], 'BOOL'), 'PathIsSameRoot': (2, ['LPCTSTR', 'LPCTSTR'], ['pszPath1', 'pszPath2'], 'BOOL'), 'PathIsSystemFolder': (2, ['LPCTSTR', 'DWORD'], ['pszPath', 'dwAttrb'], 'BOOL'), 'PathIsUNC': (1, ['LPCTSTR'], ['pszPath'], 'BOOL'), 'PathIsUNCServer': (1, ['LPCTSTR'], ['pszPath'], 'BOOL'), 'PathIsUNCServerShare': (1, ['LPCTSTR'], ['pszPath'], 'BOOL'), 'PathIsURL': (1, ['LPCTSTR'], ['pszPath'], 'BOOL'), 'PathMakePretty': (1, ['LPTSTR'], ['lpPath'], 'BOOL'), 'PathMakeSystemFolder': (1, ['LPTSTR'], ['pszPath'], 'BOOL'), 'PathMatchSpec': (2, ['LPCSTR', 'LPCSTR'], ['pszFile', 'pszSpec'], 'BOOL'), 'PathMatchSpecEx': (3, ['LPCTSTR', 'LPCTSTR', 'DWORD'], ['pszFile', 'pszSpec', 'dwFlags'], 'HRESULT'), 'PathParseIconLocation': (1, ['LPTSTR'], ['pszIconFile'], 'int'), 'PathQuoteSpaces': (1, ['LPTSTR'], ['lpsz'], 'BOOL'), 'PathRelativePathTo': (5, ['LPTSTR', 'LPCTSTR', 'DWORD', 'LPCTSTR', 'DWORD'], ['pszPath', 'pszFrom', 'dwAttrFrom', 'pszTo', 'dwAttrTo'], 'BOOL'), 'PathRemoveArgs': (1, ['LPTSTR'], ['pszPath'], 'void'), 'PathRemoveBackslash': (1, ['LPTSTR'], ['lpszPath'], 'LPTSTR'), 'PathRemoveBlanks': (1, ['LPTSTR'], ['lpszString'], 'void'), 'PathRemoveExtension': (1, ['LPTSTR'], ['pszPath'], 'void'), 'PathRemoveFileSpec': (1, ['LPTSTR'], ['pszPath'], 'BOOL'), 'PathRenameExtension': (2, ['LPTSTR', 'LPCTSTR'], ['pszPath', 'pszExt'], 'BOOL'), 'PathSearchAndQualify': (3, ['LPCTSTR', 'LPTSTR', 'UINT'], ['pcszPath', 'pszFullyQualifiedPath', 'cchFullyQualifiedPath'], 'BOOL'), 'PathSetDlgItemPath': (3, ['HWND', 'INT', 'LPCSTR'], ['hDlg', 'id', 'pszPath'], 'void'), 'PathSkipRoot': (1, ['PTSTR'], ['pszPath'], 'PTSTR'), 'PathStripPath': (1, ['LPTSTR'], ['pszPath'], 'void'), 'PathStripToRoot': (1, ['LPTSTR'], ['szRoot'], 'BOOL'), 'PathUndecorate': (1, ['LPTSTR'], ['pszPath'], 'void'), 'PathUnExpandEnvStrings': (3, ['LPCTSTR', 'LPTSTR', 'UINT'], ['pszPath', 'pszBuf', 'cchBuf'], 'BOOL'), 'PathUnmakeSystemFolder': (1, ['LPTSTR'], ['pszPath'], 'BOOL'), 'PathUnquoteSpaces': (1, ['LPTSTR'], ['lpsz'], 'void'), 'SHSkipJunction': (2, ['IBINDCTX*', 'CONST CLSID*'], ['pbc', 'pclsid'], 'BOOL'), 'UrlApplyScheme': (4, ['PCTSTR', 'PTSTR', 'DWORD*', 'URL_APPLY_FLAGS'], ['pszIn', 'pszOut', 'pcchOut', 'dwFlags'], 'HRESULT'), 'UrlCanonicalize': (4, ['PCTSTR', 'PTSTR', 'DWORD*', 'DWORD'], ['pszUrl', 'pszCanonicalized', 'pcchCanonicalized', 'dwFlags'], 'HRESULT'), 'UrlCombine': (5, ['PCTSTR', 'PCTSTR', 'PTSTR', 'DWORD*', 'DWORD'], ['pszBase', 'pszRelative', 'pszCombined', 'pcchCombined', 'dwFlags'], 'HRESULT'), 'UrlCompare': (3, ['PCTSTR', 'PCTSTR', 'BOOL'], ['psz1', 'psz2', 'fIgnoreSlash'], 'int'), 'UrlCreateFromPath': (4, ['PCTSTR', 'PTSTR', 'DWORD*', 'DWORD'], ['pszPath', 'pszUrl', 'pcchUrl', 'dwFlags'], 'HRESULT'), 'UrlEscape': (4, ['PCTSTR', 'PTSTR', 'DWORD*', 'DWORD'], ['pszURL', 'pszEscaped', 'pcchEscaped', 'dwFlags'], 'HRESULT'), 'UrlEscapeSpaces': (3, ['LPCTSTR', 'LPTSTR', 'LPDWORD'], ['pszURL', 'pszEscaped', 'pcchEscaped'], 'HRESULT'), 'UrlFixupW': (3, ['PCWSTR', 'PWSTR', 'DWORD'], ['pcszUrl', 'pszTranslatedUrl', 'cchMax'], 'HRESULT'), 'UrlGetLocation': (1, ['PCTSTR'], ['pszURL'], 'LPCTSTR'), 'UrlGetPart': (5, ['PCTSTR', 'PTSTR', 'DWORD*', 'DWORD', 'DWORD'], ['pszIn', 'pszOut', 'pcchOut', 'dwPart', 'dwFlags'], 'HRESULT'), 'UrlHash': (3, ['PCTSTR', 'BYTE*', 'DWORD'], ['pszURL', 'pbHash', 'cbHash'], 'HRESULT'), 'UrlIs': (2, ['PCTSTR', 'URLIS'], ['pszUrl', 'UrlIs'], 'BOOL'), 'UrlIsFileUrl': (1, ['LPCTSTR'], ['pszUrl'], 'BOOL'), 'UrlIsNoHistory': (1, ['PCTSTR'], ['pszURL'], 'BOOL'), 'UrlIsOpaque': (1, ['PCTSTR'], ['pszURL'], 'BOOL'), 'UrlUnescape': (4, ['PTSTR', 'PTSTR', 'DWORD*', 'DWORD'], ['pszURL', 'pszUnescaped', 'pcchUnescaped', 'dwFlags'], 'HRESULT'), 'UrlUnescapeInPlace': (2, ['LPTSTR', 'DWORD'], ['pszURL', 'dwFlags'], 'HRESULT'), 'AssocCreate': (3, ['CLSID', 'REFIID', 'VOID**'], ['clsid', 'riid', 'ppv'], 'HRESULT'), 'AssocGetPerceivedType': (4, ['PCWSTR', 'PERCEIVED*', 'PERCEIVEDFLAG*', 'PWSTR*'], ['pszExt', 'ptype', 'pflag', 'ppszType'], 'HRESULT'), 'AssocIsDangerous': (1, ['PCWSTR'], ['pszAssoc'], 'BOOL'), 'AssocQueryKey': (5, ['ASSOCF', 'ASSOCKEY', 'LPCTSTR', 'LPCTSTR', 'HKEY*'], ['flags', 'key', 'pszAssoc', 'pszExtra', 'phkeyOut'], 'HRESULT'), 'AssocQueryString': (6, ['ASSOCF', 'ASSOCSTR', 'LPCTSTR', 'LPCTSTR', 'LPTSTR', 'DWORD*'], ['flags', 'str', 'pszAssoc', 'pszExtra', 'pszOut', 'pcchOut'], 'HRESULT'), 'AssocQueryStringByKey': (6, ['ASSOCF', 'ASSOCSTR', 'HKEY', 'LPCTSTR', 'LPTSTR', 'DWORD*'], ['flags', 'str', 'hkAssoc', 'pszExtra', 'pszOut', 'pcchOut'], 'HRESULT'), 'SHCopyKey': (4, ['HKEY', 'LPCTSTR', 'HKEY', 'DWORD'], ['hkeySrc', 'pszSrcSubKey', 'hkeyDest', 'fReserved'], 'LSTATUS'), 'SHDeleteEmptyKey': (2, ['HKEY', 'LPCTSTR'], ['hkey', 'pszSubKey'], 'LSTATUS'), 'SHDeleteKey': (2, ['HKEY', 'LPCTSTR'], ['hkey', 'pszSubKey'], 'LSTATUS'), 'SHDeleteValue': (3, ['HKEY', 'LPCTSTR', 'LPCTSTR'], ['hkey', 'pszSubKey', 'pszValue'], 'LSTATUS'), 'SHEnumKeyEx': (4, ['HKEY', 'DWORD', 'LPTSTR', 'LPDWORD'], ['hkey', 'dwIndex', 'pszName', 'pcchName'], 'LSTATUS'), 'SHEnumValue': (7, ['HKEY', 'DWORD', 'LPTSTR', 'LPDWORD', 'REGTYPE*', 'LPVOID', 'LPDWORD'], ['hkey', 'dwIndex', 'pszValueName', 'pcchValueName', 'pdwType', 'pvData', 'pcbData'], 'LSTATUS'), 'SHGetValue': (6, ['HKEY', 'LPCTSTR', 'LPCTSTR', 'REGTYPE*', 'LPVOID', 'LPDWORD'], ['hkey', 'pszSubKey', 'pszValue', 'pdwType', 'pvData', 'pcbData'], 'LSTATUS'), 'SHOpenRegStream': (4, ['HKEY', 'LPCTSTR', 'LPCTSTR', 'STGM_FLAGS'], ['hkey', 'pszSubkey', 'pszValue', 'grfMode'], 'IStream*'), 'SHOpenRegStream2': (4, ['HKEY', 'LPCTSTR', 'LPCTSTR', 'STGM_FLAGS'], ['hkey', 'pszSubkey', 'pszValue', 'grfMode'], 'IStream*'), 'SHQueryInfoKey': (5, ['HKEY', 'LPDWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hkey', 'pcSubKeys', 'pcchMaxSubKeyLen', 'pcValues', 'pcchMaxValueNameLen'], 'LSTATUS'), 'SHQueryValueEx': (6, ['HKEY', 'LPCTSTR', 'LPDWORD', 'REGTYPE*', 'LPVOID', 'LPDWORD'], ['hkey', 'pszValue', 'pdwReserved', 'pdwType', 'pvData', 'pcbData'], '[ERROR_CODE]'), 'SHRegCloseUSKey': (1, ['HUSKEY'], ['hUSKey'], 'LSTATUS'), 'SHRegCreateUSKey': (5, ['LPCTSTR', 'REGSAM', 'HUSKEY', 'PHUSKEY', 'SHREGSETFLAGS'], ['pszPath', 'samDesired', 'hRelativeUSKey', 'phNewUSKey', 'dwFlags'], 'LSTATUS'), 'SHRegDeleteEmptyUSKey': (3, ['HUSKEY', 'LPCSTR', 'SHREGDEL_FLAGS'], ['hUSKey', 'pszValue', 'delRegFlags'], 'LSTATUS'), 'SHRegDeleteUSValue': (3, ['HUSKEY', 'LPCTSTR', 'SHREGDEL_FLAGS'], ['hUSKey', 'pszValue', 'delRegFlags'], 'LSTATUS'), 'SHRegDuplicateHKey': (1, ['HKEY'], ['hkey'], 'HKEY'), 'SHRegEnumUSKey': (5, ['HUSKEY', 'DWORD', 'LPTSTR', 'LPDWORD', 'SHREGENUM_FLAGS'], ['hUSKey', 'dwIndex', 'pszName', 'pcchName', 'enumRegFlags'], 'LSTATUS'), 'SHRegEnumUSValue': (8, ['HUSKEY', 'DWORD', 'LPTSTR', 'LPDWORD', 'REGTYPE*', 'VOID*', 'LPDWORD', 'SHREGENUM_FLAGS'], ['hUSKey', 'dwIndex', 'pszValueName', 'pcchValueNameLen', 'pdwType', 'pvData', 'pcbData', 'enumRegFlags'], 'LSTATUS'), 'SHRegGetBoolUSValue': (4, ['LPCTSTR', 'LPCTSTR', 'BOOL', 'BOOL'], ['pszSubKey', 'pszValue', 'fIgnoreHKCU', 'fDefault'], 'BOOL'), 'SHRegGetIntW': (3, ['HKEY', 'LPCWSTR', 'INT'], ['hk', 'szKey', 'nDefault'], 'int'), 'SHRegGetPath': (5, ['HKEY', 'LPCTSTR', 'LPCTSTR', 'LPTSTR', 'DWORD'], ['hkey', 'pszSubkey', 'pszValue', 'pszPath', 'dwFlags'], 'LSTATUS'), 'SHRegGetUSValue': (8, ['LPCTSTR', 'LPCTSTR', 'DWORD*', 'VOID*', 'DWORD*', 'BOOL', 'VOID*', 'DWORD'], ['pszSubKey', 'pszValue', 'pdwType', 'pvData', 'pcbData', 'fIgnoreHKCU', 'pvDefaultData', 'dwDefaultDataSize'], 'LSTATUS'), 'SHRegGetValue': (7, ['HKEY', 'LPCTSTR', 'LPCTSTR', 'SRRF', 'LPDWORD', 'LPVOID', 'LPDWORD'], ['hkey', 'pszSubKey', 'pszValue', 'srrfFlags', 'pdwType', 'pvData', 'pcbData'], 'LSTATUS'), 'SHRegOpenUSKey': (5, ['LPCTSTR', 'REGSAM', 'HUSKEY', 'PHUSKEY', 'BOOL'], ['pszPath', 'samDesired', 'hRelativeUSKey', 'phNewUSKey', 'fIgnoreHKCU'], 'LSTATUS'), 'SHRegQueryInfoUSKey': (6, ['HUSKEY', 'LPDWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD', 'SHREGENUM_FLAGS'], ['hUSKey', 'pcSubKeys', 'pcchMaxSubKeyLen', 'pcValues', 'pcchMaxValueNameLen', 'enumRegFlags'], 'LSTATUS'), 'SHRegQueryUSValue': (8, ['HUSKEY', 'LPCTSTR', 'REGTYPE*', 'LPVOID', 'LPDWORD', 'BOOL', 'LPVOID', 'DWORD'], ['hUSKey', 'pszValue', 'pdwType', 'pvData', 'pcbData', 'fIgnoreHKCU', 'pvDefaultData', 'dwDefaultDataSize'], 'LSTATUS'), 'SHRegSetPath': (5, ['HKEY', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'DWORD'], ['hkey', 'pszSubkey', 'pszValue', 'pszPath', 'dwFlags'], 'LSTATUS'), 'SHRegSetUSValue': (6, ['LPCTSTR', 'LPCTSTR', 'DWORD', 'LPVOID', 'DWORD', 'DWORD'], ['pszSubKey', 'pszValue', 'dwType', 'pvData', 'cbData', 'dwFlags'], 'LSTATUS'), 'SHRegSetValue': (7, ['HKEY', 'LPCWSTR', 'LPCWSTR', 'SRRF', 'DWORD', 'LPCVOID', 'DWORD'], ['hKey', 'pwszSubKey', 'pwszValue', 'srrfFlags', 'dwType', 'pvData', 'cbData'], 'LSTATUS'), 'SHRegWriteUSValue': (6, ['HUSKEY', 'LPCTSTR', 'DWORD', 'LPVOID', 'DWORD', 'DWORD'], ['hUSKey', 'pszValue', 'dwType', 'pvData', 'cbData', 'dwFlags'], 'LSTATUS'), 'SHSetValue': (6, ['HKEY', 'LPCTSTR', 'LPCTSTR', 'REGTYPE', 'LPCVOID', 'DWORD'], ['hkey', 'pszSubKey', 'pszValue', 'dwType', 'pvData', 'cbData'], 'LSTATUS'), 'CharLowerWrapW': (1, ['LPWSTR'], ['pch'], 'LPWSTR'), 'CharUpperBuffWrapW': (2, ['LPWSTR', 'DWORD'], ['pch', 'cchLength'], 'DWORD'), 'ChrCmpI': (2, ['TCHAR', 'TCHAR'], ['w1', 'w2'], 'BOOL'), 'CompareStringWrapW': (6, ['LCID', 'DWORD', 'LPCWSTR', 'INT', 'LPCWSTR', 'INT'], ['Locale', 'dwCmpFlags', 'lpString1', 'cchCount1', 'lpString2', 'cchCount2'], 'int'), 'GetAcceptLanguages': (2, ['LPTSTR', 'DWORD*'], ['pszLanguages', 'pcchLanguages'], 'HRESULT'), 'GetDateFormatWrapW': (6, ['LCID', 'DWORD', 'CONST SYSTEMTIME*', 'LPCWSTR', 'LPWSTR', 'INT'], ['Locale', 'dwFlags', 'lpDate', 'pwzFormat', 'pwzDateStr', 'cchDate'], 'int'), 'GetTimeFormatWrapW': (6, ['LCID', 'DWORD', 'CONST SYSTEMTIME*', 'LPCWSTR', 'LPWSTR', 'INT'], ['Locale', 'dwFlags', 'lpTime', 'pwzFormat', 'pwzTimeStr', 'cchTime'], 'int'), 'IntlStrEqN': (3, ['LPCTSTR', 'LPCTSTR', 'INT'], ['pszStr1', 'pszStr2', 'nChar'], 'BOOL'), 'IntlStrEqNI': (3, ['LPCTSTR', 'LPCTSTR', 'INT'], ['pszStr1', 'pszStr2', 'nChar'], 'BOOL'), 'IntlStrEqWorker': (4, ['BOOL', 'LPCTSTR', 'LPCTSTR', 'INT'], ['fCaseSens', 'pszStr1', 'pszStr2', 'nChar'], 'BOOL'), 'IsCharAlphaNumericWrapW': (1, ['WCHAR'], ['ch'], 'BOOL'), 'IsCharSpace': (1, ['TCHAR'], ['wch'], 'BOOL'), 'OutputDebugStringWrapW': (1, ['LPCWSTR'], ['lpOutputString'], 'void'), 'SHLoadIndirectString': (4, ['PCWSTR', 'PWSTR', 'UINT', 'VOID**'], ['pszSource', 'pszOutBuf', 'cchOutBuf', 'ppvReserved'], 'HRESULT'), 'SHStrDup': (2, ['LPCTSTR', 'LPTSTR*'], ['pszSource', 'ppwsz'], 'HRESULT'), 'StrCat': (2, ['PTSTR', 'PCTSTR'], ['psz1', 'psz2'], 'PTSTR'), 'StrCatBuff': (3, ['PTSTR', 'PCTSTR', 'INT'], ['pszDest', 'pszSrc', 'cchDestBuffSize'], 'PTSTR'), 'StrCatChainW': (4, ['PWSTR', 'DWORD', 'DWORD', 'PCWSTR'], ['pszDst', 'cchDst', 'ichAt', 'pszSrc'], 'DWORD'), 'StrChr': (2, ['PTSTR', 'TCHAR'], ['pszStart', 'wMatch'], 'PTSTR'), 'StrChrI': (2, ['PTSTR', 'TCHAR'], ['pszStart', 'wMatch'], 'PTSTR'), 'StrChrNIW': (3, ['PCWSTR', 'WCHAR', 'UINT'], ['pszStart', 'wMatch', 'cchMax'], 'PWSTR'), 'StrChrNW': (3, ['PWSTR', 'WCHAR', 'UINT'], ['pszStart', 'wMatch', 'cchMax'], 'PWSTR'), 'StrCmp': (2, ['PCTSTR', 'PCTSTR'], ['psz1', 'psz2'], 'int'), 'StrCmpC': (2, ['LPCTSTR', 'LPCTSTR'], ['lpStr1', 'lpStr2'], 'int'), 'StrCmpI': (2, ['PCTSTR', 'PCTSTR'], ['psz1', 'psz2'], 'int'), 'StrCmpIC': (2, ['LPCTSTR', 'LPCTSTR'], ['lpStr1', 'lpStr2'], 'int'), 'StrCmpLogicalW': (2, ['PCWSTR', 'PCWSTR'], ['psz1', 'psz2'], 'int'), 'StrCmpN': (3, ['PCTSTR', 'PCTSTR', 'INT'], ['psz1', 'psz2', 'nChar'], 'int'), 'StrCmpNC': (3, ['LPCTSTR', 'LPCTSTR', 'INT'], ['pszStr1', 'pszStr2', 'nChar'], 'int'), 'StrCmpNI': (3, ['PCTSTR', 'PCTSTR', 'INT'], ['psz1', 'psz2', 'nChar'], 'int'), 'StrCmpNIC': (3, ['LPCTSTR', 'LPCTSTR', 'INT'], ['pszStr1', 'pszStr2', 'nChar'], 'int'), 'StrCpy': (2, ['PTSTR', 'PCTSTR'], ['psz1', 'psz2'], 'PTSTR'), 'StrCpyN': (3, ['PTSTR', 'PCTSTR', 'INT'], ['pszDst', 'pszSrc', 'cchMax'], 'PTSTR'), 'StrCSpn': (2, ['PCTSTR', 'PCTSTR'], ['pszStr', 'pszSet'], 'int'), 'StrCSpnI': (2, ['PCTSTR', 'PCTSTR'], ['pszStr', 'pszSet'], 'int'), 'StrDup': (1, ['PCTSTR'], ['pszSrch'], 'PTSTR'), 'StrFormatByteSize64': (3, ['LONGLONG', 'PTSTR', 'UINT'], ['qdw', 'pszBuf', 'cchBuf'], 'PTSTR'), 'StrFormatByteSizeA': (3, ['DWORD', 'PSTR', 'UINT'], ['dw', 'pszBuf', 'cchBuf'], 'PSTR'), 'StrFormatByteSizeW': (3, ['LONGLONG', 'PWSTR', 'UINT'], ['qdw', 'pszBuf', 'cchBuf'], 'PWSTR'), 'StrFormatByteSizeEx': (4, ['ULONGLONG', 'SFBS_FLAGS', 'LPWSTR', 'UINT'], ['ull', 'flags', 'pszBuf', 'cchBuf'], 'HRESULT'), 'StrFormatKBSize': (3, ['LONGLONG', 'PTSTR', 'UINT'], ['qdw', 'pszBuf', 'cchBuf'], 'PTSTR'), 'StrFromTimeInterval': (4, ['PTSTR', 'UINT', 'DWORD', 'INT'], ['pszOut', 'cchMax', 'dwTimeMS', 'digits'], 'int'), 'StrIsIntlEqual': (4, ['BOOL', 'PCTSTR', 'PCTSTR', 'INT'], ['fCaseSens', 'pszString1', 'pszString2', 'nChar'], 'BOOL'), 'StrNCat': (3, ['PTSTR', 'PCTSTR', 'INT'], ['psz1', 'psz2', 'cchMax'], 'PTSTR'), 'StrPBrk': (2, ['PTSTR', 'PCTSTR'], ['psz', 'pszSet'], 'PTSTR'), 'StrRChr': (3, ['PTSTR', 'PCTSTR', 'TCHAR'], ['pszStart', 'pszEnd', 'wMatch'], 'PTSTR'), 'StrRChrI': (3, ['PTSTR', 'PCTSTR', 'TCHAR'], ['pszStart', 'pszEnd', 'wMatch'], 'PTSTR'), 'StrRetToBSTR': (3, ['STRRET*', 'PCUITEMID_CHILD', 'BSTR*'], ['pstr', 'pidl', 'pbstr'], 'HRESULT'), 'StrRetToBuf': (4, ['STRRET*', 'PCUITEMID_CHILD', 'LPTSTR', 'UINT'], ['pstr', 'pidl', 'pszBuf', 'cchBuf'], 'HRESULT'), 'StrRetToStr': (3, ['STRRET*', 'PCUITEMID_CHILD', 'LPTSTR*'], ['pstr', 'pidl', 'ppszName'], 'HRESULT'), 'StrRStrI': (3, ['PTSTR', 'PCTSTR', 'PCTSTR'], ['pszSource', 'pszLast', 'pszSrch'], 'PTSTR'), 'StrSpn': (2, ['PCTSTR', 'PCTSTR'], ['psz', 'pszSet'], 'int'), 'StrStr': (2, ['PTSTR', 'PCTSTR'], ['pszFirst', 'pszSrch'], 'PTSTR'), 'StrStrI': (2, ['PTSTR', 'PCTSTR'], ['pszFirst', 'pszSrch'], 'PTSTR'), 'StrToInt': (1, ['PCTSTR'], ['pszSrc'], 'int'), 'StrToInt64Ex': (3, ['PCTSTR', 'STIF_FLAGS', 'LONGLONG*'], ['pszString', 'dwFlags', 'pllRet'], 'BOOL'), 'StrToIntEx': (3, ['PCTSTR', 'STIF_FLAGS', 'INT*'], ['pszString', 'dwFlags', 'piRet'], 'BOOL'), 'StrTrim': (2, ['PTSTR', 'PCTSTR'], ['psz', 'pszTrimChars'], 'BOOL'), 'wnsprintf': (3, ['PTSTR', 'INT', 'PCTSTR'], ['pszDest', 'cchDest', 'pszFmt'], 'int'), 'wvnsprintf': (4, ['PTSTR', 'INT', 'PCTSTR', 'VA_LIST'], ['pszDest', 'cchDest', 'pszFmt', 'arglist'], 'int'), 'ConnectToConnectionPoint': (6, ['IUNKNOWN*', 'REFIID', 'BOOL', 'IUNKNOWN*', 'DWORD*', 'ICONNECTIONPOINT**'], ['punk', 'riidEvent', 'fConnect', 'punkTarget', 'pdwCookie', 'ppcpOut'], 'HRESULT'), 'DllInstall': (2, ['BOOL', 'PCWSTR'], ['bInstall', 'pszCmdLine'], 'HRESULT'), 'FindResourceWrapW': (3, ['HMODULE', 'LPCWSTR', 'LPCWSTR'], ['hModule', 'lpName', 'lpType'], 'HRSRC'), 'GetMenuPosFromID': (2, ['HMENU', 'UINT'], ['hmenu', 'id'], 'int'), 'HashData': (4, ['BYTE*', 'DWORD', 'BYTE*', 'DWORD'], ['pbData', 'cbData', 'pbHash', 'cbHash'], 'HRESULT'), 'GUIDFromString': (2, ['LPCTSTR', 'LPGUID'], ['psz', 'pguid'], 'BOOL'), 'IsInternetESCEnabled': (0, [], [], 'BOOL'), 'IsOS': (1, ['DWORD'], ['dwOS'], 'BOOL'), 'IStream_Copy': (3, ['ISTREAM*', 'ISTREAM*', 'DWORD'], ['pstmFrom', 'pstmTo', 'cb'], 'HRESULT'), 'IStream_Read': (3, ['ISTREAM*', 'VOID*', 'ULONG'], ['pstm', 'pv', 'cb'], 'HRESULT'), 'IStream_ReadPidl': (2, ['ISTREAM*', 'PIDLIST_RELATIVE*'], ['pstm', 'ppidlOut'], 'HRESULT'), 'IStream_ReadStr': (2, ['ISTREAM*', 'PWSTR*'], ['pstm', 'ppsz'], 'HRESULT'), 'IStream_Reset': (1, ['ISTREAM*'], ['pstm'], 'HRESULT'), 'IStream_Size': (2, ['ISTREAM*', 'ULARGE_INTEGER*'], ['pstm', 'pui'], 'HRESULT'), 'IStream_Write': (3, ['ISTREAM*', 'CONST VOID*', 'ULONG'], ['pstm', 'pv', 'cb'], 'HRESULT'), 'IStream_WritePidl': (2, ['ISTREAM*', 'PCUIDLIST_RELATIVE'], ['pstm', 'pidlWrite'], 'HRESULT'), 'IStream_WriteStr': (2, ['ISTREAM*', 'PCWSTR'], ['pstm', 'psz'], 'HRESULT'), 'IUnknown_AtomicRelease': (1, ['VOID**'], ['ppunk'], 'void'), 'IUnknown_GetSite': (3, ['IUNKNOWN*', 'REFIID', 'VOID**'], ['punk', 'riid', 'ppvSite'], 'HRESULT'), 'IUnknown_GetWindow': (2, ['IUNKNOWN*', 'HWND*'], ['punk', 'phwnd'], 'HRESULT'), 'IUnknown_QueryService': (4, ['IUNKNOWN*', 'REFGUID', 'REFIID', 'VOID**'], ['punk', 'guidService', 'riid', 'ppvOut'], 'HRESULT'), 'IUnknown_Set': (2, ['IUNKNOWN*', 'IUNKNOWN*'], ['ppunk', 'punk'], 'void'), 'IUnknown_SetSite': (2, ['IUNKNOWN*', 'IUNKNOWN*'], ['punk', 'punkSite'], 'HRESULT'), 'MLFreeLibrary': (1, ['HMODULE'], ['hModule'], 'BOOL'), 'MLLoadLibrary': (3, ['LPCTSTR', 'HMODULE', 'DWORD'], ['lpszLibFileName', 'hModule', 'dwCrossCodePage'], 'HINSTANCE'), 'MLHtmlHelp': (5, ['HWND', 'LPCTSTR', 'UINT', 'DWORD_PTR', 'DWORD'], ['hwndCaller', 'pszFile', 'uCommand', 'dwData', 'dwCrossCodePage'], 'HWND'), 'MLWinHelp': (4, ['HWND', 'LPCTSTR', 'UINT', 'DWORD_PTR'], ['hWndMain', 'lpszHelp', 'uCommand', 'dwData'], 'BOOL'), 'ParseURL': (2, ['LPCTSTR', 'PARSEDURL*'], ['pcszUrl', 'ppu'], 'HRESULT'), 'QISearch': (4, ['VOID*', 'LPCQITAB', 'REFIID', 'VOID**'], ['that', 'pqit', 'riid', 'ppv'], 'HRESULT'), 'SHAnsiToAnsi': (3, ['LPCSTR', 'LPWSTR', 'INT'], ['pszSrc', 'pszDst', 'cchBuf'], 'int'), 'SHAnsiToUnicode': (3, ['PCSTR', 'PWSTR', 'INT'], ['pszSrc', 'pwszDst', 'cwchBuf'], 'int'), 'SHAutoComplete': (2, ['HWND', 'DWORD'], ['hwndEdit', 'dwFlags'], 'HRESULT'), 'SHCreateMemStream': (2, ['CONST BYTE*', 'UINT'], ['pInit', 'cbInit'], 'IStream*'), 'SHCreateStreamOnFile': (3, ['LPCTSTR', 'STGM_FLAGS', 'ISTREAM**'], ['pszFile', 'grfMode', 'ppstm'], 'HRESULT'), 'SHCreateStreamOnFileEx': (6, ['LPCWSTR', 'STGM_FLAGS', 'DWORD', 'BOOL', 'ISTREAM*', 'ISTREAM**'], ['pszFile', 'grfMode', 'dwAttributes', 'fCreate', 'pstmTemplate', 'ppstm'], 'HRESULT'), 'SHCreateThread': (4, ['LPTHREAD_START_ROUTINE', 'VOID*', 'SHCT_FLAGS', 'LPTHREAD_START_ROUTINE'], ['pfnThreadProc', 'pData', 'dwFlags', 'pfnCallback'], 'BOOL'), 'SHCreateThreadRef': (2, ['LONG*', 'IUNKNOWN**'], ['pcRef', 'ppunk'], 'HRESULT'), 'SHCreateThreadWithHandle': (5, ['LPTHREAD_START_ROUTINE', 'VOID*', 'SHCT_FLAGS', 'LPTHREAD_START_ROUTINE', 'HANDLE*'], ['pfnThreadProc', 'pData', 'flags', 'pfnCallback', 'pHandle'], 'BOOL'), 'SHFormatDateTime': (4, ['CONST FILETIME*', 'DWORD*', 'LPTSTR', 'UINT'], ['pft', 'pdwFlags', 'pszBuf', 'cchBuf'], 'int'), 'SHGetThreadRef': (1, ['IUNKNOWN**'], ['ppunk'], 'HRESULT'), 'SHSetThreadRef': (1, ['IUNKNOWN*'], ['punk'], 'HRESULT'), 'SHReleaseThreadRef': (0, [], [], 'HRESULT'), 'SHGlobalCounterDecrement': (1, ['CONST SHGLOBALCOUNTER'], ['id'], 'long'), 'SHGlobalCounterGetValue': (1, ['CONST SHGLOBALCOUNTER'], ['id'], 'long'), 'SHGlobalCounterIncrement': (1, ['CONST SHGLOBALCOUNTER'], ['id'], 'long'), 'SHIsChildOrSelf': (2, ['HWND', 'HWND'], ['hwndParent', 'hwnd'], 'HRESULT'), 'SHIsLowMemoryMachine': (1, ['DWORD'], ['dwType'], 'BOOL'), 'SHMessageBoxCheck': (6, ['HWND', 'LPCTSTR', 'LPCTSTR', 'UINT', 'INT', 'LPCTSTR'], ['hwnd', 'pszText', 'pszCaption', 'uType', 'iDefault', 'pszRegVal'], 'int'), 'SHSendMessageBroadcast': (3, ['UINT', 'WPARAM', 'LPARAM'], ['uMsg', 'wParam', 'lParam'], 'LRESULT'), 'SHStripMneumonic': (1, ['LPTSTR*'], ['pszMenu'], 'TCHAR'), 'SHUnicodeToAnsi': (3, ['PCWSTR', 'PSTR', 'INT'], ['pwszSrc', 'pszDst', 'cchBuf'], 'int'), 'SHUnicodeToUnicode': (3, ['PCWSTR', 'PWSTR', 'INT'], ['pwzSrc', 'pwzDst', 'cwchBuf'], 'int'), 'StopWatchFlush': (0, [], [], '[ERROR_CODE]'), 'StopWatchMode': (0, [], [], 'DWORD'), 'WhichPlatform': (0, [], [], 'UINT'), 'GetProcessReference': (1, ['IUNKNOWN**'], ['punk'], 'HRESULT'), 'SetProcessReference': (1, ['IUNKNOWN*'], ['punk'], 'void'), 'SHRunIndirectRegClientCommand': (2, ['HWND', 'LPCWSTR'], ['hwnd', 'pszClientType'], 'HRESULT'), 'DupWideToAnsi': (2, ['LPCWSTR', 'LPSTR*'], ['pwszString', 'ppszStr'], 'HRESULT'), 'IStream_ReadStrLong': (2, ['ISTREAM*', 'LPWSTR*'], ['pStream', 'ppwszString'], 'HRESULT'), 'IStream_WriteStrLong': (2, ['ISTREAM*', 'LPCWSTR'], ['pStream', 'pwszString'], 'HRESULT'), 'IUnknown_RemoveBackReferences': (1, ['IUNKNOWN*'], ['pUnk'], 'HRESULT'), 'IUnknown_TranslateAcceleratorGlobal': (2, ['IUNKNOWN*', 'MSG*'], ['pUnk', 'pMsg'], 'HRESULT'), 'IUnknown_TranslateAcceleratorIO': (2, ['IUNKNOWN*', 'MSG*'], ['pUnk', 'pMsg'], 'HRESULT'), 'MapWin32ErrorToSTG': (1, ['HRESULT'], ['hrWin32'], 'HRESULT'), 'ModeToCreateFileFlags': (5, ['STGM_FLAGS', 'BOOL', 'DWORD*', 'DWORD*', 'DWORD*'], ['grfFlags', 'bCreate', 'pDesiredAccess', 'pShareMode', 'pDisposition'], 'HRESULT'), 'PathUnExpandEnvStringsForUserW': (4, ['HANDLE', 'LPCWSTR', 'LPWSTR', 'UINT'], ['hUserToken', 'pwszPath', 'pwszBuf', 'cchBuf'], 'BOOL'), 'PathUnExpandSystemEnvStringsW': (3, ['LPCWSTR', 'LPWSTR', 'UINT'], ['pwszPath', 'pwszBuf', 'cchBuf'], 'BOOL'), 'QuerySourceCreateFromKey': (5, ['HKEY', 'LPCWSTR', 'BOOL', 'REFIID', 'LPVOID*'], ['hKey', 'pwszSubKey', 'shouldCreate', 'riid', 'ppInterface'], 'HRESULT'), 'QuerySourceCreateFromKeyEx': (6, ['HKEY', 'LPCWSTR', 'BOOL', 'ACCESS_MASK', 'REFIID', 'LPVOID*'], ['hKey', 'pwszSubKey', 'shouldCreate', 'amDesired', 'riid', 'ppInterface'], 'HRESULT'), 'SHAnsiToUnicodeCPAlloc': (3, ['UINT', 'LPCSTR', 'LPWSTR*'], ['codePage', 'pszString', 'ppwszConverted'], 'HRESULT'), 'SHAreIconsEqual': (2, ['HICON', 'HICON'], ['hIcon1', 'hIcon2'], 'BOOL'), 'SHBoolSystemParametersInfo': (2, ['SYSTEMPARAMETERSINFOENUM', 'PVOID'], ['uiAction', 'pData'], 'BOOL'), 'SHCreatePropertyBagOnMemory': (3, ['PVOID', 'REFIID', 'PVOID*'], ['pUnused', 'riid', 'ppv'], 'HRESULT'), 'SHCreatePropertyStoreOnXML': (5, ['IXMLDOMNODE*', 'STGM_FLAGS', 'IPROPERTYBAG*', 'REFIID', 'PVOID*'], ['pXmlDomNode', 'grfMode', 'pPropBagInit', 'riid', 'ppv'], 'HRESULT'), 'SHCreateStreamOnDllResourceW': (4, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'ISTREAM**'], ['pwszModule', 'pwszName', 'pwszType', 'ppStream'], 'HRESULT'), 'SHCreateStreamOnModuleResourceW': (4, ['HMODULE', 'LPCWSTR', 'LPCWSTR', 'ISTREAM**'], ['hModule', 'pwszName', 'pwszType', 'ppStream'], 'HRESULT'), 'SHExpandEnvironmentStringsAlloc': (2, ['LPCWSTR', 'LPWSTR*'], ['pwszExpandableString', 'ppwszExpanded'], 'HRESULT'), 'SHForwardContextMenuMsg': (6, ['IUNKNOWN*', 'UINT', 'WPARAM', 'LPARAM', 'LRESULT*', 'BOOL'], ['pUnk', 'uMsg', 'wParam', 'lParam', 'pResult', 'useIContextMenu2'], 'HRESULT'), 'SHGetSizeShared': (1, ['PVOID'], ['pData'], 'DWORD'), 'SHInvokeCommandOnContextMenu': (6, ['HWND', 'IOBJECTWITHSITE*', 'ICONTEXTMENU*', 'CMIC_MASK', 'LPCSTR', 'LPCWSTR'], ['hwnd', 'pSite', 'pCtxMenu', 'fMask', 'pszVerb', 'pwszDirectory'], 'HRESULT'), 'SHInvokeCommandOnContextMenuEx': (7, ['HWND', 'IOBJECTWITHSITE*', 'ICONTEXTMENU*', 'CMIC_MASK', 'UINT', 'LPCSTR', 'LPCWSTR'], ['hwnd', 'pSite', 'pCtxMenu', 'fMask', 'queryFlags', 'pszVerb', 'pwszDirectory'], 'HRESULT'), 'SHInvokeCommandWithFlagsAndSite': (6, ['HWND', 'IOBJECTWITHSITE*', 'ISHELLFOLDER*', 'LPITEMIDLIST', 'CMIC_MASK', 'LPCSTR'], ['hwnd', 'pSite', 'pShellFolder', 'pidl', 'fMask', 'pszVerb'], 'HRESULT'), 'SHInvokeCommandsOnContextMenuEx': (8, ['HWND', 'IOBJECTWITHSITE*', 'ICONTEXTMENU*', 'CMIC_MASK', 'UINT', 'LPCSTR*', 'UINT', 'LPCWSTR'], ['hwnd', 'pSite', 'pCtxMenu', 'fMask', 'queryFlags', 'ppszVerbs', 'numVerbs', 'pwszDirectory'], 'HRESULT'), 'SHUnicodeToAnsiCPAlloc': (3, ['UINT', 'LPCWSTR', 'LPSTR*'], ['codePage', 'pwszString', 'ppszConverted'], 'HRESULT')}

dict5_urlmon = {'CreateFormatEnumerator': (3, ['UINT', 'FORMATETC*', 'IENUMFORMATETC**'], ['cfmtetc', 'rgfmtetc', 'ppenumfmtetc'], 'HRESULT'), 'CoInternetCreateSecurityManager': (3, ['ISERVICEPROVIDER*', 'IINTERNETSECURITYMANAGER**', 'DWORD'], ['pSP', 'ppSM', 'dwReserved'], 'HRESULT'), 'CoInternetCreateZoneManager': (3, ['ISERVICEPROVIDER*', 'IINTERNETZONEMANAGER**', 'DWORD'], ['pSP', 'ppZM', 'dwReserved'], 'HRESULT'), 'CoInternetGetSecurityUrl': (4, ['LPCWSTR', 'LPWSTR*', 'PSUACTION', 'DWORD'], ['pwzUrl', 'ppwzSecUrl', 'psuAction', 'dwReserved'], 'HRESULT'), 'CoInternetGetSecurityUrlEx': (4, ['IURI*', 'IURI**', 'PSUACTION', 'DWORD_PTR'], ['pUri', 'ppSecUri', 'psuAction', 'dwReserved'], 'HRESULT'), 'CoInternetIsFeatureEnabled': (2, ['INTERNETFEATURELIST', 'GETFEATUREFLAG'], ['FeatureEntry', 'dwFlags'], 'HRESULT'), 'CoInternetIsFeatureEnabledForIUri': (4, ['INTERNETFEATURELIST', 'GETFEATUREFLAG', 'IURI*', 'IINTERNETSECURITYMANAGEREX2*'], ['FeatureEntry', 'dwFlags', 'pIUri', 'pSecMgr'], 'STDAPI'), 'CoInternetIsFeatureEnabledForUrl': (4, ['INTERNETFEATURELIST', 'GETFEATUREFLAG', 'LPCWSTR', 'IINTERNETSECURITYMANAGER*'], ['FeatureEntry', 'dwFlags', 'szURL', 'pSecMgr'], 'HRESULT'), 'CoInternetIsFeatureZoneElevationEnabled': (4, ['LPCWSTR', 'LPCWSTR', 'IINTERNETSECURITYMANAGER*', 'DWORD'], ['szFromURL', 'szToURL', 'pSecMgr', 'dwFlags'], 'HRESULT'), 'CoInternetSetFeatureEnabled': (3, ['INTERNETFEATURELIST', 'DWORD', 'BOOL'], ['FeatureEntry', 'dwFlags', 'fEnable'], 'HRESULT'), 'AsyncInstallDistributionUnit': (9, ['LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'DWORD', 'DWORD', 'LPCWSTR', 'IBINDCTX*', 'LPVOID', 'DWORD'], ['szDistUnit', 'szTYPE', 'szExt', 'dwFileVersionMS', 'dwFileVersionLS', 'szURL', 'pbc', 'pvReserved', 'flags'], 'HRESULT'), 'CoGetClassObjectFromURL': (10, ['REFCLSID', 'LPCWSTR', 'DWORD', 'DWORD', 'LPCWSTR', 'LPBINDCTX', 'DWORD', 'LPVOID', 'REFIID', 'VOID**'], ['rclsid', 'szCodeURL', 'dwFileVersionMS', 'dwFileVersionLS', 'szContentType', 'pBindCtx', 'dwClsContext', 'pvReserved', 'riid', 'ppv'], 'HRESULT'), 'CoInternetCombineIUri': (5, ['IURI*', 'IURI*', 'URLFLAGS', 'IURI**', 'DWORD_PTR'], ['pBaseUri', 'pRelativeUri', 'dwCombineFlags', 'ppCombinedUri', 'dwReserved'], 'HRESULT'), 'CoInternetCombineUrl': (7, ['LPCWSTR', 'LPCWSTR', 'URLFLAGS', 'LPWSTR', 'DWORD', 'DWORD*', 'DWORD'], ['pwzBaseUrl', 'pwzRelativeUrl', 'dwCombineFlags', 'pwzResult', 'cchResult', 'pcchResult', 'dwReserved'], 'HRESULT'), 'CoInternetCombineUrlEx': (5, ['IURI*', 'LPCWSTR', 'URLFLAGS', 'IURI**', 'DWORD_PTR'], ['pBaseUri', 'pwzRelativeUrl', 'dwCombineFlags', 'ppCombinedUri', 'dwReserved'], 'HRESULT'), 'CoInternetCompareUrl': (3, ['LPCWSTR', 'LPCWSTR', 'DWORD'], ['pwzUrl1', 'pwzUrl2', 'dwCompareFlags'], 'HRESULT'), 'CoInternetGetProtocolFlags': (3, ['LPCWSTR', 'DWORD*', 'DWORD'], ['pwzUrl', 'pdwFlags', 'dwReserved'], 'HRESULT'), 'CoInternetGetSession': (3, ['DWORD', 'IINTERNETSESSION**', 'DWORD'], ['dwSessionMode', 'ppIInternetSession', 'dwReserved'], 'HRESULT'), 'CoInternetParseIUri': (7, ['IURI*', 'PARSEACTION', 'DWORD', 'LPWSTR', 'DWORD', 'DWORD*', 'DWORD_PTR'], ['pIUri', 'ParseAction', 'dwFlags', 'pwzResult', 'cchResult', 'pcchResult', 'dwReserved'], 'STDAPI'), 'CoInternetParseUrl': (7, ['LPCWSTR', 'PARSEACTION', 'DWORD', 'LPWSTR', 'DWORD', 'DWORD*', 'DWORD'], ['pwzUrl', 'ParseAction', 'dwFlags', 'pszResult', 'cchResult', 'pcchResult', 'dwReserved'], 'STDAPI'), 'CoInternetQueryInfo': (7, ['LPCWSTR', 'QUERYOPTION', 'DWORD', 'LPVOID', 'DWORD', 'DWORD*', 'DWORD'], ['pwzUrl', 'QueryOption', 'dwQueryFlags', 'pvBuffer', 'cbBuffer', 'pcbBuffer', 'dwReserved'], 'HRESULT'), 'CompareSecurityIds': (5, ['BYTE*', 'DWORD', 'BYTE*', 'DWORD', 'DWORD'], ['pbSecurityId1', 'dwLen1', 'pbSecurityId2', 'dwLen2', 'dwReserved'], 'HRESULT'), 'CopyBindInfo': (2, ['CONST BINDINFO*', 'BINDINFO*'], ['pcbiSrc', 'pcbiDest'], 'HRESULT'), 'CopyStgMedium': (2, ['CONST STGMEDIUM*', 'STGMEDIUM*'], ['pcstgmedSrc', 'pstgmedDest'], 'HRESULT'), 'CreateAsyncBindCtx': (4, ['DWORD', 'IBINDSTATUSCALLBACK*', 'IENUMFORMATETC*', 'IBINDCTX**'], ['dwReserved', 'pbsc', 'penumfmtetc', 'ppbc'], 'HRESULT'), 'CreateAsyncBindCtxEx': (6, ['IBINDCTX*', 'DWORD', 'IBINDSTATUSCALLBACK*', 'IENUMFORMATETC*', 'IBINDCTX**', 'DWORD'], ['pbc', 'dwOptions', 'pBSCb', 'pEnum', 'ppBC', 'reserved'], 'HRESULT'), 'CreateIUriBuilder': (4, ['IURI*', 'DWORD', 'DWORD_PTR', 'IURIBUILDER**'], ['pIUri', 'dwFlags', 'dwReserved', 'ppIUriBuilder'], 'STDAPI'), 'CreateUri': (4, ['LPCWSTR', 'URI_CREATE_FLAGS', 'DWORD_PTR', 'IURI**'], ['pwzURI', 'dwFlags', 'dwReserved', 'ppURI'], 'STDAPI'), 'CreateUriFromMultiByteString': (6, ['LPCSTR', 'URI_ENCODING_FLAGS', 'DWORD', 'URI_CREATE_FLAGS', 'DWORD_PTR', 'IURI**'], ['pszANSIInputUri', 'dwEncodingFlags', 'dwCodePage', 'dwCreateFlags', 'dwReserved', 'ppURI'], 'HRESULT'), 'CreateUriWithFragment': (5, ['LPCWSTR', 'LPCWSTR', 'URI_CREATE_FLAGS', 'DWORD_PTR', 'IURI**'], ['pwzURI', 'pwzFragment', 'dwFlags', 'dwReserved', 'ppURI'], 'STDAPI'), 'CreateURLBinding': (3, ['LPCWSTR', 'IBINDCTX*', 'IBINDING**'], ['lpszUrl', 'pbc', 'ppBdg'], 'STDAPI'), 'CreateURLMoniker': (3, ['IMONIKER*', 'LPCWSTR', 'IMONIKER**'], ['pMkCtx', 'szURL', 'ppmk'], 'HRESULT'), 'CreateURLMonikerEx': (4, ['IMONIKER*', 'LPCWSTR', 'IMONIKER**', 'DWORD'], ['pMkCtx', 'szURL', 'ppmk', 'dwFlags'], 'HRESULT'), 'CreateURLMonikerEx2': (4, ['IMONIKER*', 'IURI*', 'IMONIKER**', 'DWORD'], ['pMkCtx', 'pUri', 'ppmk', 'dwFlags'], 'HRESULT'), 'FaultInIEFeature': (4, ['HWND', 'UCLSSPEC*', 'QUERYCONTEXT*', 'FIEF_FLAGS'], ['hWnd', 'pClassSpec', 'pQuery', 'dwFlags'], 'HRESULT'), 'FindMediaType': (2, ['LPCSTR', 'CLIPFORMAT*'], ['rgszTypes', 'rgcfTypes'], 'HRESULT'), 'FindMediaTypeClass': (4, ['LPBC', 'LPCSTR', 'CLSID*', 'DWORD'], ['pbc', 'szType', 'pclsID', 'dwReserved'], 'HRESULT'), 'FindMimeFromData': (8, ['LPBC', 'LPCWSTR', 'LPVOID', 'DWORD', 'LPCWSTR', 'DWORD', 'LPWSTR*', 'DWORD'], ['pBC', 'pwzUrl', 'pBuffer', 'cbSize', 'pwzMimeProposed', 'dwMimeFlags', 'ppwzMimeOut', 'dwReserved'], 'HRESULT'), 'GetClassFileOrMime': (7, ['LPBC', 'LPCWSTR', 'LPVOID', 'DWORD', 'LPCWSTR', 'DWORD', 'CLSID*'], ['pBC', 'szFilename', 'pBuffer', 'cbSize', 'szMime', 'dwReserved', 'pclsid'], 'HRESULT'), 'GetClassURL': (2, ['LPCWSTR', 'CLSID*'], ['szURL', 'pClsID'], 'HRESULT'), 'GetComponentIDFromCLSSPEC': (2, ['UCLSSPEC*', 'LPSTR*'], ['pClassSpec', 'ppszComponentID'], 'HRESULT'), 'IEInstallScope': (1, ['LPDWORD*'], ['pdwScope'], 'HRESULT'), 'IsAsyncMoniker': (1, ['IMONIKER*'], ['pmk'], 'HRESULT'), 'IsValidURL': (3, ['LPBC', 'LPCWSTR', 'DWORD'], ['pBC', 'szURL', 'dwReserved'], 'HRESULT'), 'MkParseDisplayNameEx': (4, ['IBINDCTX*', 'LPWSTR', 'ULONG*', 'IMONIKER**'], ['pbc', 'szDisplayName', 'pcchEaten', 'ppmk'], 'HRESULT'), 'ObtainUserAgentString': (3, ['DWORD', 'LPCSTR*', 'DWORD*'], ['dwOption', 'pcszUAOut', 'cbSize'], 'HRESULT'), 'RegisterBindStatusCallback': (4, ['IBINDCTX*', 'IBINDSTATUSCALLBACK*', 'IBINDSTATUSCALLBACK**', 'DWORD'], ['pbc', 'pbsc', 'ppbscPrevious', 'dwReserved'], 'HRESULT'), 'RegisterFormatEnumerator': (3, ['LPBC', 'IENUMFORMATETC*', 'DWORD'], ['pBC', 'pEFetc', 'reserved'], 'HRESULT'), 'RegisterMediaTypeClass': (5, ['LPBC', 'UINT', 'LPCSTR*', 'CLSID*', 'DWORD'], ['pbc', 'ctypes', 'rgszTypes', 'rgclsID', 'dwReserved'], 'HRESULT'), 'RegisterMediaTypes': (3, ['UINT', 'LPCSTR*', 'CLIPFORMAT*'], ['ctypes', 'rgszTypes', 'rgcfTypes'], 'HRESULT'), 'ReleaseBindInfo': (1, ['BINDINFO*'], ['pbindinfo'], 'void'), 'RevokeBindStatusCallback': (2, ['IBINDCTX*', 'IBINDSTATUSCALLBACK*'], ['pbc', 'pbsc'], 'HRESULT'), 'RevokeFormatEnumerator': (2, ['LPBC', 'IENUMFORMATETC*'], ['pbc', 'pEFetc'], 'HRESULT'), 'URLDownloadToCacheFile': (6, ['LPUNKNOWN', 'LPCSTR', 'LPTSTR', 'DWORD', 'DWORD', 'IBINDSTATUSCALLBACK*'], ['lpUnkcaller', 'szURL', 'szFileName', 'cchFileName', 'dwReserved', 'pBSC'], 'HRESULT'), 'URLDownloadToFile': (5, ['LPUNKNOWN', 'LPCTSTR', 'LPCTSTR', 'DWORD', 'LPBINDSTATUSCALLBACK'], ['pCaller', 'szURL', 'szFileName', 'dwReserved', 'lpfnCB'], 'HRESULT'), 'UrlMkGetSessionOption': (5, ['URLMKSESSIONOPTION', 'LPVOID', 'DWORD', 'DWORD*', 'DWORD'], ['dwOption', 'pBuffer', 'dwBufferLength', 'pdwBufferLengthOut', 'dwReserved'], 'HRESULT'), 'UrlMkSetSessionOption': (4, ['URLMKSESSIONOPTION', 'LPVOID', 'DWORD', 'DWORD'], ['dwOption', 'pBuffer', 'dwBufferLength', 'dwReserved'], 'HRESULT'), 'URLOpenBlockingStream': (5, ['LPUNKNOWN', 'LPCSTR', 'LPSTREAM*', 'DWORD', 'LPBINDSTATUSCALLBACK'], ['pCaller', 'szURL', 'ppStream', 'dwReserved', 'lpfnCB'], 'HRESULT'), 'URLOpenPullStream': (4, ['LPUNKNOWN', 'LPCSTR', 'DWORD', 'LPBINDSTATUSCALLBACK'], ['pCaller', 'szURL', 'dwReserved', 'lpfnCB'], 'HRESULT'), 'URLOpenStream': (4, ['LPUNKNOWN', 'LPCSTR', 'DWORD', 'LPBINDSTATUSCALLBACK'], ['pCaller', 'szURL', 'dwReserved', 'lpfnCB'], 'HRESULT'), 'CompatFlagsFromClsid': (3, ['CLSID*', 'LPDWORD', 'LPDWORD'], ['pclsid', 'pdwCompatFlags', 'pdwMiscStatusFlags'], 'HRESULT')}

dict5_user32 = {'CreateDialogIndirectParam': (5, ['HINSTANCE', 'LPCDLGTEMPLATE', 'HWND', 'DLGPROC', 'LPARAM'], ['hInstance', 'lpTemplate', 'hWndParent', 'lpDialogFunc', 'lParamInit'], 'HWND'), 'CreateDialogParam': (5, ['HINSTANCE', 'LPCTSTR', 'HWND', 'DLGPROC', 'LPARAM'], ['hInstance', 'lpTemplateName', 'hWndParent', 'lpDialogFunc', 'lParamInit'], 'HWND'), 'DefDlgProc': (4, ['HWND', 'WINMSG', 'WPARAM', 'LPARAM'], ['hDlg', 'Msg', 'wParam', 'lParam'], 'LRESULT'), 'DialogBoxIndirectParam': (5, ['HINSTANCE', 'LPCDLGTEMPLATE', 'HWND', 'DLGPROC', 'LPARAM'], ['hInstance', 'hDialogTemplate', 'hWndParent', 'lpDialogFunc', 'dwInitParam'], 'INT_PTR'), 'DialogBoxParam': (5, ['HINSTANCE', 'LPCTSTR', 'HWND', 'DLGPROC', 'LPARAM'], ['hInstance', 'lpTemplateName', 'hWndParent', 'lpDialogFunc', 'dwInitParam'], 'INT_PTR'), 'EndDialog': (2, ['HWND', 'INT_PTR'], ['hDlg', 'nResult'], 'BOOL'), 'GetDialogBaseUnits': (0, [], [], 'LONG'), 'GetDlgCtrlID': (1, ['HWND'], ['hwndCtl'], 'int'), 'GetDlgItem': (2, ['HWND', 'INT'], ['hDlg', 'nIDDlgItem'], 'HWND'), 'GetDlgItemInt': (4, ['HWND', 'INT', 'BOOL*', 'BOOL'], ['hDlg', 'nIDDlgItem', 'lpTranslated', 'bSigned'], 'UINT'), 'GetDlgItemText': (4, ['HWND', 'INT', 'LPTSTR', 'INT'], ['hDlg', 'nIDDlgItem', 'lpString', 'nMaxCount'], 'UINT'), 'GetNextDlgGroupItem': (3, ['HWND', 'HWND', 'BOOL'], ['hDlg', 'hCtl', 'bPrevious'], 'HWND'), 'GetNextDlgTabItem': (3, ['HWND', 'HWND', 'BOOL'], ['hDlg', 'hCtl', 'bPrevious'], 'HWND'), 'IsDialogMessage': (2, ['HWND', 'LPMSG'], ['hDlg', 'lpMsg'], 'BOOL'), 'MapDialogRect': (2, ['HWND', 'LPRECT'], ['hDlg', 'lpRect'], 'BOOL'), 'MessageBox': (4, ['HWND', 'LPCTSTR', 'LPCTSTR', 'MESSAGEBOXTYPE'], ['hWnd', 'lpText', 'lpCaption', 'uType'], '[MessageBoxResult]'), 'MessageBoxEx': (5, ['HWND', 'LPCTSTR', 'LPCTSTR', 'MESSAGEBOXTYPE', 'WORD'], ['hWnd', 'lpText', 'lpCaption', 'uType', 'wLanguageId'], '[MessageBoxResult]'), 'MessageBoxIndirect': (1, ['CONST LPMSGBOXPARAMS'], ['lpMsgBoxParams'], 'int'), 'MessageBoxTimeout': (6, ['HWND', 'LPCTSTR', 'LPCTSTR', 'MESSAGEBOXTYPE', 'WORD', 'WAITTIMEOUT'], ['hWnd', 'lpText', 'lpCaption', 'uType', 'wLanguageId', 'dwMilliseconds'], '[MessageBoxResult]'), 'SendDlgItemMessage': (5, ['HWND', 'INT', 'WINMSG', 'WPARAM', 'LPARAM'], ['hDlg', 'nIDDlgItem', 'Msg', 'wParam', 'lParam'], 'LRESULT'), 'SetDlgItemInt': (4, ['HWND', 'INT', 'UINT', 'BOOL'], ['hDlg', 'nIDDlgItem', 'uValue', 'bSigned'], 'BOOL'), 'SetDlgItemText': (3, ['HWND', 'INT', 'LPCTSTR'], ['hDlg', 'nIDDlgItem', 'lpString'], 'BOOL'), 'BroadcastSystemMessage': (5, ['DWORD', 'LPDWORD', 'UINT', 'WPARAM', 'LPARAM'], ['dwFlags', 'lpdwRecipients', 'uiMessage', 'wParam', 'lParam'], 'long'), 'BroadcastSystemMessageEx': (6, ['DWORD', 'LPDWORD', 'UINT', 'WPARAM', 'LPARAM', 'PBSMINFO'], ['dwFlags', 'lpdwRecipients', 'uiMessage', 'wParam', 'lParam', 'pBSMInfo'], 'long'), 'DispatchMessage': (1, ['CONST MSG*'], ['lpmsg'], 'LRESULT'), 'GetInputState': (0, [], [], 'BOOL'), 'GetMessage': (4, ['LPMSG', 'HWND', 'UINT', 'UINT'], ['lpMsg', 'hWnd', 'wMsgFilterMin', 'wMsgFilterMax'], '[BOOL_NUMBER]'), 'GetMessageExtraInfo': (0, [], [], 'LPARAM'), 'GetMessagePos': (0, [], [], 'DWORD'), 'GetMessageTime': (0, [], [], 'LONG'), 'GetQueueStatus': (1, ['QUEUESTATUSFLAG'], ['flags'], 'DWORD'), 'InSendMessage': (0, [], [], 'BOOL'), 'InSendMessageEx': (1, ['LPVOID'], ['lpReserved'], 'DWORD'), 'PeekMessage': (5, ['LPMSG', 'HWND', 'UINT', 'UINT', 'PEEKMESSAGEFLAG'], ['lpMsg', 'hWnd', 'wMsgFilterMin', 'wMsgFilterMax', 'wRemoveMsg'], 'BOOL'), 'PostMessage': (4, ['HWND', 'WINMSG', 'WPARAM', 'LPARAM'], ['hWnd', 'Msg', 'wParam', 'lParam'], 'BOOL'), 'PostQuitMessage': (1, ['INT'], ['nExitCode'], 'VOID'), 'PostThreadMessage': (4, ['DWORD', 'WINMSG', 'WPARAM', 'LPARAM'], ['idThread', 'Msg', 'wParam', 'lParam'], 'BOOL'), 'RegisterWindowMessage': (1, ['LPCTSTR'], ['lpString'], 'UINT'), 'ReplyMessage': (1, ['LRESULT'], ['lResult'], 'BOOL'), 'SendMessage': (4, ['HWND', 'WINMSG', 'WPARAM', 'LPARAM'], ['hWnd', 'Msg', 'wParam', 'lParam'], 'LRESULT'), 'SendMessageCallback': (6, ['HWND', 'WINMSG', 'WPARAM', 'LPARAM', 'SENDASYNCPROC', 'ULONG_PTR'], ['hWnd', 'Msg', 'wParam', 'lParam', 'lpCallBack', 'dwData'], 'BOOL'), 'SendMessageTimeout': (7, ['HWND', 'WINMSG', 'WPARAM', 'LPARAM', 'SENDMESSAGETIMEOUTFLAGS', 'UINT', 'PDWORD_PTR'], ['hWnd', 'Msg', 'wParam', 'lParam', 'fuFlags', 'uTimeout', 'lpdwResult'], 'LRESULT'), 'SendNotifyMessage': (4, ['HWND', 'WINMSG', 'WPARAM', 'LPARAM'], ['hWnd', 'Msg', 'wParam', 'lParam'], 'BOOL'), 'SetMessageExtraInfo': (1, ['LPARAM'], ['lParam'], 'LPARAM'), 'TranslateMessage': (1, ['CONST MSG*'], ['lpMsg'], 'BOOL'), 'WaitMessage': (0, [], [], 'BOOL'), 'GetGuiResources': (2, ['PROCESSHANDLE', 'DWORD'], ['hProcess', 'uiFlags'], 'DWORD'), 'IsImmersiveProcess': (1, ['HANDLE'], ['hProcess'], 'BOOL'), 'SetProcessRestrictionExemption': (1, ['BOOL'], ['fEnableExemption'], 'BOOL'), 'AttachThreadInput': (3, ['DWORD', 'DWORD', 'BOOL'], ['idAttach', 'idAttachTo', 'fAttach'], 'BOOL'), 'WaitForInputIdle': (2, ['PROCESSHANDLE', 'WAITTIMEOUT'], ['hProcess', 'dwMilliseconds'], 'DWORD'), 'IsWow64Message': (0, [], [], 'BOOL'), 'UserHandleGrantAccess': (3, ['HANDLE', 'HANDLE', 'BOOL'], ['hUserHandle', 'hJob', 'bGrant'], 'BOOL'), 'AdjustWindowRect': (3, ['LPRECT', 'WINDOWSTYLE', 'BOOL'], ['lpRect', 'dwStyle', 'bMenu'], 'BOOL'), 'AdjustWindowRectEx': (4, ['LPRECT', 'WINDOWSTYLE', 'BOOL', 'WINDOWEXSTYLE'], ['lpRect', 'dwStyle', 'bMenu', 'dwExStyle'], 'BOOL'), 'AllowActivateDetachQueuesSetFocus': (0, [], [], 'VOID'), 'AllowSetForegroundWindow': (1, ['DWORD'], ['dwProcessId'], 'BOOL'), 'AnimateWindow': (3, ['HWND', 'DWORD', 'ANIMATEWINDOWFLAGS'], ['hwnd', 'dwTime', 'dwFlags'], 'BOOL'), 'AnyPopup': (0, [], [], 'BOOL'), 'ArrangeIconicWindows': (1, ['HWND'], ['hWnd'], 'UINT'), 'BeginDeferWindowPos': (1, ['INT'], ['nNumWindows'], 'HDWP'), 'BringWindowToTop': (1, ['HWND'], ['hWnd'], 'BOOL'), 'CalculatePopupWindowPosition': (5, ['CONST POINT*', 'CONST SIZE*', 'TRACKPOPUPMENUFLAGS', 'RECT*', 'RECT*'], ['anchorPoint', 'windowSize', 'flags', 'excludeRect', 'popupWindowPosition'], 'BOOL'), 'CascadeWindows': (5, ['HWND', 'MDITILE_CASCADE', 'CONST RECT*', 'UINT', 'CONST HWND*'], ['hwndParent', 'wHow', 'lpRect', 'cKids', 'lpKids'], 'WORD'), 'ChangeWindowMessageFilter': (2, ['WINMSG', 'WINDOWMESSAGEFILTERENUM'], ['message', 'dwFlag'], 'BOOL'), 'ChangeWindowMessageFilterEx': (4, ['HWND', 'WINMSG', 'MSGFLT_ACTION', 'PCHANGEFILTERSTRUCT'], ['hWnd', 'message', 'action', 'pChangeFilterStruct'], 'BOOL'), 'ChildWindowFromPoint': (2, ['HWND', 'POINT'], ['hWndParent', 'Point'], 'HWND'), 'ChildWindowFromPointEx': (3, ['HWND', 'POINT', 'CWP_FLAGS'], ['hwndParent', 'pt', 'uFlags'], 'HWND'), 'CloseWindow': (1, ['HWND'], ['hWnd'], 'BOOL'), 'CreateWindow': (11, ['LPCTSTR', 'LPCTSTR', 'DWORD', 'CREATEWINDOW_CW', 'CREATEWINDOW_CW', 'CREATEWINDOW_CW', 'CREATEWINDOW_CW', 'HWND', 'HMENU', 'HINSTANCE', 'LPVOID'], ['lpClassName', 'lpWindowName', 'dwStyle', 'x', 'y', 'nWidth', 'nHeight', 'hWndParent', 'hMenu', 'hInstance', 'lpParam'], 'HWND'), 'CreateWindowEx': (12, ['WINDOWEXSTYLE', 'LPCTSTR', 'LPCTSTR', 'WINDOWSTYLE', 'CREATEWINDOW_CW', 'CREATEWINDOW_CW', 'CREATEWINDOW_CW', 'CREATEWINDOW_CW', 'HWND', 'HMENU', 'HINSTANCE', 'LPVOID'], ['dwExStyle', 'lpClassName', 'lpWindowName', 'dwStyle', 'x', 'y', 'nWidth', 'nHeight', 'hWndParent', 'hMenu', 'hInstance', 'lpParam'], 'HWND'), 'DeferWindowPos': (8, ['HDWP', 'HWND', 'HWNDINSERTAFTERENUM', 'INT', 'INT', 'INT', 'INT', 'SETWINDOWPOSFLAGS'], ['hWinPosInfo', 'hWnd', 'hWndInsertAfter', 'x', 'y', 'cx', 'cy', 'uFlags'], 'HDWP'), 'DeregisterShellHookWindow': (1, ['HWND'], ['hWnd'], 'BOOL'), 'DestroyWindow': (1, ['HWND'], ['hWnd'], 'BOOL'), 'EndDeferWindowPos': (1, ['HDWP'], ['hWinPosInfo'], 'BOOL'), 'EndTask': (3, ['HWND', 'BOOL', 'BOOL'], ['hWnd', 'fShutDown', 'fForce'], 'BOOL'), 'EnumChildWindows': (3, ['HWND', 'WNDENUMPROC', 'LPARAM'], ['hWndParent', 'lpEnumFunc', 'lParam'], 'BOOL'), 'EnumThreadWindows': (3, ['DWORD', 'WNDENUMPROC', 'LPARAM'], ['dwThreadId', 'lpfn', 'lParam'], 'BOOL'), 'EnumWindows': (2, ['WNDENUMPROC', 'LPARAM'], ['lpEnumFunc', 'lParam'], 'BOOL'), 'FindWindow': (2, ['LPCTSTR', 'LPCTSTR'], ['lpClassName', 'lpWindowName'], 'HWND'), 'FindWindowEx': (4, ['HWND', 'HWND', 'LPCTSTR', 'LPCTSTR'], ['hwndParent', 'hwndChildAfter', 'lpszClass', 'lpszWindow'], 'HWND'), 'GetAltTabInfo': (5, ['HWND', 'INT', 'PALTTABINFO', 'LPTSTR', 'UINT'], ['hwnd', 'iItem', 'pati', 'pszItemText', 'cchItemText'], 'BOOL'), 'GetAncestor': (2, ['HWND', 'GETANCESTORENUM'], ['hwnd', 'gaFlags'], 'HWND'), 'GetClientRect': (2, ['HWND', 'LPRECT'], ['hWnd', 'lpRect'], 'BOOL'), 'GetDesktopWindow': (0, [], [], 'HWND'), 'GetForegroundWindow': (0, [], [], 'HWND'), 'GetGUIThreadInfo': (2, ['DWORD', 'LPGUITHREADINFO'], ['idThread', 'lpgui'], 'BOOL'), 'GetLastActivePopup': (1, ['HWND'], ['hWnd'], 'HWND'), 'GetLayeredWindowAttributes': (4, ['HWND', 'COLORREF*', 'BYTE*', 'LAYEREDWINDOWATTRIBUTE*'], ['hwnd', 'pcrKey', 'pbAlpha', 'pdwFlags'], 'BOOL'), 'GetParent': (1, ['HWND'], ['hWnd'], 'HWND'), 'GetProcessDefaultLayout': (1, ['DWORD*'], ['pdwDefaultLayout'], 'BOOL'), 'GetShellWindow': (0, [], [], 'HWND'), 'GetTitleBarInfo': (2, ['HWND', 'PTITLEBARINFO'], ['hwnd', 'pti'], 'BOOL'), 'GetTopWindow': (1, ['HWND'], ['hWnd'], 'HWND'), 'GetWindow': (2, ['HWND', 'GETWINDOWENUM'], ['hWnd', 'uCmd'], 'HWND'), 'GetWindowDisplayAffinity': (2, ['HWND', 'DWORD*'], ['hWnd', 'dwAffinity'], 'BOOL'), 'GetWindowInfo': (2, ['HWND', 'PWINDOWINFO'], ['hwnd', 'pwi'], 'BOOL'), 'GetWindowModuleFileName': (3, ['HWND', 'LPTSTR', 'UINT'], ['hwnd', 'lpszFileName', 'cchFileNameMax'], 'UINT'), 'GetWindowPlacement': (2, ['HWND', 'WINDOWPLACEMENT*'], ['hWnd', 'lpwndpl'], 'BOOL'), 'GetWindowRect': (2, ['HWND', 'LPRECT'], ['hWnd', 'lpRect'], 'BOOL'), 'GetWindowText': (3, ['HWND', 'LPTSTR', 'INT'], ['hWnd', 'lpString', 'nMaxCount'], 'int'), 'GetWindowTextLength': (1, ['HWND'], ['hWnd'], 'int'), 'GetWindowThreadProcessId': (2, ['HWND', 'LPDWORD'], ['hWnd', 'lpdwProcessId'], 'DWORD'), 'InternalGetWindowText': (3, ['HWND', 'LPWSTR', 'INT'], ['hWnd', 'lpString', 'nMaxCount'], 'int'), 'IsChild': (2, ['HWND', 'HWND'], ['hWndParent', 'hWnd'], 'BOOL'), 'IsGUIThread': (1, ['BOOL'], ['bConvert'], 'BOOL'), 'IsHungAppWindow': (1, ['HWND'], ['hWnd'], 'BOOL'), 'IsIconic': (1, ['HWND'], ['hWnd'], 'BOOL'), 'IsProcessDPIAware': (0, [], [], 'BOOL'), 'IsWindow': (1, ['HWND'], ['hWnd'], 'BOOL'), 'IsWindowUnicode': (1, ['HWND'], ['hWnd'], 'BOOL'), 'IsWindowVisible': (1, ['HWND'], ['hWnd'], 'BOOL'), 'IsZoomed': (1, ['HWND'], ['hWnd'], 'BOOL'), 'LockSetForegroundWindow': (1, ['LOCKSETFOREGROUNDWINDOWCODE'], ['uLockCode'], 'BOOL'), 'LogicalToPhysicalPoint': (2, ['HWND', 'LPPOINT'], ['hWnd', 'lpPoint'], 'void'), 'MoveWindow': (6, ['HWND', 'INT', 'INT', 'INT', 'INT', 'BOOL'], ['hWnd', 'X', 'Y', 'nWidth', 'nHeight', 'bRepaint'], 'BOOL'), 'OpenIcon': (1, ['HWND'], ['hWnd'], 'BOOL'), 'PhysicalToLogicalPoint': (2, ['HWND', 'LPPOINT'], ['hWnd', 'lpPoint'], 'void'), 'RealChildWindowFromPoint': (2, ['HWND', 'POINT'], ['hwndParent', 'ptParentClientCoords'], 'HWND'), 'RealGetWindowClass': (3, ['HWND', 'LPTSTR', 'UINT'], ['hwnd', 'pszType', 'cchType'], 'UINT'), 'RegisterShellHookWindow': (1, ['HWND'], ['hWnd'], 'BOOL'), 'SetForegroundWindow': (1, ['HWND'], ['hWnd'], 'BOOL'), 'SetLayeredWindowAttributes': (4, ['HWND', 'COLORREF', 'BYTE', 'LAYEREDWINDOWATTRIBUTE'], ['hwnd', 'crKey', 'bAlpha', 'dwFlags'], 'BOOL'), 'SetParent': (2, ['HWND', 'HWND'], ['hWndChild', 'hWndNewParent'], 'HWND'), 'SetProcessDefaultLayout': (1, ['DWORD'], ['dwDefaultLayout'], 'BOOL'), 'SetProcessDPIAware': (0, [], [], 'BOOL'), 'SetWindowDisplayAffinity': (2, ['HWND', 'DWORD'], ['hWnd', 'dwAffinity'], 'BOOL'), 'SetWindowPlacement': (2, ['HWND', 'WINDOWPLACEMENT*'], ['hWnd', 'lpwndpl'], 'BOOL'), 'SetWindowPos': (7, ['HWND', 'HWNDINSERTAFTERENUM', 'INT', 'INT', 'INT', 'INT', 'SETWINDOWPOSFLAGS'], ['hWnd', 'hWndInsertAfter', 'X', 'Y', 'cx', 'cy', 'uFlags'], 'BOOL'), 'SetWindowText': (2, ['HWND', 'LPCTSTR'], ['hWnd', 'lpString'], 'BOOL'), 'ShowOwnedPopups': (2, ['HWND', 'BOOL'], ['hWnd', 'fShow'], 'BOOL'), 'ShowWindow': (2, ['HWND', 'SHOWWINDOWCMD'], ['hWnd', 'nCmdShow'], 'BOOL'), 'ShowWindowAsync': (2, ['HWND', 'INT'], ['hWnd', 'nCmdShow'], 'BOOL'), 'SoundSentry': (0, [], [], 'BOOL'), 'SwitchToThisWindow': (2, ['HWND', 'BOOL'], ['hWnd', 'fAltTab'], 'VOID'), 'TileWindows': (5, ['HWND', 'MDITILE_TILE', 'RECT*', 'UINT', 'CONST HWND*'], ['hwndParent', 'wHow', 'lpRect', 'cKids', 'lpKids'], 'WORD'), 'UpdateLayeredWindow': (9, ['HWND', 'HDC', 'POINT*', 'SIZE*', 'HDC', 'POINT*', 'COLORREF', 'BLENDFUNCTION*', 'UPDATELAYEREDWINDOWFLAGS'], ['hwnd', 'hdcDst', 'pptDst', 'psize', 'hdcSrc', 'pptSrc', 'crKey', 'pblend', 'dwFlags'], 'BOOL'), 'UpdateLayeredWindowIndirect': (2, ['HWND', 'CONST UPDATELAYEREDWINDOWINFO*'], ['hwnd', 'pULWInfo'], 'BOOL'), 'WindowFromPhysicalPoint': (1, ['POINT'], ['Point'], 'HWND'), 'WindowFromPoint': (1, ['POINT'], ['Point'], 'HWND'), 'ExitWindowsEx': (2, ['EWX_FLAGS', 'SHTDN_REASON'], ['uFlags', 'dwReason'], 'BOOL'), 'LockWorkStation': (0, [], [], 'BOOL'), 'ShutdownBlockReasonCreate': (2, ['HWND', 'LPCWSTR'], ['hWnd', 'pwszReason'], 'BOOL'), 'ShutdownBlockReasonDestroy': (1, ['HWND'], ['hWnd'], 'BOOL'), 'ShutdownBlockReasonQuery': (3, ['HWND', 'LPWSTR', 'DWORD*'], ['hWnd', 'pwszBuff', 'pcchBuff'], 'BOOL'), 'LoadBitmap': (2, ['HINSTANCE', 'LOADBITMAPSTRING/LPCTSTR'], ['hInstance', 'lpBitmapName'], 'HBITMAP'), 'GetSysColorBrush': (1, ['SYSCOLORINDEX'], ['nIndex'], 'HBRUSH'), 'CheckDlgButton': (3, ['HWND', 'INT', 'BUTTONSTATE'], ['hDlg', 'nIDButton', 'uCheck'], 'BOOL'), 'CheckRadioButton': (4, ['HWND', 'INT', 'INT', 'INT'], ['hDlg', 'nIDFirstButton', 'nIDLastButton', 'nIDCheckButton'], 'BOOL'), 'IsDlgButtonChecked': (2, ['HWND', 'INT'], ['hDlg', 'nIDButton'], '[ButtonState]'), 'CreateCaret': (4, ['HWND', 'HBITMAP', 'INT', 'INT'], ['hWnd', 'hBitmap', 'nWidth', 'nHeight'], 'BOOL'), 'DestroyCaret': (0, [], [], 'BOOL'), 'GetCaretBlinkTime': (0, [], [], 'UINT'), 'GetCaretPos': (1, ['LPPOINT'], ['lpPoint'], 'BOOL'), 'HideCaret': (1, ['HWND'], ['hWnd'], 'BOOL'), 'SetCaretBlinkTime': (1, ['UINT'], ['uMSeconds'], 'BOOL'), 'SetCaretPos': (2, ['INT', 'INT'], ['X', 'Y'], 'BOOL'), 'ShowCaret': (1, ['HWND'], ['hWnd'], 'BOOL'), 'AddClipboardFormatListener': (1, ['HWND'], ['hwnd'], 'BOOL'), 'ChangeClipboardChain': (2, ['HWND', 'HWND'], ['hWndRemove', 'hWndNewNext'], 'BOOL'), 'CloseClipboard': (0, [], [], 'BOOL'), 'CountClipboardFormats': (0, [], [], 'int'), 'EmptyClipboard': (0, [], [], 'BOOL'), 'EnumClipboardFormats': (1, ['UINT'], ['format'], 'UINT'), 'GetClipboardData': (1, ['CLIPBOARDFORMAT'], ['uFormat'], 'HANDLE'), 'GetClipboardFormatName': (3, ['UINT', 'LPTSTR', 'INT'], ['format', 'lpszFormatName', 'cchMaxCount'], 'int'), 'GetClipboardOwner': (0, [], [], 'HWND'), 'GetClipboardSequenceNumber': (0, [], [], 'DWORD'), 'GetClipboardViewer': (0, [], [], 'HWND'), 'GetOpenClipboardWindow': (0, [], [], 'HWND'), 'GetPriorityClipboardFormat': (2, ['UINT*', 'INT'], ['paFormatPriorityList', 'cFormats'], 'int'), 'GetUpdatedClipboardFormats': (3, ['PUINT', 'UINT', 'PUINT'], ['lpuiFormats', 'cFormats', 'pcFormatsOut'], 'BOOL'), 'IsClipboardFormatAvailable': (1, ['CLIPBOARDFORMAT'], ['format'], 'BOOL'), 'OpenClipboard': (1, ['HWND'], ['hWndNewOwner'], 'BOOL'), 'RegisterClipboardFormat': (1, ['LPCTSTR'], ['lpszFormat'], 'UINT'), 'RemoveClipboardFormatListener': (1, ['HWND'], ['hwnd'], 'BOOL'), 'SetClipboardData': (2, ['CLIPBOARDFORMAT', 'HANDLE'], ['uFormat', 'hMem'], 'HANDLE'), 'SetClipboardViewer': (1, ['HWND'], ['hWndNewViewer'], 'HWND'), 'DlgDirListComboBox': (5, ['HWND', 'LPTSTR', 'INT', 'INT', 'UINT'], ['hDlg', 'lpPathSpec', 'nIDComboBox', 'nIDStaticPath', 'uFiletype'], 'int'), 'DlgDirSelectComboBoxEx': (4, ['HWND', 'LPTSTR', 'INT', 'INT'], ['hDlg', 'lpString', 'nCount', 'nIDComboBox'], 'BOOL'), 'GetComboBoxInfo': (2, ['HWND', 'PCOMBOBOXINFO'], ['hwndCombo', 'pcbi'], 'BOOL'), 'ClientToScreen': (2, ['HWND', 'LPPOINT'], ['hWnd', 'lpPoint'], 'BOOL'), 'MapWindowPoints': (4, ['HWND', 'HWND', 'LPPOINT', 'UINT'], ['hWndFrom', 'hWndTo', 'lpPoints', 'cPoints'], 'int'), 'ScreenToClient': (2, ['HWND', 'LPPOINT'], ['hWnd', 'lpPoint'], 'BOOL'), 'ClipCursor': (1, ['CONST RECT*'], ['lpRect'], 'BOOL'), 'CopyCursor': (1, ['HCURSOR'], ['pcur'], 'HCURSOR'), 'CreateCursor': (7, ['HINSTANCE', 'INT', 'INT', 'INT', 'INT', 'CONST VOID*', 'CONST VOID*'], ['hInst', 'xHotSpot', 'yHotSpot', 'nWidth', 'nHeight', 'pvANDPlane', 'pvXORPlane'], 'HCURSOR'), 'DestroyCursor': (1, ['HCURSOR'], ['hCursor'], 'BOOL'), 'GetClipCursor': (1, ['LPRECT'], ['lpRect'], 'BOOL'), 'GetCursor': (0, [], [], 'HCURSOR'), 'GetCursorInfo': (1, ['PCURSORINFO'], ['pci'], 'BOOL'), 'GetCursorPos': (1, ['LPPOINT'], ['lpPoint'], 'BOOL'), 'GetPhysicalCursorPos': (1, ['LPPOINT'], ['lpPoint'], 'BOOL'), 'LoadCursor': (2, ['HINSTANCE', 'LOADCURSORSTRING/LPCTSTR'], ['hInstance', 'lpCursorName'], 'HCURSOR'), 'LoadCursorFromFile': (1, ['LPCTSTR'], ['lpFileName'], 'HCURSOR'), 'SetCursor': (1, ['HCURSOR'], ['hCursor'], 'HCURSOR'), 'SetCursorPos': (2, ['INT', 'INT'], ['X', 'Y'], 'BOOL'), 'SetPhysicalCursorPos': (2, ['INT', 'INT'], ['X', 'Y'], 'BOOL'), 'SetSystemCursor': (2, ['HCURSOR', 'CURSORID'], ['hcur', 'id'], 'BOOL'), 'ShowCursor': (1, ['BOOL'], ['bShow'], 'int'), 'ChangeDisplaySettings': (2, ['DEVMODE*', 'DWORD'], ['lpDevMode', 'dwflags'], 'LONG'), 'ChangeDisplaySettingsEx': (5, ['LPCTSTR', 'DEVMODE*', 'HWND', 'DWORD', 'LPVOID'], ['lpszDeviceName', 'lpDevMode', 'hwnd', 'dwflags', 'lParam'], 'LONG'), 'EnumDisplayDevices': (4, ['LPCTSTR', 'DWORD', 'PDISPLAY_DEVICE', 'ENUMDISPLAYDEVICESFLAGS'], ['lpDevice', 'iDevNum', 'lpDisplayDevice', 'dwFlags'], 'BOOL'), 'EnumDisplaySettings': (3, ['LPCTSTR', 'ENUMDISPLAYSETTINGSENUM', 'DEVMODE*'], ['lpszDeviceName', 'iModeNum', 'lpDevMode'], 'BOOL'), 'EnumDisplaySettingsEx': (4, ['LPCTSTR', 'DWORD', 'DEVMODE*', 'DWORD'], ['lpszDeviceName', 'iModeNum', 'lpDevMode', 'dwFlags'], 'BOOL'), 'GetDC': (1, ['HWND'], ['hWnd'], 'HDC'), 'GetDCEx': (3, ['HWND', 'HRGN', 'DCEXFLAGS'], ['hWnd', 'hrgnClip', 'flags'], 'HDC'), 'ReleaseDC': (2, ['HWND', 'HDC'], ['hWnd', 'hDC'], 'int'), 'RegisterDeviceNotification': (3, ['HANDLE', 'LPVOID', 'DEVICENOTIFICATIONFLAGS'], ['hRecipient', 'NotificationFilter', 'Flags'], 'HDEVNOTIFY'), 'UnregisterDeviceNotification': (1, ['HDEVNOTIFY'], ['Handle'], 'BOOL'), 'DdeSetQualityOfService': (3, ['HWND', 'CONST SECURITY_QUALITY_OF_SERVICE*', 'PSECURITY_QUALITY_OF_SERVICE'], ['hwndClient', 'pqosNew', 'pqosPrev'], 'BOOL'), 'FreeDDElParam': (2, ['UINT', 'LPARAM'], ['msg', 'lParam'], 'BOOL'), 'ImpersonateDdeClientWindow': (2, ['HWND', 'HWND'], ['hWndClient', 'hWndServer'], 'BOOL'), 'PackDDElParam': (3, ['UINT', 'UINT_PTR', 'UINT_PTR'], ['msg', 'uiLo', 'uiHi'], 'LPARAM'), 'ReuseDDElParam': (5, ['LPARAM', 'UINT', 'UINT', 'UINT_PTR', 'UINT_PTR'], ['lParam', 'msgIn', 'msgOut', 'uiLo', 'uiHi'], 'LPARAM'), 'UnpackDDElParam': (4, ['UINT', 'LPARAM', 'PUINT_PTR', 'PUINT_PTR'], ['msg', 'lParam', 'puiLo', 'puiHi'], 'BOOL'), 'DdeAbandonTransaction': (3, ['DWORD', 'HCONV', 'DWORD'], ['idInst', 'hConv', 'idTransaction'], 'BOOL'), 'DdeAccessData': (2, ['HDDEDATA', 'LPDWORD'], ['hData', 'pcbDataSize'], 'LPBYTE'), 'DdeAddData': (4, ['HDDEDATA', 'LPBYTE', 'DWORD', 'DWORD'], ['hData', 'pSrc', 'cb', 'cbOff'], 'HDDEDATA'), 'DdeClientTransaction': (8, ['LPBYTE', 'DWORD', 'HCONV', 'HSZ', 'UINT', 'UINT', 'DWORD', 'LPDWORD'], ['pData', 'cbData', 'hConv', 'hszItem', 'wFmt', 'wType', 'dwTimeout', 'pdwResult'], 'HDDEDATA'), 'DdeCmpStringHandles': (2, ['HSZ', 'HSZ'], ['hsz1', 'hsz2'], 'int'), 'DdeConnect': (4, ['DWORD', 'HSZ', 'HSZ', 'PCONVCONTEXT'], ['idInst', 'hszService', 'hszTopic', 'pCC'], 'HCONV'), 'DdeConnectList': (5, ['DWORD', 'HSZ', 'HSZ', 'HCONVLIST', 'PCONVCONTEXT'], ['idInst', 'hszService', 'hszTopic', 'hConvList', 'pCC'], 'HCONVLIST'), 'DdeCreateDataHandle': (7, ['DWORD', 'LPBYTE', 'DWORD', 'DWORD', 'HSZ', 'UINT', 'UINT'], ['idInst', 'pSrc', 'cb', 'cbOff', 'hszItem', 'wFmt', 'afCmd'], 'HDDEDATA'), 'DdeCreateStringHandle': (3, ['DWORD', 'LPTSTR', 'CODE_PAGE|INT'], ['idInst', 'psz', 'iCodePage'], 'HSZ'), 'DdeDisconnect': (1, ['HCONV'], ['hConv'], 'BOOL'), 'DdeDisconnectList': (1, ['HCONVLIST'], ['hConvList'], 'BOOL'), 'DdeEnableCallback': (3, ['DWORD', 'HCONV', 'UINT'], ['idInst', 'hConv', 'wCmd'], 'BOOL'), 'DdeFreeDataHandle': (1, ['HDDEDATA'], ['hData'], 'BOOL'), 'DdeFreeStringHandle': (2, ['DWORD', 'HSZ'], ['idInst', 'hsz'], 'BOOL'), 'DdeGetData': (4, ['HDDEDATA', 'LPBYTE', 'DWORD', 'DWORD'], ['hData', 'pDst', 'cbMax', 'cbOff'], 'DWORD'), 'DdeGetLastError': (1, ['DWORD'], ['idInst'], 'UINT'), 'DdeImpersonateClient': (1, ['HCONV'], ['hConv'], 'BOOL'), 'DdeInitialize': (4, ['LPDWORD', 'PFNCALLBACK', 'DDE_INITIALIZE_FLAGS', 'DWORD'], ['pidInst', 'pfnCallback', 'afCmd', 'ulRes'], 'UINT'), 'DdeKeepStringHandle': (2, ['DWORD', 'HSZ'], ['idInst', 'hsz'], 'BOOL'), 'DdeNameService': (4, ['DWORD', 'UINT', 'UINT', 'UINT'], ['idInst', 'hsz1', 'hsz2', 'afCmd'], 'HDDEDATA'), 'DdePostAdvise': (3, ['DWORD', 'HSZ', 'HSZ'], ['idInst', 'hszTopic', 'hszItem'], 'BOOL'), 'DdeQueryConvInfo': (3, ['HCONV', 'DWORD', 'PCONVINFO'], ['hConv', 'idTransaction', 'pConvInfo'], 'UINT'), 'DdeQueryNextServer': (2, ['HCONVLIST', 'HCONV'], ['hConvList', 'hConvPrev'], 'HCONV'), 'DdeQueryString': (5, ['DWORD', 'HSZ', 'LPTSTR', 'DWORD', 'CODE_PAGE|INT'], ['idInst', 'hsz', 'psz', 'cchMax', 'iCodePage'], 'DWORD'), 'DdeReconnect': (1, ['HCONV'], ['hConv'], 'HCONV'), 'DdeSetUserHandle': (3, ['HCONV', 'DWORD', 'DWORD_PTR'], ['hConv', 'id', 'hUser'], 'BOOL'), 'DdeUnaccessData': (1, ['HDDEDATA'], ['hData'], 'BOOL'), 'DdeUninitialize': (1, ['DWORD'], ['idInst'], 'BOOL'), 'FlashWindow': (2, ['HWND', 'BOOL'], ['hWnd', 'bInvert'], 'BOOL'), 'FlashWindowEx': (1, ['PFLASHWINFO'], ['pfwi'], 'BOOL'), 'MessageBeep': (1, ['UINT'], ['uType'], 'BOOL'), 'SetLastErrorEx': (2, ['ERROR_CODE', 'SET_LAST_ERROR_EX_TYPE'], ['dwErrCode', 'dwType'], 'void'), 'FillRect': (3, ['HDC', 'CONST RECT*', 'HBRUSH'], ['hDC', 'lprc', 'hbr'], 'int'), 'FrameRect': (3, ['HDC', 'CONST RECT*', 'HBRUSH'], ['hDC', 'lprc', 'hbr'], 'int'), 'InvertRect': (2, ['HDC', 'CONST RECT*'], ['hDC', 'lprc'], 'BOOL'), 'DrawText': (5, ['HDC', 'LPCTSTR', 'INT', 'LPRECT', 'DRAWTEXTFLAGS'], ['hDC', 'lpchText', 'nCount', 'lpRect', 'uFormat'], 'int'), 'DrawTextEx': (6, ['HDC', 'LPTSTR', 'INT', 'LPRECT', 'DRAWTEXTFLAGS', 'LPDRAWTEXTPARAMS'], ['hdc', 'lpchText', 'cchText', 'lprc', 'dwDTFormat', 'lpDTParams'], 'int'), 'GetTabbedTextExtent': (5, ['HDC', 'LPCTSTR', 'INT', 'INT', 'CONST LPINT'], ['hDC', 'lpString', 'nCount', 'nTabPositions', 'lpnTabStopPositions'], 'DWORD'), 'TabbedTextOut': (8, ['HDC', 'INT', 'INT', 'LPCTSTR', 'INT', 'INT', 'CONST LPINT', 'INT'], ['hDC', 'X', 'Y', 'lpString', 'nCount', 'nTabPositions', 'lpnTabStopPositions', 'nTabOrigin'], 'LONG'), 'CallMsgFilter': (2, ['LPMSG', 'INT'], ['lpMsg', 'nCode'], 'BOOL'), 'CallNextHookEx': (4, ['HHOOK', 'INT', 'WPARAM', 'LPARAM'], ['hhk', 'nCode', 'wParam', 'lParam'], 'LRESULT'), 'SetWindowsHookEx': (4, ['WINDOWSHOOK', 'HOOKPROC', 'HINSTANCE', 'DWORD'], ['idHook', 'lpfn', 'hMod', 'dwThreadId'], 'HHOOK'), 'UnhookWindowsHookEx': (1, ['HHOOK'], ['hhk'], 'BOOL'), 'CopyIcon': (1, ['HICON'], ['hIcon'], 'HICON'), 'CreateIcon': (7, ['HINSTANCE', 'INT', 'INT', 'BYTE', 'BYTE', 'CONST BYTE*', 'CONST BYTE*'], ['hInstance', 'nWidth', 'nHeight', 'cPlanes', 'cBitsPixel', 'lpbANDbits', 'lpbXORbits'], 'HICON'), 'CreateIconFromResource': (4, ['PBYTE', 'DWORD', 'BOOL', 'DWORD'], ['presbits', 'dwResSize', 'fIcon', 'dwVer'], 'HICON'), 'CreateIconFromResourceEx': (7, ['PBYTE', 'DWORD', 'BOOL', 'DWORD', 'INT', 'INT', 'UINT'], ['pbIconBits', 'cbIconBits', 'fIcon', 'dwVersion', 'cxDesired', 'cyDesired', 'uFlags'], 'HICON'), 'CreateIconIndirect': (1, ['PICONINFO'], ['piconinfo'], 'HICON'), 'DestroyIcon': (1, ['HICON'], ['hIcon'], 'BOOL'), 'DrawIcon': (4, ['HDC', 'INT', 'INT', 'HICON'], ['hDC', 'X', 'Y', 'hIcon'], 'BOOL'), 'DrawIconEx': (9, ['HDC', 'INT', 'INT', 'HICON', 'INT', 'INT', 'UINT', 'HBRUSH', 'DRAWICONFLAGS'], ['hdc', 'xLeft', 'yTop', 'hIcon', 'cxWidth', 'cyWidth', 'istepIfAniCur', 'hbrFlickerFreeDraw', 'diFlags'], 'BOOL'), 'GetIconInfo': (2, ['HICON', 'PICONINFO'], ['hIcon', 'piconinfo'], 'BOOL'), 'GetIconInfoEx': (2, ['HICON', 'PICONINFOEX'], ['hIcon', 'piconinfoex'], 'BOOL'), 'LoadIcon': (2, ['HINSTANCE', 'LOADICONSTRING/LPCTSTR'], ['hInstance', 'lpIconName'], 'HICON'), 'LookupIconIdFromDirectory': (2, ['PBYTE', 'BOOL'], ['presbits', 'fIcon'], 'int'), 'LookupIconIdFromDirectoryEx': (5, ['PBYTE', 'BOOL', 'INT', 'INT', 'LRFLAGS'], ['presbits', 'fIcon', 'cxDesired', 'cyDesired', 'Flags'], 'int'), 'PrivateExtractIcons': (8, ['LPCTSTR', 'INT', 'INT', 'INT', 'HICON*', 'UINT*', 'UINT', 'LRFLAGS'], ['lpszFile', 'nIconIndex', 'cxIcon', 'cyIcon', 'phicon', 'piconid', 'nIcons', 'flags'], 'UINT'), 'CopyAcceleratorTable': (3, ['HACCEL', 'LPACCEL', 'INT'], ['hAccelSrc', 'lpAccelDst', 'cAccelEntries'], 'int'), 'CreateAcceleratorTable': (2, ['LPACCEL', 'INT'], ['lpaccl', 'cEntries'], 'HACCEL'), 'DestroyAcceleratorTable': (1, ['HACCEL'], ['hAccel'], 'BOOL'), 'LoadAccelerators': (2, ['HINSTANCE', 'LPCTSTR'], ['hInstance', 'lpTableName'], 'HACCEL'), 'TranslateAccelerator': (3, ['HWND', 'HACCEL', 'LPMSG'], ['hWnd', 'hAccTable', 'lpMsg'], 'int'), 'ActivateKeyboardLayout': (2, ['KEYBOARDLAYOUTHANDLE', 'KEYBOARDLAYOUTFLAGS'], ['hkl', 'Flags'], 'HKL'), 'BlockInput': (1, ['BOOL'], ['fBlockIt'], 'BOOL'), 'EnableWindow': (2, ['HWND', 'BOOL'], ['hWnd', 'bEnable'], 'BOOL'), 'GetActiveWindow': (0, [], [], 'HWND'), 'GetAsyncKeyState': (1, ['VIRTKEYCODE'], ['vKey'], 'SHORT'), 'GetFocus': (0, [], [], 'HWND'), 'GetKBCodePage': (0, [], [], 'UINT'), 'GetKeyboardLayout': (1, ['DWORD'], ['idThread'], 'HKL'), 'GetKeyboardLayoutList': (2, ['INT', 'HKL*'], ['nBuff', 'lpList'], 'UINT'), 'GetKeyboardLayoutName': (1, ['LPTSTR'], ['pwszKLID'], 'BOOL'), 'GetKeyboardState': (1, ['PBYTE'], ['lpKeyState'], 'BOOL'), 'GetKeyNameText': (3, ['LONG', 'LPTSTR', 'INT'], ['lParam', 'lpString', 'nSize'], 'int'), 'GetKeyState': (1, ['VIRTKEYCODE'], ['nVirtKey'], 'SHORT'), 'GetLastInputInfo': (1, ['PLASTINPUTINFO'], ['plii'], 'BOOL'), 'IsWindowEnabled': (1, ['HWND'], ['hWnd'], 'BOOL'), 'keybd_event': (4, ['BYTE', 'BYTE', 'DWORD', 'ULONG_PTR'], ['bVk', 'bScan', 'dwFlags', 'dwExtraInfo'], 'VOID'), 'LoadKeyboardLayout': (2, ['LPCTSTR', 'KEYBOARDLAYOUTFLAGS'], ['pwszKLID', 'Flags'], 'HKL'), 'MapVirtualKey': (2, ['UINT', 'MAPVIRTUALKEYTYPE'], ['uCode', 'uMapType'], 'UINT'), 'MapVirtualKeyEx': (3, ['UINT', 'MAPVIRTUALKEYTYPE', 'HKL'], ['uCode', 'uMapType', 'dwhkl'], 'UINT'), 'OemKeyScan': (1, ['WORD'], ['wOemChar'], 'DWORD'), 'RegisterHotKey': (4, ['HWND', 'INT', 'UINT', 'UINT'], ['hWnd', 'id', 'fsModifiers', 'vk'], 'BOOL'), 'SendInput': (3, ['UINT', 'LPINPUT', 'INT'], ['nInputs', 'pInputs', 'cbSize'], 'UINT'), 'SetActiveWindow': (1, ['HWND'], ['hWnd'], 'HWND'), 'SetFocus': (1, ['HWND'], ['hWnd'], 'HWND'), 'SetKeyboardState': (1, ['LPBYTE'], ['lpKeyState'], 'BOOL'), 'ToAscii': (5, ['UINT', 'UINT', 'PBYTE', 'LPWORD', 'UINT'], ['uVirtKey', 'uScanCode', 'lpKeyState', 'lpChar', 'uFlags'], 'int'), 'ToAsciiEx': (6, ['UINT', 'UINT', 'PBYTE', 'LPWORD', 'UINT', 'HKL'], ['uVirtKey', 'uScanCode', 'lpKeyState', 'lpChar', 'uFlags', 'dwhkl'], 'int'), 'ToUnicode': (6, ['UINT', 'UINT', 'CONST PBYTE', 'LPWSTR', 'INT', 'UINT'], ['wVirtKey', 'wScanCode', 'lpKeyState', 'pwszBuff', 'cchBuff', 'wFlags'], 'int'), 'ToUnicodeEx': (7, ['UINT', 'UINT', 'CONST PBYTE', 'LPWSTR', 'INT', 'UINT', 'HKL'], ['wVirtKey', 'wScanCode', 'lpKeyState', 'pwszBuff', 'cchBuff', 'wFlags', 'dwhkl'], 'int'), 'UnloadKeyboardLayout': (1, ['HKL'], ['hkl'], 'BOOL'), 'UnregisterHotKey': (2, ['HWND', 'INT'], ['hWnd', 'id'], 'BOOL'), 'VkKeyScan': (1, ['TCHAR'], ['ch'], 'SHORT'), 'VkKeyScanEx': (2, ['TCHAR', 'HKL'], ['ch', 'dwhkl'], 'SHORT'), 'DlgDirList': (5, ['HWND', 'LPTSTR', 'INT', 'INT', 'UINT'], ['hDlg', 'lpPathSpec', 'nIDListBox', 'nIDStaticPath', 'uFileType'], 'int'), 'DlgDirSelectEx': (4, ['HWND', 'LPTSTR', 'INT', 'INT'], ['hDlg', 'lpString', 'nCount', 'nIDListBox'], 'BOOL'), 'GetListBoxInfo': (1, ['HWND'], ['hwnd'], 'DWORD'), 'AppendMenu': (4, ['HMENU', 'UINT', 'UINT_PTR', 'LPCTSTR'], ['hMenu', 'uFlags', 'uIDNewItem', 'lpNewItem'], 'BOOL'), 'CheckMenuItem': (3, ['HMENU', 'UINT', 'CHECKMENUITEMFLAG'], ['hmenu', 'uIDCheckItem', 'uCheck'], 'DWORD'), 'CheckMenuRadioItem': (5, ['HMENU', 'UINT', 'UINT', 'UINT', 'MENUCOMMANDPOSFLAG'], ['hmenu', 'idFirst', 'idLast', 'idCheck', 'uFlags'], 'BOOL'), 'CreateMenu': (0, [], [], 'HMENU'), 'CreatePopupMenu': (0, [], [], 'HMENU'), 'DeleteMenu': (3, ['HMENU', 'UINT', 'MENUCOMMANDPOSFLAG'], ['hMenu', 'uPosition', 'uFlags'], 'BOOL'), 'DestroyMenu': (1, ['HMENU'], ['hMenu'], 'BOOL'), 'DrawMenuBar': (1, ['HWND'], ['hWnd'], 'BOOL'), 'EnableMenuItem': (3, ['HMENU', 'UINT', 'ENABLEMENUITEMFLAG'], ['hMenu', 'uIDEnableItem', 'uEnable'], '[EnableMenuItemResult]'), 'EndMenu': (0, [], [], 'BOOL'), 'GetMenu': (1, ['HWND'], ['hWnd'], 'HMENU'), 'GetMenuBarInfo': (4, ['HWND', 'OBJECTIDENUM', 'LONG', 'PMENUBARINFO'], ['hwnd', 'idObject', 'idItem', 'pmbi'], 'BOOL'), 'GetMenuCheckMarkDimensions': (0, [], [], 'LONG'), 'GetMenuDefaultItem': (3, ['HMENU', 'UINT', 'GETMENUDEFAULTITEMFLAGS'], ['hMenu', 'fByPos', 'gmdiFlags'], 'UINT'), 'GetMenuInfo': (2, ['HMENU', 'LPCMENUINFO'], ['hmenu', 'lpcmi'], 'BOOL'), 'GetMenuItemCount': (1, ['HMENU'], ['hMenu'], 'int'), 'GetMenuItemID': (2, ['HMENU', 'INT'], ['hMenu', 'nPos'], 'UINT'), 'GetMenuItemInfo': (4, ['HMENU', 'UINT', 'BOOL', 'LPMENUITEMINFO'], ['hMenu', 'uItem', 'fByPosition', 'lpmii'], 'BOOL'), 'GetMenuItemRect': (4, ['HWND', 'HMENU', 'UINT', 'LPRECT'], ['hWnd', 'hMenu', 'uItem', 'lprcItem'], 'BOOL'), 'GetMenuState': (3, ['HMENU', 'UINT', 'MENUCOMMANDPOSFLAG'], ['hMenu', 'uId', 'uFlags'], 'UINT'), 'GetMenuString': (5, ['HMENU', 'UINT', 'LPTSTR', 'INT', 'UINT'], ['hMenu', 'uIDItem', 'lpString', 'nMaxCount', 'uFlag'], 'int'), 'GetSubMenu': (2, ['HMENU', 'INT'], ['hMenu', 'nPos'], 'HMENU'), 'GetSystemMenu': (2, ['HWND', 'BOOL'], ['hWnd', 'bRevert'], 'HMENU'), 'HiliteMenuItem': (4, ['HWND', 'HMENU', 'UINT', 'UINT'], ['hwnd', 'hmenu', 'uItemHilite', 'uHilite'], 'BOOL'), 'InsertMenu': (5, ['HMENU', 'UINT', 'INSERTMENUFLAGS', 'UINT_PTR', 'LPCTSTR'], ['hMenu', 'uPosition', 'uFlags', 'uIDNewItem', 'lpNewItem'], 'BOOL'), 'InsertMenuItem': (4, ['HMENU', 'UINT', 'BOOL', 'LPCMENUITEMINFO'], ['hMenu', 'uItem', 'fByPosition', 'lpmii'], 'BOOL'), 'IsMenu': (1, ['HMENU'], ['hMenu'], 'BOOL'), 'LoadMenu': (2, ['HINSTANCE', 'LPCTSTR'], ['hInstance', 'lpMenuName'], 'HMENU'), 'LoadMenuIndirect': (1, ['CONST MENUTEMPLATE*'], ['lpMenuTemplate'], 'HMENU'), 'MenuItemFromPoint': (3, ['HWND', 'HMENU', 'POINT'], ['hWnd', 'hMenu', 'ptScreen'], 'int'), 'ModifyMenu': (5, ['HMENU', 'UINT', 'UINT', 'UINT_PTR', 'LPCTSTR'], ['hMnu', 'uPosition', 'uFlags', 'uIDNewItem', 'lpNewItem'], 'BOOL'), 'RemoveMenu': (3, ['HMENU', 'UINT', 'MENUCOMMANDPOSFLAG'], ['hMenu', 'uPosition', 'uFlags'], 'BOOL'), 'SetMenu': (2, ['HWND', 'HMENU'], ['hWnd', 'hMenu'], 'BOOL'), 'SetMenuDefaultItem': (3, ['HMENU', 'UINT', 'UINT'], ['hMenu', 'uItem', 'fByPos'], 'BOOL'), 'SetMenuInfo': (2, ['HMENU', 'LPCMENUINFO'], ['hmenu', 'lpcmi'], 'BOOL'), 'SetMenuItemBitmaps': (5, ['HMENU', 'UINT', 'UINT', 'HBITMAP', 'HBITMAP'], ['hMenu', 'uPosition', 'uFlags', 'hBitmapUnchecked', 'hBitmapChecked'], 'BOOL'), 'SetMenuItemInfo': (4, ['HMENU', 'UINT', 'BOOL', 'LPMENUITEMINFO'], ['hMenu', 'uItem', 'fByPosition', 'lpmii'], 'BOOL'), 'TrackPopupMenu': (7, ['HMENU', 'TRACKPOPUPMENUFLAGS', 'INT', 'INT', 'INT', 'HWND', 'CONST RECT*'], ['hMenu', 'uFlags', 'x', 'y', 'nReserved', 'hWnd', 'prcRect'], 'BOOL'), 'TrackPopupMenuEx': (6, ['HMENU', 'TRACKPOPUPMENUFLAGS', 'INT', 'INT', 'HWND', 'LPTPMPARAMS'], ['hmenu', 'fuFlags', 'x', 'y', 'hwnd', 'lptpm'], 'BOOL'), 'DragDetect': (2, ['HWND', 'POINT'], ['hwnd', 'pt'], 'BOOL'), 'GetCapture': (0, [], [], 'HWND'), 'GetDoubleClickTime': (0, [], [], 'UINT'), 'GetMouseMovePointsEx': (5, ['UINT', 'LPMOUSEMOVEPOINT', 'LPMOUSEMOVEPOINT', 'INT', 'DWORD'], ['cbSize', 'lppt', 'lpptBuf', 'nBufPoints', 'resolution'], 'int'), 'mouse_event': (5, ['DWORD', 'DWORD', 'DWORD', 'DWORD', 'ULONG_PTR'], ['dwFlags', 'dx', 'dy', 'dwData', 'dwExtraInfo'], 'VOID'), 'ReleaseCapture': (0, [], [], 'BOOL'), 'SetCapture': (1, ['HWND'], ['hWnd'], 'HWND'), 'SetDoubleClickTime': (1, ['UINT'], ['uInterval'], 'BOOL'), 'SwapMouseButton': (1, ['BOOL'], ['fSwap'], 'BOOL'), 'TrackMouseEvent': (1, ['LPTRACKMOUSEEVENT'], ['lpEventTrack'], 'BOOL'), 'EnumDisplayMonitors': (4, ['HDC', 'LPCRECT', 'MONITORENUMPROC', 'LPARAM'], ['hdc', 'lprcClip', 'lpfnEnum', 'dwData'], 'BOOL'), 'GetMonitorInfo': (2, ['HMONITOR', 'LPMONITORINFO'], ['hMonitor', 'lpmi'], 'BOOL'), 'MonitorFromPoint': (2, ['POINT', 'MONITORFLAGS'], ['pt', 'dwFlags'], 'HMONITOR'), 'MonitorFromRect': (2, ['LPCRECT', 'MONITORFLAGS'], ['lprc', 'dwFlags'], 'HMONITOR'), 'MonitorFromWindow': (2, ['HWND', 'MONITORFLAGS'], ['hwnd', 'dwFlags'], 'HMONITOR'), 'CreateMDIWindow': (10, ['LPCTSTR', 'LPCTSTR', 'DWORD', 'INT', 'INT', 'INT', 'INT', 'HWND', 'HINSTANCE', 'LPARAM'], ['lpClassName', 'lpWindowName', 'dwStyle', 'X', 'Y', 'nWidth', 'nHeight', 'hWndParent', 'hInstance', 'lParam'], 'HWND'), 'DefFrameProc': (5, ['HWND', 'HWND', 'UINT', 'WPARAM', 'LPARAM'], ['hWnd', 'hWndMDIClient', 'uMsg', 'wParam', 'lParam'], 'LRESULT'), 'DefMDIChildProc': (4, ['HWND', 'UINT', 'WPARAM', 'LPARAM'], ['hWnd', 'uMsg', 'wParam', 'lParam'], 'LRESULT'), 'TranslateMDISysAccel': (2, ['HWND', 'LPMSG'], ['hWndClient', 'lpMsg'], 'BOOL'), 'BeginPaint': (2, ['HWND', 'LPPAINTSTRUCT'], ['hwnd', 'lpPaint'], 'HDC'), 'DrawAnimatedRects': (4, ['HWND', 'INT', 'CONST RECT*', 'CONST RECT*'], ['hwnd', 'idAni', 'lprcFrom', 'lprcTo'], 'BOOL'), 'DrawCaption': (4, ['HWND', 'HDC', 'LPCRECT', 'UINT'], ['hwnd', 'hdc', 'lprc', 'uFlags'], 'BOOL'), 'DrawEdge': (4, ['HDC', 'LPRECT', 'BORDEREDGE', 'BORDERFLAG'], ['hdc', 'qrc', 'edge', 'grfFlags'], 'BOOL'), 'DrawFocusRect': (2, ['HDC', 'CONST RECT*'], ['hDC', 'lprc'], 'BOOL'), 'DrawFrameControl': (4, ['HDC', 'LPRECT', 'UINT', 'UINT'], ['hdc', 'lprc', 'uType', 'uState'], 'BOOL'), 'DrawState': (10, ['HDC', 'HBRUSH', 'DRAWSTATEPROC', 'LPARAM', 'WPARAM', 'INT', 'INT', 'INT', 'INT', 'DRAWSTATEFLAGS'], ['hdc', 'hbr', 'lpOutputFunc', 'lData', 'wData', 'x', 'y', 'cx', 'cy', 'fuFlags'], 'BOOL'), 'EndPaint': (2, ['HWND', 'CONST PAINTSTRUCT*'], ['hWnd', 'lpPaint'], 'BOOL'), 'ExcludeUpdateRgn': (2, ['HDC', 'HWND'], ['hDC', 'hWnd'], '[WindowRegion]'), 'GetUpdateRect': (3, ['HWND', 'LPRECT', 'BOOL'], ['hWnd', 'lpRect', 'bErase'], 'BOOL'), 'GetUpdateRgn': (3, ['HWND', 'HRGN', 'BOOL'], ['hWnd', 'hRgn', 'bErase'], '[WindowRegion]'), 'GetWindowDC': (1, ['HWND'], ['hWnd'], 'HDC'), 'GetWindowRgn': (2, ['HWND', 'HRGN'], ['hWnd', 'hRgn'], '[WindowRegion]'), 'GetWindowRgnBox': (2, ['HWND', 'LPRECT'], ['hWnd', 'lprc'], '[WindowRegion]'), 'GrayString': (9, ['HDC', 'HBRUSH', 'GRAYSTRINGPROC', 'LPARAM', 'INT', 'INT', 'INT', 'INT', 'INT'], ['hDC', 'hBrush', 'lpOutputFunc', 'lpData', 'nCount', 'X', 'Y', 'nWidth', 'nHeight'], 'BOOL'), 'InvalidateRect': (3, ['HWND', 'CONST RECT*', 'BOOL'], ['hWnd', 'lpRect', 'bErase'], 'BOOL'), 'InvalidateRgn': (3, ['HWND', 'HRGN', 'BOOL'], ['hWnd', 'hRgn', 'bErase'], 'BOOL'), 'LockWindowUpdate': (1, ['HWND'], ['hWndLock'], 'BOOL'), 'PaintDesktop': (1, ['HDC'], ['hdc'], 'BOOL'), 'RedrawWindow': (4, ['HWND', 'CONST RECT*', 'HRGN', 'REDRAWWINDOWFLAGS'], ['hWnd', 'lprcUpdate', 'hrgnUpdate', 'flags'], 'BOOL'), 'SetWindowRgn': (3, ['HWND', 'HRGN', 'BOOL'], ['hWnd', 'hRgn', 'bRedraw'], 'int'), 'UpdateWindow': (1, ['HWND'], ['hWnd'], 'BOOL'), 'ValidateRect': (2, ['HWND', 'CONST RECT*'], ['hWnd', 'lpRect'], 'BOOL'), 'ValidateRgn': (2, ['HWND', 'HRGN'], ['hWnd', 'hRgn'], 'BOOL'), 'WindowFromDC': (1, ['HDC'], ['hDC'], 'HWND'), 'RegisterPowerSettingNotification': (3, ['HANDLE', 'LPCGUID', 'DEVICENOTIFICATIONFLAGS'], ['hRecipient', 'PowerSettingGuid', 'Flags'], 'HPOWERNOTIFY'), 'UnregisterPowerSettingNotification': (1, ['HPOWERNOTIFY'], ['Handle'], 'BOOL'), 'PrintWindow': (3, ['HWND', 'HDC', 'UINT'], ['hwnd', 'hdcBlt', 'nFlags'], 'BOOL'), 'DefRawInputProc': (3, ['PRAWINPUT*', 'INT', 'UINT'], ['paRawInput', 'nInput', 'cbSizeHeader'], 'LRESULT'), 'GetRawInputBuffer': (3, ['PRAWINPUT', 'PUINT', 'UINT'], ['pData', 'pcbSize', 'cbSizeHeader'], 'UINT'), 'GetRawInputData': (5, ['HRAWINPUT', 'UINT', 'LPVOID', 'PUINT', 'UINT'], ['hRawInput', 'uiCommand', 'pData', 'pcbSize', 'cbSizeHeader'], 'UINT'), 'GetRawInputDeviceInfo': (4, ['HANDLE', 'UINT', 'LPVOID', 'PUINT'], ['hDevice', 'uiCommand', 'pData', 'pcbSize'], 'UINT'), 'GetRawInputDeviceList': (3, ['PRAWINPUTDEVICELIST', 'PUINT', 'UINT'], ['pRawInputDeviceList', 'puiNumDevices', 'cbSize'], 'UINT'), 'GetRegisteredRawInputDevices': (3, ['PRAWINPUTDEVICE', 'PUINT', 'UINT'], ['pRawInputDevices', 'puiNumDevices', 'cbSize'], 'UINT'), 'RegisterRawInputDevices': (3, ['PCRAWINPUTDEVICE', 'UINT', 'UINT'], ['pRawInputDevices', 'uiNumDevices', 'cbSize'], 'BOOL'), 'CopyRect': (2, ['LPRECT', 'CONST RECT*'], ['lprcDst', 'lprcSrc'], 'BOOL'), 'EqualRect': (2, ['CONST RECT*', 'CONST RECT*'], ['lprc1', 'lprc2'], 'BOOL'), 'InflateRect': (3, ['LPRECT', 'INT', 'INT'], ['lprc', 'dx', 'dy'], 'BOOL'), 'IntersectRect': (3, ['LPRECT', 'CONST RECT*', 'CONST RECT*'], ['lprcDst', 'lprcSrc1', 'lprcSrc2'], 'BOOL'), 'IsRectEmpty': (1, ['CONST RECT*'], ['lprc'], 'BOOL'), 'OffsetRect': (3, ['LPRECT', 'INT', 'INT'], ['lprc', 'dx', 'dy'], 'BOOL'), 'PtInRect': (2, ['CONST RECT*', 'POINT'], ['lprc', 'pt'], 'BOOL'), 'SetRect': (5, ['LPRECT', 'INT', 'INT', 'INT', 'INT'], ['lprc', 'xLeft', 'yTop', 'xRight', 'yBottom'], 'BOOL'), 'SetRectEmpty': (1, ['LPRECT'], ['lprc'], 'BOOL'), 'SubtractRect': (3, ['LPRECT', 'CONST RECT*', 'CONST RECT*'], ['lprcDst', 'lprcSrc1', 'lprcSrc2'], 'BOOL'), 'UnionRect': (3, ['LPRECT', 'CONST RECT*', 'CONST RECT*'], ['lprcDst', 'lprcSrc1', 'lprcSrc2'], 'BOOL'), 'CopyImage': (5, ['HANDLE', 'IMAGETYPE', 'INT', 'INT', 'LRFLAGS'], ['hImage', 'uType', 'cxDesired', 'cyDesired', 'fuFlags'], 'HANDLE'), 'LoadImage': (6, ['HINSTANCE', 'LOADIMAGESTRING/LPCTSTR', 'IMAGETYPE', 'INT', 'INT', 'LRFLAGS'], ['hinst', 'lpszName', 'uType', 'cxDesired', 'cyDesired', 'fuLoad'], 'HANDLE'), 'EnableScrollBar': (3, ['HWND', 'UINT', 'UINT'], ['hWnd', 'wSBflags', 'wArrows'], 'BOOL'), 'GetScrollBarInfo': (3, ['HWND', 'OBJECTIDENUM', 'PSCROLLBARINFO'], ['hwnd', 'idObject', 'psbi'], 'BOOL'), 'GetScrollInfo': (3, ['HWND', 'SBTYPE', 'LPSCROLLINFO'], ['hwnd', 'fnBar', 'lpsi'], 'BOOL'), 'GetScrollPos': (2, ['HWND', 'SBTYPE'], ['hWnd', 'nBar'], 'int'), 'GetScrollRange': (4, ['HWND', 'SBTYPE', 'LPINT', 'LPINT'], ['hWnd', 'nBar', 'lpMinPos', 'lpMaxPos'], 'BOOL'), 'ScrollDC': (7, ['HDC', 'INT', 'INT', 'CONST RECT*', 'CONST RECT*', 'HRGN', 'LPRECT'], ['hDC', 'dx', 'dy', 'lprcScroll', 'lprcClip', 'hrgnUpdate', 'lprcUpdate'], 'BOOL'), 'ScrollWindow': (5, ['HWND', 'INT', 'INT', 'CONST RECT*', 'CONST RECT*'], ['hWnd', 'XAmount', 'YAmount', 'lpRect', 'lpClipRect'], 'BOOL'), 'ScrollWindowEx': (8, ['HWND', 'INT', 'INT', 'CONST RECT*', 'CONST RECT*', 'HRGN', 'LPRECT', 'SCROLLWINDOWFLAGS'], ['hWnd', 'dx', 'dy', 'prcScroll', 'prcClip', 'hrgnUpdate', 'prcUpdate', 'flags'], 'int'), 'SetScrollInfo': (4, ['HWND', 'SBTYPE', 'LPCSCROLLINFO', 'BOOL'], ['hwnd', 'fnBar', 'lpsi', 'fRedraw'], 'int'), 'SetScrollPos': (4, ['HWND', 'SBTYPE', 'INT', 'BOOL'], ['hWnd', 'nBar', 'nPos', 'bRedraw'], 'int'), 'SetScrollRange': (5, ['HWND', 'SBTYPE', 'INT', 'INT', 'BOOL'], ['hWnd', 'nBar', 'nMinPos', 'nMaxPos', 'bRedraw'], 'BOOL'), 'ShowScrollBar': (3, ['HWND', 'SBTYPE', 'BOOL'], ['hWnd', 'wBar', 'bShow'], 'BOOL'), 'CharLower': (1, ['LPTSTR'], ['lpsz'], 'LPTSTR'), 'CharLowerBuff': (2, ['LPTSTR', 'DWORD'], ['lpsz', 'cchLength'], 'DWORD'), 'CharNext': (1, ['LPCTSTR'], ['lpsz'], 'LPTSTR'), 'CharNextExA': (3, ['CODEPAGEENUM', 'LPCSTR', 'DWORD'], ['CodePage', 'lpCurrentChar', 'dwFlags'], 'LPSTR'), 'CharPrev': (2, ['LPCTSTR', 'LPCTSTR'], ['lpszStart', 'lpszCurrent'], 'LPTSTR'), 'CharPrevExA': (4, ['CODEPAGEENUM', 'LPCSTR', 'LPCSTR', 'DWORD'], ['CodePage', 'lpStart', 'lpCurrentChar', 'dwFlags'], 'LPSTR'), 'CharToOem': (2, ['LPCTSTR', 'LPSTR'], ['lpszSrc', 'lpszDst'], 'BOOL'), 'CharToOemBuff': (3, ['LPCTSTR', 'LPSTR', 'DWORD'], ['lpszSrc', 'lpszDst', 'cchDstLength'], 'BOOL'), 'CharUpper': (1, ['LPTSTR'], ['lpsz'], 'LPTSTR'), 'CharUpperBuff': (2, ['LPTSTR', 'DWORD'], ['lpsz', 'cchLength'], 'DWORD'), 'IsCharAlpha': (1, ['TCHAR'], ['ch'], 'BOOL'), 'IsCharAlphaNumeric': (1, ['TCHAR'], ['ch'], 'BOOL'), 'IsCharLower': (1, ['TCHAR'], ['ch'], 'BOOL'), 'IsCharUpper': (1, ['TCHAR'], ['ch'], 'BOOL'), 'LoadString': (4, ['HINSTANCE', 'UINT', 'LPTSTR', 'INT'], ['hInstance', 'uID', 'lpBuffer', 'nBufferMax'], 'int'), 'OemToChar': (2, ['LPCSTR', 'LPTSTR'], ['lpszSrc', 'lpszDst'], 'BOOL'), 'OemToCharBuff': (3, ['LPCTSTR', 'LPTSTR', 'DWORD'], ['lpszSrc', 'lpszDst', 'cchDstLength'], 'BOOL'), 'wsprintf': (2, ['LPTSTR', 'LPCTSTR'], ['lpOut', 'lpFmt'], 'int'), 'wvsprintf': (3, ['LPTSTR', 'LPCTSTR', 'VA_LIST'], ['lpOutput', 'lpFmt', 'arglist'], 'int'), 'MsgWaitForMultipleObjects': (5, ['DWORD', 'CONST HANDLE*', 'BOOL', 'WAITTIMEOUT', 'QUEUESTATUSFLAG'], ['nCount', 'pHandles', 'bWaitAll', 'dwMilliseconds', 'dwWakeMask'], '[WAIT_RESULT]'), 'MsgWaitForMultipleObjectsEx': (5, ['DWORD', 'CONST HANDLE*', 'WAITTIMEOUT', 'QUEUESTATUSFLAG', 'MSGWAITFORMULTIPLEOBJECTSFLAGS'], ['nCount', 'pHandles', 'dwMilliseconds', 'dwWakeMask', 'dwFlags'], '[WAIT_RESULT]'), 'GetKeyboardType': (1, ['INT'], ['nTypeFlag'], 'int'), 'GetSysColor': (1, ['SYSCOLORINDEX'], ['nIndex'], 'DWORD'), 'GetSystemMetrics': (1, ['SYSTEMMETRICINDEX'], ['nIndex'], 'int'), 'SetSysColors': (3, ['INT', 'CONST INT*', 'CONST COLORREF*'], ['cElements', 'lpaElements', 'lpaRgbValues'], 'BOOL'), 'SystemParametersInfo': (4, ['SYSTEMPARAMETERSINFOENUM', 'UINT', 'PVOID', 'SYSTEMPARAMETERSINFOFLAGS'], ['uiAction', 'uiParam', 'pvParam', 'fWinIni'], 'BOOL'), 'KillTimer': (2, ['HWND', 'UINT_PTR'], ['hWnd', 'uIDEvent'], 'BOOL'), 'SetCoalescableTimer': (5, ['HWND', 'UINT_PTR', 'UINT', 'TIMERPROC', 'TIMERV_COALESCING'], ['hwnd', 'nIDEvent', 'uElapse', 'lpTimerFunc', 'uToleranceDelay'], 'UINT_PTR'), 'SetTimer': (4, ['HWND', 'UINT_PTR', 'UINT', 'TIMERPROC'], ['hWnd', 'nIDEvent', 'uElapse', 'lpTimerFunc'], 'UINT_PTR'), 'GetClassInfo': (3, ['HINSTANCE', 'LPCTSTR', 'LPWNDCLASS'], ['hInstance', 'lpClassName', 'lpWndClass'], 'BOOL'), 'GetClassInfoEx': (3, ['HINSTANCE', 'LPCTSTR', 'LPWNDCLASSEX'], ['hinst', 'lpszClass', 'lpwcx'], 'BOOL'), 'GetClassLong': (2, ['HWND', 'CLASSLONGINDEX'], ['hWnd', 'nIndex'], 'DWORD'), 'GetClassName': (3, ['HWND', 'LPTSTR', 'INT'], ['hWnd', 'lpClassName', 'nMaxCount'], 'int'), 'GetClassWord': (2, ['HWND', 'CLASSLONGINDEX'], ['hWnd', 'nIndex'], 'WORD'), 'GetWindowLong': (2, ['HWND', 'WINDOWLONGINDEX'], ['hWnd', 'nIndex'], 'LONG'), 'RegisterClass': (1, ['CONST WNDCLASS*'], ['lpWndClass'], 'ATOM'), 'RegisterClassEx': (1, ['CONST WNDCLASSEX*'], ['lpwcx'], 'ATOM'), 'SetClassLong': (3, ['HWND', 'CLASSLONGINDEX', 'LONG'], ['hWnd', 'nIndex', 'dwNewLong'], 'DWORD'), 'SetClassWord': (3, ['HWND', 'CLASSLONGINDEX', 'WORD'], ['hWnd', 'nIndex', 'wNewWord'], 'WORD'), 'SetWindowLong': (3, ['HWND', 'WINDOWLONGINDEX', 'LONG'], ['hWnd', 'nIndex', 'dwNewLong'], 'LONG'), 'UnregisterClass': (2, ['LPCTSTR', 'HINSTANCE'], ['lpClassName', 'hInstance'], 'BOOL'), 'CallWindowProc': (5, ['WNDPROC', 'HWND', 'WINMSG', 'WPARAM', 'LPARAM'], ['lpPrevWndFunc', 'hWnd', 'Msg', 'wParam', 'lParam'], 'LRESULT'), 'DefWindowProc': (4, ['HWND', 'WINMSG', 'WPARAM', 'LPARAM'], ['hWnd', 'Msg', 'wParam', 'lParam'], 'LRESULT'), 'EnumProps': (2, ['HWND', 'PROPENUMPROC'], ['hWnd', 'lpEnumFunc'], 'int'), 'EnumPropsEx': (3, ['HWND', 'PROPENUMPROCEX', 'LPARAM'], ['hWnd', 'lpEnumFunc', 'lParam'], 'int'), 'GetProp': (2, ['HWND', 'LPCTSTR'], ['hWnd', 'lpString'], 'HANDLE'), 'RemoveProp': (2, ['HWND', 'LPCTSTR'], ['hWnd', 'lpString'], 'HANDLE'), 'SetProp': (3, ['HWND', 'LPCTSTR', 'HANDLE'], ['hWnd', 'lpString', 'hData'], 'BOOL'), 'CloseWindowStation': (1, ['HWINSTA'], ['hWinSta'], 'BOOL'), 'CreateWindowStation': (4, ['LPCTSTR', 'CREATEWINDOWSTATIONFLAGS', 'WINDOWSTATIONACCESSRIGHTS', 'LPSECURITY_ATTRIBUTES'], ['lpwinsta', 'dwFlags', 'dwDesiredAccess', 'lpsa'], 'HWINSTA'), 'EnumWindowStations': (2, ['WINSTAENUMPROC', 'LPARAM'], ['lpEnumFunc', 'lParam'], 'BOOL'), 'GetProcessWindowStation': (0, [], [], 'HWINSTA'), 'GetUserObjectInformation': (5, ['HANDLE', 'USEROBJECTINFORMATIONENUM', 'PVOID', 'DWORD', 'LPDWORD'], ['hObj', 'nIndex', 'pvInfo', 'nLength', 'lpnLengthNeeded'], 'BOOL'), 'OpenWindowStation': (3, ['LPTSTR', 'BOOL', 'WINDOWSTATIONACCESSRIGHTS'], ['lpszWinSta', 'fInherit', 'dwDesiredAccess'], 'HWINSTA'), 'SetProcessWindowStation': (1, ['HWINSTA'], ['hWinSta'], 'BOOL'), 'CloseDesktop': (1, ['HDESK'], ['hDesktop'], 'BOOL'), 'CreateDesktop': (6, ['LPCTSTR', 'LPCTSTR', 'LPDEVMODE', 'DESKTOPFLAGS', 'DESKTOP_ACCESS_MASK', 'LPSECURITY_ATTRIBUTES'], ['lpszDesktop', 'lpszDevice', 'pDevmode', 'dwFlags', 'dwDesiredAccess', 'lpsa'], 'HDESK'), 'CreateDesktopEx': (8, ['LPCTSTR', 'LPCTSTR', 'LPDEVMODE', 'DESKTOPFLAGS', 'DESKTOP_ACCESS_MASK', 'LPSECURITY_ATTRIBUTES', 'ULONG', 'PVOID'], ['lpszDesktop', 'lpszDevice', 'pDevmode', 'dwFlags', 'dwDesiredAccess', 'lpsa', 'ulHeapSize', 'pvoid'], 'HDESK'), 'EnumDesktops': (3, ['HWINSTA', 'DESKTOPENUMPROC', 'LPARAM'], ['hwinsta', 'lpEnumFunc', 'lParam'], 'BOOL'), 'EnumDesktopWindows': (3, ['HDESK', 'WNDENUMPROC', 'LPARAM'], ['hDesktop', 'lpfn', 'lParam'], 'BOOL'), 'GetThreadDesktop': (1, ['DWORD'], ['dwThreadId'], 'HDESK'), 'OpenDesktop': (4, ['LPTSTR', 'DESKTOPFLAGS', 'BOOL', 'DESKTOP_ACCESS_MASK'], ['lpszDesktop', 'dwFlags', 'fInherit', 'dwDesiredAccess'], 'HDESK'), 'OpenInputDesktop': (3, ['DESKTOPFLAGS', 'BOOL', 'DESKTOP_ACCESS_MASK'], ['dwFlags', 'fInherit', 'dwDesiredAccess'], 'HDESK'), 'SetThreadDesktop': (1, ['HDESK'], ['hDesktop'], 'BOOL'), 'SetUserObjectInformation': (4, ['HANDLE', 'USEROBJECTINFORMATIONENUM', 'PVOID', 'DWORD'], ['hObj', 'nIndex', 'pvInfo', 'nLength'], 'BOOL'), 'SwitchDesktop': (1, ['HDESK'], ['hDesktop'], 'BOOL'), 'GetMenuContextHelpId': (1, ['HMENU'], ['hmenu'], 'DWORD'), 'GetWindowContextHelpId': (1, ['HWND'], ['hwnd'], 'DWORD'), 'SetMenuContextHelpId': (2, ['HMENU', 'DWORD'], ['hmenu', 'dwContextHelpId'], 'BOOL'), 'SetWindowContextHelpId': (2, ['HWND', 'DWORD'], ['hwnd', 'dwContextHelpId'], 'BOOL'), 'WinHelp': (4, ['HWND', 'LPCTSTR', 'UINT', 'ULONG_PTR'], ['hWndMain', 'lpszHelp', 'uCommand', 'dwData'], 'BOOL'), 'GetUserObjectSecurity': (5, ['HANDLE', 'PSECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR', 'DWORD', 'LPDWORD'], ['hObj', 'pSIRequested', 'pSD', 'nLength', 'lpnLengthNeeded'], 'BOOL'), 'SetUserObjectSecurity': (3, ['HANDLE', 'PSECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR'], ['hObj', 'pSIRequested', 'pSID'], 'BOOL'), 'SetWinEventHook': (7, ['UINT', 'UINT', 'HMODULE', 'WINEVENTPROC', 'DWORD', 'DWORD', 'WINEVENTFLAGS'], ['eventMin', 'eventMax', 'hmodWinEventProc', 'lpfnWinEventProc', 'idProcess', 'idThread', 'dwflags'], 'HWINEVENTHOOK'), 'UnhookWinEvent': (1, ['HWINEVENTHOOK'], ['hWinEventHook'], 'BOOL'), 'IsWinEventHookInstalled': (1, ['DWORD'], ['event'], 'BOOL'), 'NotifyWinEvent': (4, ['DWORD', 'HWND', 'OBJECTIDENUM', 'LONG'], ['event', 'hwnd', 'idObject', 'idChild'], 'void'), 'CloseTouchInputHandle': (1, ['HTOUCHINPUT'], ['hTouchInput'], 'BOOL'), 'GetTouchInputInfo': (4, ['HTOUCHINPUT', 'UINT', 'PTOUCHINPUT', 'INT'], ['hTouchInput', 'cInputs', 'pInputs', 'cbSize'], 'BOOL'), 'IsTouchWindow': (2, ['HWND', 'PULONG'], ['hWnd', 'pulFlags'], 'BOOL'), 'RegisterTouchWindow': (2, ['HWND', 'ULONG'], ['hWnd', 'ulFlags'], 'BOOL'), 'UnregisterTouchWindow': (1, ['HWND'], ['hWnd'], 'BOOL'), 'CloseGestureInfoHandle': (1, ['HGESTUREINFO'], ['hGestureInfo'], 'BOOL'), 'GetGestureExtraArgs': (3, ['HGESTUREINFO', 'UINT', 'PBYTE'], ['hGestureInfo', 'cbExtraArgs', 'pExtraArgs'], 'BOOL'), 'GetGestureInfo': (2, ['HGESTUREINFO', 'PGESTUREINFO'], ['hGestureInfo', 'pGestureInfo'], 'BOOL'), 'GetGestureConfig': (6, ['HWND', 'DWORD', 'DWORD', 'PUINT', 'PGESTURECONFIG', 'UINT'], ['hwnd', 'dwReserved', 'dwFlags', 'pcIDs', 'pGestureConfig', 'cbSize'], 'BOOL'), 'SetGestureConfig': (5, ['HWND', 'DWORD', 'UINT', 'PGESTURECONFIG', 'UINT'], ['hwnd', 'dwReserved', 'cIDs', 'pGestureConfig', 'cbSize'], 'BOOL'), 'DesktopHasWatermarkText': (0, [], [], 'BOOL'), 'FrostCrashedWindow': (2, ['HWND', 'HWND'], ['hwndToReplace', 'hwndErrorReportOwnerWnd'], 'HWND'), 'GetSendMessageReceiver': (1, ['DWORD'], ['threadId'], 'HWND'), 'GetWindowCompositionAttribute': (2, ['HWND', 'WINCOMPATTRDATA*'], ['hwnd', 'pAttrData'], 'BOOL'), 'GetWindowMinimizeRect': (2, ['HWND', 'RECT*'], ['hwndToQuery', 'pRect'], 'BOOL'), 'GhostWindowFromHungWindow': (1, ['HWND'], ['hwndGhost'], 'HWND'), 'HungWindowFromGhostWindow': (1, ['HWND'], ['hwndGhost'], 'HWND'), 'IsSETEnabled': (0, [], [], 'BOOL'), 'IsServerSideWindow': (1, ['HWND'], ['hwnd'], 'BOOL'), 'IsThreadDesktopComposited': (0, [], [], 'BOOL'), 'IsWindowInDestroy': (1, ['HWND'], ['hwnd'], 'BOOL'), 'MB_GetString': (1, ['INT'], ['strId'], 'LPCWSTR'), 'NtUserSetChildWindowNoActivate': (1, ['HWND'], ['hwndChild'], 'BOOL'), 'QuerySendMessage': (1, ['MSG*'], ['pMsg'], 'BOOL'), 'SetWindowCompositionAttribute': (2, ['HWND', 'WINCOMPATTRDATA*'], ['hwnd', 'pAttrData'], 'BOOL'), 'UpdateWindowTransform': (3, ['HWND', 'D3DMATRIX*', 'DWORD'], ['hwnd', 'pMatrix', 'unk'], 'BOOL'), 'InitializeTouchInjection': (2, ['UINT32', 'TOUCH_FEEDBACK_MODE'], ['maxCount', 'dwMode'], 'BOOL'), 'InjectTouchInput': (2, ['UINT32', 'CONST POINTER_TOUCH_INFO*'], ['count', 'contacts'], 'BOOL'), 'AddPointerInteractionContext': (2, ['HINTERACTIONCONTEXT', 'UINT32'], ['interactionContext', 'pointerId'], 'HRESULT'), 'BufferPointerPacketsInteractionContext': (3, ['HINTERACTIONCONTEXT', 'UINT32', 'CONST POINTER_INFO*'], ['interactionContext', 'entriesCount', 'pointerInfo'], 'HRESULT'), 'CreateInteractionContext': (1, ['HINTERACTIONCONTEXT*'], ['interactionContext'], 'HRESULT'), 'DestroyInteractionContext': (1, ['HINTERACTIONCONTEXT'], ['interactionContext'], 'HRESULT'), 'GetCrossSlideParameterInteractionContext': (3, ['HINTERACTIONCONTEXT', 'CROSS_SLIDE_THRESHOLD', 'FLOAT*'], ['interactionContext', 'threshold', 'distance'], 'HRESULT'), 'GetInertiaParameterInteractionContext': (3, ['HINTERACTIONCONTEXT', 'INERTIA_PARAMETER', 'FLOAT*'], ['interactionContext', 'inertiaParameter', 'value'], 'HRESULT'), 'GetInteractionConfigurationInteractionContext': (3, ['HINTERACTIONCONTEXT', 'UINT32', 'INTERACTION_CONTEXT_CONFIGURATION*'], ['interactionContext', 'configurationCount', 'configuration'], 'HRESULT'), 'GetMouseWheelParameterInteractionContext': (3, ['HINTERACTIONCONTEXT', 'MOUSE_WHEEL_PARAMETER', 'FLOAT*'], ['interactionContext', 'parameter', 'value'], 'HRESULT'), 'GetPropertyInteractionContext': (3, ['HINTERACTIONCONTEXT', 'INTERACTION_CONTEXT_PROPERTY', 'UINT32*'], ['interactionContext', 'contextProperty', 'value'], 'HRESULT'), 'GetStateInteractionContext': (3, ['HINTERACTIONCONTEXT', 'CONST POINTER_INFO*', 'INTERACTION_STATE*'], ['interactionContext', 'pointerInfo', 'state'], 'HRESULT'), 'ProcessBufferedPacketsInteractionContext': (1, ['HINTERACTIONCONTEXT'], ['interactionContext'], 'HRESULT'), 'ProcessInertiaInteractionContext': (1, ['HINTERACTIONCONTEXT'], ['interactionContext'], 'HRESULT'), 'ProcessPointerFramesInteractionContext': (4, ['HINTERACTIONCONTEXT', 'UINT32', 'UINT32', 'CONST POINTER_INFO*'], ['interactionContext', 'entriesCount', 'pointerCount', 'pointerInfo'], 'HRESULT'), 'RegisterOutputCallbackInteractionContext': (3, ['HINTERACTIONCONTEXT', 'INTERACTION_CONTEXT_OUTPUT_CALLBACK', 'VOID*'], ['interactionContext', 'outputCallback', 'clientData'], 'HRESULT'), 'RemovePointerInteractionContext': (2, ['HINTERACTIONCONTEXT', 'UINT32'], ['interactionContext', 'pointerId'], 'HRESULT'), 'ResetInteractionContext': (1, ['HINTERACTIONCONTEXT'], ['interactionContext'], 'HRESULT'), 'SetCrossSlideParametersInteractionContext': (3, ['HINTERACTIONCONTEXT', 'UINT32', 'CROSS_SLIDE_PARAMETER*'], ['interactionContext', 'parameterCount', 'crossSlideParameters'], 'HRESULT'), 'SetInertiaParameterInteractionContext': (3, ['HINTERACTIONCONTEXT', 'INERTIA_PARAMETER', 'FLOAT'], ['interactionContext', 'inertiaParameter', 'value'], 'HRESULT'), 'SetInteractionConfigurationInteractionContext': (3, ['HINTERACTIONCONTEXT', 'UINT32', 'CONST INTERACTION_CONTEXT_CONFIGURATION*'], ['interactionContext', 'configurationCount', 'configuration'], 'HRESULT'), 'SetMouseWheelParameterInteractionContext': (3, ['HINTERACTIONCONTEXT', 'MOUSE_WHEEL_PARAMETER', 'FLOAT'], ['interactionContext', 'parameter', 'value'], 'HRESULT'), 'SetPivotInteractionContext': (4, ['HINTERACTIONCONTEXT', 'FLOAT', 'FLOAT', 'FLOAT'], ['interactionContext', 'x', 'y', 'radius'], 'HRESULT'), 'SetPropertyInteractionContext': (3, ['HINTERACTIONCONTEXT', 'INTERACTION_CONTEXT_PROPERTY', 'UINT32'], ['interactionContext', 'contextProperty', 'value'], 'HRESULT'), 'StopInteractionContext': (1, ['HINTERACTIONCONTEXT'], ['interactionContext'], 'HRESULT'), 'EnableMouseInPointer': (1, ['BOOL'], ['fEnable'], 'BOOL'), 'GetPointerCursorId': (2, ['UINT32', 'UINT32*'], ['pointerId', 'cursorId'], 'BOOL'), 'GetPointerFrameInfo': (3, ['UINT32', 'UINT32*', 'POINTER_INFO*'], ['pointerId', 'pointerCount', 'pointerInfo'], 'BOOL'), 'GetPointerFrameInfoHistory': (4, ['UINT32', 'UINT32*', 'UINT32*', 'POINTER_INFO*'], ['pointerId', 'entriesCount', 'pointerCount', 'pointerInfo'], 'BOOL'), 'GetPointerFramePenInfo': (3, ['UINT32', 'UINT32*', 'POINTER_PEN_INFO*'], ['pointerId', 'pointerCount', 'penInfo'], 'BOOL'), 'GetPointerFramePenInfoHistory': (4, ['UINT32', 'UINT32*', 'UINT32*', 'POINTER_PEN_INFO*'], ['pointerId', 'entriesCount', 'pointerCount', 'penInfo'], 'BOOL'), 'GetPointerFrameTouchInfo': (3, ['UINT32', 'UINT32*', 'POINTER_TOUCH_INFO*'], ['pointerId', 'pointerCount', 'touchInfo'], 'BOOL'), 'GetPointerFrameTouchInfoHistory': (4, ['UINT32', 'UINT32*', 'UINT32*', 'POINTER_TOUCH_INFO*'], ['pointerId', 'entriesCount', 'pointerCount', 'touchInfo'], 'BOOL'), 'GetPointerInfo': (2, ['UINT32', 'POINTER_INFO*'], ['pointerId', 'pointerInfo'], 'BOOL'), 'GetPointerInfoHistory': (3, ['UINT32', 'UINT32*', 'POINTER_INFO*'], ['pointerId', 'entriesCount', 'pointerInfo'], 'BOOL'), 'GetPointerPenInfo': (2, ['UINT32', 'POINTER_PEN_INFO*'], ['pointerId', 'penInfo'], 'BOOL'), 'GetPointerPenInfoHistory': (3, ['UINT32', 'UINT32*', 'POINTER_PEN_INFO*'], ['pointerId', 'entriesCount', 'penInfo'], 'BOOL'), 'GetPointerTouchInfo': (2, ['UINT32', 'POINTER_TOUCH_INFO*'], ['pointerId', 'touchInfo'], 'BOOL'), 'GetPointerTouchInfoHistory': (3, ['UINT32', 'UINT32*', 'POINTER_TOUCH_INFO*'], ['pointerId', 'entriesCount', 'touchInfo'], 'BOOL'), 'GetPointerType': (2, ['UINT32', 'POINTER_INPUT_TYPE*'], ['pointerId', 'pointerType'], 'BOOL'), 'GetUnpredictedMessagePos': (0, [], [], 'DWORD'), 'IsMouseInPointerEnabled': (0, [], [], 'BOOL'), 'SkipPointerFrameMessages': (1, ['UINT32'], ['pointerId'], 'BOOL'), 'EvaluateProximityToPolygon': (4, ['UINT32', 'CONST POINT*', 'CONST TOUCH_HIT_TESTING_INPUT*', 'TOUCH_HIT_TESTING_PROXIMITY_EVALUATION*'], ['numVertices', 'controlPolygon', 'pHitTestingInput', 'pProximityEval'], 'BOOL'), 'EvaluateProximityToRect': (3, ['CONST RECT*', 'CONST TOUCH_HIT_TESTING_INPUT*', 'TOUCH_HIT_TESTING_PROXIMITY_EVALUATION*'], ['controlBoundingBox', 'pHitTestingInput', 'pProximityEval'], 'BOOL'), 'PackTouchHitTestingProximityEvaluation': (2, ['CONST TOUCH_HIT_TESTING_INPUT*', 'CONST TOUCH_HIT_TESTING_PROXIMITY_EVALUATION*'], ['pHitTestingInput', 'pProximityEval'], 'LRESULT'), 'RegisterTouchHitTestingWindow': (2, ['HWND', 'ULONG'], ['hwnd', 'value'], 'BOOL'), 'GetCIMSSM': (1, ['INPUT_MESSAGE_SOURCE*'], ['inputMessageSource'], 'BOOL'), 'GetCurrentInputMessageSource': (1, ['INPUT_MESSAGE_SOURCE*'], ['inputMessageSource'], 'BOOL'), 'GetPointerDevice': (2, ['HANDLE', 'POINTER_DEVICE_INFO*'], ['device', 'pointerDevice'], 'BOOL'), 'GetPointerDeviceCursors': (3, ['HANDLE', 'UINT32*', 'POINTER_DEVICE_CURSOR_INFO*'], ['device', 'cursorCount', 'deviceCursors'], 'BOOL'), 'GetPointerDeviceProperties': (3, ['HANDLE', 'UINT32*', 'POINTER_DEVICE_PROPERTY*'], ['device', 'propertyCount', 'pointerProperties'], 'BOOL'), 'GetPointerDeviceRects': (3, ['HANDLE', 'RECT*', 'RECT*'], ['device', 'pointerDeviceRect', 'displayRect'], 'BOOL'), 'GetPointerDevices': (2, ['UINT32', 'POINTER_DEVICE_INFO*'], ['deviceCount', 'pointerDevices'], 'BOOL'), 'GetRawPointerDeviceData': (5, ['UINT32', 'UINT32', 'UINT32', 'POINTER_DEVICE_PROPERTY*', 'LONG*'], ['pointerId', 'historyCount', 'propertiesCount', 'pProperties', 'pValues'], 'BOOL'), 'RegisterPointerDeviceNotifications': (2, ['HWND', 'BOOL'], ['window', 'notifyRange'], 'BOOL'), 'RegisterSuspendResumeNotification': (2, ['PDEVICE_NOTIFY_SUBSCRIBE_PARAMETERS', 'POWER_NOTIFICATION_FLAGS'], ['hRecipient', 'Flags'], 'HPOWERNOTIFY'), 'UnregisterSuspendResumeNotification': (1, ['HPOWERNOTIFY'], ['RegistrationHandle'], 'BOOL'), 'GetWindowFeedbackSetting': (5, ['HWND', 'FEEDBACK_TYPE', 'GWFS_FLAGS', 'UINT32*', 'VOID*'], ['hwnd', 'feedback', 'dwFlags', 'pSize', 'config'], 'BOOL'), 'SetWindowFeedbackSetting': (5, ['HWND', 'FEEDBACK_TYPE', 'DWORD', 'UINT32', 'CONST VOID*'], ['hwnd', 'feedback', 'dwFlags', 'size', 'configuration'], 'BOOL')}

dict5_wininet = {'CommitUrlCacheEntry': (9, ['LPCTSTR', 'LPCTSTR', 'FILETIME', 'FILETIME', 'CACHEENTRYTYPE', 'LPVOID', 'DWORD', 'LPCTSTR', 'LPCTSTR'], ['lpszUrlName', 'lpszLocalFileName', 'ExpireTime', 'LastModifiedTime', 'CacheEntryType', 'lpHeaderInfo', 'dwHeaderSize', 'lpszFileExtension', 'lpszOriginalUrl'], 'BOOLAPI'), 'CreateMD5SSOHash': (4, ['PWSTR', 'PWSTR', 'PWSTR', 'PBYTE'], ['pszChallengeInfo', 'pwszRealm', 'pwszTarget', 'pbHexHash'], 'BOOL'), 'CreateUrlCacheEntry': (5, ['LPCTSTR', 'DWORD', 'LPCTSTR', 'LPTSTR', 'DWORD'], ['lpszUrlName', 'dwExpectedFileSize', 'lpszFileExtension', 'lpszFileName', 'dwReserved'], 'BOOLAPI'), 'CreateUrlCacheGroup': (2, ['DWORD', 'LPVOID'], ['dwFlags', 'lpReserved'], 'GROUPID'), 'DeleteUrlCacheEntry': (1, ['LPCSTR'], ['lpszUrlName'], 'BOOLAPI'), 'DeleteUrlCacheGroup': (3, ['GROUPID', 'DWORD', 'LPVOID'], ['GroupId', 'dwFlags', 'lpReserved'], 'BOOL'), 'DetectAutoProxyUrl': (3, ['LPSTR', 'DWORD', 'DWORD'], ['lpszAutoProxyUrl', 'dwAutoProxyUrlLength', 'dwDetectFlags'], 'BOOL'), 'FindCloseUrlCache': (1, ['HANDLE'], ['hEnumHandle'], 'BOOLAPI'), 'FindFirstUrlCacheEntry': (3, ['LPCTSTR', 'LPINTERNET_CACHE_ENTRY_INFO', 'LPDWORD'], ['lpszUrlSearchPattern', 'lpFirstCacheEntryInfo', 'lpcbCacheEntryInfo'], 'HANDLE'), 'FindFirstUrlCacheEntryEx': (9, ['LPCTSTR', 'DWORD', 'DWORD', 'GROUPID', 'LPINTERNET_CACHE_ENTRY_INFO', 'LPDWORD', 'LPVOID', 'LPDWORD', 'LPVOID'], ['lpszUrlSearchPattern', 'dwFlags', 'dwFilter', 'GroupId', 'lpFirstCacheEntryInfo', 'lpdwEntryInfo', 'lpGroupAttributes', 'lpcbGroupAttributes', 'lpReserved'], 'HANDLE'), 'FindFirstUrlCacheGroup': (6, ['DWORD', 'DWORD', 'LPVOID', 'DWORD', 'GROUPID*', 'LPVOID'], ['dwFlags', 'dwFilter', 'lpSearchCondition', 'dwSearchCondition', 'lpGroupId', 'lpReserved'], 'HANDLE'), 'FindNextUrlCacheEntry': (3, ['HANDLE', 'LPINTERNET_CACHE_ENTRY_INFO', 'LPDWORD'], ['hEnumHandle', 'lpNextCacheEntryInfo', 'lpcbCacheEntryInfo'], 'BOOLAPI'), 'FindNextUrlCacheEntryEx': (6, ['HANDLE', 'LPINTERNET_CACHE_ENTRY_INFO', 'LPDWORD', 'LPVOID', 'LPDWORD', 'LPVOID'], ['hEnumHandle', 'lpNextCacheEntryInfo', 'lpcbEntryInfo', 'lpGroupAttributes', 'lpcbGroupAttributes', 'lpReserved'], 'BOOL'), 'FindNextUrlCacheGroup': (3, ['HANDLE', 'GROUPID*', 'LPVOID'], ['hFind', 'lpGroupId', 'lpReserved'], 'BOOL'), 'FtpCommand': (6, ['HINTERNET', 'BOOL', 'DWORD', 'LPCTSTR', 'DWORD_PTR', 'HINTERNET*'], ['hConnect', 'fExpectResponse', 'dwFlags', 'lpszCommand', 'dwContext', 'phFtpCommand'], 'BOOL'), 'FtpCreateDirectory': (2, ['HINTERNET', 'LPCTSTR'], ['hConnect', 'lpszDirectory'], 'BOOL'), 'FtpDeleteFile': (2, ['HINTERNET', 'LPCTSTR'], ['hConnect', 'lpszFileName'], 'BOOL'), 'FtpFindFirstFile': (5, ['HINTERNET', 'LPCTSTR', 'LPWIN32_FIND_DATA', 'DWORD', 'DWORD_PTR'], ['hConnect', 'lpszSearchFile', 'lpFindFileData', 'dwFlags', 'dwContext'], 'HINTERNET'), 'FtpGetCurrentDirectory': (3, ['HINTERNET', 'LPTSTR', 'LPDWORD'], ['hConnect', 'lpszCurrentDirectory', 'lpdwCurrentDirectory'], 'BOOL'), 'FtpGetFile': (7, ['HINTERNET', 'LPCTSTR', 'LPCTSTR', 'BOOL', 'FILEATTRIBUTES', 'FTP_TRANSFER_FLAGS', 'DWORD_PTR'], ['hConnect', 'lpszRemoteFile', 'lpszNewFile', 'fFailIfExists', 'dwFlagsAndAttributes', 'dwFlags', 'dwContext'], 'BOOL'), 'FtpGetFileSize': (2, ['HINTERNET', 'LPDWORD'], ['hFile', 'lpdwFileSizeHigh'], 'DWORD'), 'FtpOpenFile': (5, ['HINTERNET', 'LPCTSTR', 'DWORD', 'DWORD', 'DWORD_PTR'], ['hConnect', 'lpszFileName', 'dwAccess', 'dwFlags', 'dwContext'], 'HINTERNET'), 'FtpPutFile': (5, ['HINTERNET', 'LPCTSTR', 'LPCTSTR', 'FTP_TRANSFER_FLAGS', 'DWORD_PTR'], ['hConnect', 'lpszLocalFile', 'lpszNewRemoteFile', 'dwFlags', 'dwContext'], 'BOOL'), 'FtpRemoveDirectory': (2, ['HINTERNET', 'LPCTSTR'], ['hConnect', 'lpszDirectory'], 'BOOL'), 'FtpRenameFile': (3, ['HINTERNET', 'LPCTSTR', 'LPCTSTR'], ['hConnect', 'lpszExisting', 'lpszNew'], 'BOOL'), 'FtpSetCurrentDirectory': (2, ['HINTERNET', 'LPCTSTR'], ['hConnect', 'lpszDirectory'], 'BOOL'), 'GetUrlCacheEntryInfo': (3, ['LPCTSTR', 'LPINTERNET_CACHE_ENTRY_INFO', 'LPDWORD'], ['lpszUrlName', 'lpCacheEntryInfo', 'lpcbCacheEntryInfo'], 'BOOL'), 'GetUrlCacheEntryInfoEx': (7, ['LPCTSTR', 'LPINTERNET_CACHE_ENTRY_INFO', 'LPDWORD', 'LPTSTR', 'LPDWORD', 'LPVOID', 'DWORD'], ['lpszUrl', 'lpCacheEntryInfo', 'lpcbCacheEntryInfo', 'lpszRedirectUrl', 'lpcbRedirectUrl', 'lpReserved', 'dwFlags'], 'BOOLAPI'), 'GetUrlCacheGroupAttribute': (6, ['GROUPID', 'DWORD', 'DWORD', 'LPINTERNET_CACHE_GROUP_INFO', 'LPDWORD', 'LPVOID'], ['gid', 'dwFlags', 'dwAttributes', 'lpGroupInfo', 'lpdwGroupInfo', 'lpReserved'], 'BOOL'), 'GopherCreateLocator': (7, ['LPCTSTR', 'INTERNET_PORT', 'LPCTSTR', 'LPCTSTR', 'DWORD', 'LPTSTR', 'LPDWORD'], ['lpszHost', 'nServerPort', 'lpszDisplayString', 'lpszSelectorString', 'dwGopherType', 'lpszLocator', 'lpdwBufferLength'], 'BOOL'), 'GopherFindFirstFile': (6, ['HINTERNET', 'LPCTSTR', 'LPCTSTR', 'LPGOPHER_FIND_DATA', 'DWORD', 'DWORD_PTR'], ['hConnect', 'lpszLocator', 'lpszSearchString', 'lpFindData', 'dwFlags', 'dwContext'], 'HINTERNET'), 'GopherGetAttribute': (8, ['HINTERNET', 'LPCTSTR', 'LPCTSTR', 'LPBYTE', 'DWORD', 'LPDWORD', 'GOPHER_ATTRIBUTE_ENUMERATOR', 'DWORD_PTR'], ['hConnect', 'lpszLocator', 'lpszAttributeName', 'lpBuffer', 'dwBufferLength', 'lpdwCharactersReturned', 'lpfnEnumerator', 'dwContext'], 'BOOL'), 'GopherGetLocatorType': (2, ['LPCTSTR', 'LPDWORD'], ['lpszLocator', 'lpdwGopherType'], 'BOOL'), 'GopherOpenFile': (5, ['HINTERNET', 'LPCTSTR', 'LPCTSTR', 'DWORD', 'DWORD_PTR'], ['hConnect', 'lpszLocator', 'lpszView', 'dwFlags', 'dwContext'], 'HINTERNET'), 'HttpAddRequestHeaders': (4, ['HINTERNET', 'LPCTSTR', 'DWORD', 'HTTPADDREQFLAG'], ['hConnect', 'lpszHeaders', 'dwHeadersLength', 'dwModifiers'], 'BOOL'), 'HttpEndRequest': (4, ['HINTERNET', 'LPINTERNET_BUFFERS', 'DWORD', 'DWORD_PTR'], ['hRequest', 'lpBuffersOut', 'dwFlags', 'dwContext'], 'BOOL'), 'HttpOpenRequest': (8, ['HINTERNET', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR*', 'INTERNETFLAGS', 'DWORD_PTR'], ['hConnect', 'lpszVerb', 'lpszObjectName', 'lpszVersion', 'lpszReferer', 'lplpszAcceptTypes', 'dwFlags', 'dwContext'], 'HINTERNET'), 'HttpQueryInfo': (5, ['HINTERNET', 'HTTP_QUERY_FLAGS', 'LPVOID', 'LPDWORD', 'LPDWORD'], ['hRequest', 'dwInfoLevel', 'lpvBuffer', 'lpdwBufferLength', 'lpdwIndex'], 'BOOL'), 'HttpSendRequest': (5, ['HINTERNET', 'LPCTSTR', 'DWORD', 'LPVOID', 'DWORD'], ['hRequest', 'lpszHeaders', 'dwHeadersLength', 'lpOptional', 'dwOptionalLength'], 'BOOL'), 'HttpSendRequestEx': (5, ['HINTERNET', 'LPINTERNET_BUFFERS', 'LPINTERNET_BUFFERS', 'DWORD', 'DWORD_PTR'], ['hRequest', 'lpBuffersIn', 'lpBuffersOut', 'dwFlags', 'dwContext'], 'BOOL'), 'InternetAttemptConnect': (1, ['DWORD'], ['dwReserved'], '[ERROR_CODE]'), 'InternetAutodial': (2, ['DWORD', 'HWND'], ['dwFlags', 'hwndParent'], 'BOOL'), 'InternetAutodialHangup': (1, ['DWORD'], ['dwReserved'], 'BOOL'), 'InternetCanonicalizeUrl': (4, ['LPCTSTR', 'LPTSTR', 'LPDWORD', 'INTERNETCANONICALIZEURLFLAGS'], ['lpszUrl', 'lpszBuffer', 'lpdwBufferLength', 'dwFlags'], 'BOOL'), 'InternetCheckConnection': (3, ['LPCTSTR', 'DWORD', 'DWORD'], ['lpszUrl', 'dwFlags', 'dwReserved'], 'BOOL'), 'InternetCloseHandle': (1, ['HINTERNET'], ['hInternet'], 'BOOL'), 'InternetCombineUrl': (5, ['LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD', 'INTERNETCANONICALIZEURLFLAGS'], ['lpszBaseUrl', 'lpszRelativeUrl', 'lpszBuffer', 'lpdwBufferLength', 'dwFlags'], 'BOOL'), 'InternetConfirmZoneCrossing': (4, ['HWND', 'LPSTR', 'LPSTR', 'BOOL'], ['hWnd', 'szUrlPrev', 'szUrlNew', 'bPost'], '[ERROR_CODE]'), 'InternetConnect': (8, ['HINTERNET', 'LPCTSTR', 'INTERNET_PORT', 'LPCTSTR', 'LPCTSTR', 'INTERNETSERVICE', 'INTERNETFLAGS', 'DWORD_PTR'], ['hInternet', 'lpszServerName', 'nServerPort', 'lpszUsername', 'lpszPassword', 'dwService', 'dwFlags', 'dwContext'], 'HINTERNET'), 'InternetCrackUrl': (4, ['LPCTSTR', 'DWORD', 'INTERNETCRACKURLFLAGS', 'LPURL_COMPONENTS'], ['lpszUrl', 'dwUrlLength', 'dwFlags', 'lpUrlComponents'], 'BOOL'), 'InternetCreateUrl': (4, ['LPURL_COMPONENTS', 'INTERNETCRACKURLFLAGS', 'LPTSTR', 'LPDWORD'], ['lpUrlComponents', 'dwFlags', 'lpszUrl', 'lpdwUrlLength'], 'BOOL'), 'InternetDial': (5, ['HWND', 'LPSTR', 'INTERNET_DIAL_FLAGS', 'LPDWORD*', 'DWORD'], ['hwndParent', 'pszEntryName', 'dwFlags', 'lpdwConnection', 'dwReserved'], '[ERROR_CODE]'), 'InternetErrorDlg': (5, ['HWND', 'HINTERNET', 'ERROR_INTERNET', 'INTERNETERRORDLGFLAGS', 'LPVOID*'], ['hWnd', 'hRequest', 'dwError', 'dwFlags', 'lppvData'], '[ERROR_CODE]'), 'InternetFindNextFile': (2, ['HINTERNET', 'LPVOID'], ['hFind', 'lpvFindData'], 'BOOL'), 'InternetGetConnectedState': (2, ['INTERNETGETCONNECTEDSTATEFLAGS*', 'DWORD'], ['lpdwFlags', 'dwReserved'], 'BOOL'), 'InternetGetConnectedStateEx': (4, ['INTERNETGETCONNECTEDSTATEFLAGS*', 'LPSTR', 'DWORD', 'DWORD'], ['lpdwFlags', 'lpszConnectionName', 'dwNameLen', 'dwReserved'], 'BOOL'), 'InternetGetCookie': (4, ['LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD'], ['lpszUrl', 'lpszCookieName', 'lpszCookieData', 'lpdwSize'], 'BOOL'), 'InternetGetCookieEx': (6, ['LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD', 'INTERNETCOOKIEFLAGS', 'LPVOID'], ['pchURL', 'pchCookieName', 'pchCookieData', 'pcchCookieData', 'dwFlags', 'lpReserved'], 'BOOL'), 'InternetGetLastResponseInfo': (3, ['LPDWORD', 'LPTSTR', 'LPDWORD'], ['lpdwError', 'lpszBuffer', 'lpdwBufferLength'], 'BOOL'), 'InternetGoOnline': (3, ['LPSTR', 'HWND', 'DWORD'], ['lpszURL', 'hwndParent', 'dwFlags'], 'BOOL'), 'InternetHangUp': (2, ['DWORD_PTR', 'DWORD'], ['dwConnection', 'dwReserved'], '[ERROR_CODE]'), 'InternetLockRequestFile': (2, ['HINTERNET', 'HANDLE*'], ['hInternet', 'lphLockReqHandle'], 'BOOL'), 'InternetOpen': (5, ['LPCTSTR', 'INTERNETOPENTYPE', 'LPCTSTR', 'LPCTSTR', 'INTERNETOPENFLAGS'], ['lpszAgent', 'dwAccessType', 'lpszProxyName', 'lpszProxyBypass', 'dwFlags'], 'HINTERNET'), 'InternetOpenUrl': (6, ['HINTERNET', 'LPCTSTR', 'LPCTSTR', 'DWORD', 'INTERNETFLAGS', 'DWORD_PTR'], ['hInternet', 'lpszUrl', 'lpszHeaders', 'dwHeadersLength', 'dwFlags', 'dwContext'], 'HINTERNET'), 'InternetQueryDataAvailable': (4, ['HINTERNET', 'LPDWORD', 'DWORD', 'DWORD_PTR'], ['hFile', 'lpdwNumberOfBytesAvailable', 'dwFlags', 'dwContext'], 'BOOL'), 'InternetQueryOption': (4, ['HINTERNET', 'INTERNET_OPTION', 'LPVOID', 'LPDWORD'], ['hInternet', 'dwOption', 'lpBuffer', 'lpdwBufferLength'], 'BOOL'), 'InternetReadFile': (4, ['HINTERNET', 'LPVOID', 'DWORD', 'LPDWORD'], ['hFile', 'lpBuffer', 'dwNumberOfBytesToRead', 'lpdwNumberOfBytesRead'], 'BOOL'), 'InternetReadFileEx': (4, ['HINTERNET', 'LPINTERNET_BUFFERS', 'INTERNETREADFILEFLAGS', 'DWORD_PTR'], ['hFile', 'lpBuffersOut', 'dwFlags', 'dwContext'], 'BOOL'), 'InternetSetCookie': (3, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR'], ['lpszUrl', 'lpszCookieName', 'lpszCookieData'], 'BOOL'), 'InternetSetCookieEx': (5, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'INTERNETCOOKIEFLAGS', 'DWORD_PTR'], ['lpszURL', 'lpszCookieName', 'lpszCookieData', 'dwFlags', 'dwReserved'], 'InternetCookieState'), 'InternetSetFilePointer': (5, ['HINTERNET', 'LONG', 'PVOID', 'DWORD', 'DWORD_PTR'], ['hFile', 'lDistanceToMove', 'pReserved', 'dwMoveMethod', 'dwContext'], 'DWORD'), 'InternetSetOption': (4, ['HINTERNET', 'INTERNET_OPTION', 'LPVOID', 'DWORD'], ['hInternet', 'dwOption', 'lpBuffer', 'dwBufferLength'], 'BOOL'), 'InternetSetStatusCallback': (2, ['HINTERNET', 'INTERNET_STATUS_CALLBACK'], ['hInternet', 'lpfnInternetCallback'], 'INTERNET_STATUS_CALLBACK'), 'InternetTimeFromSystemTime': (4, ['CONST SYSTEMTIME*', 'DWORD', 'LPSTR', 'DWORD'], ['pst', 'dwRFC', 'lpszTime', 'cbTime'], 'BOOL'), 'InternetTimeToSystemTime': (3, ['LPCSTR', 'SYSTEMTIME*', 'DWORD'], ['lpszTime', 'pst', 'dwReserved'], 'BOOL'), 'InternetUnlockRequestFile': (1, ['HANDLE'], ['hLockRequestInfo'], 'BOOLAPI'), 'InternetWriteFile': (4, ['HINTERNET', 'LPCVOID', 'DWORD', 'LPDWORD'], ['hFile', 'lpBuffer', 'dwNumberOfBytesToWrite', 'lpdwNumberOfBytesWritten'], 'BOOL'), 'ReadUrlCacheEntryStream': (5, ['HANDLE', 'DWORD', 'LPVOID', 'LPDWORD', 'DWORD'], ['hUrlCacheStream', 'dwLocation', 'lpBuffer', 'lpdwLen', 'dwReserved'], 'BOOLAPI'), 'ResumeSuspendedDownload': (2, ['HINTERNET', 'DWORD'], ['hRequest', 'dwResultCode'], 'BOOL'), 'RetrieveUrlCacheEntryFile': (4, ['LPCTSTR', 'LPINTERNET_CACHE_ENTRY_INFO', 'LPDWORD', 'DWORD'], ['lpszUrlName', 'lpCacheEntryInfo', 'lpcbCacheEntryInfo', 'dwReserved'], 'BOOLAPI'), 'RetrieveUrlCacheEntryStream': (5, ['LPCTSTR', 'LPINTERNET_CACHE_ENTRY_INFO', 'LPDWORD', 'BOOL', 'DWORD'], ['lpszUrlName', 'lpCacheEntryInfo', 'lpcbCacheEntryInfo', 'fRandomRead', 'dwReserved'], 'HANDLE'), 'SetUrlCacheEntryGroup': (6, ['LPCSTR', 'DWORD', 'GROUPID', 'LPBYTE', 'DWORD', 'LPVOID'], ['lpszUrlName', 'dwFlags', 'GroupId', 'pbGroupAttributes', 'cbGroupAttributes', 'lpReserved'], 'BOOLAPI'), 'SetUrlCacheEntryInfo': (3, ['LPCTSTR', 'LPINTERNET_CACHE_ENTRY_INFO', 'CACHEENTRYFIELDCONTROL'], ['lpszUrlName', 'lpCacheEntryInfo', 'dwFieldControl'], 'BOOLAPI'), 'SetUrlCacheGroupAttribute': (5, ['GROUPID', 'DWORD', 'DWORD', 'LPINTERNET_CACHE_GROUP_INFO', 'LPVOID'], ['gid', 'dwFlags', 'dwAttributes', 'lpGroupInfo', 'lpReserved'], 'BOOL'), 'UnlockUrlCacheEntryFile': (2, ['LPCSTR', 'DWORD'], ['lpszUrlName', 'dwReserved'], 'BOOLAPI'), 'UnlockUrlCacheEntryStream': (2, ['HANDLE', 'DWORD'], ['hUrlCacheStream', 'dwReserved'], 'BOOLAPI'), 'InternetClearAllPerSiteCookieDecisions': (0, [], [], 'BOOL'), 'InternetEnumPerSiteCookieDecision': (4, ['LPTSTR', 'UNSIGNED LONG*', 'UNSIGNED LONG*', 'UNSIGNED LONG'], ['pszSiteName', 'pcSiteNameSize', 'pdwDecision', 'dwIndex'], 'BOOL'), 'InternetGetPerSiteCookieDecision': (2, ['LPCTSTR', 'UNSIGNED LONG*'], ['pchHostName', 'pResult'], 'BOOL'), 'InternetSetPerSiteCookieDecision': (2, ['LPCTSTR', 'DWORD'], ['pchHostName', 'dwDecision'], 'BOOL'), 'PrivacyGetZonePreferenceW': (5, ['URLZONE|DWORD', 'DWORD', 'LPDWORD', 'LPWSTR', 'LPDWORD'], ['dwZone', 'dwType', 'pdwTemplate', 'pszBuffer', 'pdwBufferLength'], '[ERROR_CODE]'), 'PrivacySetZonePreferenceW': (4, ['URLZONE|DWORD', 'DWORD', 'DWORD', 'LPCWSTR'], ['dwZone', 'dwType', 'dwTemplate', 'pszPreference'], '[ERROR_CODE]'), 'InternetInitializeAutoProxyDll': (1, ['DWORD'], ['dwReserved'], 'BOOL'), 'InternetAlgIdToString': (4, ['ALG_ID', 'LPTSTR', 'LPDWORD', 'DWORD'], ['ai', 'lpstr', 'lpdwstrLength', 'dwReserved'], 'BOOLAPI'), 'InternetSecurityProtocolToString': (4, ['DWORD', 'LPTSTR', 'LPDWORD', 'DWORD'], ['dwProtocol', 'lpstr', 'lpdwstrLength', 'dwReserved'], 'BOOLAPI'), 'InternetGetSecurityInfoByURL': (3, ['LPSTR', 'PCCERT_CHAIN_CONTEXT*', 'DWORD*'], ['lpszURL', 'ppCertChain', 'pdwSecureFlags'], 'BOOLAPI'), 'ShowSecurityInfo': (2, ['HWND', 'LPINTERNET_SECURITY_INFO'], ['hWndParent', 'pSecurityInfo'], '[ERROR_CODE]'), 'ShowX509EncodedCertificate': (3, ['HWND', 'LPBYTE', 'DWORD'], ['hWndParent', 'lpCert', 'cbCert'], '[ERROR_CODE]'), 'ShowClientAuthCerts': (1, ['HWND'], ['hWndParent'], '[ERROR_CODE]'), 'ParseX509EncodedCertificateForListBoxEntry': (4, ['LPBYTE', 'DWORD', 'LPSTR', 'LPDWORD'], ['lpCert', 'cbCert', 'lpszListBoxEntry', 'lpdwListBoxEntry'], '[ERROR_CODE]'), 'InternetShowSecurityInfoByURL': (2, ['LPSTR', 'HWND'], ['lpszURL', 'hwndParent'], 'BOOLAPI'), 'InternetGetCertByURL': (3, ['LPSTR', 'LPSTR', 'DWORD'], ['lpszURL', 'lpszCertText', 'dwcbCertText'], 'BOOLAPI'), 'InternetGetCertByURLA': (3, ['LPSTR', 'LPSTR', 'DWORD'], ['lpszURL', 'lpszCertText', 'dwcbCertText'], 'BOOLAPI'), 'InternetFortezzaCommand': (3, ['FORTCMD', 'HWND', 'DWORD_PTR'], ['dwCommand', 'hwnd', 'dwReserved'], 'BOOLAPI'), 'InternetQueryFortezzaStatus': (2, ['FORTSTAT*', 'DWORD_PTR'], ['pdwStatus', 'dwReserved'], 'BOOLAPI'), 'InternetDebugGetLocalTime': (2, ['SYSTEMTIME*', 'DWORD*'], ['pstLocalTime', 'pdwReserved'], 'BOOLAPI'), 'InternetWriteFileEx': (4, ['HINTERNET', 'LPINTERNET_BUFFERS', 'DWORD', 'DWORD_PTR'], ['hFile', 'lpBuffersIn', 'dwFlags', 'dwContext'], 'BOOLAPI'), 'FindP3PPolicySymbol': (1, ['CONST CHAR*'], ['pszSymbol'], 'P3PStatus'), 'HttpPushEnable': (3, ['HINTERNET', 'HTTP_PUSH_TRANSPORT_SETTING*', 'HTTP_PUSH_WAIT_HANDLE*'], ['hRequest', 'pTransportSetting', 'phWait'], '[ERROR_CODE]'), 'HttpPushWait': (3, ['HTTP_PUSH_WAIT_HANDLE', 'HTTP_PUSH_WAIT_TYPE', 'HTTP_PUSH_NOTIFICATION_STATUS*'], ['hWait', 'eType', 'pNotificationStatus'], '[ERROR_CODE]'), 'HttpPushClose': (1, ['HTTP_PUSH_WAIT_HANDLE'], ['hWait'], 'VOID'), 'HttpCheckDavCompliance': (5, ['LPCSTR', 'LPCSTR', 'LPBOOL', 'HWND', 'LPVOID'], ['lpszUrl', 'lpszComplianceToken', 'lpfFound', 'hWnd', 'lpvReserved'], 'BOOLAPI'), 'IsUrlCacheEntryExpired': (3, ['LPCTSTR', 'DWORD', 'FILETIME*'], ['lpszUrlName', 'dwFlags', 'pftLastModified'], 'BOOLAPI'), 'CreateUrlCacheEntryExW': (6, ['LPCWSTR', 'DWORD', 'LPCWSTR', 'LPWSTR', 'DWORD', 'BOOL'], ['lpszUrlName', 'dwExpectedFileSize', 'lpszFileExtension', 'lpszFileName', 'dwReserved', 'fPreserveIncomingFileName'], 'BOOLAPI'), 'GetUrlCacheEntryBinaryBlob': (7, ['PCWSTR', 'DWORD*', 'FILETIME*', 'FILETIME*', 'FILETIME*', 'BYTE**', 'DWORD*'], ['pwszUrlName', 'dwType', 'pftExpireTime', 'pftAccessTime', 'pftModifiedTime', 'ppbBlob', 'pcbBlob'], '[ERROR_CODE]'), 'CommitUrlCacheEntryBinaryBlob': (6, ['PCWSTR', 'DWORD', 'FILETIME', 'FILETIME', 'CONST BYTE*', 'DWORD'], ['pwszUrlName', 'dwType', 'ftExpireTime', 'ftModifiedTime', 'pbBlob', 'cbBlob'], '[ERROR_CODE]'), 'CreateUrlCacheContainer': (8, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'DWORD', 'DWORD', 'INTERNET_CACHE_CONTAINER_FLAGS', 'LPVOID', 'LPDWORD'], ['Name', 'lpCachePrefix', 'lpszCachePath', 'KBCacheLimit', 'dwContainerType', 'dwOptions', 'pvBuffer', 'cbBuffer'], 'BOOLAPI'), 'DeleteUrlCacheContainer': (2, ['LPCTSTR', 'DWORD'], ['Name', 'dwOptions'], 'BOOLAPI'), 'FindFirstUrlCacheContainer': (4, ['LPDWORD', 'LPINTERNET_CACHE_CONTAINER_INFO', 'LPDWORD', 'CACHE_FIND_CONTAINER_FLAGS'], ['pdwModified', 'lpContainerInfo', 'lpcbContainerInfo', 'dwOptions'], 'HANDLE'), 'FindNextUrlCacheContainer': (3, ['HANDLE', 'LPINTERNET_CACHE_CONTAINER_INFO', 'LPDWORD'], ['hEnumHandle', 'lpContainerInfo', 'lpcbContainerInfo'], 'BOOLAPI'), 'FreeUrlCacheSpace': (3, ['LPCTSTR', 'DWORD', 'DWORD'], ['lpszCachePath', 'dwSize', 'dwFilter'], 'BOOLAPI'), 'GetUrlCacheConfigInfo': (3, ['LPINTERNET_CACHE_CONFIG_INFO', 'LPDWORD', 'CACHE_CONFIG_FC'], ['lpCacheConfigInfo', 'lpcbCacheConfigInfo', 'dwFieldControl'], 'BOOLAPI'), 'SetUrlCacheConfigInfo': (2, ['LPINTERNET_CACHE_CONFIG_INFO', 'CACHE_CONFIG_FC'], ['lpCacheConfigInfo', 'dwFieldControl'], 'BOOLAPI'), 'RunOnceUrlCache': (4, ['HWND', 'HINSTANCE', 'LPSTR', 'INT'], ['hwnd', 'hinst', 'lpszCmd', 'nCmdShow'], '[ERROR_CODE]'), 'DeleteIE3Cache': (4, ['HWND', 'HINSTANCE', 'LPSTR', 'INT'], ['hwnd', 'hinst', 'lpszCmd', 'nCmdShow'], '[ERROR_CODE]'), 'UpdateUrlCacheContentPath': (1, ['LPCSTR'], ['szNewPath'], 'BOOLAPI'), 'RegisterUrlCacheNotification': (5, ['HWND', 'UINT', 'GROUPID', 'CACHE_NOTIFY_FILTER_OPTIONS', 'DWORD'], ['hWnd', 'uMsg', 'gid', 'dwOpsFilter', 'dwReserved'], 'BOOLAPI'), 'GetUrlCacheHeaderData': (2, ['DWORD', 'LPDWORD'], ['nIdx', 'lpdwData'], 'BOOLAPI'), 'SetUrlCacheHeaderData': (2, ['DWORD', 'DWORD'], ['nIdx', 'dwData'], 'BOOLAPI'), 'IncrementUrlCacheHeaderData': (2, ['DWORD', 'LPDWORD'], ['nIdx', 'lpdwData'], 'BOOLAPI'), 'LoadUrlCacheContent': (0, [], [], 'BOOLAPI'), 'GetUrlCacheContainerInfo': (4, ['LPTSTR', 'LPINTERNET_CACHE_CONTAINER_INFO', 'LPDWORD', 'DWORD'], ['lpszUrlName', 'lpContainerInfo', 'lpcbContainerInfo', 'dwOptions'], 'BOOLAPI'), 'AppCacheLookup': (3, ['PCWSTR', 'APP_CACHE_LOOKUP_FLAGS', 'APP_CACHE_HANDLE*'], ['pwszUrl', 'dwFlags', 'phAppCache'], '[ERROR_CODE]'), 'AppCacheCheckManifest': (8, ['PCWSTR', 'PCWSTR', 'CONST BYTE*', 'DWORD', 'CONST BYTE*', 'DWORD', 'APP_CACHE_STATE*', 'APP_CACHE_HANDLE*'], ['pwszMasterUrl', 'pwszManifestUrl', 'pbManifestData', 'dwManifestDataSize', 'pbManifestResponseHeaders', 'dwManifestResponseHeadersSize', 'peState', 'phNewAppCache'], '[ERROR_CODE]'), 'AppCacheGetDownloadList': (2, ['APP_CACHE_HANDLE', 'APP_CACHE_DOWNLOAD_LIST*'], ['hAppCache', 'pDownloadList'], '[ERROR_CODE]'), 'AppCacheFreeDownloadList': (1, ['APP_CACHE_DOWNLOAD_LIST*'], ['pDownloadList'], 'VOID'), 'AppCacheFinalize': (4, ['APP_CACHE_HANDLE', 'CONST BYTE*', 'DWORD', 'APP_CACHE_FINALIZE_STATE*'], ['hAppCache', 'pbManifestData', 'dwManifestDataSize', 'peState'], '[ERROR_CODE]'), 'AppCacheGetFallbackUrl': (3, ['APP_CACHE_HANDLE', 'PCWSTR', 'PWSTR*'], ['hAppCache', 'pwszUrl', 'ppwszFallbackUrl'], '[ERROR_CODE]'), 'AppCacheGetManifestUrl': (2, ['APP_CACHE_HANDLE', 'PWSTR*'], ['hAppCache', 'ppwszManifestUrl'], '[ERROR_CODE]'), 'AppCacheDuplicateHandle': (2, ['APP_CACHE_HANDLE', 'APP_CACHE_HANDLE*'], ['hAppCache', 'phDuplicatedAppCache'], '[ERROR_CODE]'), 'AppCacheCloseHandle': (1, ['APP_CACHE_HANDLE'], ['hAppCache'], 'VOID'), 'AppCacheFreeGroupList': (1, ['APP_CACHE_GROUP_LIST*'], ['pAppCacheGroupList'], 'VOID'), 'AppCacheGetGroupList': (1, ['APP_CACHE_GROUP_LIST*'], ['pAppCacheGroupList'], '[ERROR_CODE]'), 'AppCacheGetInfo': (2, ['APP_CACHE_HANDLE', 'APP_CACHE_GROUP_INFO*'], ['hAppCache', 'pAppCacheInfo'], '[ERROR_CODE]'), 'AppCacheDeleteGroup': (1, ['PCWSTR'], ['pwszManifestUrl'], '[ERROR_CODE]'), 'AppCacheGetIEGroupList': (1, ['APP_CACHE_GROUP_LIST*'], ['pAppCacheGroupList'], '[ERROR_CODE]'), 'AppCacheDeleteIEGroup': (1, ['PCWSTR'], ['pwszManifestUrl'], '[ERROR_CODE]'), 'AppCacheFreeIESpace': (1, ['FILETIME'], ['ftCutOff'], '[ERROR_CODE]'), 'HttpOpenDependencyHandle': (3, ['HINTERNET', 'BOOL', 'HTTP_DEPENDENCY_HANDLE*'], ['hRequestHandle', 'fBackground', 'phDependencyHandle'], '[ERROR_CODE]'), 'HttpCloseDependencyHandle': (1, ['HTTP_DEPENDENCY_HANDLE'], ['hDependencyHandle'], 'VOID'), 'HttpDuplicateDependencyHandle': (2, ['HTTP_DEPENDENCY_HANDLE', 'HTTP_DEPENDENCY_HANDLE*'], ['hDependencyHandle', 'phDuplicatedDependencyHandle'], '[ERROR_CODE]'), 'UrlCacheFreeEntryInfo': (1, ['PURLCACHE_ENTRY_INFO'], ['pCacheEntryInfo'], 'VOID'), 'UrlCacheGetEntryInfo': (3, ['APP_CACHE_HANDLE', 'PCWSTR', 'PURLCACHE_ENTRY_INFO'], ['hAppCache', 'pcwszUrl', 'pCacheEntryInfo'], '[ERROR_CODE]'), 'UrlCacheCloseEntryHandle': (1, ['URLCACHE_HANDLE'], ['hEntryFile'], 'VOID'), 'UrlCacheRetrieveEntryFile': (4, ['APP_CACHE_HANDLE', 'PCWSTR', 'PURLCACHE_ENTRY_INFO', 'URLCACHE_HANDLE*'], ['hAppCache', 'pcwszUrl', 'pCacheEntryInfo', 'phEntryFile'], '[ERROR_CODE]'), 'UrlCacheReadEntryStream': (5, ['URLCACHE_HANDLE', 'ULONGLONG', 'PVOID', 'DWORD', 'PDWORD'], ['hUrlCacheStream', 'ullLocation', 'pBuffer', 'dwBufferLen', 'pdwBufferLen'], '[ERROR_CODE]'), 'UrlCacheRetrieveEntryStream': (5, ['APP_CACHE_HANDLE', 'PCWSTR', 'BOOL', 'PURLCACHE_ENTRY_INFO', 'URLCACHE_HANDLE*'], ['hAppCache', 'pcwszUrl', 'fRandomRead', 'pCacheEntryInfo', 'phEntryStream'], '[ERROR_CODE]'), 'UrlCacheUpdateEntryExtraData': (4, ['APP_CACHE_HANDLE', 'PCWSTR', 'CONST BYTE*', 'DWORD'], ['hAppCache', 'pcwszUrl', 'pbExtraData', 'cbExtraData'], '[ERROR_CODE]'), 'UrlCacheCreateContainer': (5, ['CONST WCHAR*', 'CONST WCHAR*', 'CONST WCHAR*', 'ULONGLONG', 'INTERNET_CACHE_CONTAINER_FLAGS'], ['pwszName', 'pwszPrefix', 'pwszDirectory', 'ullLimit', 'dwOptions'], '[ERROR_CODE]'), 'UrlCacheCheckEntriesExist': (3, ['PCWSTR*', 'DWORD', 'BOOL*'], ['rgpwszUrls', 'cEntries', 'rgfExist'], '[ERROR_CODE]'), 'UrlCacheGetContentPaths': (2, ['PWSTR**', 'DWORD*'], ['pppwszDirectories', 'pcDirectories'], '[ERROR_CODE]'), 'UrlCacheGetGlobalLimit': (2, ['URL_CACHE_LIMIT_TYPE', 'ULONGLONG*'], ['limitType', 'pullLimit'], '[ERROR_CODE]'), 'UrlCacheSetGlobalLimit': (2, ['URL_CACHE_LIMIT_TYPE', 'ULONGLONG'], ['limitType', 'ullLimit'], '[ERROR_CODE]'), 'UrlCacheReloadSettings': (0, [], [], '[ERROR_CODE]'), 'UrlCacheContainerSetEntryMaximumAge': (2, ['CONST WCHAR*', 'DWORD'], ['pwszPrefix', 'dwEntryMaxAge'], '[ERROR_CODE]'), 'InternetGetDialEngineW': (3, ['LPWSTR', 'IDIALEVENTSINK*', 'IDIALENGINE**'], ['pwzConnectoid', 'pdes', 'ppde'], 'HRESULT'), 'InternetGetDialBrandingW': (2, ['LPWSTR', 'IDIALBRANDING**'], ['pwzConnectoid', 'ppdb'], 'HRESULT'), 'ReadGuidsForConnectedNetworks': (6, ['DWORD*', 'PWSTR**', 'BSTR**', 'PWSTR**', 'DWORD*', 'DWORD*'], ['pcNetworks', 'pppwszNetworkGuids', 'pppbstrNetworkNames', 'pppwszGWMacs', 'pcGatewayMacs', 'pdwFlags'], 'BOOLAPI'), 'InternetSetDialState': (3, ['LPCSTR', 'DWORD', 'DWORD'], ['lpszConnectoid', 'dwState', 'dwReserved'], 'BOOLAPI'), 'IsHostInProxyBypassList': (3, ['INTERNET_SCHEME', 'LPCSTR', 'DWORD'], ['tScheme', 'lpszHost', 'cchHost'], 'BOOLAPI'), 'InternetFreeProxyInfoList': (1, ['WININET_PROXY_INFO_LIST*'], ['pProxyInfoList'], 'VOID'), 'InternetGetProxyForUrl': (3, ['HINTERNET', 'PCWSTR', 'WININET_PROXY_INFO_LIST*'], ['hInternet', 'pcwszUrl', 'pProxyInfoList'], '[ERROR_CODE]'), 'DoConnectoidsExist': (0, [], [], 'BOOL'), 'GetDiskInfoA': (4, ['PCSTR', 'PDWORD', 'PDWORDLONG', 'PDWORDLONG'], ['pszPath', 'pdwClusterSize', 'pdlAvail', 'pdlTotal'], 'BOOLAPI'), 'PerformOperationOverUrlCacheA': (9, ['PCSTR', 'DWORD', 'DWORD', 'GROUPID', 'PVOID', 'PDWORD', 'PVOID', 'CACHE_OPERATOR', 'PVOID'], ['pszUrlSearchPattern', 'dwFlags', 'dwFilter', 'GroupId', 'pReserved1', 'pdwReserved2', 'pReserved3', 'op', 'pOperatorData'], 'BOOL'), 'IsProfilesEnabled': (0, [], [], 'BOOL'), '_GetFileExtensionFromUrl': (4, ['LPSTR', 'DWORD', 'LPSTR', 'DWORD*'], ['lpszUrl', 'dwFlags', 'lpszExt', 'pcchExt'], '[ERROR_CODE]'), 'InternalInternetGetCookie': (3, ['LPCSTR', 'LPSTR', 'DWORD*'], ['lpszUrl', 'lpszCookieData', 'lpdwDataSize'], '[ERROR_CODE]'), 'ImportCookieFile': (1, ['LPCTSTR'], ['szFilename'], 'BOOLAPI'), 'ExportCookieFile': (2, ['LPCTSTR', 'BOOL'], ['szFilename', 'fAppend'], 'BOOLAPI'), 'IsDomainLegalCookieDomain': (2, ['LPCTSTR', 'LPCTSTR'], ['pchDomain', 'pchFullDomain'], 'BOOLAPI'), 'UrlZonesDetach': (0, [], [], 'VOID'), 'ReadUrlCacheEntryStreamEx': (4, ['HANDLE', 'DWORDLONG', 'LPVOID', 'LPDWORD'], ['hUrlCacheStream', 'qwLocation', 'lpBuffer', 'lpdwLen'], 'BOOLAPI'), 'MapResourceToPolicy': (4, ['P3PRESOURCE*', 'P3PURL', 'UNSIGNED LONG', 'P3PSIGNAL*'], ['pResource', 'pszPolicy', 'dwSize', 'pSignal'], 'P3PStatus'), 'GetP3PPolicy': (4, ['P3PCURL', 'HANDLE', 'P3PCXSL', 'P3PSIGNAL*'], ['pszPolicyURL', 'hDestination', 'pszXSLtransform', 'pSignal'], 'P3PStatus'), 'FreeP3PObject': (1, ['P3PHANDLE'], ['hObject'], 'P3PStatus'), 'GetP3PRequestStatus': (1, ['P3PHANDLE'], ['hObject'], 'P3PStatus'), 'InternetSetOptionEx': (5, ['HINTERNET', 'INTERNET_OPTION', 'LPVOID', 'DWORD', 'DWORD'], ['hInternet', 'dwOption', 'lpBuffer', 'dwBufferLength', 'dwFlags'], 'BOOLAPI'), 'FtpPutFileEx': (5, ['HINTERNET', 'LPCWSTR', 'LPCSTR', 'DWORD', 'DWORD_PTR'], ['hFtpSession', 'lpszLocalFile', 'lpszNewRemoteFile', 'dwFlags', 'dwContext'], 'BOOLAPI'), 'FtpGetFileEx': (7, ['HINTERNET', 'LPCSTR', 'LPCWSTR', 'BOOL', 'FILEATTRIBUTES', 'FTP_TRANSFER_FLAGS', 'DWORD_PTR'], ['hFtpSession', 'lpszRemoteFile', 'lpszNewFile', 'fFailIfExists', 'dwFlagsAndAttributes', 'dwFlags', 'dwContext'], 'BOOLAPI'), 'DeleteWpadCacheForNetworks': (1, ['WPAD_CACHE_DELETE'], ['enType'], 'BOOLAPI'), 'HttpWebSocketCompleteUpgrade': (2, ['HINTERNET', 'DWORD_PTR'], ['hRequest', 'dwContext'], 'HINTERNET'), 'HttpWebSocketSend': (4, ['HINTERNET', 'HTTP_WEB_SOCKET_BUFFER_TYPE', 'PVOID', 'DWORD'], ['hWebSocket', 'BufferType', 'pvBuffer', 'dwBufferLength'], 'BOOLAPI'), 'HttpWebSocketReceive': (5, ['HINTERNET', 'PVOID', 'DWORD', 'DWORD*', 'HTTP_WEB_SOCKET_BUFFER_TYPE*'], ['hWebSocket', 'pvBuffer', 'dwBufferLength', 'pdwBytesRead', 'pBufferType'], 'BOOLAPI'), 'HttpWebSocketClose': (4, ['HINTERNET', 'HTTP_WEB_SOCKET_CLOSE_STATUS', 'PVOID', 'DWORD'], ['hWebSocket', 'usStatus', 'pvReason', 'dwReasonLength'], 'BOOLAPI'), 'HttpWebSocketShutdown': (4, ['HINTERNET', 'HTTP_WEB_SOCKET_CLOSE_STATUS', 'PVOID', 'DWORD'], ['hWebSocket', 'usStatus', 'pvReason', 'dwReasonLength'], 'BOOLAPI'), 'HttpWebSocketQueryCloseStatus': (5, ['HINTERNET', 'HTTP_WEB_SOCKET_CLOSE_STATUS*', 'PVOID', 'DWORD', 'DWORD*'], ['hWebSocket', 'pusStatus', 'pvReason', 'dwReasonLength', 'pdwReasonLengthConsumed'], 'BOOLAPI')}

dict5_winmm = {'auxGetDevCaps': (3, ['UINT_PTR', 'LPAUXCAPS', 'UINT'], ['uDeviceID', 'lpCaps', 'cbCaps'], 'MMRESULT'), 'auxGetNumDevs': (0, [], [], 'UINT'), 'auxGetVolume': (2, ['UINT', 'LPDWORD'], ['uDeviceID', 'lpdwVolume'], 'MMRESULT'), 'auxOutMessage': (4, ['UINT', 'UINT', 'DWORD_PTR', 'DWORD_PTR'], ['uDeviceID', 'uMsg', 'dwParam1', 'dwParam2'], 'MMRESULT'), 'auxSetVolume': (2, ['UINT', 'DWORD'], ['uDeviceID', 'dwVolume'], 'MMRESULT'), 'joyConfigChanged': (1, ['DWORD'], ['dwFlags'], 'MMRESULT'), 'joyGetDevCaps': (3, ['UINT_PTR', 'LPJOYCAPS', 'UINT'], ['uJoyID', 'pjc', 'cbjc'], 'MMRESULT'), 'joyGetNumDevs': (0, [], [], 'UINT'), 'joyGetPos': (2, ['UINT', 'LPJOYINFO'], ['uJoyID', 'pji'], 'MMRESULT'), 'joyGetPosEx': (2, ['UINT', 'LPJOYINFOEX'], ['uJoyID', 'pji'], 'MMRESULT'), 'joyGetThreshold': (2, ['UINT', 'LPUINT'], ['uJoyID', 'puThreshold'], 'MMRESULT'), 'joyReleaseCapture': (1, ['UINT'], ['uJoyID'], 'MMRESULT'), 'joySetCapture': (4, ['HWND', 'UINT', 'UINT', 'BOOL'], ['hwnd', 'uJoyID', 'uPeriod', 'fChanged'], 'MMRESULT'), 'joySetThreshold': (2, ['UINT', 'UINT'], ['uJoyID', 'uThreshold'], 'MMRESULT'), 'mciExecute': (1, ['LPCSTR'], ['pszCommand'], 'BOOL'), 'mciGetCreatorTask': (1, ['MCIDEVICEID'], ['IDDevice'], 'HANDLE'), 'mciGetDeviceID': (1, ['LPCTSTR'], ['lpszDevice'], 'MCIDEVICEID'), 'mciGetDeviceIDFromElementID': (2, ['DWORD', 'LPCTSTR'], ['dwElementID', 'lpstrType'], 'MCIDEVICEID'), 'mciGetErrorString': (3, ['DWORD', 'LPTSTR', 'UINT'], ['fdwError', 'lpszErrorText', 'cchErrorText'], 'BOOL'), 'mciGetYieldProc': (2, ['MCIDEVICEID', 'LPDWORD'], ['IDDevice', 'lpdwYieldData'], 'YIELDPROC'), 'mciSendCommand': (4, ['MCIDEVICEID', 'UINT', 'DWORD', 'DWORD_PTR'], ['IDDevice', 'uMsg', 'fdwCommand', 'dwParam'], 'MCIERROR'), 'mciSendString': (4, ['LPCTSTR', 'LPTSTR', 'UINT', 'HANDLE'], ['lpszCommand', 'lpszReturnString', 'cchReturn', 'hwndCallback'], 'MCIERROR'), 'mciSetYieldProc': (3, ['MCIDEVICEID', 'YIELDPROC', 'DWORD'], ['IDDevice', 'yp', 'dwYieldData'], 'UINT'), 'midiConnect': (3, ['HMIDI', 'HMIDIOUT', 'LPVOID'], ['hMidi', 'hmo', 'pReserved'], 'MMRESULT'), 'midiDisconnect': (3, ['HMIDI', 'HMIDIOUT', 'LPVOID'], ['hMidi', 'hmo', 'pReserved'], 'MMRESULT'), 'midiInAddBuffer': (3, ['HMIDIIN', 'LPMIDIHDR', 'UINT'], ['hMidiIn', 'lpMidiInHdr', 'cbMidiInHdr'], 'MMRESULT'), 'midiInClose': (1, ['HMIDIIN'], ['hMidiIn'], 'MMRESULT'), 'midiInGetDevCaps': (3, ['UINT_PTR', 'LPMIDIINCAPS', 'UINT'], ['uDeviceID', 'lpMidiInCaps', 'cbMidiInCaps'], 'MMRESULT'), 'midiInGetErrorText': (3, ['MMRESULT', 'LPTSTR', 'UINT'], ['wError', 'lpText', 'cchText'], 'MMRESULT'), 'midiInGetID': (2, ['HMIDIIN', 'LPUINT'], ['hmi', 'puDeviceID'], 'MMRESULT'), 'midiInGetNumDevs': (0, [], [], 'UINT'), 'midiInMessage': (4, ['HMIDIIN', 'UINT', 'DWORD_PTR', 'DWORD_PTR'], ['deviceID', 'msg', 'dw1', 'dw2'], 'MMRESULT'), 'midiInOpen': (5, ['LPHMIDIIN', 'UINT_PTR', 'DWORD_PTR', 'DWORD_PTR', 'MIDIINOUTOPENFLAGS'], ['lphMidiIn', 'uDeviceID', 'dwCallback', 'dwCallbackInstance', 'dwFlags'], 'MMRESULT'), 'midiInPrepareHeader': (3, ['HMIDIIN', 'LPMIDIHDR', 'UINT'], ['hMidiIn', 'lpMidiInHdr', 'cbMidiInHdr'], 'MMRESULT'), 'midiInReset': (1, ['HMIDIIN'], ['hMidiIn'], 'MMRESULT'), 'midiInStart': (1, ['HMIDIIN'], ['hMidiIn'], 'MMRESULT'), 'midiInStop': (1, ['HMIDIIN'], ['hMidiIn'], 'MMRESULT'), 'midiInUnprepareHeader': (3, ['HMIDIIN', 'LPMIDIHDR', 'UINT'], ['hMidiIn', 'lpMidiInHdr', 'cbMidiInHdr'], 'MMRESULT'), 'midiOutCacheDrumPatches': (4, ['HMIDIOUT', 'UINT', 'WORD*', 'UINT'], ['hmo', 'wPatch', 'lpKeyArray', 'wFlags'], 'MMRESULT'), 'midiOutCachePatches': (4, ['HMIDIOUT', 'UINT', 'WORD*', 'UINT'], ['hmo', 'wBank', 'lpPatchArray', 'wFlags'], 'MMRESULT'), 'midiOutClose': (1, ['HMIDIOUT'], ['hmo'], 'MMRESULT'), 'midiOutGetDevCaps': (3, ['UINT_PTR', 'LPMIDIOUTCAPS', 'UINT'], ['uDeviceID', 'lpMidiOutCaps', 'cbMidiOutCaps'], 'MMRESULT'), 'midiOutGetErrorText': (3, ['MMRESULT', 'LPTSTR', 'UINT'], ['mmrError', 'lpText', 'cchText'], 'UINT'), 'midiOutGetID': (2, ['HMIDIOUT', 'LPUINT'], ['hmo', 'puDeviceID'], 'MMRESULT'), 'midiOutGetNumDevs': (0, [], [], 'UINT'), 'midiOutGetVolume': (2, ['HMIDIOUT', 'LPDWORD'], ['hmo', 'lpdwVolume'], 'MMRESULT'), 'midiOutLongMsg': (3, ['HMIDIOUT', 'LPMIDIHDR', 'UINT'], ['hmo', 'lpMidiOutHdr', 'cbMidiOutHdr'], 'MMRESULT'), 'midiOutMessage': (4, ['HMIDIOUT', 'UINT', 'DWORD_PTR', 'DWORD_PTR'], ['deviceID', 'msg', 'dw1', 'dw2'], 'MMRESULT'), 'midiOutOpen': (5, ['LPHMIDIOUT', 'UINT_PTR', 'DWORD_PTR', 'DWORD_PTR', 'MIDIINOUTOPENFLAGS'], ['lphmo', 'uDeviceID', 'dwCallback', 'dwCallbackInstance', 'dwFlags'], 'MMRESULT'), 'midiOutPrepareHeader': (3, ['HMIDIOUT', 'LPMIDIHDR', 'UINT'], ['hmo', 'lpMidiOutHdr', 'cbMidiOutHdr'], 'MMRESULT'), 'midiOutReset': (1, ['HMIDIOUT'], ['hmo'], 'MMRESULT'), 'midiOutSetVolume': (2, ['HMIDIOUT', 'DWORD'], ['hmo', 'dwVolume'], 'MMRESULT'), 'midiOutShortMsg': (2, ['HMIDIOUT', 'DWORD'], ['hmo', 'dwMsg'], 'MMRESULT'), 'midiOutUnprepareHeader': (3, ['HMIDIOUT', 'LPMIDIHDR', 'UINT'], ['hmo', 'lpMidiOutHdr', 'cbMidiOutHdr'], 'MMRESULT'), 'midiStreamClose': (1, ['HMIDISTRM'], ['hStream'], 'MMRESULT'), 'midiStreamOpen': (6, ['LPHMIDISTRM', 'LPUINT', 'DWORD', 'DWORD_PTR', 'DWORD_PTR', 'DWORD'], ['lphStream', 'puDeviceID', 'cMidi', 'dwCallback', 'dwInstance', 'fdwOpen'], 'MMRESULT'), 'midiStreamOut': (3, ['HMIDISTRM', 'LPMIDIHDR', 'UINT'], ['hMidiStream', 'lpMidiHdr', 'cbMidiHdr'], 'MMRESULT'), 'midiStreamPause': (1, ['HMIDISTRM'], ['hms'], 'MMRESULT'), 'midiStreamPosition': (3, ['HMIDISTRM', 'LPMMTIME', 'UINT'], ['hms', 'pmmt', 'cbmmt'], 'MMRESULT'), 'midiStreamProperty': (3, ['HMIDISTRM', 'LPBYTE', 'DWORD'], ['hm', 'lppropdata', 'dwProperty'], 'MMRESULT'), 'midiStreamRestart': (1, ['HMIDISTRM'], ['hms'], 'MMRESULT'), 'midiStreamStop': (1, ['HMIDISTRM'], ['hms'], 'MMRESULT'), 'mixerClose': (1, ['HMIXER'], ['hmx'], 'MMRESULT'), 'mixerGetControlDetails': (3, ['HMIXEROBJ', 'LPMIXERCONTROLDETAILS', 'DWORD'], ['hmxobj', 'pmxcd', 'fdwDetails'], 'MMRESULT'), 'mixerGetDevCaps': (3, ['UINT_PTR', 'LPMIXERCAPS', 'UINT'], ['uMxId', 'pmxcaps', 'cbmxcaps'], 'MMRESULT'), 'mixerGetID': (3, ['HMIXEROBJ', 'UINT*', 'DWORD'], ['hmxobj', 'puMxId', 'fdwId'], 'MMRESULT'), 'mixerGetLineControls': (3, ['HMIXEROBJ', 'LPMIXERLINECONTROLS', 'DWORD'], ['hmxobj', 'pmxlc', 'fdwControls'], 'MMRESULT'), 'mixerGetLineInfo': (3, ['HMIXEROBJ', 'LPMIXERLINE', 'DWORD'], ['hmxobj', 'pmxl', 'fdwInfo'], 'MMRESULT'), 'mixerGetNumDevs': (0, [], [], 'UINT'), 'mixerMessage': (4, ['HMIXER', 'UINT', 'DWORD_PTR', 'DWORD_PTR'], ['driverID', 'uMsg', 'dwParam1', 'dwParam2'], 'DWORD'), 'mixerOpen': (5, ['LPHMIXER', 'UINT', 'DWORD_PTR', 'DWORD_PTR', 'DWORD'], ['phmx', 'uMxId', 'dwCallback', 'dwInstance', 'fdwOpen'], 'MMRESULT'), 'mixerSetControlDetails': (3, ['HMIXEROBJ', 'LPMIXERCONTROLDETAILS', 'DWORD'], ['hmxobj', 'pmxcd', 'fdwDetails'], 'MMRESULT'), 'mmioAdvance': (3, ['HMMIO', 'LPMMIOINFO', 'UINT'], ['hmmio', 'lpmmioinfo', 'wFlags'], 'MMRESULT'), 'mmioAscend': (3, ['HMMIO', 'LPMMCKINFO', 'UINT'], ['hmmio', 'lpck', 'wFlags'], 'MMRESULT'), 'mmioClose': (2, ['HMMIO', 'MMIOCLOSEFLAGS'], ['hmmio', 'wFlags'], 'MMRESULT'), 'mmioCreateChunk': (3, ['HMMIO', 'LPMMCKINFO', 'MMIOCREATECHUNKFLAGS'], ['hmmio', 'lpck', 'wFlags'], 'MMRESULT'), 'mmioDescend': (4, ['HMMIO', 'LPMMCKINFO', 'LPMMCKINFO', 'MMIODESCENDFLAGS'], ['hmmio', 'lpck', 'lpckParent', 'wFlags'], 'MMRESULT'), 'mmioFlush': (2, ['HMMIO', 'MMIOFLUSHFLAGS'], ['hmmio', 'fuFlush'], 'MMRESULT'), 'mmioGetInfo': (3, ['HMMIO', 'LPMMIOINFO', 'UINT'], ['hmmio', 'lpmmioinfo', 'wFlags'], 'MMRESULT'), 'mmioInstallIOProc': (3, ['FOURCC', 'LPMMIOPROC', 'MMIOINSTALLIOPROCFLAGS'], ['fccIOProc', 'pIOProc', 'dwFlags'], 'LPMMIOPROC'), 'mmioOpen': (3, ['LPTSTR', 'LPMMIOINFO', 'DWORD'], ['szFilename', 'lpmmioinfo', 'dwOpenFlags'], 'HMMIO'), 'mmioRead': (3, ['HMMIO', 'HPSTR', 'LONG'], ['hmmio', 'pch', 'cch'], 'LONG'), 'mmioRename': (4, ['LPCTSTR', 'LPCTSTR', 'CONST LPMMIOINFO', 'DWORD'], ['szFilename', 'szNewFilename', 'lpmmioinfo', 'dwRenameFlags'], 'MMRESULT'), 'mmioSeek': (3, ['HMMIO', 'LONG', 'MMIOSEEKOFFSET'], ['hmmio', 'lOffset', 'iOrigin'], 'LONG'), 'mmioSendMessage': (4, ['HMMIO', 'UINT', 'LPARAM', 'LPARAM'], ['hmmio', 'wMsg', 'lParam1', 'lParam2'], 'LRESULT'), 'mmioSetBuffer': (4, ['HMMIO', 'LPSTR', 'LONG', 'UINT'], ['hmmio', 'pchBuffer', 'cchBuffer', 'wFlags'], 'MMRESULT'), 'mmioSetInfo': (3, ['HMMIO', 'LPMMIOINFO', 'UINT'], ['hmmio', 'lpmmioinfo', 'wFlags'], 'MMRESULT'), 'mmioStringToFOURCC': (2, ['LPCTSTR', 'MMIOSTRINGTOFOURCCFLAGS'], ['sz', 'wFlags'], 'FOURCC'), 'mmioWrite': (3, ['HMMIO', 'LPVOID|CHAR*', 'LONG'], ['hmmio', 'pch', 'cch'], 'LONG'), 'timeBeginPeriod': (1, ['UINT'], ['uPeriod'], 'MMRESULT'), 'timeEndPeriod': (1, ['UINT'], ['uPeriod'], 'MMRESULT'), 'timeGetDevCaps': (2, ['LPTIMECAPS', 'UINT'], ['ptc', 'cbtc'], 'MMRESULT'), 'timeGetSystemTime': (2, ['LPMMTIME', 'UINT'], ['pmmt', 'cbmmt'], 'MMRESULT'), 'timeGetTime': (0, [], [], 'DWORD'), 'timeKillEvent': (1, ['UINT'], ['uTimerID'], 'MMRESULT'), 'timeSetEvent': (5, ['UINT', 'UINT', 'LPTIMECALLBACK', 'DWORD_PTR', 'UINT'], ['uDelay', 'uResolution', 'lpTimeProc', 'dwUser', 'fuEvent'], 'MMRESULT'), 'waveInAddBuffer': (3, ['HWAVEIN', 'LPWAVEHDR', 'UINT'], ['hwi', 'pwh', 'cbwh'], 'MMRESULT'), 'waveInClose': (1, ['HWAVEIN'], ['hwi'], 'MMRESULT'), 'waveInGetDevCaps': (3, ['UINT_PTR', 'LPWAVEINCAPS', 'UINT'], ['uDeviceID', 'pwic', 'cbwic'], 'MMRESULT'), 'waveInGetErrorText': (3, ['MMRESULT', 'LPTSTR', 'UINT'], ['mmrError', 'pszText', 'cchText'], 'MMRESULT'), 'waveInGetID': (2, ['HWAVEIN', 'LPUINT'], ['hwi', 'puDeviceID'], 'MMRESULT'), 'waveInGetNumDevs': (0, [], [], 'UINT'), 'waveInGetPosition': (3, ['HWAVEIN', 'LPMMTIME', 'UINT'], ['hwi', 'pmmt', 'cbmmt'], 'MMRESULT'), 'waveInMessage': (4, ['HWAVEIN', 'UINT', 'DWORD_PTR', 'DWORD_PTR'], ['deviceID', 'uMsg', 'dwParam1', 'dwParam2'], 'MMRESULT'), 'waveInOpen': (6, ['LPHWAVEIN', 'UINT_PTR', 'LPWAVEFORMATEX', 'DWORD_PTR', 'DWORD_PTR', 'WAVEINOUTOPENFLAGS'], ['phwi', 'uDeviceID', 'pwfx', 'dwCallback', 'dwCallbackInstance', 'fdwOpen'], 'MMRESULT'), 'waveInPrepareHeader': (3, ['HWAVEIN', 'LPWAVEHDR', 'UINT'], ['hwi', 'pwh', 'cbwh'], 'MMRESULT'), 'waveInReset': (1, ['HWAVEIN'], ['hwi'], 'MMRESULT'), 'waveInStart': (1, ['HWAVEIN'], ['hwi'], 'MMRESULT'), 'waveInStop': (1, ['HWAVEIN'], ['hwi'], 'MMRESULT'), 'waveInUnprepareHeader': (3, ['HWAVEIN', 'LPWAVEHDR', 'UINT'], ['hwi', 'pwh', 'cbwh'], 'MMRESULT'), 'waveOutBreakLoop': (1, ['HWAVEOUT'], ['hwo'], 'MMRESULT'), 'waveOutClose': (1, ['HWAVEOUT'], ['hwo'], 'MMRESULT'), 'waveOutGetDevCaps': (3, ['UINT_PTR', 'LPWAVEOUTCAPS', 'UINT'], ['uDeviceID', 'pwoc', 'cbwoc'], 'MMRESULT'), 'waveOutGetErrorText': (3, ['MMRESULT', 'LPTSTR', 'UINT'], ['mmrError', 'pszText', 'cchText'], 'MMRESULT'), 'waveOutGetID': (2, ['HWAVEOUT', 'LPUINT'], ['hwo', 'puDeviceID'], 'MMRESULT'), 'waveOutGetNumDevs': (0, [], [], 'UINT'), 'waveOutGetPitch': (2, ['HWAVEOUT', 'LPDWORD'], ['hwo', 'pdwPitch'], 'MMRESULT'), 'waveOutGetPlaybackRate': (2, ['HWAVEOUT', 'LPDWORD'], ['hwo', 'pdwRate'], 'MMRESULT'), 'waveOutGetPosition': (3, ['HWAVEOUT', 'LPMMTIME', 'UINT'], ['hwo', 'pmmt', 'cbmmt'], 'MMRESULT'), 'waveOutGetVolume': (2, ['HWAVEOUT', 'LPDWORD'], ['hwo', 'pdwVolume'], 'MMRESULT'), 'waveOutMessage': (4, ['HWAVEOUT', 'UINT', 'DWORD_PTR', 'DWORD_PTR'], ['deviceID', 'uMsg', 'dwParam1', 'dwParam2'], 'MMRESULT'), 'waveOutOpen': (6, ['LPHWAVEOUT', 'UINT_PTR', 'LPWAVEFORMATEX', 'DWORD_PTR', 'DWORD_PTR', 'WAVEINOUTOPENFLAGS'], ['phwo', 'uDeviceID', 'pwfx', 'dwCallback', 'dwCallbackInstance', 'fdwOpen'], 'MMRESULT'), 'waveOutPause': (1, ['HWAVEOUT'], ['hwo'], 'MMRESULT'), 'waveOutPrepareHeader': (3, ['HWAVEOUT', 'LPWAVEHDR', 'UINT'], ['hwo', 'pwh', 'cbwh'], 'MMRESULT'), 'waveOutReset': (1, ['HWAVEOUT'], ['hwo'], 'MMRESULT'), 'waveOutRestart': (1, ['HWAVEOUT'], ['hwo'], 'MMRESULT'), 'waveOutSetPitch': (2, ['HWAVEOUT', 'DWORD'], ['hwo', 'dwPitch'], 'MMRESULT'), 'waveOutSetPlaybackRate': (2, ['HWAVEOUT', 'DWORD'], ['hwo', 'dwRate'], 'MMRESULT'), 'waveOutSetVolume': (2, ['HWAVEOUT', 'DWORD'], ['hwo', 'dwVolume'], 'MMRESULT'), 'waveOutUnprepareHeader': (3, ['HWAVEOUT', 'LPWAVEHDR', 'UINT'], ['hwo', 'pwh', 'cbwh'], 'MMRESULT'), 'waveOutWrite': (3, ['HWAVEOUT', 'LPWAVEHDR', 'UINT'], ['hwo', 'pwh', 'cbwh'], 'MMRESULT'), 'PlaySound': (3, ['LPCTSTR', 'HMODULE', 'SND_FLAGS'], ['pszSound', 'hmod', 'fdwSound'], 'BOOL'), 'sndPlaySound': (2, ['LPCTSTR', 'SND_FLAGS'], ['lpszSound', 'fuSound'], 'BOOL'), 'CloseDriver': (3, ['HDRVR', 'LPARAM', 'LPARAM'], ['hDriver', 'lParam1', 'lParam2'], 'LRESULT'), 'DefDriverProc': (5, ['DWORD_PTR', 'HDRVR', 'UINT', 'LPARAM', 'LPARAM'], ['dwDriverIdentifier', 'hdrvr', 'uMsg', 'lParam1', 'lParam2'], 'LRESULT'), 'DriverCallback': (7, ['DWORD_PTR', 'DCB_FLAGS', 'HDRVR', 'DWORD', 'DWORD_PTR', 'DWORD_PTR', 'DWORD_PTR'], ['dwCallback', 'dwFlags', 'hDevice', 'dwMsg', 'dwUser', 'dwParam1', 'dwParam2'], 'BOOL'), 'DrvGetModuleHandle': (1, ['HDRVR'], ['hDriver'], 'HMODULE'), 'GetDriverModuleHandle': (1, ['HDRVR'], ['hDriver'], 'HMODULE'), 'OpenDriver': (3, ['LPCWSTR', 'LPCWSTR', 'LPARAM'], ['szDriverName', 'szSectionName', 'lParam2'], 'HDRVR'), 'SendDriverMessage': (4, ['HDRVR', 'UINT', 'LPARAM', 'LPARAM'], ['hDriver', 'message', 'lParam1', 'lParam2'], 'LRESULT'), 'mmDrvInstall': (4, ['HDRVR', 'LPCWSTR', 'DRIVERMSGPROC', 'UINT'], ['hDriver', 'wszDrvEntry', 'drvMessage', 'wFlags'], 'UINT'), 'mmGetCurrentTask': (0, [], [], 'DWORD'), 'mmTaskBlock': (1, ['DWORD'], ['h'], 'VOID'), 'mmTaskCreate': (3, ['LPTASKCALLBACK', 'HANDLE*', 'DWORD_PTR'], ['lpfn', 'lph', 'dwInst'], 'UINT'), 'mmTaskSignal': (1, ['DWORD'], ['h'], 'BOOL'), 'mmTaskYield': (0, [], [], 'VOID')}

dict5_ws2_32 = {'accept': (3, ['SOCKET', 'STRUCT SOCKADDR*', 'INT*'], ['s', 'addr', 'addrlen'], 'SOCKET'), 'bind': (3, ['SOCKET', 'CONST STRUCT SOCKADDR*', 'INT'], ['s', 'name', 'namelen'], '[SocketCode-int]'), 'closesocket': (1, ['SOCKET'], ['s'], '[SocketCode-int]'), 'connect': (3, ['SOCKET', 'CONST STRUCT SOCKADDR*', 'INT'], ['s', 'name', 'namelen'], '[SocketCode-int]'), 'freeaddrinfo': (1, ['STRUCT ADDRINFO*'], ['ai'], 'void'), 'getaddrinfo': (4, ['CONST CHAR*', 'CONST CHAR*', 'CONST STRUCT ADDRINFO*', 'STRUCT ADDRINFO**'], ['nodename', 'servname', 'hints', 'res'], '[WSA_ERROR]'), 'FreeAddrInfoEx': (1, ['PADDRINFOEX'], ['pAddrInfo'], 'void'), 'GetAddrInfoEx': (10, ['PCTSTR', 'PCTSTR', 'NAMESPACEFLAGS', 'LPGUID', 'CONST ADDRINFOEX*', 'PADDRINFOEX*', 'STRUCT TIMEVAL*', 'LPOVERLAPPED', 'LPLOOKUPSERVICE_COMPLETION_ROUTINE', 'LPHANDLE'], ['pName', 'pServiceName', 'dwNameSpace', 'lpNspId', 'pHints', 'ppResult', 'timeout', 'lpOverlapped', 'lpCompletionRoutine', 'lpNameHandle'], '[WSA_ERROR]'), 'FreeAddrInfoW': (1, ['PADDRINFOW'], ['pAddrInfo'], 'void'), 'GetAddrInfoW': (4, ['PCWSTR', 'PCWSTR', 'CONST ADDRINFOW*', 'PADDRINFOW*'], ['pNodeName', 'pServiceName', 'pHints', 'ppResult'], '[WSA_ERROR]'), 'gethostbyaddr': (3, ['CONST CHAR*', 'INT', 'ADDRESSFAMILY'], ['addr', 'len', 'type'], 'struct hostent*'), 'gethostbyname': (1, ['CONST CHAR*'], ['name'], 'struct hostent*'), 'gethostname': (2, ['CHAR*', 'INT'], ['name', 'namelen'], '[SocketCode-int]'), 'getnameinfo': (7, ['CONST STRUCT SOCKADDR*', 'SOCKLEN_T', 'CHAR*', 'DWORD', 'CHAR*', 'DWORD', 'NI_FLAGS'], ['sa', 'salen', 'host', 'hostlen', 'serv', 'servlen', 'flags'], '[WSA_ERROR]'), 'GetNameInfoW': (7, ['CONST SOCKADDR*', 'SOCKLEN_T', 'PWCHAR', 'DWORD', 'PWCHAR', 'DWORD', 'NI_FLAGS'], ['pSockaddr', 'SockaddrLength', 'pNodeBuffer', 'NodeBufferSize', 'pServiceBuffer', 'ServiceBufferSize', 'Flags'], '[WSA_ERROR]'), 'getpeername': (3, ['SOCKET', 'STRUCT SOCKADDR*', 'INT*'], ['s', 'name', 'namelen'], '[SocketCode-int]'), 'getprotobyname': (1, ['CONST CHAR*'], ['name'], 'struct PROTOENT*'), 'getprotobynumber': (1, ['INT'], ['number'], 'struct PROTOENT*'), 'getservbyname': (2, ['CONST CHAR*', 'CONST CHAR*'], ['name', 'proto'], 'struct servent*'), 'getservbyport': (2, ['INT', 'CONST CHAR*'], ['port', 'proto'], 'struct servent*'), 'getsockname': (3, ['SOCKET', 'STRUCT SOCKADDR*', 'INT*'], ['s', 'name', 'namelen'], '[SocketCode-int]'), 'getsockopt': (5, ['SOCKET', 'SOCKETLEVEL', 'SOCKETOPTION', 'LPVOID|CHAR*', 'INT*'], ['s', 'level', 'optname', 'optval', 'optlen'], '[SocketCode-int]'), 'htonl': (1, ['U_LONG'], ['hostlong'], 'u_long'), 'htons': (1, ['U_SHORT'], ['hostshort'], 'u_short'), 'inet_addr': (1, ['CONST CHAR*'], ['cp'], '[INET_ADDR_OUTPUT]'), 'inet_ntoa': (1, ['STRUCT IN_ADDR'], ['in'], 'char*'), 'InetNtopW': (4, ['INT', 'PVOID', 'PWSTR', 'SIZE_T'], ['Family', 'pAddr', 'pStringBuf', 'StringBufSize'], 'PCWSTR'), 'inet_ntop': (4, ['INT', 'PVOID', 'PSTR', 'SIZE_T'], ['Family', 'pAddr', 'pStringBuf', 'StringBufSize'], 'PCSTR'), 'inet_pton': (3, ['INT', 'PCSTR', 'PVOID'], ['Family', 'pszAddrString', 'pAddrBuf'], 'PCSTR'), 'InetPtonW': (3, ['INT', 'PCWSTR', 'PVOID'], ['Family', 'pszAddrString', 'pAddrBuf'], 'PCWSTR'), 'ioctlsocket': (3, ['SOCKET', 'SOCKET_IOCTL', 'U_LONG*'], ['s', 'cmd', 'argp'], '[SocketCode-int]'), 'listen': (2, ['SOCKET', 'INT'], ['s', 'backlog'], '[SocketCode-int]'), 'ntohl': (1, ['U_LONG'], ['netlong'], 'u_long'), 'ntohs': (1, ['U_SHORT'], ['netshort'], 'u_short'), 'recv': (4, ['SOCKET', 'LPVOID|CHAR*', 'INT', 'SENDRECVFLAGS'], ['s', 'buf', 'len', 'flags'], '[SocketCode-int]'), 'recvfrom': (6, ['SOCKET', 'LPVOID|CHAR*', 'INT', 'INT', 'STRUCT SOCKADDR*', 'INT*'], ['s', 'buf', 'len', 'flags', 'from', 'fromlen'], '[SocketCode-int]'), 'select': (5, ['INT', 'FD_SET*', 'FD_SET*', 'FD_SET*', 'CONST STRUCT TIMEVAL*'], ['nfds', 'readfds', 'writefds', 'exceptfds', 'timeout'], '[SocketCode-int]'), 'send': (4, ['SOCKET', 'LPVOID', 'INT', 'SENDRECVFLAGS'], ['s', 'buf', 'len', 'flags'], '[SocketCode-int]'), 'sendto': (6, ['SOCKET', 'LPVOID', 'INT', 'SENDRECVFLAGS', 'CONST STRUCT SOCKADDR*', 'INT'], ['s', 'buf', 'len', 'flags', 'to', 'tolen'], '[SocketCode-int]'), 'SetAddrInfoEx': (12, ['PCTSTR', 'PCTSTR', 'SOCKET_ADDRESS*', 'DWORD', 'LPBLOB', 'DWORD', 'NAMESPACEFLAGS', 'LPGUID', 'STRUCT TIMEVAL*', 'LPOVERLAPPED', 'LPLOOKUPSERVICE_COMPLETION_ROUTINE', 'LPHANDLE'], ['pName', 'pServiceName', 'pAddresses', 'dwAddressCount', 'lpBlob', 'dwFlags', 'dwNameSpace', 'lpNspId', 'timeout', 'lpOverlapped', 'lpCompletionRoutine', 'lpNameHandle'], '[WSA_ERROR]'), 'setsockopt': (5, ['SOCKET', 'SOCKETLEVEL', 'SOCKETOPTION', 'LPVOID', 'INT'], ['s', 'level', 'optname', 'optval', 'optlen'], '[SocketCode-int]'), 'shutdown': (2, ['SOCKET', 'SOCKETSHUTDOWNFLAGS'], ['s', 'how'], '[SocketCode-int]'), 'socket': (3, ['ADDRESSFAMILY', 'SOCKETTYPE', 'SOCKETPROTOCOL'], ['af', 'type', 'protocol'], 'SOCKET'), 'WSAAccept': (5, ['SOCKET', 'STRUCT SOCKADDR*', 'LPINT', 'LPCONDITIONPROC', 'DWORD'], ['s', 'addr', 'addrlen', 'lpfnCondition', 'dwCallbackData'], 'SOCKET'), 'WSAAddressToString': (5, ['LPSOCKADDR', 'DWORD', 'LPWSAPROTOCOL_INFO', 'LPTSTR', 'LPDWORD'], ['lpsaAddress', 'dwAddressLength', 'lpProtocolInfo', 'lpszAddressString', 'lpdwAddressStringLength'], '[SocketCode-INT]'), 'WSAAsyncGetHostByAddr': (7, ['HWND', 'UNSIGNED INT', 'CONST CHAR*', 'INT', 'INT', 'CHAR*', 'INT'], ['hWnd', 'wMsg', 'addr', 'len', 'type', 'buf', 'buflen'], 'HANDLE'), 'WSAAsyncGetHostByName': (5, ['HWND', 'UNSIGNED INT', 'CONST CHAR*', 'CHAR*', 'INT'], ['hWnd', 'wMsg', 'name', 'buf', 'buflen'], 'HANDLE'), 'WSAAsyncGetProtoByName': (5, ['HWND', 'UNSIGNED INT', 'CONST CHAR*', 'CHAR*', 'INT'], ['hWnd', 'wMsg', 'name', 'buf', 'buflen'], 'HANDLE'), 'WSAAsyncGetProtoByNumber': (5, ['HWND', 'UNSIGNED INT', 'INT', 'CHAR*', 'INT'], ['hWnd', 'wMsg', 'number', 'buf', 'buflen'], 'HANDLE'), 'WSAAsyncGetServByName': (6, ['HWND', 'UNSIGNED INT', 'CONST CHAR*', 'CONST CHAR*', 'CHAR*', 'INT'], ['hWnd', 'wMsg', 'name', 'proto', 'buf', 'buflen'], 'HANDLE'), 'WSAAsyncGetServByPort': (6, ['HWND', 'UNSIGNED INT', 'INT', 'CONST CHAR*', 'CHAR*', 'INT'], ['hWnd', 'wMsg', 'port', 'proto', 'buf', 'buflen'], 'HANDLE'), 'WSAAsyncSelect': (4, ['SOCKET', 'HWND', 'UNSIGNED INT', 'FDEVENTS'], ['s', 'hWnd', 'wMsg', 'lEvent'], '[SocketCode-int]'), 'WSACancelAsyncRequest': (1, ['HANDLE'], ['hAsyncTaskHandle'], '[SocketCode-int]'), 'WSACleanup': (0, [], [], '[SocketCode-int]'), 'WSACloseEvent': (1, ['WSAEVENT'], ['hEvent'], 'BOOL'), 'WSAConnect': (7, ['SOCKET', 'CONST STRUCT SOCKADDR*', 'INT', 'LPWSABUF', 'LPWSABUF', 'LPQOS', 'LPQOS'], ['s', 'name', 'namelen', 'lpCallerData', 'lpCalleeData', 'lpSQOS', 'lpGQOS'], '[SocketCode-int]'), 'WSAConnectByList': (8, ['SOCKET', 'PSOCKET_ADDRESS_LIST', 'LPDWORD', 'LPSOCKADDR', 'LPDWORD', 'LPSOCKADDR', 'CONST STRUCT TIMEVAL*', 'LPWSAOVERLAPPED'], ['s', 'SocketAddressList', 'LocalAddressLength', 'LocalAddress', 'RemoteAddressLength', 'RemoteAddress', 'timeout', 'Reserved'], 'BOOL'), 'WSAConnectByName': (9, ['SOCKET', 'LPSTR', 'LPSTR', 'LPDWORD', 'LPSOCKADDR', 'LPDWORD', 'LPSOCKADDR', 'CONST STRUCT TIMEVAL*', 'LPWSAOVERLAPPED'], ['s', 'nodename', 'servicename', 'LocalAddressLength', 'LocalAddress', 'RemoteAddressLength', 'RemoteAddress', 'timeout', 'Reserved'], 'BOOL'), 'WSACreateEvent': (0, [], [], 'WSAEVENT'), 'WSADuplicateSocket': (3, ['SOCKET', 'DWORD', 'LPWSAPROTOCOL_INFO'], ['s', 'dwProcessId', 'lpProtocolInfo'], '[SocketCode-int]'), 'WSAEnumNameSpaceProviders': (2, ['LPDWORD', 'LPWSANAMESPACE_INFO'], ['lpdwBufferLength', 'lpnspBuffer'], '[SocketCode-INT]'), 'WSAEnumNameSpaceProvidersEx': (2, ['LPDWORD', 'LPWSANAMESPACE_INFOEX'], ['lpdwBufferLength', 'lpnspBuffer'], '[SocketCode-INT]'), 'WSAEnumNetworkEvents': (3, ['SOCKET', 'WSAEVENT', 'LPWSANETWORKEVENTS'], ['s', 'hEventObject', 'lpNetworkEvents'], '[SocketCode-int]'), 'WSAEnumProtocols': (3, ['LPINT', 'LPWSAPROTOCOL_INFO', 'LPDWORD'], ['lpiProtocols', 'lpProtocolBuffer', 'lpdwBufferLength'], '[SocketCode-int]'), 'WSAEventSelect': (3, ['SOCKET', 'WSAEVENT', 'FDEVENTS'], ['s', 'hEventObject', 'lNetworkEvents'], '[SocketCode-int]'), 'WSAGetLastError': (0, [], [], '[WSA_ERROR]'), 'WSAGetOverlappedResult': (5, ['SOCKET', 'LPWSAOVERLAPPED', 'LPDWORD', 'BOOL', 'LPDWORD'], ['s', 'lpOverlapped', 'lpcbTransfer', 'fWait', 'lpdwFlags'], 'BOOL'), 'WSAGetServiceClassInfo': (4, ['LPGUID', 'LPGUID', 'LPDWORD', 'LPWSASERVICECLASSINFO'], ['lpProviderId', 'lpServiceClassId', 'lpdwBufferLength', 'lpServiceClassInfo'], '[SocketCode-INT]'), 'WSAGetServiceClassNameByClassId': (3, ['LPGUID', 'LPTSTR', 'LPDWORD'], ['lpServiceClassId', 'lpszServiceClassName', 'lpdwBufferLength'], '[SocketCode-INT]'), 'WSAHtonl': (3, ['SOCKET', 'U_LONG', 'U_LONG*'], ['s', 'hostlong', 'lpnetlong'], '[SocketCode-int]'), 'WSAHtons': (3, ['SOCKET', 'U_SHORT', 'U_SHORT*'], ['s', 'hostshort', 'lpnetshort'], '[SocketCode-int]'), 'WSAInstallServiceClass': (1, ['LPWSASERVICECLASSINFO'], ['lpServiceClassInfo'], '[SocketCode-INT]'), 'WSAIoctl': (9, ['SOCKET', 'WSAIOCTL', 'LPVOID', 'DWORD', 'LPVOID', 'DWORD', 'LPDWORD', 'LPWSAOVERLAPPED', 'LPWSAOVERLAPPED_COMPLETION_ROUTINE'], ['s', 'dwIoControlCode', 'lpvInBuffer', 'cbInBuffer', 'lpvOutBuffer', 'cbOutBuffer', 'lpcbBytesReturned', 'lpOverlapped', 'lpCompletionRoutine'], '[SocketCode-int]'), 'WSAJoinLeaf': (8, ['SOCKET', 'CONST STRUCT SOCKADDR*', 'INT', 'LPWSABUF', 'LPWSABUF', 'LPQOS', 'LPQOS', 'DWORD'], ['s', 'name', 'namelen', 'lpCallerData', 'lpCalleeData', 'lpSQOS', 'lpGQOS', 'dwFlags'], 'SOCKET'), 'WSALookupServiceBegin': (3, ['LPWSAQUERYSET', 'LOOKUPSERVICEFLAGS', 'LPHANDLE'], ['lpqsRestrictions', 'dwControlFlags', 'lphLookup'], '[SocketCode-INT]'), 'WSALookupServiceEnd': (1, ['HANDLE'], ['hLookup'], '[SocketCode-INT]'), 'WSALookupServiceNext': (4, ['HANDLE', 'LOOKUPSERVICEFLAGS', 'LPDWORD', 'LPWSAQUERYSET'], ['hLookup', 'dwControlFlags', 'lpdwBufferLength', 'lpqsResults'], '[SocketCode-INT]'), 'WSANtohl': (3, ['SOCKET', 'U_LONG', 'U_LONG*'], ['s', 'netlong', 'lphostlong'], '[SocketCode-int]'), 'WSANtohs': (3, ['SOCKET', 'U_SHORT', 'U_SHORT*'], ['s', 'netshort', 'lphostshort'], '[SocketCode-int]'), 'WSAPoll': (2, ['ULONG', 'INT'], ['nfds', 'timeout'], '[SocketCode-int]'), 'WSAProviderConfigChange': (3, ['LPHANDLE', 'LPWSAOVERLAPPED', 'LPWSAOVERLAPPED_COMPLETION_ROUTINE'], ['lpNotificationHandle', 'lpOverlapped', 'lpCompletionRoutine'], '[SocketCode-int]'), 'WSARecv': (7, ['SOCKET', 'LPWSABUF_IN', 'DWORD', 'LPDWORD', 'SENDRECVFLAGS*', 'LPWSAOVERLAPPED', 'LPWSAOVERLAPPED_COMPLETION_ROUTINE'], ['s', 'lpBuffers', 'dwBufferCount', 'lpNumberOfBytesRecvd', 'lpFlags', 'lpOverlapped', 'lpCompletionRoutine'], '[SocketCode-int]'), 'WSARecvDisconnect': (2, ['SOCKET', 'LPWSABUF'], ['s', 'lpInboundDisconnectData'], '[SocketCode-int]'), 'WSARecvFrom': (9, ['SOCKET', 'LPWSABUF', 'DWORD', 'LPDWORD', 'LPDWORD', 'STRUCT SOCKADDR*', 'LPINT', 'LPWSAOVERLAPPED', 'LPWSAOVERLAPPED_COMPLETION_ROUTINE'], ['s', 'lpBuffers', 'dwBufferCount', 'lpNumberOfBytesRecvd', 'lpFlags', 'lpFrom', 'lpFromlen', 'lpOverlapped', 'lpCompletionRoutine'], '[SocketCode-int]'), 'WSARemoveServiceClass': (1, ['LPGUID'], ['lpServiceClassId'], '[SocketCode-INT]'), 'WSAResetEvent': (1, ['WSAEVENT'], ['hEvent'], 'BOOL'), 'WSASend': (7, ['SOCKET', 'LPWSABUF', 'DWORD', 'LPDWORD', 'SENDRECVFLAGS', 'LPWSAOVERLAPPED', 'LPWSAOVERLAPPED_COMPLETION_ROUTINE'], ['s', 'lpBuffers', 'dwBufferCount', 'lpNumberOfBytesSent', 'dwFlags', 'lpOverlapped', 'lpCompletionRoutine'], '[SocketCode-int]'), 'WSASendDisconnect': (2, ['SOCKET', 'LPWSABUF'], ['s', 'lpOutboundDisconnectData'], '[SocketCode-int]'), 'WSASendMsg': (6, ['SOCKET', 'LPWSAMSG', 'DWORD', 'LPDWORD', 'LPWSAOVERLAPPED', 'LPWSAOVERLAPPED_COMPLETION_ROUTINE'], ['s', 'lpMsg', 'dwFlags', 'lpNumberOfBytesSent', 'lpOverlapped', 'lpCompletionRoutine'], '[SocketCode-int]'), 'WSASendTo': (9, ['SOCKET', 'LPWSABUF', 'DWORD', 'LPDWORD', 'SENDRECVFLAGS', 'CONST STRUCT SOCKADDR*', 'INT', 'LPWSAOVERLAPPED', 'LPWSAOVERLAPPED_COMPLETION_ROUTINE'], ['s', 'lpBuffers', 'dwBufferCount', 'lpNumberOfBytesSent', 'dwFlags', 'lpTo', 'iToLen', 'lpOverlapped', 'lpCompletionRoutine'], '[SocketCode-int]'), 'WSASetEvent': (1, ['WSAEVENT'], ['hEvent'], 'BOOL'), 'WSASetLastError': (1, ['WSA_ERROR'], ['iError'], 'void'), 'WSASetService': (3, ['LPWSAQUERYSET', 'WSAESETSERVICEOP', 'DWORD'], ['lpqsRegInfo', 'essOperation', 'dwControlFlags'], '[SocketCode-INT]'), 'WSASocket': (6, ['ADDRESSFAMILY', 'SOCKETTYPE', 'SOCKETPROTOCOL', 'LPWSAPROTOCOL_INFO', 'GROUP', 'WSAFLAGS'], ['af', 'type', 'protocol', 'lpProtocolInfo', 'g', 'dwFlags'], 'SOCKET'), 'WSAStartup': (2, ['WORD', 'LPWSADATA'], ['wVersionRequested', 'lpWSAData'], '[WSA_ERROR]'), 'WSAStringToAddress': (5, ['LPTSTR', 'ADDRESSFAMILY', 'LPWSAPROTOCOL_INFO', 'LPSOCKADDR', 'LPINT'], ['AddressString', 'AddressFamily', 'lpProtocolInfo', 'lpAddress', 'lpAddressLength'], '[SocketCode-INT]'), 'WSAWaitForMultipleEvents': (5, ['DWORD', 'CONST WSAEVENT*', 'BOOL', 'DWORD', 'BOOL'], ['cEvents', 'lphEvents', 'fWaitAll', 'dwTimeout', 'fAlertable'], 'DWORD'), 'WSAIsBlocking': (0, [], [], 'BOOL'), 'GetAddrInfoExCancel': (1, ['LPHANDLE'], ['lpHandle'], '[WSA_ERROR]'), 'GetAddrInfoExOverlappedResult': (1, ['LPOVERLAPPED'], ['lpOverlapped'], '[WSA_ERROR]'), 'WSAGetQOSByName': (3, ['SOCKET', 'LPWSABUF', 'LPQOS'], ['s', 'lpQOSName', 'lpQOS'], 'BOOL')}

dict5_wsock32 = {'inet_addr': (1, ['CONST CHAR*'], ['cp'], '[INET_ADDR_OUTPUT]'), 'inet_ntoa': (1, ['STRUCT IN_ADDR'], ['in'], 'char*'), 'ioctlsocket': (3, ['SOCKET', 'SOCKET_IOCTL', 'U_LONG*'], ['s', 'cmd', 'argp'], '[SocketCode-int]')}

dict5_wtsapi32 = {'WTSCloseServer': (1, ['WTSSERVERHANDLE'], ['hServer'], 'void'), 'WTSConnectSession': (4, ['ULONG', 'ULONG', 'PTSTR', 'BOOL'], ['LogonId', 'TargetLogonId', 'pPassword', 'bWait'], 'BOOL'), 'WTSCreateListener': (6, ['WTSSERVERHANDLE', 'PVOID', 'DWORD', 'LPTSTR', 'PWTSLISTENERCONFIG', 'DWORD'], ['hServer', 'pReserved', 'Reserved', 'pListenerName', 'pBuffer', 'flag'], 'BOOL'), 'WTSDisconnectSession': (3, ['WTSSERVERHANDLE', 'DWORD', 'BOOL'], ['hServer', 'SessionId', 'bWait'], 'BOOL'), 'WTSEnableChildSessions': (1, ['BOOL'], ['bEnable'], 'BOOL'), 'WTSEnumerateListeners': (5, ['WTSSERVERHANDLE', 'PVOID', 'DWORD', 'PWTSLISTENERNAME', 'DWORD*'], ['hServer', 'pReserved', 'Reserved', 'pListeners', 'pCount'], 'BOOL'), 'WTSEnumerateProcesses': (5, ['WTSSERVERHANDLE', 'DWORD', 'DWORD', 'PWTS_PROCESS_INFO*', 'DWORD*'], ['hServer', 'Reserved', 'Version', 'ppProcessInfo', 'pCount'], 'BOOL'), 'WTSEnumerateProcessesEx': (5, ['WTSSERVERHANDLE', 'DWORD*', 'DWORD', 'LPTSTR*', 'DWORD*'], ['hServer', 'pLevel', 'SessionID', 'ppProcessInfo', 'pCount'], 'BOOL'), 'WTSEnumerateServers': (5, ['LPTSTR', 'DWORD', 'DWORD', 'PWTS_SERVER_INFO*', 'DWORD*'], ['pDomainName', 'Reserved', 'Version', 'ppServerInfo', 'pCount'], 'BOOL'), 'WTSEnumerateSessions': (5, ['WTSSERVERHANDLE', 'DWORD', 'DWORD', 'PWTS_SESSION_INFO*', 'DWORD*'], ['hServer', 'Reserved', 'Version', 'ppSessionInfo', 'pCount'], 'BOOL'), 'WTSEnumerateSessionsEx': (5, ['WTSSERVERHANDLE', 'DWORD*', 'DWORD', 'PWTS_SESSION_INFO_1*', 'DWORD*'], ['hServer', 'pLevel', 'Filter', 'ppSessionInfo', 'pCount'], 'BOOL'), 'WTSFreeMemory': (1, ['PVOID'], ['pMemory'], 'void'), 'WTSFreeMemoryEx': (3, ['WTS_TYPE_CLASS', 'PVOID', 'ULONG'], ['WTSTypeClass', 'pMemory', 'NumberOfEntries'], 'BOOL'), 'WTSGetChildSessionId': (1, ['ULONG*'], ['pSessionId'], 'BOOL'), 'WTSGetListenerSecurity': (8, ['WTSSERVERHANDLE', 'PVOID', 'DWORD', 'LPTSTR', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR', 'DWORD', 'LPDWORD'], ['hServer', 'pReserved', 'Reserved', 'pListenerName', 'SecurityInformation', 'pSecurityDescriptor', 'nLength', 'lpnLengthNeeded'], 'BOOL'), 'WTSIsChildSessionsEnabled': (1, ['BOOL*'], ['pbEnabled'], 'BOOL'), 'WTSLogoffSession': (3, ['WTSSERVERHANDLE', 'DWORD', 'BOOL'], ['hServer', 'SessionId', 'bWait'], 'BOOL'), 'WTSOpenServer': (1, ['LPTSTR'], ['pServerName'], 'HANDLE'), 'WTSOpenServerEx': (1, ['LPTSTR'], ['pServerName'], 'HANDLE'), 'WTSQueryListenerConfig': (5, ['WTSSERVERHANDLE', 'PVOID', 'DWORD', 'LPTSTR', 'PWTSLISTENERCONFIG'], ['hServer', 'pReserved', 'Reserved', 'pListenerName', 'pBuffer'], 'BOOL'), 'WTSQuerySessionInformation': (5, ['WTSSERVERHANDLE', 'DWORD', 'WTS_INFO_CLASS', 'LPTSTR*', 'DWORD*'], ['hServer', 'SessionId', 'WTSInfoClass', 'ppBuffer', 'pBytesReturned'], 'BOOL'), 'WTSQueryUserConfig': (5, ['LPTSTR', 'LPTSTR', 'WTS_CONFIG_CLASS', 'LPTSTR*', 'DWORD*'], ['pServerName', 'pUserName', 'WTSConfigClass', 'ppBuffer', 'pBytesReturned'], 'BOOL'), 'WTSQueryUserToken': (2, ['ULONG', 'PHANDLE'], ['SessionId', 'phToken'], 'BOOL'), 'WTSRegisterSessionNotification': (2, ['HWND', 'CONSOLENOTIFICATIONFLAGS'], ['hWnd', 'dwFlags'], 'BOOL'), 'WTSRegisterSessionNotificationEx': (3, ['WTSSERVERHANDLE', 'HWND', 'CONSOLENOTIFICATIONFLAGS'], ['hServer', 'hWnd', 'dwFlags'], 'BOOL'), 'WTSSendMessage': (10, ['WTSSERVERHANDLE', 'DWORD', 'LPTSTR', 'DWORD', 'LPTSTR', 'DWORD', 'DWORD', 'DWORD', 'DWORD*', 'BOOL'], ['hServer', 'SessionId', 'pTitle', 'TitleLength', 'pMessage', 'MessageLength', 'Style', 'Timeout', 'pResponse', 'bWait'], 'BOOL'), 'WTSSetListenerSecurity': (6, ['WTSSERVERHANDLE', 'PVOID', 'DWORD', 'LPTSTR', 'SECURITY_INFORMATION', 'PSECURITY_DESCRIPTOR'], ['hServer', 'pReserved', 'Reserved', 'pListenerName', 'SecurityInformation', 'pSecurityDescriptor'], 'BOOL'), 'WTSSetUserConfig': (5, ['LPTSTR', 'LPTSTR', 'WTS_CONFIG_CLASS', 'LPTSTR', 'DWORD'], ['pServerName', 'pUserName', 'WTSConfigClass', 'pBuffer', 'DataLength'], 'BOOL'), 'WTSShutdownSystem': (2, ['WTSSERVERHANDLE', 'DWORD'], ['hServer', 'ShutdownFlag'], 'BOOL'), 'WTSStartRemoteControlSession': (4, ['LPTSTR', 'ULONG', 'BYTE', 'USHORT'], ['pTargetServerName', 'TargetLogonId', 'HotkeyVk', 'HotkeyModifiers'], 'BOOL'), 'WTSStopRemoteControlSession': (1, ['ULONG'], ['LogonId'], 'BOOL'), 'WTSTerminateProcess': (3, ['WTSSERVERHANDLE', 'DWORD', 'DWORD'], ['hServer', 'ProcessId', 'ExitCode'], 'BOOL'), 'WTSUnRegisterSessionNotification': (1, ['HWND'], ['hWnd'], 'BOOL'), 'WTSUnRegisterSessionNotificationEx': (2, ['WTSSERVERHANDLE', 'HWND'], ['hServer', 'hWnd'], 'BOOL'), 'WTSVirtualChannelClose': (1, ['HANDLE'], ['hChannelHandle'], 'BOOL'), 'WTSVirtualChannelOpen': (3, ['WTSSERVERHANDLE', 'DWORD', 'LPSTR'], ['hServer', 'SessionId', 'pVirtualName'], 'HANDLE'), 'WTSVirtualChannelOpenEx': (3, ['DWORD', 'LPSTR', 'DWORD'], ['SessionId', 'pVirtualName', 'flags'], 'HANDLE'), 'WTSVirtualChannelPurgeInput': (1, ['HANDLE'], ['hChannelHandle'], 'BOOL'), 'WTSVirtualChannelPurgeOutput': (1, ['HANDLE'], ['hChannelHandle'], 'BOOL'), 'WTSVirtualChannelQuery': (4, ['HANDLE', 'WTS_VIRTUAL_CLASS', 'PVOID*', 'DWORD*'], ['hChannelHandle', 'WtsVirtualClass', 'ppBuffer', 'pBytesReturned'], 'BOOL'), 'WTSVirtualChannelRead': (5, ['HANDLE', 'ULONG', 'LPVOID', 'ULONG', 'PULONG'], ['hChannelHandle', 'TimeOut', 'Buffer', 'BufferSize', 'pBytesRead'], 'BOOL'), 'WTSVirtualChannelWrite': (4, ['HANDLE', 'LPVOID', 'ULONG', 'PULONG'], ['hChannelHandle', 'Buffer', 'Length', 'pBytesWritten'], 'BOOL'), 'WTSWaitSystemEvent': (3, ['WTSSERVERHANDLE', 'WTSEVENTFLAGS', 'WTSEVENTFLAGS*'], ['hServer', 'EventMask', 'pEventFlags'], 'BOOL'), 'WTSSetRenderHint': (5, ['UINT64*', 'HWND', 'DWORD', 'DWORD', 'BYTE*'], ['pRenderHintID', 'hwndOwner', 'renderHintType', 'cbHintDataLength', 'pHintData'], 'HRESULT')}

dict5_cabinet = {'FCIAddFile': (8, ['HFCI', 'LPSTR', 'LPSTR', 'BOOL', 'PFNFCIGETNEXTCABINET', 'PFNFCISTATUS', 'PFNFCIGETOPENINFO', 'TCOMP'], ['hfci', 'pszSourceFile', 'pszFileName', 'fExecute', 'GetNextCab', 'pfnProgress', 'pfnOpenInfo', 'typeCompress'], 'BOOL'), 'FCICreate': (13, ['PERF_FCI', 'PFNFCIFILEPLACED', 'PFNFCIALLOC', 'PFNFCIFREE', 'PFNFCIOPEN', 'PFNFCIREAD', 'PFNFCIWRITE', 'PFNFCICLOSE', 'PFNFCISEEK', 'PFNFCIDELETE', 'PFNFCIGETTEMPFILE', 'PCCAB', 'VOID*'], ['perf', 'pfnfiledest', 'pfnalloc', 'pfnfree', 'pfnopen', 'pfnread', 'pfnwrite', 'pfnclose', 'pfnseek', 'pfndelete', 'pfnfcigtf', 'pccab', 'pv'], 'HFCI'), 'FCIDestroy': (1, ['HFCI'], ['hfci'], 'BOOL'), 'FCIFlushCabinet': (4, ['HFCI', 'BOOL', 'PFNFCIGETNEXTCABINET', 'PFNFCISTATUS'], ['hfci', 'fGetNextCab', 'GetNextCab', 'pfnProgress'], 'BOOL'), 'FCIFlushFolder': (3, ['HFCI', 'PFNFCIGETNEXTCABINET', 'PFNFCISTATUS'], ['hfci', 'GetNextCab', 'pfnProgress'], 'BOOL'), 'FDICopy': (7, ['HFDI', 'LPSTR', 'LPSTR', 'INT', 'PFNFDINOTIFY', 'PFNFDIDECRYPT', 'VOID*'], ['hfdi', 'pszCabinet', 'pszCabPath', 'flags', 'pfnfdin', 'pfnfdid', 'pvUser'], 'BOOL'), 'FDICreate': (9, ['PFNALLOC', 'PFNFREE', 'PFNOPEN', 'PFNREAD', 'PFNWRITE', 'PFNCLOSE', 'PFNSEEK', 'INT', 'PERF_FDI'], ['pfnalloc', 'pfnfree', 'pfnopen', 'pfnread', 'pfnwrite', 'pfnclose', 'pfnseek', 'cpuType', 'perf'], 'HFDI'), 'FDIDestroy': (1, ['BOOL'], ['hfdi'], 'BOOL'), 'FDIIsCabinet': (3, ['HFDI', 'INT_PTR', 'PFDICABINETINFO'], ['hfdi', 'hf', 'pfdici'], 'BOOL'), 'FDITruncateCabinet': (3, ['HFDI', 'LPSTR*', 'USHORT'], ['hfdi', 'pszCabinetName', 'iFolderToDelete'], 'BOOL'), 'DeleteExtractedFiles': (1, ['PSESSION'], ['ps'], 'VOID'), 'DllGetVersion': (1, ['PCABINETDLLVERSIONINFO'], ['pcdvi'], 'VOID'), 'Extract': (2, ['PSESSION', 'LPCSTR'], ['ps', 'lpCabName'], 'HRESULT'), 'GetDllVersion': (0, [], [], 'LPCSTR'), 'CloseCompressor': (1, ['COMPRESSOR_HANDLE'], ['CompressorHandle'], 'BOOL'), 'CloseDecompressor': (1, ['DECOMPRESSOR_HANDLE'], ['DecompressorHandle'], 'BOOL'), 'Compress': (6, ['COMPRESSOR_HANDLE', 'PVOID', 'SIZE_T', 'PVOID', 'SIZE_T', 'PSIZE_T'], ['CompressorHandle', 'UncompressedData', 'UncompressedDataSize', 'CompressedBuffer', 'CompressedBufferSize', 'CompressedDataSize'], 'BOOL'), 'CreateCompressor': (3, ['COMPRESS_ALGORITHM', 'PCOMPRESS_ALLOCATION_ROUTINES', 'PCOMPRESSOR_HANDLE'], ['Algorithm', 'AllocationRoutines', 'CompressorHandle'], 'BOOL'), 'CreateDecompressor': (3, ['COMPRESS_ALGORITHM', 'PCOMPRESS_ALLOCATION_ROUTINES', 'PDECOMPRESSOR_HANDLE'], ['Algorithm', 'AllocationRoutines', 'DecompressorHandle'], 'BOOL'), 'Decompress': (6, ['DECOMPRESSOR_HANDLE', 'PVOID', 'SIZE_T', 'PVOID', 'SIZE_T', 'PSIZE_T'], ['DecompressorHandle', 'CompressedData', 'CompressedDataSize', 'UncompressedBuffer', 'UncompressedBufferSize', 'UncompressedDataSize'], 'BOOL'), 'QueryCompressorInformation': (4, ['COMPRESSOR_HANDLE', 'COMPRESS_INFORMATION_CLASS', 'PVOID', 'SIZE_T'], ['CompressorHandle', 'CompressInformationClass', 'CompressInformation', 'CompressInformationSize'], 'BOOL'), 'QueryDecompressorInformation': (4, ['DECOMPRESSOR_HANDLE', 'COMPRESS_INFORMATION_CLASS', 'PVOID', 'SIZE_T'], ['DecompressorHandle', 'CompressInformationClass', 'CompressInformation', 'CompressInformationSize'], 'BOOL'), 'ResetCompressor': (1, ['COMPRESSOR_HANDLE'], ['CompressorHandle'], 'BOOL'), 'ResetDecompressor': (1, ['DECOMPRESSOR_HANDLE'], ['DecompressorHandle'], 'BOOL'), 'SetCompressorInformation': (4, ['COMPRESSOR_HANDLE', 'COMPRESS_INFORMATION_CLASS', 'PVOID', 'SIZE_T'], ['CompressorHandle', 'CompressInformationClass', 'CompressInformation', 'CompressInformationSize'], 'BOOL'), 'SetDecompressorInformation': (4, ['DECOMPRESSOR_HANDLE', 'COMPRESS_INFORMATION_CLASS', 'PVOID', 'SIZE_T'], ['DeompressorHandle', 'CompressInformationClass', 'CompressInformation', 'CompressInformationSize'], 'BOOL')}

dict5_cfgmgr32 = {'CM_Add_Empty_Log_Conf': (4, ['PLOG_CONF', 'DEVINST', 'PRIORITY', 'LOGICALCONFIGFLAGS'], ['plcLogConf', 'dnDevInst', 'Priority', 'ulFlags'], 'CONFIGRET'), 'CM_Add_Empty_Log_Conf_Ex': (5, ['PLOG_CONF', 'DEVINST', 'PRIORITY', 'LOGICALCONFIGFLAGS', 'HMACHINE'], ['plcLogConf', 'dnDevInst', 'Priority', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Add_ID': (3, ['DEVINST', 'PTSTR', 'CM_ADD_ID_FLAGS'], ['dnDevInst', 'pszID', 'ulFlags'], 'CONFIGRET'), 'CM_Add_ID_Ex': (4, ['DEVINST', 'PTSTR', 'CM_ADD_ID_FLAGS', 'HMACHINE'], ['dnDevInst', 'pszID', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Add_Res_Des': (6, ['PRES_DES', 'LOG_CONF', 'RESOURCEID', 'PCVOID', 'ULONG', 'ULONG'], ['prdResDes', 'lcLogConf', 'ResourceID', 'ResourceData', 'ResourceLen', 'ulFlags'], 'CONFIGRET'), 'CM_Add_Res_Des_Ex': (7, ['PRES_DES', 'LOG_CONF', 'RESOURCEID', 'PCVOID', 'ULONG', 'ULONG', 'HMACHINE'], ['prdResDes', 'lcLogConf', 'ResourceID', 'ResourceData', 'ResourceLen', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Connect_Machine': (2, ['PCTSTR', 'PHMACHINE'], ['UNCServerName', 'phMachine'], 'CONFIGRET'), 'CM_Delete_Class_Key': (2, ['LPGUID', 'CM_DELETE_CLASS_FLAGS'], ['ClassGuid', 'ulFlags'], 'CONFIGRET'), 'CM_Delete_Device_Interface_Key': (2, ['LPCTSTR', 'ULONG'], ['pszDeviceInterface', 'ulFlags'], 'CONFIGRET'), 'CM_Delete_DevNode_Key': (3, ['DEVNODE', 'ULONG', 'ULONG'], ['dnDevNode', 'ulHardwareProfile', 'ulFlags'], 'CONFIGRET'), 'CM_Disable_DevNode': (2, ['DEVINST', 'CM_DISABLE_FLAGS'], ['dnDevInst', 'ulFlags'], 'CONFIGRET'), 'CM_Disconnect_Machine': (1, ['HMACHINE'], ['hMachine'], 'CONFIGRET'), 'CM_Enable_DevNode': (2, ['DEVINST', 'ULONG'], ['dnDevInst', 'ulFlags'], 'CONFIGRET'), 'CM_Enumerate_Classes': (3, ['ULONG', 'LPGUID', 'CM_ENUMERATE_CLASSES_FLAGS'], ['ulClassIndex', 'ClassGuid', 'ulFlags'], 'CONFIGRET'), 'CM_Enumerate_Classes_Ex': (4, ['ULONG', 'LPGUID', 'CM_ENUMERATE_CLASSES_FLAGS', 'HMACHINE'], ['ulClassIndex', 'ClassGuid', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Enumerate_Enumerators': (4, ['ULONG', 'PTCHAR', 'PULONG', 'ULONG'], ['ulEnumIndex', 'Buffer', 'pulLength', 'ulFlags'], 'CONFIGRET'), 'CM_Enumerate_Enumerators_Ex': (5, ['ULONG', 'PTCHAR', 'PULONG', 'ULONG', 'HMACHINE'], ['ulEnumIndex', 'Buffer', 'pulLength', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Free_Log_Conf': (2, ['LOG_CONF', 'ULONG'], ['lcLogConfToBeFreed', 'ulFlags'], 'CONFIGRET'), 'CM_Free_Log_Conf_Ex': (3, ['LOG_CONF', 'ULONG', 'HMACHINE'], ['lcLogConfToBeFreed', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Free_Log_Conf_Handle': (1, ['LOG_CONF'], ['lcLogConf'], 'CONFIGRET'), 'CM_Free_Res_Des': (3, ['PRES_DES', 'RES_DES', 'ULONG'], ['prdResDes', 'rdResDes', 'ulFlags'], 'CONFIGRET'), 'CM_Free_Res_Des_Ex': (4, ['PRES_DES', 'RES_DES', 'ULONG', 'HMACHINE'], ['prdResDes', 'rdResDes', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Free_Res_Des_Handle': (1, ['RES_DES'], ['rdResDes'], 'CONFIGRET'), 'CM_Free_Resource_Conflict_Handle': (1, ['CONFLICT_LIST'], ['clConflictList'], 'CONFIGRET'), 'CM_Get_Child': (3, ['PDEVINST', 'DEVINST', 'ULONG'], ['pdnDevInst', 'dnDevInst', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Child_Ex': (4, ['PDEVINST', 'DEVINST', 'ULONG', 'HMACHINE'], ['pdnDevInst', 'dnDevInst', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Class_PropertyW': (6, ['LPCGUID', 'CONST DEVPROPKEY*', 'DEVPROPTYPE*', 'PBYTE', 'PULONG', 'ULONG'], ['ClassGUID', 'PropertyKey', 'PropertyType', 'PropertyBuffer', 'PropertyBufferSize', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Class_Property_Keys': (4, ['LPCGUID', 'DEVPROPKEY*', 'PULONG', 'CM_CLASS_PROPERTY_FLAGS'], ['ClassGUID', 'PropertyKeyArray', 'PropertyKeyCount', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Class_Registry_Property': (7, ['LPGUID', 'CM_CRP', 'PULONG', 'PVOID', 'PULONG', 'ULONG', 'HMACHINE'], ['ClassGuid', 'ulProperty', 'pulRegDataType', 'Buffer', 'pulLength', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Depth': (3, ['PULONG', 'DEVINST', 'ULONG'], ['pulDepth', 'dnDevInst', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Depth_Ex': (4, ['PULONG', 'DEVINST', 'ULONG', 'HMACHINE'], ['pulDepth', 'dnDevInst', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Device_ID': (4, ['DEVINST', 'PTCHAR', 'ULONG', 'ULONG'], ['dnDevInst', 'Buffer', 'BufferLen', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Device_ID_Ex': (5, ['DEVINST', 'PTCHAR', 'ULONG', 'ULONG', 'HMACHINE'], ['dnDevInst', 'Buffer', 'BufferLen', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Device_ID_List': (4, ['PCTSTR', 'PTCHAR', 'ULONG', 'CM_GETIDLIST_FLAGS'], ['pszFilter', 'Buffer', 'BufferLen', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Device_ID_List_Ex': (5, ['PCTSTR', 'PTCHAR', 'ULONG', 'CM_GETIDLIST_FLAGS', 'HMACHINE'], ['pszFilter', 'Buffer', 'BufferLen', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Device_ID_List_Size': (3, ['PULONG', 'PCTSTR', 'CM_GETIDLIST_FLAGS'], ['pulLen', 'pszFilter', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Device_ID_List_Size_Ex': (4, ['PULONG', 'PCTSTR', 'CM_GETIDLIST_FLAGS', 'HMACHINE'], ['pulLen', 'pszFilter', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Device_ID_Size': (3, ['PULONG', 'DEVINST', 'ULONG'], ['pulLen', 'dnDevInst', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Device_ID_Size_Ex': (4, ['PULONG', 'DEVINST', 'ULONG', 'HMACHINE'], ['pulLen', 'dnDevInst', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Device_Interface_List': (5, ['LPGUID', 'DEVINSTID', 'PTCHAR', 'ULONG', 'CM_GET_DEVICE_INTERFACE_LIST_FLAGS'], ['InterfaceClassGuid', 'pDeviceID', 'Buffer', 'BufferLen', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Device_Interface_List_Size': (4, ['PULONG', 'LPGUID', 'DEVINSTID', 'CM_GET_DEVICE_INTERFACE_LIST_FLAGS'], ['pulLen', 'InterfaceClassGuid', 'pDeviceID', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Device_Interface_PropertyW': (6, ['LPCWSTR', 'CONST DEVPROPKEY*', 'DEVPROPTYPE*', 'PBYTE', 'PULONG', 'ULONG'], ['pszDeviceInterface', 'PropertyKey', 'PropertyType', 'PropertyBuffer', 'PropertyBufferSize', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Device_Interface_Property_KeysW': (4, ['LPCWSTR', 'DEVPROPKEY*', 'PULONG', 'ULONG'], ['pszDeviceInterface', 'PropertyKeyArray', 'PropertyKeyCount', 'ulFlags'], 'CONFIGRET'), 'CM_Get_DevNode_PropertyW': (6, ['DEVINST', 'CONST DEVPROPKEY*', 'DEVPROPTYPE*', 'PBYTE', 'PULONG', 'ULONG'], ['dnDevInst', 'PropertyKey', 'PropertyType', 'PropertyBuffer', 'PropertyBufferSize', 'ulFlags'], 'CONFIGRET'), 'CM_Get_DevNode_Property_Keys': (4, ['DEVINST', 'DEVPROPKEY*', 'PULONG', 'ULONG'], ['dnDevInst', 'PropertyKeyArray', 'PropertyKeyCount', 'ulFlags'], 'CONFIGRET'), 'CM_Get_DevNode_Registry_Property': (6, ['DEVINST', 'CM_DRP', 'PULONG', 'PVOID', 'PULONG', 'ULONG'], ['dnDevInst', 'ulProperty', 'pulRegDataType', 'Buffer', 'pulLength', 'ulFlags'], 'CONFIGRET'), 'CM_Get_DevNode_Status': (4, ['DN_FLAGS*', 'CMPROBLEMNUMBER*', 'DEVINST', 'ULONG'], ['pulStatus', 'pulProblemNumber', 'dnDevInst', 'ulFlags'], 'CONFIGRET'), 'CM_Get_DevNode_Status_Ex': (5, ['DN_FLAGS*', 'CMPROBLEMNUMBER*', 'DEVINST', 'ULONG', 'HMACHINE'], ['pulStatus', 'pulProblemNumber', 'dnDevInst', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_First_Log_Conf': (3, ['PLOG_CONF', 'DEVINST', 'LOGICALCONFIGFLAGS'], ['plcLogConf', 'dnDevInst', 'ulFlags'], 'CONFIGRET'), 'CM_Get_First_Log_Conf_Ex': (4, ['PLOG_CONF', 'DEVINST', 'LOGICALCONFIGFLAGS', 'HMACHINE'], ['plcLogConf', 'dnDevInst', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_HW_Prof_Flags': (3, ['DEVINSTID', 'CSCONFIGFLAGS*', 'ULONG'], ['pDeviceID', 'pulValue', 'ulFlags'], 'CONFIGRET'), 'CM_Get_HW_Prof_Flags_Ex': (5, ['DEVINSTID', 'ULONG', 'CSCONFIGFLAGS*', 'ULONG', 'HMACHINE'], ['pDeviceID', 'ulHardwareProfile', 'pulValue', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Log_Conf_Priority': (3, ['LOG_CONF', 'PPRIORITY', 'ULONG'], ['lcLogConf', 'pPriority', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Log_Conf_Priority_Ex': (4, ['LOG_CONF', 'PPRIORITY', 'ULONG', 'HMACHINE'], ['lcLogConf', 'pPriority', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Next_Log_Conf': (3, ['PLOG_CONF', 'LOG_CONF', 'ULONG'], ['plcLogConf', 'lcLogConf', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Next_Log_Conf_Ex': (4, ['PLOG_CONF', 'LOG_CONF', 'ULONG', 'HMACHINE'], ['plcLogConf', 'lcLogConf', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Next_Res_Des': (5, ['PRES_DES', 'RES_DES', 'RESOURCEID', 'PRESOURCEID', 'ULONG'], ['prdResDes', 'rdResDes', 'ForResource', 'pResourceID', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Next_Res_Des_Ex': (6, ['PRES_DES', 'RES_DES', 'RESOURCEID', 'PRESOURCEID', 'ULONG', 'HMACHINE'], ['prdResDes', 'rdResDes', 'ForResource', 'pResourceID', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Parent': (3, ['PDEVINST', 'DEVINST', 'ULONG'], ['pdnDevInst', 'dnDevInst', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Parent_Ex': (4, ['PDEVINST', 'DEVINST', 'ULONG', 'HMACHINE'], ['pdnDevInst', 'dnDevInst', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Res_Des_Data': (4, ['RES_DES', 'PVOID', 'ULONG', 'ULONG'], ['rdResDes', 'Buffer', 'BufferLen', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Res_Des_Data_Ex': (5, ['RES_DES', 'PVOID', 'ULONG', 'ULONG', 'HMACHINE'], ['rdResDes', 'Buffer', 'BufferLen', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Res_Des_Data_Size': (3, ['PULONG', 'RES_DES', 'ULONG'], ['pulSize', 'rdResDes', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Res_Des_Data_Size_Ex': (4, ['PULONG', 'RES_DES', 'ULONG', 'HMACHINE'], ['pulSize', 'rdResDes', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Resource_Conflict_Count': (2, ['CONFLICT_LIST', 'PULONG'], ['clConflictList', 'pulCount'], 'CONFIGRET'), 'CM_Get_Resource_Conflict_Details': (3, ['CONFLICT_LIST', 'ULONG', 'PCONFLICT_DETAILS'], ['clConflictList', 'ulIndex', 'pConflictDetails'], 'CONFIGRET'), 'CM_Get_Sibling': (3, ['PDEVINST', 'DEVINST', 'ULONG'], ['pdnDevInst', 'DevInst', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Sibling_Ex': (4, ['PDEVINST', 'DEVINST', 'ULONG', 'HMACHINE'], ['pdnDevInst', 'DevInst', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Version': (0, [], [], 'CONFIGRET'), 'CM_Get_Version_Ex': (1, ['HMACHINE'], ['hMachine'], 'CONFIGRET'), 'CM_Is_Dock_Station_Present': (1, ['PBOOL'], ['pbPresent'], 'CONFIGRET'), 'CM_Is_Dock_Station_Present_Ex': (2, ['PBOOL', 'HMACHINE'], ['pbPresent', 'hMachine'], 'CONFIGRET'), 'CM_Is_Version_Available': (1, ['WORD'], ['wVersion'], 'CONFIGRET'), 'CM_Is_Version_Available_Ex': (2, ['WORD', 'HMACHINE'], ['wVersion', 'hMachine'], 'CONFIGRET'), 'CM_Locate_DevNode': (3, ['PDEVINST', 'DEVINSTID', 'CM_LOCATE_DEVNODE_FLAGS'], ['pdnDevInst', 'pDeviceID', 'ulFlags'], 'CONFIGRET'), 'CM_Locate_DevNode_Ex': (4, ['PDEVINST', 'DEVINSTID', 'CM_LOCATE_DEVNODE_FLAGS', 'HMACHINE'], ['pdnDevInst', 'pDeviceID', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Modify_Res_Des': (6, ['PRES_DES', 'RES_DES', 'RESOURCEID', 'PCVOID', 'ULONG', 'ULONG'], ['prdResDes', 'rdResDes', 'ResourceID', 'ResourceData', 'ResourceLen', 'ulFlags'], 'CONFIGRET'), 'CM_Modify_Res_Des_Ex': (7, ['PRES_DES', 'RES_DES', 'RESOURCEID', 'PCVOID', 'ULONG', 'ULONG', 'HMACHINE'], ['prdResDes', 'rdResDes', 'ResourceID', 'ResourceData', 'ResourceLen', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Open_Class_Key': (6, ['LPGUID', 'LPCTSTR', 'REGSAM', 'REGDISPOSITION', 'PHKEY', 'CM_OPEN_CLASS_KEY_FLAGS'], ['ClassGuid', 'pszClassName', 'samDesired', 'Disposition', 'phkClass', 'ulFlags'], 'CONFIGRET'), 'CM_Open_Device_Interface_Key': (5, ['LPCTSTR', 'REGSAM', 'REGDISPOSITION', 'PHKEY', 'ULONG'], ['pszDeviceInterface', 'samDesired', 'Disposition', 'phkDeviceInterface', 'ulFlags'], 'CONFIGRET'), 'CM_Open_DevNode_Key': (6, ['DEVINST', 'REGSAM', 'ULONG', 'REGDISPOSITION', 'PHKEY', 'CM_REGISTRY_FLAGS'], ['dnDevNode', 'samDesired', 'ulHardwareProfile', 'Disposition', 'phkDevice', 'ulFlags'], 'CONFIGRET'), 'CM_Query_And_Remove_SubTree': (5, ['DEVINST', 'PPNP_VETO_TYPE', 'LPTSTR', 'ULONG', 'CM_REMOVE_FLAGS'], ['dnAncestor', 'pVetoType', 'pszVetoName', 'ulNameLength', 'ulFlags'], 'CONFIGRET'), 'CM_Query_And_Remove_SubTree_Ex': (5, ['DEVINST', 'PPNP_VETO_TYPE', 'LPTSTR', 'ULONG', 'CM_REMOVE_FLAGS'], ['dnAncestor', 'pVetoType', 'pszVetoName', 'ulNameLength', 'ulFlags'], 'CONFIGRET'), 'CM_Query_Resource_Conflict_List': (7, ['PCONFLICT_LIST', 'DEVINST', 'RESOURCEID', 'PCVOID', 'ULONG', 'ULONG', 'HMACHINE'], ['pclConflictList', 'dnDevInst', 'ResourceID', 'ResourceData', 'ResourceLen', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Reenumerate_DevNode': (2, ['DEVINST', 'CM_REENUMERATE_FLAGS'], ['dnDevInst', 'ulFlags'], 'CONFIGRET'), 'CM_Reenumerate_DevNode_Ex': (3, ['DEVINST', 'CM_REENUMERATE_FLAGS', 'HMACHINE'], ['dnDevInst', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Register_Notification': (4, ['PCM_NOTIFY_FILTER', 'PVOID', 'PCM_NOTIFY_CALLBACK', 'PHCMNOTIFICATION'], ['pFilter', 'pContext', 'pCallback', 'pNotifyContext'], 'CONFIGRET'), 'CM_Request_Device_Eject': (5, ['DEVINST', 'PPNP_VETO_TYPE', 'LPTSTR', 'ULONG', 'ULONG'], ['dnDevInst', 'pVetoType', 'pszVetoName', 'ulNameLength', 'ulFlags'], 'CONFIGRET'), 'CM_Request_Device_Eject_Ex': (5, ['DEVINST', 'PPNP_VETO_TYPE', 'LPTSTR', 'ULONG', 'ULONG'], ['dnDevInst', 'pVetoType', 'pszVetoName', 'ulNameLength', 'ulFlags'], 'CONFIGRET'), 'CM_Request_Eject_PC': (0, [], [], 'CONFIGRET'), 'CM_Request_Eject_PC_Ex': (1, ['HMACHINE'], ['hMachine'], 'CONFIGRET'), 'CM_Set_Class_PropertyW': (6, ['LPCGUID', 'CONST DEVPROPKEY*', 'DEVPROPTYPE', 'CONST PBYTE', 'ULONG', 'ULONG'], ['ClassGUID', 'PropertyKey', 'PropertyType', 'PropertyBuffer', 'PropertyBufferSize', 'ulFlags'], 'CONFIGRET'), 'CM_Set_Class_Registry_Property': (6, ['LPGUID', 'CM_CRP', 'PCVOID', 'ULONG', 'ULONG', 'HMACHINE'], ['ClassGuid', 'ulProperty', 'Buffer', 'ulLength', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Set_Device_Interface_PropertyW': (6, ['LPCWSTR', 'CONST DEVPROPKEY*', 'DEVPROPTYPE', 'CONST PBYTE', 'ULONG', 'ULONG'], ['pszDeviceInterface', 'PropertyKey', 'PropertyType', 'PropertyBuffer', 'PropertyBufferSize', 'ulFlags'], 'CONFIGRET'), 'CM_Set_DevNode_Problem': (3, ['DEVINST', 'CMPROBLEMNUMBER', 'CM_SET_DEVNODE_PROBLEM_FLAGS'], ['dnDevInst', 'ulProblem', 'ulFlags'], 'CONFIGRET'), 'CM_Set_DevNode_Problem_Ex': (4, ['DEVINST', 'CMPROBLEMNUMBER', 'CM_SET_DEVNODE_PROBLEM_FLAGS', 'HMACHINE'], ['dnDevInst', 'ulProblem', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Set_DevNode_PropertyW': (6, ['DEVINST', 'CONST DEVPROPKEY*', 'DEVPROPTYPE', 'CONST PBYTE', 'ULONG', 'ULONG'], ['dnDevInst', 'PropertyKey', 'PropertyType', 'PropertyBuffer', 'PropertyBufferSize', 'ulFlags'], 'CONFIGRET'), 'CM_Set_DevNode_Registry_Property': (5, ['DEVINST', 'CM_DRP', 'PCVOID', 'ULONG', 'ULONG'], ['dnDevInst', 'ulProperty', 'Buffer', 'ulLength', 'ulFlags'], 'CONFIGRET'), 'CM_Setup_DevNode': (2, ['DEVINST', 'CM_SETUP_DEVNODE_FLAGS'], ['dnDevInst', 'ulFlags'], 'CONFIGRET'), 'CM_Uninstall_DevNode': (2, ['DEVNODE', 'ULONG'], ['dnDevInst', 'ulFlags'], 'CONFIGRET'), 'CM_Unregister_Notification': (1, ['HCMNOTIFICATION'], ['NotifyContext'], 'CONFIGRET'), 'CM_WaitNoPendingInstallEvents': (1, ['DWORD'], ['dwTimeout'], '[WAIT_RESULT]'), 'CMP_WaitNoPendingInstallEvents': (1, ['DWORD'], ['dwTimeout'], '[WAIT_RESULT]'), 'CM_Add_Range': (4, ['DWORDLONG', 'DWORDLONG', 'RANGE_LIST', 'CM_ADD_RANGE_FLAGS'], ['ullStartValue', 'ullEndValue', 'rlh', 'ulFlags'], 'CONFIGRET'), 'CM_Create_DevNode': (4, ['PDEVINST', 'DEVINSTID', 'DEVINST', 'CM_CREATE_DEVNODE_FLAGS'], ['pdnDevInst', 'pDeviceID', 'dnParent', 'ulFlags'], 'CONFIGRET'), 'CM_Create_DevNode_Ex': (5, ['PDEVINST', 'DEVINSTID', 'DEVINST', 'CM_CREATE_DEVNODE_FLAGS', 'HMACHINE'], ['pdnDevInst', 'pDeviceID', 'dnParent', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Create_Range_List': (2, ['PRANGE_LIST', 'ULONG'], ['prlh', 'ulFlags'], 'CONFIGRET'), 'CM_Delete_Class_Key_Ex': (3, ['LPGUID', 'CM_DELETE_CLASS_FLAGS', 'HMACHINE'], ['ClassGuid', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Delete_DevNode_Key_Ex': (4, ['DEVNODE', 'ULONG', 'ULONG', 'HMACHINE'], ['dnDevNode', 'ulHardwareProfile', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Delete_Range': (4, ['DWORDLONG', 'DWORDLONG', 'RANGE_LIST', 'ULONG'], ['ullStartValue', 'ullEndValue', 'rlh', 'ulFlags'], 'CONFIGRET'), 'CM_Disable_DevNode_Ex': (3, ['DEVINST', 'CM_DISABLE_FLAGS', 'HMACHINE'], ['dnDevInst', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Dup_Range_List': (3, ['RANGE_LIST', 'RANGE_LIST', 'ULONG'], ['rlhOld', 'rlhNew', 'ulFlags'], 'CONFIGRET'), 'CM_Enable_DevNode_Ex': (3, ['DEVINST', 'ULONG', 'HMACHINE'], ['dnDevInst', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Find_Range': (7, ['PDWORDLONG', 'DWORDLONG', 'ULONG', 'DWORDLONG', 'DWORDLONG', 'RANGE_LIST', 'ULONG'], ['pullStart', 'ullStart', 'ulLength', 'ullAlignment', 'ullEnd', 'rlh', 'ulFlags'], 'CONFIGRET'), 'CM_First_Range': (5, ['RANGE_LIST', 'PDWORDLONG', 'PDWORDLONG', 'PRANGE_ELEMENT', 'ULONG'], ['rlh', 'pullStart', 'pullEnd', 'preElement', 'ulFlags'], 'CONFIGRET'), 'CM_Free_Range_List': (2, ['RANGE_LIST', 'ULONG'], ['rlh', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Class_Key_Name': (4, ['LPGUID', 'LPTSTR', 'PULONG', 'ULONG'], ['ClassGuid', 'pszKeyName', 'pulLength', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Class_Key_Name_Ex': (5, ['LPGUID', 'LPTSTR', 'PULONG', 'ULONG', 'HMACHINE'], ['ClassGuid', 'pszKeyName', 'pulLength', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Class_Name': (4, ['LPGUID', 'PTSTR', 'PULONG', 'ULONG'], ['ClassGuid', 'Buffer', 'pulLength', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Class_Name_Ex': (5, ['LPGUID', 'PTSTR', 'PULONG', 'ULONG', 'HMACHINE'], ['ClassGuid', 'Buffer', 'pulLength', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Device_Interface_Alias': (5, ['LPCTSTR', 'LPGUID', 'LPTSTR', 'PULONG', 'ULONG'], ['pszDeviceInterface', 'AliasInterfaceGuid', 'pszAliasDeviceInterface', 'pulLength', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Device_Interface_Alias_Ex': (6, ['LPCTSTR', 'LPGUID', 'LPTSTR', 'PULONG', 'ULONG', 'HMACHINE'], ['pszDeviceInterface', 'AliasInterfaceGuid', 'pszAliasDeviceInterface', 'pulLength', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Device_Interface_List_Ex': (6, ['LPGUID', 'DEVINSTID', 'PTCHAR', 'ULONG', 'ULONG', 'HMACHINE'], ['InterfaceClassGuid', 'pDeviceID', 'Buffer', 'BufferLen', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Device_Interface_List_Size_Ex': (5, ['PULONG', 'LPGUID', 'DEVINSTID', 'ULONG', 'HMACHINE'], ['pulLen', 'InterfaceClassGuid', 'pDeviceID', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_DevNode_Custom_Property': (6, ['DEVINST', 'PCTSTR', 'PULONG', 'PVOID', 'PULONG', 'CM_CUSTOMDEVPROP_FLAGS'], ['dnDevInst', 'pszCustomPropertyName', 'pulRegDataType', 'Buffer', 'pulLength', 'ulFlags'], 'CONFIGRET'), 'CM_Get_DevNode_Custom_Property_ExW': (7, ['DEVINST', 'PCTSTR', 'PULONG', 'PVOID', 'PULONG', 'CM_CUSTOMDEVPROP_FLAGS', 'HMACHINE'], ['dnDevInst', 'pszCustomPropertyName', 'pulRegDataType', 'Buffer', 'pulLength', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_DevNode_Registry_Property_Ex': (7, ['DEVINST', 'CM_DRP', 'PULONG', 'PVOID', 'PULONG', 'ULONG', 'HMACHINE'], ['dnDevInst', 'ulProperty', 'pulRegDataType', 'Buffer', 'pulLength', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Global_State': (2, ['PULONG', 'ULONG'], ['pulState', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Global_State_Ex': (3, ['PULONG', 'ULONG', 'HMACHINE'], ['pulState', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Hardware_Profile_Info': (3, ['ULONG', 'PHWPROFILEINFO', 'ULONG'], ['ulIndex', 'pHWProfileInfo', 'ulFlags'], 'CONFIGRET'), 'CM_Get_Hardware_Profile_Info_Ex': (4, ['ULONG', 'PHWPROFILEINFO', 'ULONG', 'HMACHINE'], ['ulIndex', 'pHWProfileInfo', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Intersect_Range_List': (4, ['RANGE_LIST', 'RANGE_LIST', 'RANGE_LIST', 'ULONG'], ['rlhOld1', 'rlhOld2', 'rlhNew', 'ulFlags'], 'CONFIGRET'), 'CM_Invert_Range_List': (4, ['RANGE_LIST', 'RANGE_LIST', 'DWORDLONG', 'ULONG'], ['rlhOld', 'rlhNew', 'ullMaxValue', 'ulFlags'], 'CONFIGRET'), 'CM_Merge_Range_List': (4, ['RANGE_LIST', 'RANGE_LIST', 'RANGE_LIST', 'ULONG'], ['rlhOld1', 'rlhOld2', 'rlhNew', 'ulFlags'], 'CONFIGRET'), 'CM_Move_DevNode': (3, ['DEVINST', 'DEVINST', 'ULONG'], ['dnFromDevInst', 'dnToDevInst', 'ulFlags'], 'CONFIGRET'), 'CM_Move_DevNode_Ex': (4, ['DEVINST', 'DEVINST', 'ULONG', 'HMACHINE'], ['dnFromDevInst', 'dnToDevInst', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Next_Range': (4, ['PRANGE_ELEMENT', 'PDWORDLONG', 'PDWORDLONG', 'ULONG'], ['preElement', 'pullStart', 'pullEnd', 'ulFlags'], 'CONFIGRET'), 'CM_Open_Class_Key_Ex': (7, ['LPGUID', 'LPCTSTR', 'REGSAM', 'REGDISPOSITION', 'PHKEY', 'CM_OPEN_CLASS_KEY_FLAGS', 'HMACHINE'], ['ClassGuid', 'pszClassName', 'samDesired', 'Disposition', 'phkClass', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Open_DevNode_Key_Ex': (7, ['DEVINST', 'REGSAM', 'ULONG', 'REGDISPOSITION', 'PHKEY', 'CM_REGISTRY_FLAGS', 'HMACHINE'], ['dnDevNode', 'samDesired', 'ulHardwareProfile', 'Disposition', 'phkDevice', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Query_Arbitrator_Free_Data': (5, ['PVOID', 'ULONG', 'DEVINST', 'RESOURCEID', 'CM_QUERY_ARBITRATOR_FLAGS'], ['pData', 'DataLen', 'dnDevInst', 'ResourceID', 'ulFlags'], 'CONFIGRET'), 'CM_Query_Arbitrator_Free_Data_Ex': (6, ['PVOID', 'ULONG', 'DEVINST', 'RESOURCEID', 'CM_QUERY_ARBITRATOR_FLAGS', 'HMACHINE'], ['pData', 'DataLen', 'dnDevInst', 'ResourceID', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Query_Arbitrator_Free_Size': (4, ['PULONG', 'DEVINST', 'RESOURCEID', 'CM_QUERY_ARBITRATOR_FLAGS'], ['pulSize', 'dnDevInst', 'ResourceID', 'ulFlags'], 'CONFIGRET'), 'CM_Query_Arbitrator_Free_Size_Ex': (5, ['PULONG', 'DEVINST', 'RESOURCEID', 'CM_QUERY_ARBITRATOR_FLAGS', 'HMACHINE'], ['pulSize', 'dnDevInst', 'ResourceID', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Query_Remove_SubTree': (2, ['DEVINST', 'ULONG'], ['dnAncestor', 'ulFlags'], 'CONFIGRET'), 'CM_Query_Remove_SubTree_Ex': (3, ['DEVINST', 'ULONG', 'HMACHINE'], ['dnAncestor', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Register_Device_Driver': (2, ['DEVINST', 'CM_REGISTER_DEVICE_DRIVER_FLAGS'], ['dnDevInst', 'ulFlags'], 'CONFIGRET'), 'CM_Register_Device_Driver_Ex': (3, ['DEVINST', 'CM_REGISTER_DEVICE_DRIVER_FLAGS', 'HMACHINE'], ['dnDevInst', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Register_Device_Interface': (6, ['DEVINST', 'LPGUID', 'LPCTSTR', 'LPTSTR', 'PULONG', 'ULONG'], ['dnDevInst', 'InterfaceClassGuid', 'pszReference', 'pszDeviceInterface', 'pulLength', 'ulFlags'], 'CONFIGRET'), 'CM_Register_Device_Interface_Ex': (7, ['DEVINST', 'LPGUID', 'LPCTSTR', 'LPTSTR', 'PULONG', 'ULONG', 'HMACHINE'], ['dnDevInst', 'InterfaceClassGuid', 'pszReference', 'pszDeviceInterface', 'pulLength', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Run_Detection': (1, ['CM_DETECT_FLAGS'], ['ulFlags'], 'CONFIGRET'), 'CM_Run_Detection_Ex': (2, ['CM_DETECT_FLAGS', 'HMACHINE'], ['ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Set_DevNode_Registry_Property_Ex': (6, ['DEVINST', 'CM_DRP', 'PCVOID', 'ULONG', 'ULONG', 'HMACHINE'], ['dnDevInst', 'ulProperty', 'Buffer', 'ulLength', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Set_HW_Prof': (2, ['ULONG', 'ULONG'], ['ulHardwareProfile', 'ulFlags'], 'CONFIGRET'), 'CM_Set_HW_Prof_Ex': (3, ['ULONG', 'ULONG', 'HMACHINE'], ['ulHardwareProfile', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Set_HW_Prof_Flags': (4, ['DEVINSTID', 'ULONG', 'ULONG', 'CM_SET_HW_PROF_FLAGS'], ['pDeviceID', 'ulConfig', 'ulValue', 'ulFlags'], 'CONFIGRET'), 'CM_Set_HW_Prof_Flags_Ex': (5, ['DEVINSTID', 'ULONG', 'ULONG', 'CM_SET_HW_PROF_FLAGS', 'HMACHINE'], ['pDeviceID', 'ulConfig', 'ulValue', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Setup_DevNode_Ex': (3, ['DEVINST', 'ULONG', 'HMACHINE'], ['dnDevInst', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Test_Range_Available': (4, ['DWORDLONG', 'DWORDLONG', 'RANGE_LIST', 'ULONG'], ['ullStartValue', 'ullEndValue', 'rlh', 'ulFlags'], 'CONFIGRET'), 'CM_Uninstall_DevNode_Ex': (3, ['DEVNODE', 'ULONG', 'HMACHINE'], ['dnDevInst', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Unregister_Device_Interface': (2, ['LPCTSTR', 'ULONG'], ['pszDeviceInterface', 'ulFlags'], 'CONFIGRET'), 'CM_Unregister_Device_Interface_Ex': (3, ['LPCTSTR', 'ULONG', 'HMACHINE'], ['pszDeviceInterface', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Detect_Resource_Conflict': (6, ['DEVINST', 'RESOURCEID', 'PCVOID', 'ULONG', 'PBOOL', 'ULONG'], ['dnDevInst', 'ResourceID', 'ResourceData', 'ResourceLen', 'pbConflictDetected', 'ulFlags'], 'CONFIGRET'), 'CM_Detect_Resource_Conflict_Ex': (7, ['DEVINST', 'RESOURCEID', 'PCVOID', 'ULONG', 'PBOOL', 'ULONG', 'HMACHINE'], ['dnDevInst', 'ResourceID', 'ResourceData', 'ResourceLen', 'pbConflictDetected', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Remove_SubTree': (2, ['DEVINST', 'ULONG'], ['dnAncestor', 'ulFlags'], 'CONFIGRET'), 'CM_Remove_SubTree_Ex': (3, ['DEVINST', 'ULONG', 'HMACHINE'], ['dnAncestor', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_RestoreAll_DefaultPowerSchemes': (1, ['PDWORD'], ['Error'], 'CONFIGRET'), 'CM_Restore_DefaultPowerScheme': (2, ['CONST GUID*', 'PDWORD'], ['SchemeGuid', 'Error'], 'CONFIGRET'), 'CM_Set_ActiveScheme': (2, ['CONST GUID*', 'PDWORD'], ['SchemeGuid', 'Error'], 'CONFIGRET'), 'CM_Apply_PowerScheme': (0, [], [], 'CONFIGRET'), 'CM_Delete_PowerScheme': (2, ['CONST GUID*', 'PDWORD'], ['SchemeGuid', 'Error'], 'CONFIGRET'), 'CM_Duplicate_PowerScheme': (3, ['CONST GUID*', 'GUID**', 'PDWORD'], ['SourceSchemeGuid', 'DestinationSchemeGuid', 'Error'], 'CONFIGRET'), 'CM_Import_PowerScheme': (3, ['LPCWSTR', 'GUID**', 'PDWORD'], ['ImportFileNamePath', 'DestinationSchemeGuid', 'Error'], 'CONFIGRET'), 'CM_Write_UserPowerKey': (8, ['CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'ULONG', 'ULONG', 'UCHAR*', 'DWORD', 'PDWORD'], ['SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'AccessFlags', 'Type', 'Buffer', 'BufferSize', 'Error'], 'CONFIGRET'), 'CM_Set_Class_Property_ExW': (7, ['LPCGUID', 'CONST DEVPROPKEY*', 'DEVPROPTYPE', 'CONST PBYTE', 'ULONG', 'CM_CLASS_PROPERTY_FLAGS', 'HMACHINE'], ['ClassGUID', 'PropertyKey', 'PropertyType', 'PropertyBuffer', 'PropertyBufferSize', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Set_DevNode_Property_ExW': (7, ['DEVINST', 'CONST DEVPROPKEY*', 'DEVPROPTYPE', 'CONST PBYTE', 'ULONG', 'ULONG', 'HMACHINE'], ['dnDevInst', 'PropertyKey', 'PropertyType', 'PropertyBuffer', 'PropertyBufferSize', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Set_Device_Interface_Property_ExW': (7, ['LPCWSTR', 'CONST DEVPROPKEY*', 'DEVPROPTYPE', 'CONST PBYTE', 'ULONG', 'ULONG', 'HMACHINE'], ['pszDeviceInterface', 'PropertyKey', 'PropertyType', 'PropertyBuffer', 'PropertyBufferSize', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Delete_Device_Interface_Key_Ex': (3, ['LPCTSTR', 'ULONG', 'HMACHINE'], ['pszDeviceInterface', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Class_Property_ExW': (7, ['LPCGUID', 'CONST DEVPROPKEY*', 'DEVPROPTYPE*', 'PBYTE', 'PULONG', 'CM_CLASS_PROPERTY_FLAGS', 'HMACHINE'], ['ClassGUID', 'PropertyKey', 'PropertyType', 'PropertyBuffer', 'PropertyBufferSize', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Class_Property_Keys_Ex': (5, ['LPCGUID', 'DEVPROPKEY*', 'PULONG', 'CM_CLASS_PROPERTY_FLAGS', 'HMACHINE'], ['ClassGUID', 'PropertyKeyArray', 'PropertyKeyCount', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_DevNode_Property_ExW': (7, ['DEVINST', 'CONST DEVPROPKEY*', 'DEVPROPTYPE*', 'PBYTE', 'PULONG', 'ULONG', 'HMACHINE'], ['dnDevInst', 'PropertyKey', 'PropertyType', 'PropertyBuffer', 'PropertyBufferSize', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_DevNode_Property_Keys_Ex': (5, ['DEVINST', 'DEVPROPKEY*', 'PULONG', 'ULONG', 'HMACHINE'], ['dnDevInst', 'PropertyKeyArray', 'PropertyKeyCount', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Device_Interface_Property_ExW': (7, ['LPCWSTR', 'CONST DEVPROPKEY*', 'DEVPROPTYPE*', 'PBYTE', 'PULONG', 'ULONG', 'HMACHINE'], ['pszDeviceInterface', 'PropertyKey', 'PropertyType', 'PropertyBuffer', 'PropertyBufferSize', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Get_Device_Interface_Property_Keys_ExW': (5, ['LPCWSTR', 'DEVPROPKEY*', 'PULONG', 'ULONG', 'HMACHINE'], ['pszDeviceInterface', 'PropertyKeyArray', 'PropertyKeyCount', 'ulFlags', 'hMachine'], 'CONFIGRET'), 'CM_Open_Device_Interface_Key_Ex': (6, ['LPCTSTR', 'REGSAM', 'REGDISPOSITION', 'PHKEY', 'ULONG', 'HMACHINE'], ['pszDeviceInterface', 'samDesired', 'Disposition', 'phkDeviceInterface', 'ulFlags', 'hMachine'], 'CONFIGRET')}

dict5_clfsw32 = {'AlignReservedLog': (4, ['PVOID', 'ULONG', 'LONGLONG ', 'PLONGLONG'], ['pvMarshal', 'cReservedRecords', 'rgcbReservation', 'pcbAlignReservation'], 'BOOL'), 'AllocReservedLog': (3, ['PVOID', 'ULONG', 'PLONGLONG'], ['pvMarshal', 'cReservedRecords', 'pcbAdjustment'], 'BOOL'), 'CloseAndResetLogFile': (1, ['HANDLE'], ['hLog'], 'BOOL'), 'CreateLogFile': (6, ['LPCWSTR', 'ACCESS_MASK', 'FILE_SHARE_MODE', 'LPSECURITY_ATTRIBUTES', 'CREATE_LOG_DISPOSITION', 'CREATE_LOG_FLAGS_ATTRIBUTES'], ['pszLogFileName', 'fDesiredAccess', 'dwShareMode', 'psaLogFile', 'fCreateDisposition', 'fFlagsAndAttributes'], 'HANDLE'), 'DeleteLogByHandle': (1, ['HANDLE'], ['hLog'], 'BOOL'), 'DeleteLogFile': (2, ['LPCWSTR', 'PVOID'], ['pszLogFileName', 'pvReserved'], 'BOOL'), 'DumpLogRecords': (11, ['PWSTR', 'CLFS_RECORD_TYPE', 'PCLFS_LSN', 'PCLFS_LSN', 'PFILE', 'CLFS_PRINT_RECORD_ROUTINE', 'CLFS_BLOCK_ALLOCATION', 'CLFS_BLOCK_DEALLOCATION', 'PVOID', 'ULONG', 'ULONG'], ['pwszLogFileName', 'fRecordType', 'plsnStart', 'plsnEnd', 'pstrmOut', 'pfnPrintRecord', 'pfnAllocBlock', 'pfnFreeBlock', 'pvBlockAllocContext', 'cbBlock', 'cMaxBlocks'], 'BOOL'), 'FlushLogBuffers': (2, ['PVOID', 'LPOVERLAPPED'], ['pvMarshal', 'pOverlapped'], 'BOOL'), 'FlushLogToLsn': (4, ['PVOID', 'PCLFS_LSN', 'PCLFS_LSN', 'LPOVERLAPPED'], ['pvMarshalContext', 'plsnFlush', 'plsnLastFlushed', 'pOverlapped'], 'BOOL'), 'FreeReservedLog': (3, ['PVOID', 'ULONG', 'PLONGLONG'], ['pvMarshal', 'cReservedRecords', 'pcbAdjustment'], 'BOOL'), 'ReserveAndAppendLog': (10, ['PVOID', 'PCLFS_WRITE_ENTRY', 'ULONG', 'PCLFS_LSN', 'PCLFS_LSN', 'ULONG', 'LONGLONG ', 'ULONG', 'PCLFS_LSN', 'LPOVERLAPPED'], ['pvMarshal', 'rgWriteEntries', 'cWriteEntries', 'plsnUndoNext', 'plsnPrevious', 'cReserveRecords', 'rgcbReservation', 'fFlags', 'plsn', 'pOverlapped'], 'BOOL'), 'ReserveAndAppendLogAligned': (11, ['PVOID', 'PCLFS_WRITE_ENTRY', 'ULONG', 'ULONG', 'PCLFS_LSN', 'PCLFS_LSN', 'ULONG', 'LONGLONG ', 'ULONG', 'PCLFS_LSN', 'LPOVERLAPPED'], ['pvMarshal', 'rgWriteEntries', 'cWriteEntries', 'cbEntryAlignment', 'plsnUndoNext', 'plsnPrevious', 'cReserveRecords', 'rgcbReservation', 'fFlags', 'plsn', 'overlapped'], 'BOOL'), 'GetLogFileInformation': (3, ['HANDLE', 'PCLFS_INFORMATION', 'PULONG'], ['hLog', 'pinfoBuffer', 'cbBuffer'], 'BOOL'), 'GetLogIoStatistics': (5, ['HANDLE', 'PVOID', 'ULONG', 'CLFS_IOSTATS_CLASS', 'PULONG'], ['hLog', 'pvStatsBuffer', 'cbStatsBuffer', 'eStatsClass', 'pcbStatsWritten'], 'BOOL'), 'ReadLogRecord': (10, ['PVOID', 'PCLFS_LSN', 'CLFS_CONTEXT_MODE', 'PVOID*', 'PULONG', 'PCLFS_RECORD_TYPE', 'PCLFS_LSN', 'PCLFS_LSN', 'PVOID*', 'LPOVERLAPPED'], ['pvMarshal', 'plsnFirst', 'eContextMode', 'ppvReadBuffer', 'pcbReadBuffer', 'peRecordType', 'plsnUndoNext', 'plsnPrevious', 'ppvReadContext', 'pOverlapped'], 'BOOL'), 'ReadNextLogRecord': (9, ['PVOID', 'PVOID*', 'PULONG', 'PCLFS_RECORD_TYPE', 'PCLFS_LSN', 'PCLFS_LSN', 'PCLFS_LSN', 'PCLFS_LSN', 'LPOVERLAPPED'], ['pvReadContext', 'ppvBuffer', 'pcbBuffer', 'peRecordType', 'plsnUser', 'plsnUndoNext', 'plsnPrevious', 'plsnRecord', 'pOverlapped'], 'BOOL'), 'SetEndOfLog': (3, ['HANDLE', 'PCLFS_LSN', 'LPOVERLAPPED'], ['hLog', 'plsnEnd', 'lpOverlapped'], 'BOOL'), 'TruncateLog': (3, ['PVOID', 'PCLFS_LSN', 'LPOVERLAPPED'], ['pvMarshal', 'plsnEnd', 'lpOverlapped'], 'BOOL'), 'TerminateReadLog': (1, ['PVOID'], ['pvCursorContext'], 'BOOL'), 'GetLogReservationInfo': (4, ['PVOID', 'PULONG', 'PLONGLONG', 'PLONGLONG'], ['pvMarshal', 'pcbRecordNumber', 'pcbUserReservation', 'pcbCommitReservation'], 'BOOL'), 'AddLogContainer': (4, ['HANDLE', 'PULONGLONG', 'LPWSTR', 'LPVOID'], ['hLog', 'pcbContainer', 'pwszContainerPath', 'pReserved'], 'BOOL'), 'AddLogContainerSet': (5, ['HANDLE', 'USHORT', 'PULONGLONG', 'LPWSTR*', 'PVOID'], ['hLog', 'cContainers', 'pcbContainer', 'rgwszContainerPath', 'Reserved'], 'BOOL'), 'CreateLogContainerScanContext': (6, ['HANDLE', 'ULONG', 'ULONG', 'CLFS_SCAN_MODE', 'PCLFS_SCAN_CONTEXT', 'LPOVERLAPPED'], ['hLog', 'cFromContainer', 'cContainers', 'eScanMode', 'pcxScan', 'pOverlapped'], 'BOOL'), 'ScanLogContainers': (3, ['PCLFS_SCAN_CONTEXT', 'CLFS_SCAN_MODE', 'LPVOID'], ['pcxScan', 'eScanMode', 'pReserved'], 'BOOL'), 'GetLogContainerName': (5, ['HANDLE', 'CLFS_CONTAINER_ID', 'LPCWSTR', 'ULONG', 'PULONG'], ['hLog', 'cidLogicalContainer', 'pwstrContainerName', 'cLenContainerName', 'pcActualLenContainerName'], 'BOOL'), 'RemoveLogContainer': (4, ['HANDLE', 'LPWSTR', 'BOOL', 'LPVOID'], ['hLog', 'pwszContainerPath', 'fForce', 'pReserved'], 'BOOL'), 'RemoveLogContainerSet': (5, ['HANDLE', 'USHORT', 'LPWSTR*', 'BOOL', 'LPVOID'], ['hLog', 'cContainers', 'rgwszContainerPath', 'fForce', 'pReserved'], 'BOOL'), 'AdvanceLogBase': (4, ['PVOID', 'PCLFS_LSN', 'ULONG', 'LPOVERLAPPED'], ['pvMarshal', 'plsnBase', 'fFlags', 'pOverlapped'], 'BOOL'), 'ReadLogRestartArea': (6, ['PVOID', 'PVOID*', 'PULONG', 'PCLFS_LSN', 'PVOID*', 'LPOVERLAPPED'], ['pvMarshal', 'ppvRestartBuffer', 'pcbRestartBuffer', 'plsn', 'ppvContext', 'pOverlapped'], 'BOOL'), 'ReadPreviousLogRestartArea': (5, ['PVOID', 'PVOID*', 'PULONG', 'PCLFS_LSN', 'LPOVERLAPPED'], ['pvReadContext', 'ppvRestartBuffer', 'pcbRestartBuffer', 'plsnRestart', 'pOverlapped'], 'BOOL'), 'WriteLogRestartArea': (8, ['PVOID', 'PVOID', 'ULONG', 'PCLFS_LSN', 'ULONG', 'PULONG', 'PCLFS_LSN', 'LPOVERLAPPED'], ['pvMarshal', 'pvRestartBuffer', 'cbRestartBuffer', 'plsnBase', 'fFlags', 'pcbWritten', 'plsnNext', 'pOverlapped'], 'BOOL'), 'GetNextLogArchiveExtent': (4, ['CLFS_LOG_ARCHIVE_CONTEXT', 'CLFS_ARCHIVE_DESCRIPTOR ', 'ULONG', 'PULONG'], ['pvArchiveContext', 'rgadExtent', 'cDescriptors', 'pcDescriptorsReturned'], 'BOOL'), 'PrepareLogArchive': (12, ['HANDLE', 'PWSTR', 'ULONG', 'CONST PCLFS_LSN', 'CONST PCLFS_LSN', 'PULONG', 'PULONGLONG', 'PULONGLONG', 'PCLFS_LSN', 'PCLFS_LSN', 'PCLFS_LSN', 'PCLFS_LOG_ARCHIVE_CONTEXT'], ['hLog', 'pszBaseLogFileName', 'cLen', 'plsnLow', 'plsnHigh', 'pcActualLength', 'poffBaseLogFileData', 'pcbBaseLogFileLength', 'plsnBase', 'plsnLast', 'plsnCurrentArchiveTail', 'ppvArchiveContext'], 'BOOL'), 'ReadLogArchiveMetadata': (5, ['CLFS_LOG_ARCHIVE_CONTEXT', 'ULONG', 'ULONG', 'PBYTE', 'PULONG'], ['pvArchiveContext', 'cbOffset', 'cbBytesToRead', 'pbReadBuffer', 'pcbBytesRead'], 'BOOL'), 'SetLogArchiveMode': (2, ['HANDLE', 'CLFS_LOG_ARCHIVE_MODE'], ['hLog', 'eMode'], 'BOOL'), 'SetLogArchiveTail': (3, ['HANDLE', 'PCLFS_LSN', 'LPVOID'], ['hLog', 'plsnArchiveTail', 'pReserved'], 'BOOL'), 'TerminateLogArchive': (1, ['CLFS_LOG_ARCHIVE_CONTEXT'], ['pvArchiveContext'], 'BOOL'), 'ValidateLog': (4, ['LPCWSTR', 'LPSECURITY_ATTRIBUTES', 'PCLFS_INFORMATION', 'PULONG'], ['pszLogFileName', 'psaLogFile', 'pinfoBuffer', 'pcbBuffer'], 'BOOL'), 'CreateLogMarshallingArea': (8, ['HANDLE', 'CLFS_BLOCK_ALLOCATION', 'CLFS_BLOCK_DEALLOCATION', 'PVOID', 'ULONG', 'ULONG', 'ULONG', 'PVOID*'], ['hLog', 'pfnAllocBuffer', 'pfnFreeBuffer', 'pvBlockAllocContext', 'cbMarshallingBuffer', 'cMaxWriteBuffers', 'cMaxReadBuffers', 'ppvMarshal'], 'BOOL'), 'DeleteLogMarshallingArea': (1, ['PVOID'], ['pvMarshal'], 'BOOL'), 'LsnBlockOffset': (1, ['CONST CLFS_LSN*'], ['plsn'], 'ULONG'), 'LsnContainer': (1, ['CONST CLFS_LSN*'], ['plsn'], 'CLFS_CONTAINER_ID'), 'LsnCreate': (3, ['CLFS_CONTAINER_ID', 'ULONG', 'ULONG'], ['cidContainer', 'offBlock', 'cRecord'], 'CLFS_LSN'), 'LsnEqual': (2, ['CONST CLFS_LSN*', 'CONST CLFS_LSN*'], ['plsn1', 'plsn2'], 'BOOL'), 'LsnGreater': (2, ['CONST CLFS_LSN*', 'CONST CLFS_LSN*'], ['plsn1', 'plsn2'], 'BOOL'), 'LsnLess': (2, ['CONST CLFS_LSN*', 'CONST CLFS_LSN*'], ['plsn1', 'plsn2'], 'BOOL'), 'LsnNull': (1, ['CONST CLFS_LSN*'], ['plsn'], 'BOOL'), 'LsnRecordSequence': (1, ['CONST CLFS_LSN*'], ['plsn'], 'ULONG'), 'LsnDecrement': (1, ['PCLFS_LSN'], ['plsn'], 'CLFS_LSN'), 'LsnIncrement': (1, ['PCLFS_LSN'], ['plsn'], 'CLFS_LSN'), 'LsnInvalid': (1, ['CONST CLFS_LSN*'], ['plsn'], 'BOOL'), 'DeregisterManageableLogClient': (1, ['HANDLE'], ['hLog'], 'BOOL'), 'HandleLogFull': (1, ['HANDLE'], ['hLog'], 'BOOL'), 'InstallLogPolicy': (2, ['HANDLE', 'PCLFS_MGMT_POLICY'], ['hLog', 'pPolicy'], 'BOOL'), 'LogTailAdvanceFailure': (2, ['HANDLE', 'ERROR_CODE'], ['hLog', 'dwReason'], 'BOOL'), 'QueryLogPolicy': (4, ['HANDLE', 'CLFS_MGMT_POLICY_TYPE', 'PCLFS_MGMT_POLICY', 'PULONG'], ['hLog', 'ePolicyType', 'pPolicyBuffer', 'pcbPolicyBuffer'], 'BOOL'), 'ReadLogNotification': (3, ['HANDLE', 'PCLFS_MGMT_NOTIFICATION', 'LPOVERLAPPED'], ['hLog', 'pNotification', 'lpOverlapped'], 'BOOL'), 'RegisterForLogWriteNotification': (3, ['HANDLE', 'ULONG', 'BOOL'], ['hLog', 'cbThreshold', 'fEnable'], 'BOOL'), 'RemoveLogPolicy': (2, ['HANDLE', 'CLFS_MGMT_POLICY_TYPE'], ['hLog', 'ePolicyType'], 'BOOL'), 'RegisterManageableLogClient': (2, ['HANDLE', 'PLOG_MANAGEMENT_CALLBACKS'], ['hLog', 'pCallbacks'], 'BOOL'), 'SetLogFileSizeWithPolicy': (3, ['HANDLE', 'PULONGLONG', 'PULONGLONG'], ['hLog', 'pDesiredSize', 'pResultingSize'], 'BOOL')}

dict5_combase = {'CoEnterApplicationThreadLifetimeLoop': (0, [], [], 'void'), 'CoGetApplicationThreadReference': (1, ['IUNKNOWN**'], ['ppThreadReference'], 'HRESULT'), 'CoWaitForMultipleObjects': (5, ['DWORD', 'DWORD', 'ULONG', 'LPHANDLE', 'LPDWORD'], ['dwFlags', 'dwTimeout', 'cHandles', 'pHandles', 'lpdwIndex'], 'HRESULT'), 'GetRestrictedErrorInfo': (1, ['IRESTRICTEDERRORINFO**'], ['ppRestrictedErrorInfo'], 'HRESULT'), 'SetRestrictedErrorInfo': (1, ['IRESTRICTEDERRORINFO*'], ['pRestrictedErrorInfo'], 'HRESULT'), 'CoDecodeProxy': (3, ['DWORD', 'UINT64', 'PSERVERINFORMATION'], ['dwClientPid', 'ui64ProxyAddress', 'pServerInformation'], 'HRESULT'), 'HSTRING_UserFree': (2, ['ULONG*', 'HSTRING*'], ['pFlags', 'ppidl'], 'void'), 'HSTRING_UserFree64': (2, ['ULONG*', 'HSTRING*'], ['pFlags', 'ppidl'], 'void'), 'HSTRING_UserMarshal': (3, ['ULONG*', 'UCHAR*', 'HSTRING*'], ['pFlags', 'pBuffer', 'ppidl'], 'UCHAR*'), 'HSTRING_UserMarshal64': (3, ['ULONG*', 'UCHAR*', 'HSTRING*'], ['pFlags', 'pBuffer', 'ppidl'], 'UCHAR*'), 'HSTRING_UserSize': (3, ['ULONG*', 'ULONG', 'HSTRING*'], ['pFlags', 'StartingSize', 'ppidl'], 'ULONG'), 'HSTRING_UserSize64': (3, ['ULONG*', 'ULONG', 'HSTRING*'], ['pFlags', 'StartingSize', 'ppidl'], 'ULONG'), 'HSTRING_UserUnmarshal': (3, ['ULONG*', 'UCHAR*', 'HSTRING*'], ['pFlags', 'pBuffer', 'ppidl'], 'UCHAR*'), 'HSTRING_UserUnmarshal64': (3, ['ULONG*', 'UCHAR*', 'HSTRING*'], ['pFlags', 'pBuffer', 'ppidl'], 'UCHAR*'), 'RoActivateInstance': (2, ['HSTRING', 'IINSPECTABLE**'], ['activatableClassId', 'instance'], 'HRESULT'), 'RoCaptureErrorContext': (1, ['HRESULT'], ['hrError'], 'HRESULT'), 'RoFailFastWithErrorContext': (1, ['HRESULT'], ['hrError'], 'void'), 'RoFreeParameterizedTypeExtra': (1, ['ROPARAMIIDHANDLE'], ['extra'], 'HRESULT'), 'RoGetActivatableClassRegistration': (2, ['HSTRING', 'PACTIVATABLECLASSREGISTRATION*'], ['activatableClassId', 'activatableClassRegistration'], 'HRESULT'), 'RoGetActivationFactory': (3, ['HSTRING', 'REFIID', 'VOID**'], ['activatableClassId', 'iid', 'factory'], 'HRESULT'), 'RoGetApartmentIdentifier': (1, ['UINT64*'], ['apartmentIdentifier'], 'HRESULT'), 'RoGetErrorReportingFlags': (1, ['RO_ERROR_REPORTING_FLAGS*'], ['pflags'], 'HRESULT'), 'RoGetParameterizedTypeInstanceIID': (5, ['UINT32', 'PCWSTR*', 'CONST IROMETADATALOCATOR&', 'GUID*', 'ROPARAMIIDHANDLE*'], ['nameElementCount', 'nameElements', 'metaDataLocator', 'iid', 'pExtra'], 'HRESULT'), 'RoGetServerActivatableClasses': (3, ['HSTRING', 'HSTRING**', 'DWORD*'], ['serverName', 'activatableClassIds', 'count'], 'HRESULT'), 'RoInitialize': (1, ['RO_INIT_TYPE'], ['initType'], 'HRESULT'), 'RoOriginateError': (2, ['HRESULT', 'HSTRING'], ['error', 'message'], 'BOOL'), 'RoOriginateErrorW': (3, ['HRESULT', 'UINT', 'PCWSTR'], ['error', 'cchMax', 'message'], 'BOOL'), 'RoParameterizedTypeExtraGetTypeSignature': (1, ['ROPARAMIIDHANDLE'], ['extra'], 'HRESULT'), 'RoRegisterActivationFactories': (4, ['HSTRING*', 'PFNGETACTIVATIONFACTORY*', 'UINT32', 'RO_REGISTRATION_COOKIE*'], ['activatableClassIds', 'activationFactoryCallbacks', 'count', 'cookie'], 'HRESULT'), 'RoRegisterForApartmentShutdown': (3, ['IAPARTMENTSHUTDOWN*', 'UINT64*', 'APARTMENT_SHUTDOWN_REGISTRATION_COOKIE*'], ['callbackObject', 'apartmentIdentifier', 'regCookie'], 'HRESULT'), 'RoResolveRestrictedErrorInfoReference': (2, ['PCWSTR', 'IRESTRICTEDERRORINFO**'], ['reference', 'ppRestrictedErrorInfo'], 'HRESULT'), 'RoRevokeActivationFactories': (1, ['RO_REGISTRATION_COOKIE'], ['cookie'], 'void'), 'RoSetErrorReportingFlags': (1, ['RO_ERROR_REPORTING_FLAGS'], ['flags'], 'HRESULT'), 'RoTransformError': (3, ['HRESULT', 'HRESULT', 'HSTRING'], ['oldError', 'newError', 'message'], 'BOOL'), 'RoTransformErrorW': (4, ['HRESULT', 'HRESULT', 'UINT', 'PCWSTR'], ['oldError', 'newError', 'cchMax', 'message'], 'BOOL'), 'RoUninitialize': (0, [], [], 'void'), 'RoUnregisterForApartmentShutdown': (1, ['APARTMENT_SHUTDOWN_REGISTRATION_COOKIE'], ['regCookie'], 'HRESULT'), 'WindowsCompareStringOrdinal': (3, ['HSTRING', 'HSTRING', 'INT32*'], ['string1', 'string2', 'result'], 'HRESULT'), 'WindowsConcatString': (3, ['HSTRING', 'HSTRING', 'HSTRING*'], ['string1', 'string2', 'newString'], 'HRESULT'), 'WindowsCreateString': (3, ['LPCWSTR', 'UINT32', 'HSTRING*'], ['sourceString', 'length', 'string'], 'HRESULT'), 'WindowsCreateStringReference': (4, ['PCWSTR', 'UINT32', 'HSTRING_HEADER*', 'HSTRING*'], ['sourceString', 'length', 'hstringHeader', 'string'], 'HRESULT'), 'WindowsDeleteString': (1, ['HSTRING'], ['string'], 'HRESULT'), 'WindowsDeleteStringBuffer': (1, ['HSTRING_BUFFER'], ['bufferHandle'], 'HRESULT'), 'WindowsDuplicateString': (2, ['HSTRING', 'HSTRING*'], ['string', 'newString'], 'HRESULT'), 'WindowsGetStringLen': (1, ['HSTRING'], ['string'], 'UINT32'), 'WindowsGetStringRawBuffer': (2, ['HSTRING', 'UINT32*'], ['string', 'length'], 'PCWSTR'), 'WindowsInspectString': (6, ['UINT_PTR', 'USHORT', 'PINSPECT_HSTRING_CALLBACK', 'VOID*', 'UINT32*', 'UINT_PTR*'], ['targetHString', 'machine', 'callback', 'context', 'length', 'targetStringAddress'], 'HRESULT'), 'WindowsIsStringEmpty': (1, ['HSTRING'], ['string'], 'BOOL'), 'WindowsPreallocateStringBuffer': (3, ['UINT32', 'WCHAR**', 'HSTRING_BUFFER*'], ['length', 'mutableBuffer', 'bufferHandle'], 'HRESULT'), 'WindowsPromoteStringBuffer': (2, ['HSTRING_BUFFER', 'HSTRING*'], ['bufferHandle', 'string'], 'HRESULT'), 'WindowsReplaceString': (4, ['HSTRING', 'HSTRING', 'HSTRING', 'HSTRING*'], ['string', 'stringReplaced', 'stringReplaceWith', 'newString'], 'HRESULT'), 'WindowsStringHasEmbeddedNull': (2, ['HSTRING', 'BOOL*'], ['string', 'hasEmbedNull'], 'HRESULT'), 'WindowsSubstring': (3, ['HSTRING', 'UINT32', 'HSTRING*'], ['string', 'startIndex', 'newString'], 'HRESULT'), 'WindowsSubstringWithSpecifiedLength': (4, ['HSTRING', 'UINT32', 'UINT32', 'HSTRING*'], ['string', 'startIndex', 'length', 'newString'], 'HRESULT'), 'WindowsTrimStringEnd': (3, ['HSTRING', 'HSTRING', 'HSTRING*'], ['string', 'trimString', 'newString'], 'HRESULT'), 'WindowsTrimStringStart': (3, ['HSTRING', 'HSTRING', 'HSTRING*'], ['string', 'trimString', 'newString'], 'HRESULT'), 'CoAllowUnmarshalerCLSID': (1, ['REFCLSID'], ['clsid'], 'HRESULT')}

dict5_dhcpsapi = {'DhcpAddFilterV4': (3, ['DHCP_CONST WCHAR*', 'DHCP_FILTER_ADD_INFO*', 'BOOL'], ['ServerIpAddress', 'AddFilterInfo', 'ForceFlag'], '[ERROR_CODE]'), 'DhcpAddServer': (5, ['DWORD', 'LPVOID', 'LPDHCP_SERVER_INFO', 'LPVOID', 'LPVOID'], ['Flags', 'IdInfo', 'NewServer', 'CallbackFn', 'CallbackData'], '[ERROR_CODE]'), 'DhcpAddSubnetElementV5': (3, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_CONST DHCP_SUBNET_ELEMENT_DATA_V5*'], ['ServerIpAddress', 'SubnetAddress', 'AddElementInfo'], '[ERROR_CODE]'), 'DhcpAuditLogGetParams': (6, ['LPWSTR', 'DWORD', 'LPWSTR*', 'DWORD*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'Flags', 'AuditLogDir', 'DiskCheckInterval', 'MaxLogFilesSize', 'MinSpaceOnDisk'], '[ERROR_CODE]'), 'DhcpAuditLogSetParams': (6, ['LPWSTR', 'DWORD', 'LPWSTR', 'DWORD', 'DWORD', 'DWORD'], ['ServerIpAddress', 'Flags', 'AuditLogDir', 'DiskCheckInterval', 'MaxLogFilesSize', 'MinSpaceOnDisk'], '[ERROR_CODE]'), 'DhcpCreateClass': (3, ['LPWSTR', 'DWORD', 'LPDHCP_CLASS_INFO'], ['ServerIpAddress', 'ReservedMustBeZero', 'ClassInfo'], '[ERROR_CODE]'), 'DhcpCreateClientInfo': (2, ['DHCP_CONST WCHAR*', 'DHCP_CONST DHCP_CLIENT_INFO*'], ['ServerIpAddress', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpCreateClientInfoV4': (2, ['DHCP_CONST WCHAR*', 'DHCP_CONST DHCP_CLIENT_INFO_V4*'], ['ServerIpAddress', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpCreateClientInfoVQ': (2, ['DHCP_CONST WCHAR*', 'LPDHCP_CLIENT_INFO_VQ'], ['ServerIpAddress', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpCreateOptionV5': (6, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'LPWSTR', 'LPWSTR', 'LPDHCP_OPTION'], ['ServerIpAddress', 'Flags', 'OptionId', 'ClassName', 'VendorName', 'OptionInfo'], '[ERROR_CODE]'), 'DhcpCreateSubnet': (3, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_CONST DHCP_SUBNET_INFO*'], ['ServerIpAddress', 'SubnetAddress', 'SubnetInfo'], '[ERROR_CODE]'), 'DhcpCreateSubnetVQ': (3, ['WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_CONST DHCP_SUBNET_INFO_VQ*'], ['ServerIpAddress', 'SubnetAddress', 'SubnetInfo'], '[ERROR_CODE]'), 'DhcpDeleteClass': (3, ['LPWSTR', 'DWORD', 'LPWSTR'], ['ServerIpAddress', 'ReservedMustBeZero', 'ClassName'], '[ERROR_CODE]'), 'DhcpDeleteClientInfo': (2, ['DHCP_CONST WCHAR*', 'DHCP_CONST DHCP_SEARCH_INFO*'], ['ServerIpAddress', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpDeleteFilterV4': (2, ['DHCP_CONST WCHAR*', 'DHCP_ADDR_PATTERN*'], ['ServerIpAddress', 'DeleteFilterInfo'], '[ERROR_CODE]'), 'DhcpDeleteServer': (5, ['DWORD', 'LPVOID', 'LPDHCP_SERVER_INFO', 'LPVOID', 'LPVOID'], ['Flags', 'IdInfo', 'NewServer', 'CallbackFn', 'CallbackData'], '[ERROR_CODE]'), 'DhcpDeleteSubnet': (3, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_FORCE_FLAG'], ['ServerIpAddress', 'SubnetAddress', 'ForceFlag'], '[ERROR_CODE]'), 'DhcpDeleteSuperScopeV4': (2, ['DHCP_CONST WCHAR*', 'DHCP_CONST LPWSTR'], ['ServerIpAddress', 'SuperScopeName'], '[ERROR_CODE]'), 'DhcpDsCleanup': (0, [], [], 'VOID'), 'DhcpDsInit': (0, [], [], '[ERROR_CODE]'), 'DhcpEnumClasses': (7, ['LPWSTR', 'DWORD', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_CLASS_INFO_ARRAY*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'ReservedMustBeZero', 'ResumeHandle', 'PreferredMaximum', 'ClassInfoArray', 'nRead', 'nTotal'], '[ERROR_CODE]'), 'DhcpEnumFilterV4': (7, ['DHCP_CONST WCHAR*', 'LPDHCP_ADDR_PATTERN', 'DWORD', 'DHCP_FILTER_LIST_TYPE', 'LPDHCP_FILTER_ENUM_INFO*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'ResumeHandle', 'PreferrredMaximum', 'ListType', 'EnumFilterInfo', 'ElementsRead', 'ElementsTotal'], '[ERROR_CODE]'), 'DhcpEnumOptionsV5': (9, ['LPWSTR', 'DWORD', 'LPWSTR', 'LPWSTR', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_OPTION_ARRAY*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'Flags', 'ClassName', 'VendorName', 'ResumeHandle', 'PreferredMaximum', 'Options', 'OptionsRead', 'OptionsTotal'], '[ERROR_CODE]'), 'DhcpEnumOptionValuesV5': (10, ['LPWSTR', 'DWORD', 'LPWSTR', 'LPWSTR', 'LPDHCP_OPTION_SCOPE_INFO', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_OPTION_VALUE_ARRAY*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'Flags', 'ClassName', 'VendorName', 'ScopeInfo', 'ResumeHandle', 'PreferredMaximum', 'OptionValues', 'OptionsRead', 'OptionsTotal'], '[ERROR_CODE]'), 'DhcpEnumServers': (5, ['DWORD', 'LPVOID', 'LPDHCP_SERVER_INFO_ARRAY*', 'LPVOID', 'LPVOID'], ['Flags', 'IdInfo', 'Servers', 'CallbackFn', 'CallbackData'], '[ERROR_CODE]'), 'DhcpEnumSubnetClients': (7, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_CLIENT_INFO_ARRAY*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'SubnetAddress', 'ResumeHandle', 'PreferredMaximum', 'ClientInfo', 'ClientsRead', 'ClientsTotal'], '[ERROR_CODE]'), 'DhcpEnumSubnetClientsV5': (7, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_CLIENT_INFO_ARRAY_V5*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'SubnetAddress', 'ResumeHandle', 'PreferredMaximum', 'ClientInfo', 'ClientsRead', 'ClientsTotal'], '[ERROR_CODE]'), 'DhcpEnumSubnetClientsVQ': (7, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_CLIENT_INFO_ARRAY_VQ*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'SubnetAddress', 'ResumeHandle', 'PreferredMaximum', 'ClientInfo', 'ClientsRead', 'ClientsTotal'], '[ERROR_CODE]'), 'DhcpEnumSubnetClientsFilterStatusInfo': (7, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_CLIENT_FILTER_STATUS_INFO_ARRAY*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'SubnetAddress', 'ResumeHandle', 'PreferredMaximum', 'ClientInfo', 'ClientsRead', 'ClientsTotal'], '[ERROR_CODE]'), 'DhcpEnumSubnetElementsV5': (8, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_SUBNET_ELEMENT_TYPE', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_SUBNET_ELEMENT_INFO_ARRAY*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'SubnetAddress', 'EnumElementType', 'ResumeHandle', 'PreferredMaximum', 'EnumElementInfo', 'ElementsRead', 'ElementsTotal'], '[ERROR_CODE]'), 'DhcpEnumSubnets': (6, ['DHCP_CONST WCHAR*', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_IP_ARRAY*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'ResumeHandle', 'PreferredMaximum', 'EnumInfo', 'ElementsRead', 'ElementsTotal'], '[ERROR_CODE]'), 'DhcpGetAllOptionValues': (4, ['LPWSTR', 'DWORD', 'LPDHCP_OPTION_SCOPE_INFO', 'LPDHCP_ALL_OPTION_VALUES*'], ['ServerIpAddress', 'Flags', 'ScopeInfo', 'Values'], '[ERROR_CODE]'), 'DhcpGetClassInfo': (4, ['LPWSTR', 'DWORD', 'LPDHCP_CLASS_INFO', 'LPDHCP_CLASS_INFO*'], ['ServerIpAddress', 'ReservedMustBeZero', 'PartialClassInfo', 'FilledClassInfo'], '[ERROR_CODE]'), 'DhcpGetClientInfo': (3, ['DHCP_CONST WCHAR*', 'DHCP_CONST DHCP_SEARCH_INFO*', 'LPDHCP_CLIENT_INFO*'], ['ServerIpAddress', 'SearchInfo', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpGetClientInfoV4': (3, ['DHCP_CONST WCHAR*', 'DHCP_CONST DHCP_SEARCH_INFO*', 'LPDHCP_CLIENT_INFO_V4*'], ['ServerIpAddress', 'SearchInfo', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpGetClientInfoVQ': (3, ['DHCP_CONST WCHAR*', 'LPDHCP_SEARCH_INFO', 'LPDHCP_CLIENT_INFO_VQ'], ['ServerIpAddress', 'SearchInfo', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpGetFilterV4': (2, ['DHCP_CONST WCHAR*', 'DHCP_FILTER_GLOBAL_INFO*'], ['ServerIpAddress', 'GlobalFilterInfo'], '[ERROR_CODE]'), 'DhcpGetMibInfoV5': (2, ['WCHAR*', 'LPDHCP_MIB_INFO_V5*'], ['ServerIpAddress', 'MibInfo'], '[ERROR_CODE]'), 'DhcpGetOptionInfoV5': (6, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'LPWSTR', 'LPWSTR', 'LPDHCP_OPTION*'], ['ServerIpAddress', 'Flags', 'OptionID', 'ClassName', 'VendorName', 'OptionInfo'], '[ERROR_CODE]'), 'DhcpGetOptionValue': (4, ['DHCP_CONST WCHAR*', 'DHCP_OPTION_ID', 'DHCP_CONST DHCP_OPTION_SCOPE_INFO*', 'LPDHCP_OPTION_VALUE*'], ['ServerIpAddress', 'OptionID', 'ScopeInfo', 'OptionValue'], '[ERROR_CODE]'), 'DhcpGetOptionValueV5': (7, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'LPWSTR', 'LPWSTR', 'LPDHCP_OPTION_SCOPE_INFO', 'LPDHCP_OPTION_VALUE*'], ['ServerIpAddress', 'Flags', 'OptionID', 'ClassName', 'VendorName', 'ScopeInfo', 'OptionValue'], '[ERROR_CODE]'), 'DhcpGetServerBindingInfo': (3, ['DHCP_CONST WCHAR*', 'ULONG', 'LPDHCP_BIND_ELEMENT_ARRAY*'], ['ServerIpAddress', 'Flags', 'BindElementsInfo'], '[ERROR_CODE]'), 'DhcpGetSubnetDelayOffer': (3, ['LPWSTR', 'DHCP_IP_ADDRESS', 'USHORT*'], ['ServerIpAddress', 'SubnetAddress', 'TimeDelayInMilliseconds'], '[ERROR_CODE]'), 'DhcpGetSubnetInfo': (3, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'LPDHCP_SUBNET_INFO*'], ['ServerIpAddress', 'SubnetAddress', 'SubnetInfo'], '[ERROR_CODE]'), 'DhcpGetSubnetInfoVQ': (3, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'LPDHCP_SUBNET_INFO_VQ*'], ['ServerIpAddress', 'SubnetAddress', 'SubnetInfo'], '[ERROR_CODE]'), 'DhcpGetSuperScopeInfoV4': (2, ['DHCP_CONST WCHAR*', 'LPDHCP_SUPER_SCOPE_TABLE*'], ['ServerIpAddress', 'SuperScopeTable'], '[ERROR_CODE]'), 'DhcpGetVersion': (3, ['LPWSTR', 'LPDWORD', 'LPDWORD'], ['ServerIpAddress', 'MajorVersion', 'MinorVersion'], '[ERROR_CODE]'), 'DhcpModifyClass': (3, ['LPWSTR', 'DWORD', 'LPDHCP_CLASS_INFO'], ['ServerIpAddress', 'ReservedMustBeZero', 'ClassInfo'], '[ERROR_CODE]'), 'DhcpRemoveOptionV5': (5, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'LPWSTR', 'LPWSTR'], ['ServerIpAddress', 'Flags', 'OptionID', 'ClassName', 'VendorName'], '[ERROR_CODE]'), 'DhcpRemoveOptionValueV5': (6, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'LPWSTR', 'LPWSTR', 'LPDHCP_OPTION_SCOPE_INFO'], ['ServerIpAddress', 'Flags', 'OptionID', 'ClassName', 'VendorName', 'ScopeInfo'], '[ERROR_CODE]'), 'DhcpRemoveSubnetElementV5': (4, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_CONST DHCP_SUBNET_ELEMENT_DATA_V5*', 'DHCP_FORCE_FLAG'], ['ServerIpAddress', 'SubnetAddress', 'RemoveElementInfo', 'ForceFlag'], '[ERROR_CODE]'), 'DhcpRpcFreeMemory': (1, ['PVOID'], ['BufferPointer'], 'VOID'), 'DhcpServerGetConfigVQ': (2, ['DHCP_CONST WCHAR*', 'LPDHCP_SERVER_CONFIG_INFO_VQ*'], ['ServerIpAddress', 'ConfigInfo'], '[ERROR_CODE]'), 'DhcpServerQueryDnsRegCredentials': (5, ['LPWSTR', 'ULONG', 'LPWSTR', 'ULONG', 'LPWSTR'], ['ServerIpAddress', 'UnameSize', 'Uname', 'DomainSize', 'Domain'], '[ERROR_CODE]'), 'DhcpServerRedoAuthorization': (2, ['LPWSTR', 'ULONG'], ['ServerIpAddr', 'dwReserved'], '[ERROR_CODE]'), 'DhcpServerSetConfigV4': (3, ['DHCP_CONST WCHAR*', 'DHCP_FIELDS_TO_SET', 'LPDHCP_SERVER_CONFIG_INFO_V4'], ['ServerIpAddress', 'FieldsToSet', 'ConfigInfo'], '[ERROR_CODE]'), 'DhcpServerSetConfigVQ': (3, ['DHCP_CONST WCHAR*', 'DHCP_FIELDS_TO_SET', 'LPDHCP_SERVER_CONFIG_INFO_VQ'], ['ServerIpAddress', 'FieldsToSet', 'ConfigInfo'], '[ERROR_CODE]'), 'DhcpServerSetDnsRegCredentialsV5': (4, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'LPWSTR'], ['ServerIpAddress', 'Uname', 'Domain', 'Password'], '[ERROR_CODE]'), 'DhcpSetClientInfo': (2, ['DHCP_CONST WCHAR*', 'DHCP_CONST DHCP_CLIENT_INFO*'], ['ServerIpAddress', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpSetClientInfoV4': (2, ['DHCP_CONST WCHAR*', 'DHCP_CONST DHCP_CLIENT_INFO_V4*'], ['ServerIpAddress', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpSetClientInfoVQ': (2, ['DHCP_CONST WCHAR*', 'LPDHCP_CLIENT_INFO_VQ'], ['ServerIpAddress', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpSetFilterV4': (2, ['DHCP_CONST WCHAR*', 'DHCP_FILTER_GLOBAL_INFO*'], ['ServerIpAddress', 'GlobalFilterInfo'], '[ERROR_CODE]'), 'DhcpSetOptionInfoV5': (6, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'LPWSTR*', 'LPWSTR*', 'LPDHCP_OPTION'], ['ServerIpAddress', 'Flags', 'OptionID', 'ClassName', 'VendorName', 'OptionInfo'], '[ERROR_CODE]'), 'DhcpSetOptionValueV5': (7, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'LPWSTR', 'LPWSTR', 'LPDHCP_OPTION_SCOPE_INFO', 'LPDHCP_OPTION_DATA'], ['ServerIpAddress', 'Flags', 'OptionId', 'ClassName', 'VendorName', 'ScopeInfo', 'OptionValue'], '[ERROR_CODE]'), 'DhcpSetServerBindingInfo': (3, ['DHCP_CONST WCHAR*', 'ULONG', 'LPDHCP_BIND_ELEMENT_ARRAY'], ['ServerIpAddress', 'Flags', 'BindElementInfo'], '[ERROR_CODE]'), 'DhcpSetSubnetDelayOffer': (3, ['LPWSTR', 'DHCP_IP_ADDRESS', 'USHORT'], ['ServerIpAddress', 'SubnetAddress', 'TimeDelayInMilliseconds'], '[ERROR_CODE]'), 'DhcpSetSubnetInfo': (3, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_CONST DHCP_SUBNET_INFO*'], ['ServerIpAddress', 'SubnetAddress', 'SubnetInfo'], '[ERROR_CODE]'), 'DhcpSetSubnetInfoVQ': (3, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_CONST DHCP_SUBNET_INFO_VQ*'], ['ServerIpAddress', 'SubnetAddress', 'SubnetInfo'], '[ERROR_CODE]'), 'DhcpSetSuperScopeV4': (4, ['DHCP_CONST WCHAR*', 'DHCP_CONST DHCP_IP_ADDRESS', 'DHCP_CONST LPWSTR', 'DHCP_CONST BOOL'], ['ServerIpAddress', 'SubnetAddress', 'SuperScopeName', 'ChangeExisting'], '[ERROR_CODE]'), 'DhcpAddSubnetElementV6': (3, ['LPWSTR', 'DHCP_IPV6_ADDRESS', 'LPDHCP_SUBNET_ELEMENT_DATA_V6'], ['ServerIpAddress', 'SubnetAddress', 'AddElementInfo'], '[ERROR_CODE]'), 'DhcpCreateClassV6': (3, ['LPWSTR', 'DWORD', 'LPDHCP_CLASS_INFO_V6'], ['ServerIpAddress', 'ReservedMustBeZero', 'ClassInfo'], '[ERROR_CODE]'), 'DhcpCreateOptionV6': (6, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'WCHAR*', 'WCHAR*', 'LPDHCP_OPTION'], ['ServerIpAddress', 'Flags', 'OptionId', 'ClassName', 'VendorName', 'OptionInfo'], '[ERROR_CODE]'), 'DhcpCreateSubnetV6': (3, ['LPWSTR', 'DHCP_IPV6_ADDRESS', 'LPDHCP_SUBNET_INFO_V6*'], ['ServerIpAddress', 'SubnetAddress', 'SubnetInfo'], '[ERROR_CODE]'), 'DhcpDeleteClassV6': (3, ['LPWSTR', 'DWORD', 'LPWSTR'], ['ServerIpAddress', 'ReservedMustBeZero', 'ClassName'], '[ERROR_CODE]'), 'DhcpDeleteClientInfoV6': (2, ['LPWSTR', 'LPDHCP_SEARCH_INFO_V6'], ['ServerIpAddress', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpDeleteSubnetV6': (3, ['LPWSTR', 'DHCP_IPV6_ADDRESS', 'DHCP_FORCE_FLAG'], ['ServerIpAddress', 'SubnetAddress', 'ForceFlag'], '[ERROR_CODE]'), 'DhcpEnumClassesV6': (7, ['LPWSTR', 'DWORD', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_CLASS_INFO_ARRAY_V6*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'ReservedMustBeZero', 'ResumeHandle', 'PreferredMaximum', 'ClassInfoArray', 'nRead', 'nTotal'], '[ERROR_CODE]'), 'DhcpEnumOptionsV6': (9, ['LPWSTR', 'DWORD', 'WCHAR*', 'WCHAR*', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_OPTION_ARRAY*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'Flags', 'ClassName', 'VendorName', 'ResumeHandle', 'PreferredMaximum', 'Options', 'OptionsRead', 'OptionsTotal'], '[ERROR_CODE]'), 'DhcpEnumOptionValuesV6': (10, ['LPWSTR', 'DWORD', 'WCHAR*', 'WCHAR*', 'LPDHCP_OPTION_SCOPE_INFO6', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_OPTION_VALUE_ARRAY*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'Flags', 'ClassName', 'VendorName', 'ScopeInfo', 'ResumeHandle', 'PreferredMaximum', 'OptionValues', 'OptionsRead', 'OptionsTotal'], '[ERROR_CODE]'), 'DhcpEnumSubnetsV6': (6, ['LPWSTR', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCPV6_IP_ARRAY*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'ResumeHandle', 'PreferredMaximum', 'EnumInfo', 'ElementsRead', 'ElementsTotal'], '[ERROR_CODE]'), 'DhcpEnumSubnetClientsV6': (7, ['LPWSTR', 'DHCP_IPV6_ADDRESS', 'DHCP_RESUME_IPV6_HANDLE*', 'DWORD', 'LPDHCP_CLIENT_INFO_ARRAY_V6*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'SubnetAddress', 'ResumeHandle', 'PreferredMaximum', 'ClientInfo', 'ClientsRead', 'ClientsTotal'], '[ERROR_CODE]'), 'DhcpEnumSubnetElementsV6': (8, ['LPWSTR', 'DHCP_IPV6_ADDRESS', 'DHCP_SUBNET_ELEMENT_TYPE_V6', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_SUBNET_ELEMENT_INFO_ARRAY_V6*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'SubnetAddress', 'EnumElementType', 'ResumeHandle', 'PreferredMaximum', 'EnumElementInfo', 'ElementsRead', 'ElementsTotal'], '[ERROR_CODE]'), 'DhcpGetAllOptionsV6': (3, ['LPWSTR', 'DWORD', 'LPDHCP_ALL_OPTIONS*'], ['ServerIpAddress', 'Flags', 'OptionStruct'], '[ERROR_CODE]'), 'DhcpGetAllOptionValuesV6': (4, ['LPWSTR', 'DWORD', 'LPDHCP_OPTION_SCOPE_INFO6', 'LPDHCP_ALL_OPTION_VALUES*'], ['ServerIpAddress', 'Flags', 'ScopeInfo', 'Values'], '[ERROR_CODE]'), 'DhcpGetClientInfoV6': (3, ['DHCP_CONST WCHAR*', 'DHCP_CONST DHCP_SEARCH_INFO_V6*', 'LPDHCP_CLIENT_INFO_V6*'], ['ServerIpAddress', 'SearchInfo', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpGetMibInfoV6': (2, ['DHCP_CONST WCHAR*', 'LPDHCP_MIB_INFO_V6*'], ['ServerIpAddress', 'MibInfo'], '[ERROR_CODE]'), 'DhcpGetOptionInfoV6': (6, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'WCHAR*', 'WCHAR*', 'LPDHCP_OPTION*'], ['ServerIpAddress', 'Flags', 'OptionID', 'ClassName', 'VendorName', 'OptionInfo'], '[ERROR_CODE]'), 'DhcpGetOptionValueV6': (7, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'WCHAR*', 'WCHAR*', 'LPDHCP_OPTION_SCOPE_INFO6*', 'LPDHCP_OPTION_VALUE'], ['ServerIpAddress', 'Flags', 'OptionID', 'ClassName', 'VendorName', 'ScopeInfo', 'OptionValue'], '[ERROR_CODE]'), 'DhcpGetServerBindingInfoV6': (3, ['DHCP_CONST WCHAR*', 'ULONG', 'LPDHCPV6_BIND_ELEMENT_ARRAY*'], ['ServerIpAddress', 'Flags', 'BindElementsInfo'], '[ERROR_CODE]'), 'DhcpGetSubnetInfoV6': (3, ['LPWSTR', 'DHCP_IPV6_ADDRESS', 'LPDHCP_SUBNET_INFO_V6*'], ['ServerIpAddress', 'SubnetAddress', 'SubnetInfo'], '[ERROR_CODE]'), 'DhcpModifyClassV6': (3, ['LPWSTR', 'DWORD', 'LPDHCP_CLASS_INFO_V6'], ['ServerIpAddress', 'ReservedMustBeZero', 'ClassInfo'], '[ERROR_CODE]'), 'DhcpRemoveOptionV6': (5, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'WCHAR*', 'WCHAR*'], ['ServerIpAddress', 'Flags', 'OptionID', 'ClassName', 'VendorName'], '[ERROR_CODE]'), 'DhcpRemoveOptionValueV6': (6, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'WCHAR*', 'WCHAR*', 'LPDHCP_OPTION_SCOPE_INFO6'], ['ServerIpAddress', 'Flags', 'OptionID', 'ClassName', 'VendorName', 'ScopeInfo'], '[ERROR_CODE]'), 'DhcpRemoveSubnetElementV6': (4, ['LPWSTR', 'DHCP_IPV6_ADDRESS', 'LPDHCP_SUBNET_ELEMENT_DATA_V6', 'DHCP_FORCE_FLAG'], ['ServerIpAddress', 'SubnetAddress', 'RemoveElementInfo', 'ForceFlag'], '[ERROR_CODE]'), 'DhcpServerGetConfigV6': (3, ['DHCP_CONST WCHAR*', 'LPDHCP_OPTION_SCOPE_INFO6', 'LPDHCP_SERVER_CONFIG_INFO_V6*'], ['ServerIpAddress', 'ScopeInfo', 'ConfigInfo'], '[ERROR_CODE]'), 'DhcpSetClientInfoV6': (2, ['LPWSTR', 'LPDHCP_CLIENT_INFO_V6'], ['ServerIpAddress', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpSetOptionInfoV6': (6, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'WCHAR*', 'WCHAR*', 'LPDHCP_OPTION'], ['ServerIpAddress', 'Flags', 'OptionID', 'ClassName', 'VendorName', 'OptionInfo'], '[ERROR_CODE]'), 'DhcpSetOptionValueV6': (7, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'WCHAR*', 'WCHAR*', 'LPDHCP_OPTION_SCOPE_INFO6', 'LPDHCP_OPTION_DATA'], ['ServerIpAddress', 'Flags', 'OptionId', 'ClassName', 'VendorName', 'ScopeInfo', 'OptionValue'], '[ERROR_CODE]'), 'DhcpSetServerBindingInfoV6': (3, ['DHCP_CONST WCHAR*', 'ULONG', 'LPDHCPV6_BIND_ELEMENT_ARRAY'], ['ServerIpAddress', 'Flags', 'BindElementsInfo'], '[ERROR_CODE]'), 'DhcpServerSetConfigV6': (4, ['DHCP_CONST WCHAR*', 'LPDHCP_OPTION_SCOPE_INFO6', 'DHCP_FIELDS_TO_SET', 'LPDHCP_SERVER_CONFIG_INFO_V6'], ['ServerIpAddress', 'ScopeInfo', 'FieldsToSet', 'ConfigInfo'], '[ERROR_CODE]'), 'DhcpSetSubnetInfoV6': (3, ['DHCP_CONST WCHAR*', 'DHCP_IPV6_ADDRESS', 'LPDHCP_SUBNET_INFO_V6'], ['ServerIpAddress', 'SubnetAddress', 'SubnetInfo'], '[ERROR_CODE]'), 'DhcpAddSubnetElement': (3, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_CONST DHCP_SUBNET_ELEMENT_DATA*'], ['ServerIpAddress', 'SubnetAddress', 'AddElementInfo'], '[ERROR_CODE]'), 'DhcpAddSubnetElementV4': (3, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_CONST DHCP_SUBNET_ELEMENT_DATA_V4*'], ['ServerIpAddress', 'SubnetAddress', 'AddElementInfo'], '[ERROR_CODE]'), 'DhcpCreateOption': (3, ['DHCP_CONST WCHAR*', 'DHCP_OPTION_ID', 'DHCP_CONST DHCP_OPTION*'], ['ServerIpAddress', 'OptionID', 'OptionInfo'], '[ERROR_CODE]'), 'DhcpEnumOptions': (6, ['DHCP_CONST WCHAR*', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_OPTION_ARRAY*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'ResumeHandle', 'PreferredMaximum', 'Options', 'OptionsRead', 'OptionsTotal'], '[ERROR_CODE]'), 'DhcpEnumOptionValues': (7, ['DHCP_CONST WCHAR*', 'DHCP_CONST DHCP_OPTION_SCOPE_INFO*', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_OPTION_VALUE_ARRAY*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'ScopeInfo', 'ResumeHandle', 'PreferredMaximum', 'OptionValues', 'OptionsRead', 'OptionsTotal'], '[ERROR_CODE]'), 'DhcpEnumSubnetClientsV4': (7, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_CLIENT_INFO_ARRAY_V4*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'SubnetAddress', 'ResumeHandle', 'PreferredMaximum', 'ClientInfo', 'ClientsRead', 'ClientsTotal'], '[ERROR_CODE]'), 'DhcpEnumSubnetElements': (8, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_SUBNET_ELEMENT_TYPE', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_SUBNET_ELEMENT_INFO_ARRAY*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'SubnetAddress', 'EnumElementType', 'ResumeHandle', 'PreferredMaximum', 'EnumElementInfo', 'ElementsRead', 'ElementsTotal'], '[ERROR_CODE]'), 'DhcpEnumSubnetElementsV4': (8, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_SUBNET_ELEMENT_TYPE', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_SUBNET_ELEMENT_INFO_ARRAY_V4*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'SubnetAddress', 'EnumElementType', 'ResumeHandle', 'PreferredMaximum', 'EnumElementInfo', 'ElementsRead', 'ElementsTotal'], '[ERROR_CODE]'), 'DhcpGetAllOptions': (3, ['LPWSTR', 'DWORD', 'LPDHCP_ALL_OPTIONS*'], ['ServerIpAddress', 'Flags', 'OptionStruct'], '[ERROR_CODE]'), 'DhcpGetClientOptions': (4, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_IP_MASK', 'LPDHCP_OPTION_LIST*'], ['ServerIpAddress', 'ClientIpAddress', 'ClientSubnetMask', 'ClientOptions'], '[ERROR_CODE]'), 'DhcpGetOptionInfo': (3, ['DHCP_CONST WCHAR*', 'DHCP_OPTION_ID', 'LPDHCP_OPTION*'], ['ServerIpAddress', 'OptionID', 'OptionInfo'], '[ERROR_CODE]'), 'DhcpGetServerSpecificStrings': (2, ['DHCP_CONST WCHAR*', 'LPDHCP_SERVER_SPECIFIC_STRINGS*'], ['ServerIpAddress', 'ServerSpecificStrings'], '[ERROR_CODE]'), 'DhcpGetThreadOptions': (2, ['LPDWORD', 'LPVOID'], ['pFlags', 'Reserved'], '[ERROR_CODE]'), 'DhcpHlprAddV4PolicyCondition': (10, ['LPDHCP_POLICY', 'DWORD', 'DHCP_POL_ATTR_TYPE', 'DWORD', 'DWORD', 'LPWSTR', 'DHCP_POL_COMPARATOR', 'LPBYTE', 'DWORD', 'DWORD*'], ['Policy', 'ParentExpr', 'Type', 'OptionID', 'SubOptionID', 'VendorName', 'Operator', 'Value', 'ValueLength', 'ConditionIndex'], '[ERROR_CODE]'), 'DhcpHlprAddV4PolicyExpr': (4, ['LPDHCP_POLICY', 'DWORD', 'DHCP_POL_LOGIC_OPER', 'DWORD*'], ['Policy', 'ParentExpr', 'Operator', 'ExprIndex'], '[ERROR_CODE]'), 'DhcpHlprAddV4PolicyRange': (2, ['LPDHCP_POLICY', 'LPDHCP_IP_RANGE'], ['Policy', 'Range'], '[ERROR_CODE]'), 'DhcpHlprCreateV4Policy': (8, ['LPWSTR', 'BOOL', 'DHCP_IP_ADDRESS', 'DWORD', 'DHCP_POL_LOGIC_OPER', 'LPWSTR', 'BOOL', 'LPDHCP_POLICY*'], ['PolicyName', 'fGlobalPolicy', 'Subnet', 'ProcessingOrder', 'RootOperator', 'Description', 'Enabled', 'Policy'], '[ERROR_CODE]'), 'DhcpHlprFreeV4Policy': (1, ['LPDHCP_POLICY'], ['Policy'], 'VOID'), 'DhcpHlprIsV4PolicySingleUC': (1, ['LPDHCP_POLICY'], ['Policy'], 'BOOL'), 'DhcpHlprIsV4PolicyValid': (1, ['LPDHCP_POLICY'], ['pPolicy'], '[ERROR_CODE]'), 'DhcpHlprIsV4PolicyWellFormed': (1, ['LPDHCP_POLICY'], ['pPolicy'], 'BOOL'), 'DhcpHlprModifyV4PolicyExpr': (2, ['LPDHCP_POLICY', 'DHCP_POL_LOGIC_OPER'], ['Policy', 'Operator'], '[ERROR_CODE]'), 'DhcpHlprResetV4PolicyExpr': (1, ['LPDHCP_POLICY'], ['Policy'], '[ERROR_CODE]'), 'DhcpRemoveOption': (2, ['DHCP_CONST WCHAR*', 'DHCP_OPTION_ID'], ['ServerIpAddress', 'OptionID'], '[ERROR_CODE]'), 'DhcpRemoveOptionValue': (3, ['DHCP_CONST WCHAR*', 'DHCP_OPTION_ID', 'DHCP_CONST DHCP_OPTION_SCOPE_INFO*'], ['ServerIpAddress', 'OptionID', 'ScopeInfo'], '[ERROR_CODE]'), 'DhcpRemoveSubnetElement': (4, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_CONST DHCP_SUBNET_ELEMENT_DATA*', 'DHCP_FORCE_FLAG'], ['ServerIpAddress', 'SubnetAddress', 'RemoveElementInfo', 'ForceFlag'], '[ERROR_CODE]'), 'DhcpRemoveSubnetElementV4': (4, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_CONST DHCP_SUBNET_ELEMENT_DATA_V4*', 'DHCP_FORCE_FLAG'], ['ServerIpAddress', 'SubnetAddress', 'RemoveElementInfo', 'ForceFlag'], '[ERROR_CODE]'), 'DhcpScanDatabase': (4, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DWORD', 'LPDHCP_SCAN_LIST*'], ['ServerIpAddress', 'SubnetAddress', 'FixFlag', 'ScanList'], '[ERROR_CODE]'), 'DhcpServerBackupDatabase': (2, ['LPWSTR', 'LPWSTR'], ['ServerIpAddress', 'Path'], '[ERROR_CODE]'), 'DhcpServerGetConfig': (2, ['DHCP_CONST WCHAR*', 'LPDHCP_SERVER_CONFIG_INFO*'], ['ServerIpAddress', 'ConfigInfo'], '[ERROR_CODE]'), 'DhcpServerGetConfigV4': (2, ['DHCP_CONST WCHAR*', 'LPDHCP_SERVER_CONFIG_INFO_V4*'], ['ServerIpAddress', 'ConfigInfo'], '[ERROR_CODE]'), 'DhcpServerQueryAttribute': (4, ['LPWSTR', 'ULONG', 'DHCP_ATTRIB_ID', 'LPDHCP_ATTRIB*'], ['ServerIpAddr', 'dwReserved', 'DhcpAttribId', 'pDhcpAttrib'], '[ERROR_CODE]'), 'DhcpServerQueryAttributes': (5, ['LPWSTR', 'ULONG', 'ULONG', 'DHCP_ATTRIB_ID ', 'LPDHCP_ATTRIB_ARRAY*'], ['ServerIpAddr', 'dwReserved', 'dwAttribCount', 'pDhcpAttribs', 'pDhcpAttribArr'], '[ERROR_CODE]'), 'DhcpServerRestoreDatabase': (2, ['LPWSTR', 'LPWSTR'], ['ServerIpAddress', 'Path'], '[ERROR_CODE]'), 'DhcpServerSetConfig': (3, ['DHCP_CONST WCHAR*', 'DHCP_FIELDS_TO_SET', 'LPDHCP_SERVER_CONFIG_INFO'], ['ServerIpAddress', 'FieldsToSet', 'ConfigInfo'], '[ERROR_CODE]'), 'DhcpSetOptionInfo': (3, ['DHCP_CONST WCHAR*', 'DHCP_OPTION_ID', 'DHCP_CONST DHCP_OPTION*'], ['ServerIpAddress', 'OptionID', 'OptionInfo'], '[ERROR_CODE]'), 'DhcpSetOptionValue': (4, ['DHCP_CONST WCHAR*', 'DHCP_OPTION_ID', 'DHCP_CONST DHCP_OPTION_SCOPE_INFO*', 'DHCP_CONST DHCP_OPTION_DATA*'], ['ServerIpAddress', 'OptionID', 'ScopeInfo', 'OptionValue'], '[ERROR_CODE]'), 'DhcpSetOptionValues': (3, ['DHCP_CONST WCHAR*', 'DHCP_CONST DHCP_OPTION_SCOPE_INFO*', 'DHCP_CONST DHCP_OPTION_VALUE_ARRAY*'], ['ServerIpAddress', 'ScopeInfo', 'OptionValues'], '[ERROR_CODE]'), 'DhcpSetOptionValuesV5': (6, ['LPWSTR', 'DWORD', 'LPWSTR', 'LPWSTR', 'LPDHCP_OPTION_SCOPE_INFO', 'LPDHCP_OPTION_VALUE_ARRAY'], ['ServerIpAddress', 'Flags', 'ClassName', 'VendorName', 'ScopeInfo', 'OptionValues'], '[ERROR_CODE]'), 'DhcpSetThreadOptions': (2, ['DWORD', 'LPVOID'], ['Flags', 'Reserved'], '[ERROR_CODE]'), 'DhcpV4FailoverAddScopeToRelationship': (2, ['LPWSTR', 'LPDHCP_FAILOVER_RELATIONSHIP'], ['ServerIpAddress', 'pRelationship'], '[ERROR_CODE]'), 'DhcpV4FailoverCreateRelationship': (2, ['LPWSTR', 'LPDHCP_FAILOVER_RELATIONSHIP'], ['ServerIpAddress', 'pRelationship'], '[ERROR_CODE]'), 'DhcpV4FailoverDeleteRelationship': (2, ['LPWSTR', 'LPWSTR'], ['ServerIpAddress', 'pRelationshipName'], '[ERROR_CODE]'), 'DhcpV4FailoverDeleteScopeFromRelationship': (2, ['LPWSTR', 'LPDHCP_FAILOVER_RELATIONSHIP'], ['ServerIpAddress', 'pRelationship'], '[ERROR_CODE]'), 'DhcpV4FailoverEnumRelationship': (6, ['LPWSTR', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_FAILOVER_RELATIONSHIP_ARRAY*', 'LPDWORD', 'LPDWORD'], ['ServerIpAddress', 'ResumeHandle', 'preferredMaximum', 'pRelationship', 'relationshipRead', 'relationshipTotal'], '[ERROR_CODE]'), 'DhcpV4FailoverGetAddressStatus': (3, ['LPWSTR', 'DHCP_IP_ADDRESS', 'LPDWORD'], ['ServerIpAddress', 'SubnetAddress', 'pStatus'], '[ERROR_CODE]'), 'DhcpV4FailoverGetClientInfo': (3, ['LPWSTR', 'DHCP_CONST DHCP_SEARCH_INFO*', 'LPDHCPV4_FAILOVER_CLIENT_INFO*'], ['ServerIpAddress', 'SearchInfo', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpV4FailoverGetRelationship': (3, ['LPWSTR', 'LPWSTR', 'LPDHCP_FAILOVER_RELATIONSHIP*'], ['ServerIpAddress', 'pRelationshipName', 'pRelationship'], '[ERROR_CODE]'), 'DhcpV4FailoverGetScopeRelationship': (3, ['LPWSTR', 'DHCP_IP_ADDRESS', 'LPDHCP_FAILOVER_RELATIONSHIP*'], ['ServerIpAddress', 'scopeId', 'pRelationship'], '[ERROR_CODE]'), 'DhcpV4FailoverGetScopeStatistics': (3, ['LPWSTR', 'DHCP_IP_ADDRESS', 'LPDHCP_FAILOVER_STATISTICS*'], ['ServerIpAddress', 'scopeId', 'pStats'], '[ERROR_CODE]'), 'DhcpV4FailoverGetSystemTime': (2, ['LPWSTR', 'LPDWORD'], ['ServerIpAddress', 'pTime'], '[ERROR_CODE]'), 'DhcpV4FailoverSetRelationship': (3, ['LPWSTR', 'DWORD', 'LPDHCP_FAILOVER_RELATIONSHIP'], ['ServerIpAddress', 'flags', 'pRelationship'], '[ERROR_CODE]'), 'DhcpV4FailoverTriggerAddrAllocation': (2, ['LPWSTR', 'LPWSTR'], ['ServerIpAddress', 'pFailRelName'], '[ERROR_CODE]'), 'DhcpV4GetFreeIPAddress': (6, ['LPWSTR', 'DHCP_IP_ADDRESS', 'DHCP_IP_ADDRESS', 'DHCP_IP_ADDRESS', 'DWORD', 'LPDHCP_IP_ARRAY*'], ['ServerIpAddress', 'ScopeId', 'startIP', 'endIP', 'numFreeAddrReq', 'IPAddrList'], '[ERROR_CODE]'), 'DhcpV4EnumSubnetClients': (7, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_CLIENT_INFO_PB_ARRAY*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'SubnetAddress', 'ResumeHandle', 'PreferredMaximum', 'ClientInfo', 'ClientsRead', 'ClientsTotal'], '[ERROR_CODE]'), 'DhcpV4EnumSubnetReservations': (7, ['DHCP_CONST WCHAR*', 'DHCP_IP_ADDRESS', 'DHCP_RESUME_HANDLE*', 'DWORD', 'LPDHCP_RESERVATION_INFO_ARRAY*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'SubnetAddress', 'ResumeHandle', 'PreferredMaximum', 'EnumElementInfo', 'ElementsRead', 'ElementsTotal'], '[ERROR_CODE]'), 'DhcpV4CreateClientInfo': (2, ['DHCP_CONST WCHAR*', 'DHCP_CONST LPDHCP_CLIENT_INFO_PB'], ['ServerIpAddress', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpV4GetClientInfo': (3, ['DHCP_CONST WCHAR*', 'DHCP_CONST DHCP_SEARCH_INFO*', 'LPDHCP_CLIENT_INFO_PB*'], ['ServerIpAddress', 'SearchInfo', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpV4RemoveOptionValue': (6, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'LPWSTR', 'LPWSTR', 'LPDHCP_OPTION_SCOPE_INFO'], ['ServerIpAddress', 'Flags', 'OptionID', 'PolicyName', 'VendorName', 'ScopeInfo'], '[ERROR_CODE]'), 'DhcpV4GetAllOptionValues': (4, ['LPWSTR', 'DWORD', 'LPDHCP_OPTION_SCOPE_INFO', 'LPDHCP_ALL_OPTION_VALUES_PB*'], ['ServerIpAddress', 'Flags', 'ScopeInfo', 'Values'], '[ERROR_CODE]'), 'DhcpV4SetOptionValues': (6, ['LPWSTR', 'DWORD', 'LPWSTR', 'LPWSTR', 'LPDHCP_OPTION_SCOPE_INFO', 'LPDHCP_OPTION_VALUE_ARRAY'], ['ServerIpAddress', 'Flags', 'PolicyName', 'VendorName', 'ScopeInfo', 'OptionValues'], '[ERROR_CODE]'), 'DhcpV4SetOptionValue': (7, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'LPWSTR', 'LPWSTR', 'LPDHCP_OPTION_SCOPE_INFO', 'LPDHCP_OPTION_DATA'], ['ServerIpAddress', 'Flags', 'OptionId', 'PolicyName', 'VendorName', 'ScopeInfo', 'OptionValue'], '[ERROR_CODE]'), 'DhcpV4GetOptionValue': (7, ['LPWSTR', 'DWORD', 'DHCP_OPTION_ID', 'LPWSTR', 'LPWSTR', 'LPDHCP_OPTION_SCOPE_INFO', 'LPDHCP_OPTION_VALUE*'], ['ServerIpAddress', 'Flags', 'OptionID', 'PolicyName', 'VendorName', 'ScopeInfo', 'OptionValue'], '[ERROR_CODE]'), 'DhcpV4CreatePolicy': (2, ['LPWSTR', 'LPDHCP_POLICY'], ['ServerIpAddress', 'pPolicy'], '[ERROR_CODE]'), 'DhcpV4EnumPolicies': (8, ['LPWSTR', 'LPDWORD', 'DWORD', 'BOOL', 'DHCP_IP_ADDRESS', 'LPDHCP_POLICY_ARRAY*', 'DWORD*', 'DWORD*'], ['ServerIpAddress', 'ResumeHandle', 'PreferredMaximum', 'fGlobalPolicy', 'SubnetAddress', 'EnumInfo', 'ElementsRead', 'ElementsTotal'], '[ERROR_CODE]'), 'DhcpV4GetPolicy': (5, ['LPWSTR', 'BOOL', 'DHCP_IP_ADDRESS', 'LPWSTR', 'LPDHCP_POLICY*'], ['ServerIpAddress', 'fGlobalPolicy', 'SubnetAddress', 'PolicyName', 'Policy'], '[ERROR_CODE]'), 'DhcpV4SetPolicy': (6, ['LPWSTR', 'DWORD', 'BOOL', 'DHCP_IP_ADDRESS', 'LPWSTR', 'LPDHCP_POLICY'], ['ServerIpAddress', 'FieldsModified', 'fGlobalPolicy', 'SubnetAddress', 'PolicyName', 'Policy'], '[ERROR_CODE]'), 'DhcpV4DeletePolicy': (4, ['LPWSTR', 'BOOL', 'DHCP_IP_ADDRESS', 'LPWSTR'], ['ServerIpAddress', 'fGlobalPolicy', 'SubnetAddress', 'PolicyName'], '[ERROR_CODE]'), 'DhcpV4SetPolicyEnforcement': (4, ['LPWSTR', 'BOOL', 'DHCP_IP_ADDRESS', 'BOOL'], ['ServerIpAddress', 'fGlobalPolicy', 'SubnetAddress', 'Enable'], '[ERROR_CODE]'), 'DhcpV4QueryPolicyEnforcement': (4, ['LPWSTR', 'BOOL', 'DHCP_IP_ADDRESS', 'BOOL*'], ['ServerIpAddress', 'fGlobalPolicy', 'SubnetAddress', 'Enabled'], '[ERROR_CODE]'), 'DhcpV4AddPolicyRange': (4, ['LPWSTR', 'DHCP_IP_ADDRESS', 'LPWSTR', 'LPDHCP_IP_RANGE'], ['ServerIpAddress', 'SubnetAddress', 'PolicyName', 'Range'], '[ERROR_CODE]'), 'DhcpV4RemovePolicyRange': (4, ['LPWSTR', 'DHCP_IP_ADDRESS', 'LPWSTR', 'LPDHCP_IP_RANGE'], ['ServerIpAddress', 'SubnetAddress', 'PolicyName', 'Range'], '[ERROR_CODE]'), 'DhcpV6CreateClientInfo': (2, ['DHCP_CONST WCHAR*', 'DHCP_CONST LPDHCP_CLIENT_INFO_V6'], ['ServerIpAddress', 'ClientInfo'], '[ERROR_CODE]'), 'DhcpV6GetFreeIPAddress': (6, ['LPWSTR', 'DHCP_IPV6_ADDRESS', 'DHCP_IPV6_ADDRESS', 'DHCP_IPV6_ADDRESS', 'DWORD', 'LPDHCPV6_IP_ARRAY*'], ['ServerIpAddress', 'ScopeId', 'startIP', 'endIP', 'numFreeAddrReq', 'IPAddrList'], '[ERROR_CODE]'), 'DhcpV6GetStatelessStatistics': (2, ['LPWSTR', 'LPDHCPV6_STATELESS_STATS*'], ['ServerIpAddress', 'StatelessStats'], '[ERROR_CODE]'), 'DhcpV6GetStatelessStoreParams': (4, ['LPWSTR', 'BOOL', 'DHCP_IPV6_ADDRESS', 'LPDHCPV6_STATELESS_PARAMS*'], ['ServerIpAddress', 'fServerLevel', 'SubnetAddress', 'Params'], '[ERROR_CODE]'), 'DhcpV6SetStatelessStoreParams': (5, ['LPWSTR', 'BOOL', 'DHCP_IPV6_ADDRESS', 'DWORD', 'LPDHCPV6_STATELESS_PARAMS'], ['ServerIpAddress', 'fServerLevel', 'SubnetAddress', 'FieldModified', 'Params'], '[ERROR_CODE]')}

dict5_httpapi = {'HttpCreateHttpHandle': (2, ['PHANDLE', 'ULONG'], ['pReqQueueHandle', 'Reserved'], '[ERROR_CODE_ULONG]'), 'HttpInitialize': (3, ['HTTPAPI_VERSION', 'HTTPINITIALIZEFLAGS', 'PVOID'], ['Version', 'Flags', 'pReserved'], '[ERROR_CODE_ULONG]'), 'HttpPrepareUrl': (4, ['PVOID', 'ULONG', 'PCWSTR', 'PWSTR*'], ['Reserved', 'Flags', 'Url', 'PreparedUrl'], '[ERROR_CODE_ULONG]'), 'HttpTerminate': (2, ['HTTPINITIALIZEFLAGS', 'PVOID'], ['Flags', 'pReserved'], '[ERROR_CODE_ULONG]'), 'HttpAddFragmentToCache': (5, ['HANDLE', 'PCWSTR', 'PHTTP_DATA_CHUNK', 'PHTTP_CACHE_POLICY', 'LPOVERLAPPED'], ['ReqQueueHandle', 'pUrlPrefix', 'pDataChunk', 'pCachePolicy', 'pOverlapped'], '[ERROR_CODE_ULONG]'), 'HttpFlushResponseCache': (4, ['HANDLE', 'PCWSTR', 'ULONG', 'LPOVERLAPPED'], ['ReqQueueHandle', 'pUrlPrefix', 'Flags', 'pOverlapped'], '[ERROR_CODE_ULONG]'), 'HttpReadFragmentFromCache': (7, ['HANDLE', 'PCWSTR', 'PHTTP_BYTE_RANGE', 'PVOID', 'ULONG', 'PULONG', 'LPOVERLAPPED'], ['ReqQueueHandle', 'pUrlPrefix', 'pByteRange', 'pBuffer', 'BufferLength', 'pBytesRead', 'pOverlapped'], '[ERROR_CODE_ULONG]'), 'HttpDeleteServiceConfiguration': (5, ['HANDLE', 'HTTP_SERVICE_CONFIG_ID', 'PVOID', 'ULONG', 'LPOVERLAPPED'], ['ServiceHandle', 'ConfigId', 'pConfigInformation', 'ConfigInformationLength', 'pOverlapped'], '[ERROR_CODE_ULONG]'), 'HttpQueryServiceConfiguration': (8, ['HANDLE', 'HTTP_SERVICE_CONFIG_ID', 'PVOID', 'ULONG', 'PVOID', 'ULONG', 'PULONG', 'LPOVERLAPPED'], ['ServiceHandle', 'ConfigId', 'pInputConfigInfo', 'InputConfigInfoLength', 'pOutputConfigInfo', 'OutputConfigInfoLength', 'pReturnLength', 'pOverlapped'], '[ERROR_CODE_ULONG]'), 'HttpSetServiceConfiguration': (5, ['HANDLE', 'HTTP_SERVICE_CONFIG_ID', 'PVOID', 'ULONG', 'LPOVERLAPPED'], ['ServiceHandle', 'ConfigId', 'pConfigInformation', 'ConfigInformationLength', 'pOverlapped'], '[ERROR_CODE_ULONG]'), 'HttpReceiveHttpRequest': (7, ['HANDLE', 'HTTP_REQUEST_ID', 'ULONG', 'PHTTP_REQUEST', 'ULONG', 'PULONG', 'LPOVERLAPPED'], ['ReqQueueHandle', 'RequestId', 'Flags', 'pRequestBuffer', 'RequestBufferLength', 'pBytesReceived', 'pOverlapped'], '[ERROR_CODE_ULONG]'), 'HttpReceiveRequestEntityBody': (7, ['HANDLE', 'HTTP_REQUEST_ID', 'ULONG', 'PVOID', 'ULONG', 'PULONG', 'LPOVERLAPPED'], ['ReqQueueHandle', 'RequestId', 'Flags', 'pBuffer', 'BufferLength', 'pBytesReceived', 'pOverlapped'], '[ERROR_CODE_ULONG]'), 'HttpSendHttpResponse': (10, ['HANDLE', 'HTTP_REQUEST_ID', 'ULONG', 'PHTTP_RESPONSE', 'PHTTP_CACHE_POLICY', 'PULONG', 'PVOID', 'ULONG', 'LPOVERLAPPED', 'PHTTP_LOG_DATA'], ['ReqQueueHandle', 'RequestId', 'Flags', 'pHttpResponse', 'pCachePolicy', 'pBytesSent', 'pReserved2', 'Reserved3', 'pOverlapped', 'pLogData'], '[ERROR_CODE_ULONG]'), 'HttpSendResponseEntityBody': (10, ['HANDLE', 'HTTP_REQUEST_ID', 'ULONG', 'USHORT', 'PHTTP_DATA_CHUNK', 'PULONG', 'PVOID', 'ULONG', 'LPOVERLAPPED', 'PHTTP_LOG_DATA'], ['ReqQueueHandle', 'RequestId', 'Flags', 'EntityChunkCount', 'pEntityChunks', 'pBytesSent', 'pReserved1', 'Reserved2', 'pOverlapped', 'pLogData'], '[ERROR_CODE_ULONG]'), 'HttpWaitForDisconnect': (3, ['HANDLE', 'HTTP_CONNECTION_ID', 'LPOVERLAPPED'], ['ReqQueueHandle', 'ConnectionId', 'pOverlapped'], '[ERROR_CODE_ULONG]'), 'HttpReceiveClientCertificate': (7, ['HANDLE', 'HTTP_CONNECTION_ID', 'ULONG', 'PHTTP_SSL_CLIENT_CERT_INFO', 'ULONG', 'PULONG', 'LPOVERLAPPED'], ['ReqQueueHandle', 'ConnectionId', 'Flags', 'pSslClientCertInfo', 'SslClientCertInfoSize', 'pBytesReceived', 'pOverlapped'], '[ERROR_CODE_ULONG]'), 'HttpAddUrl': (3, ['HANDLE', 'PCWSTR', 'PVOID'], ['ReqQueueHandle', 'pFullyQualifiedUrl', 'pReserved'], '[ERROR_CODE_ULONG]'), 'HttpRemoveUrl': (2, ['HANDLE', 'PCWSTR'], ['ReqQueueHandle', 'pFullyQualifiedUrl'], '[ERROR_CODE_ULONG]'), 'HttpCloseServerSession': (1, ['HTTP_SERVER_SESSION_ID'], ['ServerSessionId'], '[ERROR_CODE_ULONG]'), 'HttpCreateServerSession': (3, ['HTTPAPI_VERSION', 'PHTTP_SERVER_SESSION_ID', 'ULONG'], ['Version', 'pServerSessionId', 'Reserved'], '[ERROR_CODE_ULONG]'), 'HttpQueryServerSessionProperty': (5, ['HTTP_SERVER_SESSION_ID', 'HTTP_SERVER_PROPERTY', 'PVOID', 'ULONG', 'PULONG'], ['ServerSessionId', 'Property', 'pPropertyInformation', 'PropertyInformationLength', 'pReturnLength'], '[ERROR_CODE_ULONG]'), 'HttpSetServerSessionProperty': (4, ['HTTP_SERVER_SESSION_ID', 'HTTP_SERVER_PROPERTY', 'PVOID', 'ULONG'], ['ServerSessionId', 'Property', 'pPropertyInformation', 'PropertyInformationLength'], '[ERROR_CODE_ULONG]'), 'HttpAddUrlToUrlGroup': (4, ['HTTP_URL_GROUP_ID', 'PCWSTR', 'HTTP_URL_CONTEXT', 'ULONG'], ['UrlGroupId', 'pFullyQualifiedUrl', 'UrlContext', 'Reserved'], '[ERROR_CODE_ULONG]'), 'HttpCreateUrlGroup': (3, ['HTTP_SERVER_SESSION_ID', 'PHTTP_URL_GROUP_ID', 'ULONG'], ['ServerSessionId', 'pUrlGroupId', 'Reserved'], '[ERROR_CODE_ULONG]'), 'HttpCloseUrlGroup': (1, ['HTTP_URL_GROUP_ID'], ['UrlGroupId'], '[ERROR_CODE_ULONG]'), 'HttpQueryUrlGroupProperty': (5, ['HTTP_URL_GROUP_ID', 'HTTP_SERVER_PROPERTY', 'PVOID', 'ULONG', 'PULONG'], ['UrlGroupId', 'Property', 'pPropertyInformation', 'PropertyInformationLength', 'pReturnLength'], '[ERROR_CODE_ULONG]'), 'HttpRemoveUrlFromUrlGroup': (3, ['HTTP_URL_GROUP_ID', 'PCWSTR', 'ULONG'], ['UrlGroupId', 'pFullyQualifiedUrl', 'Flags'], '[ERROR_CODE_ULONG]'), 'HttpSetUrlGroupProperty': (4, ['HTTP_URL_GROUP_ID', 'HTTP_SERVER_PROPERTY', 'PVOID', 'ULONG'], ['UrlGroupId', 'Property', 'pPropertyInformation', 'PropertyInformationLength'], '[ERROR_CODE_ULONG]'), 'HttpCloseRequestQueue': (1, ['HANDLE'], ['ReqQueueHandle'], '[ERROR_CODE_ULONG]'), 'HttpCreateRequestQueue': (5, ['HTTPAPI_VERSION', 'PCWSTR', 'PSECURITY_ATTRIBUTES', 'ULONG', 'PHANDLE'], ['Version', 'pName', 'pSecurityAttributes', 'Flags', 'pReqQueueHandle'], '[ERROR_CODE_ULONG]'), 'HttpSetRequestQueueProperty': (6, ['HANDLE', 'HTTP_SERVER_PROPERTY', 'PVOID', 'ULONG', 'ULONG', 'PVOID'], ['Handle', 'Property', 'pPropertyInformation', 'PropertyInformationLength', 'Reserved', 'pReserved'], '[ERROR_CODE_ULONG]'), 'HttpWaitForDemandStart': (2, ['HANDLE', 'LPOVERLAPPED'], ['ReqQueueHandle', 'pOverlapped'], '[ERROR_CODE_ULONG]')}

dict5_imm32 = {'ImmAssociateContext': (2, ['HWND', 'HIMC'], ['hWnd', 'hIMC'], 'HIMC'), 'ImmAssociateContextEx': (3, ['HWND', 'HIMC', 'DWORD'], ['hWnd', 'hIMC', 'dwFlags'], 'BOOL'), 'ImmConfigureIME': (4, ['HKL', 'HWND', 'DWORD', 'LPVOID'], ['hKL', 'hWnd', 'dwMode', 'lpData'], 'BOOL'), 'ImmCreateContext': (0, [], [], 'HIMC'), 'ImmDestroyContext': (1, ['HIMC'], ['hIMC'], 'BOOL'), 'ImmDisableIME': (1, ['DWORD'], ['idThread'], 'BOOL'), 'ImmDisableTextFrameService': (1, ['DWORD'], ['idThread'], 'BOOL'), 'ImmEnumInputContext': (3, ['DWORD', 'IMCENUMPROC', 'LPARAM'], ['idThread', 'lpfn', 'lParam'], 'BOOL'), 'ImmEnumRegisterWord': (6, ['HKL', 'REGISTERWORDENUMPROC', 'LPCTSTR', 'DWORD', 'LPCTSTR', 'LPVOID'], ['hKL', 'lpfnEnumProc', 'lpszReading', 'dwStyle', 'lpszRegister', 'lpData'], 'UINT'), 'ImmEscape': (4, ['HKL', 'HIMC', 'UINT', 'LPVOID'], ['hKL', 'hIMC', 'uEscape', 'lpData'], 'LRESULT'), 'ImmGetCandidateList': (4, ['HIMC', 'DWORD', 'LPCANDIDATELIST', 'DWORD'], ['hIMC', 'dwIndex', 'lpCandList', 'dwBufLen'], 'DWORD'), 'ImmGetCandidateListCount': (2, ['HIMC', 'LPDWORD'], ['hIMC', 'lpdwListCount'], 'DWORD'), 'ImmGetCandidateWindow': (3, ['HIMC', 'DWORD', 'LPCANDIDATEFORM'], ['hIMC', 'dwIndex', 'lpCandidate'], 'BOOL'), 'ImmGetCompositionFont': (2, ['HIMC', 'LPLOGFONT'], ['hIMC', 'lplf'], 'BOOL'), 'ImmGetCompositionString': (4, ['HIMC', 'DWORD', 'LPVOID', 'DWORD'], ['hIMC', 'dwIndex', 'lpBuf', 'dwBufLen'], 'LONG'), 'ImmGetCompositionWindow': (2, ['HIMC', 'LPCOMPOSITIONFORM'], ['hIMC', 'lpCompForm'], 'BOOL'), 'ImmGetContext': (1, ['HWND'], ['hWnd'], 'HIMC'), 'ImmGetConversionList': (6, ['HKL', 'HIMC', 'LPCTSTR', 'LPCANDIDATELIST', 'DWORD', 'UINT'], ['hKL', 'hIMC', 'lpSrc', 'lpDst', 'dwBufLen', 'uFlag'], 'DWORD'), 'ImmGetConversionStatus': (3, ['HIMC', 'LPDWORD', 'LPDWORD'], ['hIMC', 'lpfdwConversion', 'lpfdwSentence'], 'BOOL'), 'ImmGetDefaultIMEWnd': (1, ['HWND'], ['hWnd'], 'HWND'), 'ImmGetDescription': (3, ['HKL', 'LPTSTR', 'UINT'], ['hKL', 'lpszDescription', 'uBufLen'], 'UINT'), 'ImmGetGuideLine': (4, ['HIMC', 'DWORD', 'LPTSTR', 'DWORD'], ['hIMC', 'dwIndex', 'lpBuf', 'dwBufLen'], 'DWORD'), 'ImmGetIMEFileName': (3, ['HKL', 'LPTSTR', 'UINT'], ['hKL', 'lpszFileName', 'uBufLen'], 'UINT'), 'ImmGetImeMenuItems': (6, ['HIMC', 'DWORD', 'DWORD', 'LPIMEMENUITEMINFO', 'LPIMEMENUITEMINFO', 'DWORD'], ['hIMC', 'dwFlags', 'dwType', 'lpImeParentMenu', 'lpImeMenu', 'dwSize'], 'DWORD'), 'ImmGetOpenStatus': (1, ['HIMC'], ['hIMC'], 'BOOL'), 'ImmGetProperty': (2, ['HKL', 'IMMGETPROPERTYINDEX'], ['hKL', 'fdwIndex'], 'DWORD'), 'ImmGetRegisterWordStyle': (3, ['HKL', 'UINT', 'LPSTYLEBUF'], ['hKL', 'nItem', 'lpStyleBuf'], 'UINT'), 'ImmGetStatusWindowPos': (2, ['HIMC', 'LPPOINT'], ['hIMC', 'lpptPos'], 'BOOL'), 'ImmGetVirtualKey': (1, ['HWND'], ['hWnd'], 'UINT'), 'ImmInstallIME': (2, ['LPCTSTR', 'LPCTSTR'], ['lpszIMEFileName', 'lpszLayoutText'], 'HKL'), 'ImmIsIME': (1, ['HKL'], ['hKL'], 'BOOL'), 'ImmIsUIMessage': (4, ['HWND', 'UINT', 'WPARAM', 'LPARAM'], ['hWndIME', 'msg', 'wParam', 'lParam'], 'BOOL'), 'ImmNotifyIME': (4, ['HIMC', 'IMMNOTIFYACTION', 'COMPOSITIONSTRING', 'DWORD'], ['hIMC', 'dwAction', 'dwIndex', 'dwValue'], 'BOOL'), 'ImmRegisterWord': (4, ['HKL', 'LPCTSTR', 'DWORD', 'LPCTSTR'], ['hKL', 'lpszReading', 'dwStyle', 'lpszRegister'], 'BOOL'), 'ImmReleaseContext': (2, ['HWND', 'HIMC'], ['hWnd', 'hIMC'], 'BOOL'), 'ImmRequestMessage': (3, ['HIMC', 'WPARAM', 'LPARAM'], ['hIMC', 'wParam', 'lParam'], 'LRESULT'), 'ImmSetCandidateWindow': (2, ['HIMC', 'LPCANDIDATEFORM'], ['hIMC', 'lpCandidate'], 'BOOL'), 'ImmSetCompositionFont': (2, ['HIMC', 'LPLOGFONT'], ['hIMC', 'lplf'], 'BOOL'), 'ImmSetCompositionString': (6, ['HIMC', 'DWORD', 'LPVOID', 'DWORD', 'LPVOID', 'DWORD'], ['hIMC', 'dwIndex', 'lpComp', 'dwCompLen', 'lpRead', 'dwReadLen'], 'BOOL'), 'ImmSetCompositionWindow': (2, ['HIMC', 'LPCOMPOSITIONFORM'], ['hIMC', 'lpCompForm'], 'BOOL'), 'ImmSetConversionStatus': (3, ['HIMC', 'DWORD', 'DWORD'], ['hIMC', 'fdwConversion', 'fdwSentence'], 'BOOL'), 'ImmSetOpenStatus': (2, ['HIMC', 'BOOL'], ['hIMC', 'fOpen'], 'BOOL'), 'ImmSetStatusWindowPos': (2, ['HIMC', 'LPPOINT'], ['hIMC', 'lpptPos'], 'BOOL'), 'ImmSimulateHotKey': (2, ['HWND', 'DWORD'], ['hWnd', 'dwHotKeyID'], 'BOOL'), 'ImmUnregisterWord': (4, ['HKL', 'LPCTSTR', 'DWORD', 'LPCTSTR'], ['hKL', 'lpszReading', 'dwStyle', 'lpszUnregister'], 'BOOL'), 'IMMDisableLegacyIME': (0, [], [], 'BOOL')}

dict5_iphlpapi = {'GetAdapterIndex': (2, ['LPWSTR', 'PULONG'], ['AdapterName', 'IfIndex'], '[ERROR_CODE]'), 'GetAdaptersAddresses': (5, ['ADDRESS_FAMILY', 'GETADAPTERSADDRESSESFLAGS', 'PVOID', 'PIP_ADAPTER_ADDRESSES', 'PULONG'], ['Family', 'Flags', 'Reserved', 'AdapterAddresses', 'SizePointer'], '[ERROR_CODE_ULONG]'), 'GetAdaptersInfo': (2, ['PIP_ADAPTER_INFO', 'PULONG'], ['pAdapterInfo', 'pOutBufLen'], '[ERROR_CODE]'), 'GetPerAdapterInfo': (3, ['ULONG', 'PIP_PER_ADAPTER_INFO', 'PULONG'], ['IfIndex', 'pPerAdapterInfo', 'pOutBufLen'], '[ERROR_CODE]'), 'GetUniDirectionalAdapterInfo': (2, ['PIP_UNIDIRECTIONAL_ADAPTER_ADDRESS', 'PULONG'], ['pIPIfInfo', 'dwOutBufLen'], '[ERROR_CODE]'), 'CreateIpNetEntry': (1, ['PMIB_IPNETROW'], ['pArpEntry'], '[ERROR_CODE]'), 'CreateProxyArpEntry': (3, ['DWORD', 'DWORD', 'DWORD'], ['dwAddress', 'dwMask', 'dwIfIndex'], '[ERROR_CODE]'), 'DeleteIpNetEntry': (1, ['PMIB_IPNETROW'], ['pArpEntry'], '[ERROR_CODE]'), 'DeleteProxyArpEntry': (3, ['DWORD', 'DWORD', 'DWORD'], ['dwAddress', 'dwMask', 'dwIfIndex'], '[ERROR_CODE]'), 'FlushIpNetTable': (1, ['DWORD'], ['dwIfIndex'], '[ERROR_CODE]'), 'GetIpNetTable': (3, ['PMIB_IPNETTABLE', 'PULONG', 'BOOL'], ['pIpNetTable', 'pdwSize', 'bOrder'], '[ERROR_CODE]'), 'SendARP': (4, ['IPADDR', 'IPADDR', 'PULONG', 'PULONG'], ['DestIP', 'SrcIP', 'pMacAddr', 'PhyAddrLen'], '[ERROR_CODE]'), 'SetIpNetEntry': (1, ['PMIB_IPNETROW'], ['pArpEntry'], '[ERROR_CODE]'), 'ConvertInterfaceAliasToLuid': (2, ['CONST WCHAR*', 'PNET_LUID'], ['InterfaceAlias', 'InterfaceLuid'], 'NETIO_STATUS'), 'ConvertInterfaceGuidToLuid': (2, ['CONST GUID*', 'PNET_LUID'], ['InterfaceGuid', 'InterfaceLuid'], 'NETIO_STATUS'), 'ConvertInterfaceIndexToLuid': (2, ['NET_IFINDEX', 'PNET_LUID'], ['InterfaceIndex', 'InterfaceLuid'], 'NETIO_STATUS'), 'ConvertInterfaceLuidToAlias': (3, ['CONST NET_LUID*', 'PWSTR', 'SIZE_T'], ['InterfaceLuid', 'InterfaceAlias', 'Length'], 'NETIO_STATUS'), 'ConvertInterfaceLuidToGuid': (2, ['CONST NET_LUID*', 'GUID*'], ['InterfaceLuid', 'InterfaceGuid'], 'NETIO_STATUS'), 'ConvertInterfaceLuidToIndex': (2, ['CONST NET_LUID*', 'PNET_IFINDEX'], ['InterfaceLuid', 'InterfaceIndex'], 'NETIO_STATUS'), 'ConvertInterfaceLuidToNameA': (3, ['CONST NET_LUID*', 'PSTR', 'SIZE_T'], ['InterfaceLuid', 'InterfaceName', 'Length'], 'NETIO_STATUS'), 'ConvertInterfaceLuidToNameW': (3, ['CONST NET_LUID*', 'PWSTR', 'SIZE_T'], ['InterfaceLuid', 'InterfaceName', 'Length'], 'NETIO_STATUS'), 'ConvertInterfaceNameToLuidA': (2, ['CONST CHAR*', 'PNET_LUID'], ['InterfaceName', 'InterfaceLuid'], 'NETIO_STATUS'), 'ConvertInterfaceNameToLuidW': (2, ['CONST WCHAR*', 'PNET_LUID'], ['InterfaceName', 'InterfaceLuid'], 'NETIO_STATUS'), 'if_indextoname': (2, ['NET_IFINDEX', 'PCHAR'], ['InterfaceIndex', 'InterfaceName'], 'PCHAR'), 'if_nametoindex': (1, ['PCSTR'], ['InterfaceName'], 'NET_IFINDEX'), 'GetFriendlyIfIndex': (1, ['DWORD'], ['IfIndex'], '[ERROR_CODE]'), 'GetIfEntry': (1, ['PMIB_IFROW'], ['pIfRow'], '[ERROR_CODE]'), 'GetIfEntry2': (1, ['PMIB_IF_ROW2'], ['Row'], 'NETIOAPI_API'), 'GetIfStackTable': (1, ['PMIB_IFSTACK_TABLE*'], ['Table'], 'NETIOAPI_API'), 'GetIfTable': (3, ['PMIB_IFTABLE', 'PULONG', 'BOOL'], ['pIfTable', 'pdwSize', 'bOrder'], '[ERROR_CODE]'), 'GetIfTable2': (1, ['PMIB_IF_TABLE2*'], ['Table'], 'NETIOAPI_API'), 'GetIfTable2Ex': (2, ['MIB_IF_TABLE_LEVEL', 'PMIB_IF_TABLE2*'], ['Level', 'Table'], 'NETIOAPI_API'), 'GetInterfaceInfo': (2, ['PIP_INTERFACE_INFO', 'PULONG'], ['pIfTable', 'dwOutBufLen'], '[ERROR_CODE]'), 'GetInvertedIfStackTable': (1, ['PMIB_INVERTEDIFSTACK_TABLE*'], ['Table'], 'NETIOAPI_API'), 'GetIpInterfaceEntry': (1, ['PMIB_IPINTERFACE_ROW'], ['Row'], 'NETIOAPI_API'), 'GetIpInterfaceTable': (2, ['ADDRESS_FAMILY', 'PMIB_IPINTERFACE_TABLE*'], ['Family', 'Table'], 'NETIOAPI_API'), 'GetNumberOfInterfaces': (1, ['PDWORD'], ['pdwNumIf'], '[ERROR_CODE]'), 'InitializeIpInterfaceEntry': (1, ['PMIB_IPINTERFACE_ROW'], ['Row'], 'VOID'), 'SetIfEntry': (1, ['PMIB_IFROW'], ['pIfRow'], '[ERROR_CODE]'), 'SetIpInterfaceEntry': (1, ['PMIB_IPINTERFACE_ROW'], ['Row'], 'NETIOAPI_API'), 'GetIcmpStatistics': (1, ['PMIB_ICMP'], ['pStats'], '[ERROR_CODE]'), 'GetIpStatistics': (1, ['PMIB_IPSTATS'], ['pStats'], '[ERROR_CODE]'), 'Icmp6CreateFile': (0, [], [], '[FILE_HANDLE]'), 'Icmp6ParseReplies': (2, ['LPVOID', 'DWORD'], ['ReplyBuffer', 'ReplySize'], '[ERROR_CODE]'), 'Icmp6SendEcho2': (12, ['HANDLE', 'HANDLE', 'PIO_APC_ROUTINE', 'PVOID', 'STRUCT SOCKADDR_IN6*', 'STRUCT SOCKADDR_IN6*', 'LPVOID', 'WORD', 'PIP_OPTION_INFORMATION', 'LPVOID', 'DWORD', 'DWORD'], ['IcmpHandle', 'Event', 'ApcRoutine', 'ApcContext', 'SourceAddress', 'DestinationAddress', 'RequestData', 'RequestSize', 'RequestOptions', 'ReplyBuffer', 'ReplySize', 'Timeout'], '[ERROR_CODE]'), 'IcmpSendEcho2Ex': (12, ['HANDLE', 'HANDLE', 'PIO_APC_ROUTINE', 'PVOID', 'IPADDR', 'IPADDR', 'LPVOID', 'WORD', 'PIP_OPTION_INFORMATION', 'LPVOID', 'DWORD', 'DWORD'], ['IcmpHandle', 'Event', 'ApcRoutine', 'ApcContext', 'SourceAddress', 'DestinationAddress', 'RequestData', 'RequestSize', 'RequestOptions', 'ReplyBuffer', 'ReplySize', 'Timeout'], '[ERROR_CODE]'), 'SetIpTTL': (1, ['UINT'], ['nTTL'], '[ERROR_CODE]'), 'AddIPAddress': (5, ['IPADDR', 'IPMASK', 'DWORD', 'PULONG', 'PULONG'], ['Address', 'IpMask', 'IfIndex', 'NTEContext', 'NTEInstance'], '[ERROR_CODE]'), 'CreateAnycastIpAddressEntry': (1, ['CONST MIB_ANYCASTIPADDRESS_ROW*'], ['Row'], 'NETIOAPI_API'), 'CreateUnicastIpAddressEntry': (1, ['CONST MIB_UNICASTIPADDRESS_ROW*'], ['Row'], 'NETIOAPI_API'), 'DeleteIPAddress': (1, ['ULONG'], ['NTEContext'], '[ERROR_CODE]'), 'DeleteAnycastIpAddressEntry': (1, ['CONST MIB_ANYCASTIPADDRESS_ROW*'], ['Row'], 'NETIOAPI_API'), 'DeleteUnicastIpAddressEntry': (1, ['CONST MIB_UNICASTIPADDRESS_ROW*'], ['Row'], 'NETIOAPI_API'), 'GetAnycastIpAddressEntry': (1, ['PMIB_ANYCASTIPADDRESS_ROW'], ['Row'], 'NETIOAPI_API'), 'GetAnycastIpAddressTable': (2, ['ADDRESS_FAMILY', 'PMIB_ANYCASTIPADDRESS_TABLE*'], ['Family', 'Table'], 'NETIOAPI_API'), 'GetIpAddrTable': (3, ['PMIB_IPADDRTABLE', 'PULONG', 'BOOL'], ['pIpAddrTable', 'pdwSize', 'bOrder'], '[ERROR_CODE]'), 'GetMulticastIpAddressEntry': (1, ['PMIB_MULTICASTIPADDRESS_ROW'], ['Row'], 'NETIOAPI_API'), 'GetMulticastIpAddressTable': (2, ['ADDRESS_FAMILY', 'PMIB_MULTICASTIPADDRESS_TABLE*'], ['Family', 'Table'], 'NETIOAPI_API'), 'GetUnicastIpAddressEntry': (1, ['PMIB_UNICASTIPADDRESS_ROW'], ['Row'], 'NETIOAPI_API'), 'GetUnicastIpAddressTable': (2, ['ADDRESS_FAMILY', 'PMIB_UNICASTIPADDRESS_TABLE*'], ['Family', 'Table'], 'NETIOAPI_API'), 'InitializeUnicastIpAddressEntry': (1, ['PMIB_UNICASTIPADDRESS_ROW'], ['Row'], 'VOID'), 'IpReleaseAddress': (1, ['PIP_ADAPTER_INDEX_MAP'], ['AdapterInfo'], '[ERROR_CODE]'), 'IpRenewAddress': (1, ['PIP_ADAPTER_INDEX_MAP'], ['AdapterInfo'], '[ERROR_CODE]'), 'NotifyStableUnicastIpAddressTable': (5, ['ADDRESS_FAMILY', 'PMIB_UNICASTIPADDRESS_TABLE*', 'PSTABLE_UNICAST_IPADDRESS_TABLE_CALLBACK', 'PVOID', 'HANDLE*'], ['Family', 'Table', 'CallerCallback', 'CallerContext', 'NotificationHandle'], 'NETIOAPI_API'), 'SetUnicastIpAddressEntry': (1, ['CONST MIB_UNICASTIPADDRESS_ROW*'], ['Row'], 'NETIOAPI_API'), 'CreateIpNetEntry2': (1, ['CONST MIB_IPNET_ROW2*'], ['Row'], 'NETIOAPI_API'), 'DeleteIpNetEntry2': (1, ['CONST MIB_IPNET_ROW2*'], ['Row'], 'NETIOAPI_API'), 'FlushIpNetTable2': (2, ['ADDRESS_FAMILY', 'NET_IFINDEX'], ['Family', 'InterfaceIndex'], 'NETIOAPI_API'), 'GetIpNetEntry2': (1, ['PMIB_IPNET_ROW2'], ['Row'], 'NETIOAPI_API'), 'GetIpNetTable2': (2, ['ADDRESS_FAMILY', 'PMIB_IPNET_TABLE2*'], ['Family', 'Table'], 'NETIOAPI_API'), 'ResolveIpNetEntry2': (2, ['PMIB_IPNET_ROW2', 'CONST SOCKADDR_INET*'], ['Row', 'SourceAddress'], 'NETIOAPI_API'), 'ResolveNeighbor': (3, ['SOCKADDR*', 'PVOID', 'PULONG'], ['NetworkAddress', 'PhysicalAddress', 'PhysicalAddressLength'], '[ERROR_CODE_ULONG]'), 'SetIpNetEntry2': (1, ['PMIB_IPNET_ROW2'], ['Row'], 'NETIOAPI_API'), 'FlushIpPathTable': (1, ['ADDRESS_FAMILY'], ['Family'], 'NETIOAPI_API'), 'GetIpPathEntry': (1, ['PMIB_IPPATH_ROW'], ['Row'], 'NETIOAPI_API'), 'GetIpPathTable': (2, ['ADDRESS_FAMILY', 'MIB_IPPATH_TABLE*'], ['Family', 'Table'], 'NETIOAPI_API'), 'CreateIpForwardEntry': (1, ['PMIB_IPFORWARDROW'], ['pRoute'], '[ERROR_CODE]'), 'CreateIpForwardEntry2': (1, ['CONST MIB_IPFORWARD_ROW2*'], ['Row'], 'NETIOAPI_API'), 'DeleteIpForwardEntry': (1, ['PMIB_IPFORWARDROW'], ['pRoute'], '[ERROR_CODE]'), 'DeleteIpForwardEntry2': (1, ['CONST MIB_IPFORWARD_ROW2*'], ['Row'], 'NETIOAPI_API'), 'EnableRouter': (2, ['HANDLE*', 'OVERLAPPED*'], ['pHandle', 'pOverlapped'], '[ERROR_CODE]'), 'GetBestInterface': (2, ['IPADDR', 'PDWORD'], ['dwDestAddr', 'pdwBestIfIndex'], '[ERROR_CODE]'), 'GetBestInterfaceEx': (2, ['STRUCT SOCKADDR*', 'PDWORD'], ['pDestAddr', 'pdwBestIfIndex'], '[ERROR_CODE]'), 'GetBestRoute': (3, ['DWORD', 'DWORD', 'PMIB_IPFORWARDROW'], ['dwDestAddr', 'dwSourceAddr', 'pBestRoute'], '[ERROR_CODE]'), 'GetBestRoute2': (7, ['NET_LUID*', 'NET_IFINDEX', 'CONST SOCKADDR_INET*', 'CONST SOCKADDR_INET*', 'ULONG', 'PMIB_IPFORWARD_ROW2', 'SOCKADDR_INET*'], ['InterfaceLuid', 'InterfaceIndex', 'SourceAddress', 'DestinationAddress', 'AddressSortOptions', 'BestRoute', 'BestSourceAddress'], 'NETIOAPI_API'), 'GetIpForwardEntry2': (1, ['PMIB_IPFORWARD_ROW2'], ['Row'], 'NETIOAPI_API'), 'GetIpForwardTable': (3, ['PMIB_IPFORWARDTABLE', 'PULONG', 'BOOL'], ['pIpForwardTable', 'pdwSize', 'bOrder'], '[ERROR_CODE]'), 'GetIpForwardTable2': (2, ['ADDRESS_FAMILY', 'PMIB_IPFORWARD_TABLE2*'], ['Family', 'Table'], 'NETIOAPI_API'), 'GetRTTAndHopCount': (4, ['IPADDR', 'PULONG', 'ULONG', 'PULONG'], ['DestIpAddress', 'HopCount', 'MaxHops', 'RTT'], 'BOOL'), 'InitializeIpForwardEntry': (1, ['PMIB_IPFORWARD_ROW2'], ['Row'], 'VOID'), 'SetIpForwardEntry': (1, ['PMIB_IPFORWARDROW'], ['pRoute'], '[ERROR_CODE]'), 'SetIpForwardEntry2': (1, ['CONST MIB_IPFORWARD_ROW2*'], ['Route'], 'NETIOAPI_API'), 'SetIpStatistics': (1, ['PMIB_IPSTATS'], ['pIpStats'], '[ERROR_CODE]'), 'SetIpStatisticsEx': (2, ['PMIB_IPSTATS', 'ULONG'], ['pIpStats', 'Family'], '[ERROR_CODE]'), 'UnenableRouter': (2, ['OVERLAPPED*', 'LPDWORD'], ['pOverlapped', 'lpdwEnableCount'], '[ERROR_CODE]'), 'FreeMibTable': (1, ['PVOID'], ['Memory'], 'VOID'), 'ConvertIpv4MaskToLength': (2, ['ULONG', 'PUINT8'], ['Mask', 'MaskLength'], 'NETIO_STATUS'), 'ConvertLengthToIpv4Mask': (2, ['ULONG', 'PULONG'], ['MaskLength', 'Mask'], 'NETIO_STATUS'), 'CreateSortedAddressPairs': (7, ['CONST PSOCKADDR_IN6', 'ULONG', 'CONST PSOCKADDR_IN6', 'ULONG', 'ULONG', 'PSOCKADDR_IN6_PAIR*', 'ULONG*'], ['SourceAddressList', 'SourceAddressCount', 'DestinationAddressList', 'DestinationAddressCount', 'AddressSortOptions', 'SortedAddressPairList', 'SortedAddressPairCount'], 'NETIOAPI_API'), 'ParseNetworkString': (5, ['CONST WCHAR*', 'DWORD', 'PNET_ADDRESS_INFO', 'USHORT*', 'BYTE*'], ['NetworkString', 'Types', 'AddressInfo', 'PortNumber', 'PrefixLength'], '[ERROR_CODE]'), 'GetNetworkParams': (2, ['PFIXED_INFO', 'PULONG'], ['pFixedInfo', 'pOutBufLen'], '[ERROR_CODE]'), 'CancelMibChangeNotify2': (1, ['HANDLE'], ['NotificationHandle'], 'NETIOAPI_API'), 'NotifyAddrChange': (2, ['PHANDLE', 'LPOVERLAPPED'], ['Handle', 'overlapped'], '[ERROR_CODE]'), 'NotifyIpInterfaceChange': (5, ['ADDRESS_FAMILY', 'PIPINTERFACE_CHANGE_CALLBACK', 'PVOID', 'BOOLEAN', 'HANDLE*'], ['Family', 'Callback', 'CallerContext', 'InitialNotification', 'NotificationHandle'], 'NETIOAPI_API'), 'NotifyRouteChange': (2, ['PHANDLE', 'LPOVERLAPPED'], ['Handle', 'overlapped'], '[ERROR_CODE]'), 'NotifyRouteChange2': (5, ['ADDRESS_FAMILY', 'PIPFORWARD_CHANGE_CALLBACK', 'PVOID', 'BOOLEAN', 'HANDLE*'], ['Family', 'Callback', 'CallerContext', 'InitialNotification', 'NotificationHandle'], 'NETIOAPI_API'), 'NotifyUnicastIpAddressChange': (5, ['ADDRESS_FAMILY', 'PUNICAST_IPADDRESS_CHANGE_CALLBACK', 'PVOID', 'BOOLEAN', 'HANDLE*'], ['Family', 'Callback', 'CallerContext', 'InitialNotification', 'NotificationHandle'], 'NETIOAPI_API'), 'CancelSecurityHealthChangeNotify': (1, ['LPOVERLAPPED'], ['notifyOverlapped'], 'BOOL'), 'NotifySecurityHealthChange': (3, ['PHANDLE', 'LPOVERLAPPED', 'PULONG'], ['pHandle', 'pOverLapped', 'SecurityHealthFlags'], '[ERROR_CODE]'), 'GetTeredoPort': (1, ['USHORT*'], ['Port'], 'NETIOAPI_API'), 'NotifyTeredoPortChange': (4, ['PTEREDO_PORT_CHANGE_CALLBACK', 'PVOID', 'BOOLEAN', 'HANDLE*'], ['Callback', 'CallerContext', 'InitialNotification', 'NotificationHandle'], 'NETIOAPI_API'), 'GetExtendedTcpTable': (6, ['PVOID', 'PDWORD', 'BOOL', 'ADDRESS_FAMILY', 'TCP_TABLE_CLASS', 'ULONG'], ['pTcpTable', 'pdwSize', 'bOrder', 'ulAf', 'TableClass', 'Reserved'], '[ERROR_CODE]'), 'GetExtendedUdpTable': (6, ['PVOID', 'PDWORD', 'BOOL', 'ADDRESS_FAMILY', 'UDP_TABLE_CLASS', 'ULONG'], ['pUdpTable', 'pdwSize', 'bOrder', 'ulAf', 'TableClass', 'Reserved'], '[ERROR_CODE]'), 'GetOwnerModuleFromTcp6Entry': (4, ['PMIB_TCP6ROW_OWNER_MODULE', 'TCPIP_OWNER_MODULE_INFO_CLASS', 'PVOID', 'PDWORD'], ['pTcpEntry', 'Class', 'Buffer', 'pdwSize'], '[ERROR_CODE]'), 'GetOwnerModuleFromTcpEntry': (4, ['PMIB_TCPROW_OWNER_MODULE', 'TCPIP_OWNER_MODULE_INFO_CLASS', 'PVOID', 'PDWORD'], ['pTcpEntry', 'Class', 'Buffer', 'pdwSize'], '[ERROR_CODE]'), 'GetOwnerModuleFromUdp6Entry': (4, ['PMIB_UDP6ROW_OWNER_MODULE', 'TCPIP_OWNER_MODULE_INFO_CLASS', 'PVOID', 'PDWORD'], ['pUdpEntry', 'Class', 'Buffer', 'pdwSize'], '[ERROR_CODE]'), 'GetOwnerModuleFromUdpEntry': (4, ['PMIB_UDPROW_OWNER_MODULE', 'TCPIP_OWNER_MODULE_INFO_CLASS', 'PVOID', 'PDWORD'], ['pUdpEntry', 'Class', 'Buffer', 'pdwSize'], '[ERROR_CODE]'), 'GetPerTcp6ConnectionEStats': (11, ['PMIB_TCP6ROW', 'TCP_ESTATS_TYPE', 'PUCHAR', 'ULONG', 'ULONG', 'PUCHAR', 'ULONG', 'ULONG', 'PUCHAR', 'ULONG', 'ULONG'], ['Row', 'EstatsType', 'Rw', 'RwVersion', 'RwSize', 'Ros', 'RosVersion', 'RosSize', 'Rod', 'RodVersion', 'RodSize'], '[ERROR_CODE_ULONG]'), 'GetPerTcpConnectionEStats': (11, ['PMIB_TCPROW', 'TCP_ESTATS_TYPE', 'PUCHAR', 'ULONG', 'ULONG', 'PUCHAR', 'ULONG', 'ULONG', 'PUCHAR', 'ULONG', 'ULONG'], ['Row', 'EstatsType', 'Rw', 'RwVersion', 'RwSize', 'Ros', 'RosVersion', 'RosSize', 'Rod', 'RodVersion', 'RodSize'], '[ERROR_CODE_ULONG]'), 'GetTcpStatistics': (1, ['PMIB_TCPSTATS'], ['pStats'], '[ERROR_CODE]'), 'GetTcpStatisticsEx': (2, ['PMIB_TCPSTATS', 'ADDRESS_FAMILY'], ['pStats', 'dwFamily'], '[ERROR_CODE]'), 'GetTcp6Table': (3, ['PMIB_TCP6TABLE', 'PULONG', 'BOOL'], ['TcpTable', 'SizePointer', 'Order'], '[ERROR_CODE_ULONG]'), 'GetTcp6Table2': (3, ['PMIB_TCP6TABLE2', 'PULONG', 'BOOL'], ['TcpTable', 'SizePointer', 'Order'], '[ERROR_CODE_ULONG]'), 'GetTcpTable': (3, ['PMIB_TCPTABLE', 'PDWORD', 'BOOL'], ['pTcpTable', 'pdwSize', 'bOrder'], '[ERROR_CODE]'), 'GetTcpTable2': (3, ['PMIB_TCPTABLE2', 'PULONG', 'BOOL'], ['TcpTable', 'SizePointer', 'Order'], '[ERROR_CODE_ULONG]'), 'SetPerTcp6ConnectionEStats': (6, ['PMIB_TCP6ROW', 'TCP_ESTATS_TYPE', 'PUCHAR', 'ULONG', 'ULONG', 'ULONG'], ['Row', 'EstatsType', 'Rw', 'RwVersion', 'RwSize', 'Offset'], '[ERROR_CODE_ULONG]'), 'SetPerTcpConnectionEStats': (6, ['PMIB_TCP6ROW', 'TCP_ESTATS_TYPE', 'PUCHAR', 'ULONG', 'ULONG', 'ULONG'], ['Row', 'EstatsType', 'Rw', 'RwVersion', 'RwSize', 'Offset'], '[ERROR_CODE_ULONG]'), 'SetTcpEntry': (1, ['PMIB_TCPROW'], ['pTcpRow'], '[ERROR_CODE]'), 'GetUdp6Table': (3, ['PMIB_UDP6TABLE', 'PULONG', 'BOOL'], ['Udp6Table', 'SizePointer', 'Order'], '[ERROR_CODE_ULONG]'), 'GetUdpStatistics': (1, ['PMIB_UDPSTATS'], ['pStats'], '[ERROR_CODE]'), 'GetUdpStatisticsEx': (2, ['PMIB_UDPSTATS', 'ADDRESS_FAMILY'], ['pStats', 'dwFamily'], '[ERROR_CODE]'), 'GetUdpTable': (3, ['PMIB_UDPTABLE', 'PDWORD', 'BOOL'], ['pUdpTable', 'pdwSize', 'bOrder'], '[ERROR_CODE]'), 'AllocateAndGetTcpExTableFromStack': (5, ['PVOID*', 'BOOL', 'HANDLE', 'DWORD', 'ADDRESS_FAMILY'], ['ppTcpTable', 'bOrder', 'hHeap', 'dwFlags', 'dwFamily'], '[ERROR_CODE]'), 'AllocateAndGetUdpExTableFromStack': (5, ['PVOID*', 'BOOL', 'HANDLE', 'DWORD', 'ADDRESS_FAMILY'], ['ppUDPTable', 'bOrder', 'hHeap', 'dwFlags', 'dwFamily'], '[ERROR_CODE]'), 'IcmpCloseHandle': (1, ['HANDLE'], ['IcmpHandle'], 'BOOL'), 'IcmpCreateFile': (0, [], [], '[FILE_HANDLE]'), 'IcmpParseReplies': (2, ['LPVOID', 'DWORD'], ['ReplyBuffer', 'ReplySize'], 'DWORD'), 'IcmpSendEcho': (8, ['HANDLE', 'IPADDR', 'LPVOID', 'WORD', 'PIP_OPTION_INFORMATION', 'LPVOID', 'DWORD', 'DWORD'], ['IcmpHandle', 'DestinationAddress', 'RequestData', 'RequestSize', 'RequestOptions', 'ReplyBuffer', 'ReplySize', 'Timeout'], '[ERROR_CODE]'), 'IcmpSendEcho2': (11, ['HANDLE', 'HANDLE', 'PIO_APC_ROUTINE', 'PVOID', 'IPADDR', 'LPVOID', 'WORD', 'PIP_OPTION_INFORMATION', 'LPVOID', 'DWORD', 'DWORD'], ['IcmpHandle', 'Event', 'ApcRoutine', 'ApcContext', 'DestinationAddress', 'RequestData', 'RequestSize', 'RequestOptions', 'ReplyBuffer', 'ReplySize', 'Timeout'], '[ERROR_CODE]'), 'GetIpNetworkConnectionBandwidthEstimates': (3, ['NET_IFINDEX', 'ADDRESS_FAMILY', 'PMIB_IP_NETWORK_CONNECTION_BANDWIDTH_ESTIMATES'], ['InterfaceIndex', 'AddressFamily', 'BandwidthEstimates'], 'NETIOAPI_API'), 'CancelIPChangeNotify': (1, ['LPOVERLAPPED'], ['notifyOverlapped'], 'BOOL'), 'CreatePersistentTcpPortReservation': (3, ['USHORT', 'USHORT', 'PULONG64'], ['StartPort', 'NumberOfPorts', 'Token'], '[ERROR_CODE_ULONG]'), 'CreatePersistentUdpPortReservation': (3, ['USHORT', 'USHORT', 'PULONG64'], ['StartPort', 'NumberOfPorts', 'Token'], '[ERROR_CODE_ULONG]'), 'DeletePersistentTcpPortReservation': (2, ['USHORT', 'USHORT'], ['StartPort', 'NumberOfPorts'], '[ERROR_CODE_ULONG]'), 'DeletePersistentUdpPortReservation': (2, ['USHORT', 'USHORT'], ['StartPort', 'NumberOfPorts'], '[ERROR_CODE_ULONG]'), 'DisableMediaSense': (2, ['HANDLE*', 'OVERLAPPED*'], ['pHandle', 'pOverlapped'], '[ERROR_CODE]'), 'GetAdapterOrderMap': (0, [], [], 'PIP_ADAPTER_ORDER_MAP'), 'GetIcmpStatisticsEx': (2, ['PMIB_ICMP_EX', 'DWORD'], ['pStats', 'dwFamily'], '[ERROR_CODE]'), 'GetIpErrorString': (3, ['IP_STATUS', 'PWCHAR', 'PDWORD'], ['ErrorCode', 'Buffer', 'Size'], '[ERROR_CODE]'), 'GetIpStatisticsEx': (2, ['PMIB_IPSTATS', 'DWORD'], ['pStats', 'dwFamily'], '[ERROR_CODE]'), 'LookupPersistentTcpPortReservation': (3, ['USHORT', 'USHORT', 'PULONG64'], ['StartPort', 'NumberOfPorts', 'Token'], '[ERROR_CODE_ULONG]'), 'LookupPersistentUdpPortReservation': (3, ['USHORT', 'USHORT', 'PULONG64'], ['StartPort', 'NumberOfPorts', 'Token'], '[ERROR_CODE_ULONG]'), 'NhpAllocateAndGetInterfaceInfoFromStack': (5, ['IP_INTERFACE_NAME_INFO**', 'PDWORD', 'BOOL', 'HANDLE', 'DWORD'], ['ppTable', 'pdwCount', 'bOrder', 'hHeap', 'dwFlags'], '[ERROR_CODE]'), 'RestoreMediaSense': (2, ['OVERLAPPED*', 'LPDWORD'], ['pOverlapped', 'lpdwEnableCount'], '[ERROR_CODE]')}

dict5_iscsidsc = {'AddISNSServer': (1, ['PTCHAR'], ['Address'], 'ISDSC_STATUS'), 'AddIScsiConnection': (9, ['PISCSI_UNIQUE_SESSION_ID', 'PVOID', 'ULONG', 'PISCSI_TARGET_PORTAL', 'ISCSI_SECURITY_FLAGS', 'PISCSI_LOGIN_OPTIONS', 'ULONG', 'PCHAR', 'PISCSI_UNIQUE_CONNECTION_ID'], ['UniqueSessionId', 'Reserved', 'InitiatorPortNumber', 'TargetPortal', 'SecurityFlags', 'LoginOptions', 'KeySize', 'Key', 'ConnectionId'], 'ISDSC_STATUS'), 'AddIScsiSendTargetPortal': (5, ['PTCHAR', 'ULONG', 'PISCSI_LOGIN_OPTIONS', 'ISCSI_SECURITY_FLAGS', 'PISCSI_TARGET_PORTAL'], ['InitiatorName', 'InitiatorPortNumber', 'LoginOptions', 'SecurityFlags', 'Portal'], 'ISDSC_STATUS'), 'AddIScsiStaticTarget': (7, ['PTCHAR', 'PTCHAR', 'ISCSI_TARGET_FLAGS', 'BOOLEAN', 'PISCSI_TARGET_MAPPING', 'PISCSI_LOGIN_OPTIONS', 'PISCSI_TARGET_PORTAL_GROUP'], ['TargetName', 'TargetAlias', 'TargetFlags', 'Persist', 'Mappings', 'LoginOptions', 'PortalGroup'], 'ISDSC_STATUS'), 'AddPersistentIScsiDevice': (1, ['PTCHAR'], ['VolumePath'], 'ISDSC_STATUS'), 'AddRadiusServer': (1, ['PWCHAR'], ['Address'], 'ISDSC_STATUS'), 'ClearPersistentIScsiDevices': (0, [], [], 'ISDSC_STATUS'), 'GetDevicesForIScsiSession': (3, ['PISCSI_UNIQUE_SESSION_ID', 'ULONG*', 'PISCSI_DEVICE_ON_SESSION'], ['UniqueSessionId', 'DeviceCount', 'Devices'], 'ISDSC_STATUS'), 'GetIScsiIKEInfo': (4, ['PTCHAR', 'ULONG', 'PULONG', 'PIKE_AUTHENTICATION_INFORMATION'], ['InitiatorName', 'PortNumber', 'Reserved', 'AuthInfo'], 'ISDSC_STATUS'), 'GetIScsiInitiatorNodeName': (1, ['PTCHAR'], ['InitiatorNodeName'], 'ISDSC_STATUS'), 'GetIScsiSessionList': (3, ['ULONG*', 'ULONG*', 'PISCSI_SESSION_INFO'], ['BufferSize', 'SessionCount', 'SessionInfo'], 'ISDSC_STATUS'), 'GetIScsiTargetInformation': (5, ['PTCHAR', 'PTCHAR', 'TARGET_INFORMATION_CLASS', 'PULONG', 'PVOID'], ['TargetName', 'DiscoveryMechanism', 'InfoClass', 'BufferSize', 'Buffer'], 'ISDSC_STATUS'), 'GetIScsiVersionInformation': (1, ['PISCSI_VERSION_INFO'], ['VersionInfo'], 'ISDSC_STATUS'), 'LoginIScsiTarget': (13, ['PTCHAR', 'BOOLEAN', 'PTCHAR', 'ULONG', 'PISCSI_TARGET_PORTAL', 'ISCSI_SECURITY_FLAGS', 'PISCSI_TARGET_MAPPING', 'PISCSI_LOGIN_OPTIONS', 'ULONG', 'PCHAR', 'BOOLEAN', 'PISCSI_UNIQUE_SESSION_ID', 'PISCSI_UNIQUE_CONNECTION_ID'], ['TargetName', 'IsInformationalSession', 'InitiatorName', 'InitiatorPortNumber', 'TargetPortal', 'SecurityFlags', 'Mappings', 'LoginOptions', 'KeySize', 'Key', 'IsPersistent', 'UniqueSessionId', 'UniqueConnectionId'], 'ISDSC_STATUS'), 'LogoutIScsiTarget': (1, ['PISCSI_UNIQUE_SESSION_ID'], ['UniqueSessionId'], 'ISDSC_STATUS'), 'RefreshISNSServer': (1, ['PTCHAR'], ['Address'], 'ISDSC_STATUS'), 'RefreshIScsiSendTargetPortal': (3, ['PTCHAR', 'ULONG', 'PISCSI_TARGET_PORTAL'], ['InitiatorInstance', 'InitiatorPortNumber', 'Portal'], 'ISDSC_STATUS'), 'RemoveISNSServer': (1, ['PTCHAR'], ['Address'], 'ISDSC_STATUS'), 'RemoveIScsiConnection': (2, ['PISCSI_UNIQUE_SESSION_ID', 'PISCSI_UNIQUE_CONNECTION_ID'], ['UniqueSessionId', 'UniqueConnectionId'], 'ISDSC_STATUS'), 'RemoveIScsiPersistentTarget': (4, ['PTCHAR', 'ULONG', 'PTCHAR', 'PISCSI_TARGET_PORTAL'], ['InitiatorInstance', 'InitiatorPortNumber', 'TargetName', 'Portal'], 'ISDSC_STATUS'), 'RemoveIScsiSendTargetPortal': (3, ['PTCHAR', 'ULONG', 'PISCSI_TARGET_PORTAL'], ['InitiatorInstance', 'InitiatorPortNumber', 'Portal'], 'ISDSC_STATUS'), 'RemoveIScsiStaticTarget': (1, ['PTCHAR'], ['TargetName'], 'ISDSC_STATUS'), 'RemovePersistentIScsiDevice': (1, ['PTCHAR'], ['VolumePath'], 'ISDSC_STATUS'), 'RemoveRadiusServer': (1, ['PTCHAR'], ['Address'], 'ISDSC_STATUS'), 'ReportActiveIScsiTargetMappings': (3, ['PULONG', 'PULONG', 'PISCSI_TARGET_MAPPING'], ['BufferSize', 'MappingCount', 'Mappings'], 'ISDSC_STATUS'), 'ReportISNSServerList': (2, ['PULONG', 'PTCHAR'], ['BufferSizeInChar', 'Buffer'], 'ISDSC_STATUS'), 'ReportIScsiInitiatorList': (2, ['ULONG*', 'PTCHAR'], ['BufferSize', 'Buffer'], 'ISDSC_STATUS'), 'ReportIScsiPersistentLogins': (3, ['ULONG*', 'PPERSISTENT_ISCSI_LOGIN_INFO', 'PULONG'], ['Count', 'PersistentLoginInfo', 'BufferSizeInBytes'], 'ISDSC_STATUS'), 'ReportIScsiSendTargetPortals': (2, ['PULONG', 'PISCSI_TARGET_PORTAL_INFO'], ['PortalCount', 'PortalInfo'], 'ISDSC_STATUS'), 'ReportIScsiSendTargetPortalsEx': (3, ['PULONG', 'PULONG', 'PISCSI_TARGET_PORTAL_INFO_EX'], ['PortalCount', 'PortalInfoSize', 'PortalInfo'], 'ISDSC_STATUS'), 'ReportIScsiTargets': (3, ['BOOLEAN', 'PULONG', 'PTCHAR'], ['ForceUpdate', 'BufferSize', 'Buffer'], 'ISDSC_STATUS'), 'ReportIScsiTargetPortals': (5, ['PWCHAR', 'PWCHAR', 'PUSHORT', 'PULONG', 'PISCSI_TARGET_PORTAL'], ['InitiatorName', 'TargetName', 'TargetPortalTag', 'ElementCount', 'Portals'], 'ISDSC_STATUS'), 'ReportPersistentIScsiDevices': (2, ['PULONG', 'PTCHAR'], ['BufferSizeInChar', 'Buffer'], 'ISDSC_STATUS'), 'ReportRadiusServerList': (2, ['PULONG', 'PTCHAR'], ['BufferSizeInChar', 'Buffer'], 'ISDSC_STATUS'), 'SendScsiInquiry': (9, ['PISCSI_UNIQUE_SESSION_ID*', 'ULONGLONG', 'UCHAR', 'UCHAR', 'PUCHAR*', 'PULONG*', 'PUCHAR', 'PULONG*', 'PUCHAR'], ['UniqueSessionId', 'Lun', 'EvpdCmddt', 'PageCode', 'ScsiStatus', 'ReponseSize', 'ReponseBuffer', 'SenseSize', 'SenseBuffer'], 'ISDSC_STATUS'), 'SendScsiReadCapacity': (7, ['PISCSI_UNIQUE_SESSION_ID', 'ULONGLONG', 'PUCHAR*', 'PULONG*', 'PUCHAR', 'PULONG*', 'PUCHAR'], ['UniqueSessionId', 'Lun', 'ScsiStatus', 'ResponseSize', 'ResponseBuffer', 'SenseSize', 'SenseBuffer'], 'ISDSC_STATUS'), 'SendScsiReportLuns': (6, ['PISCSI_UNIQUE_SESSION_ID', 'PUCHAR*', 'PULONG*', 'PUCHAR', 'PULONG*', 'PUCHAR'], ['UniqueSessionId', 'ScsiStatus', 'ResponseSize', 'ResponseBuffer', 'SenseSize', 'SenseBuffer'], 'ISDSC_STATUS'), 'SetIScsiGroupPresharedKey': (3, ['ULONG', 'PUCHAR', 'BOOLEAN'], ['KeyLength', 'Key', 'Persist'], 'ISDSC_STATUS'), 'SetIScsiIKEInfo': (4, ['PTCHAR', 'ULONG', 'PIKE_AUTHENTICATION_INFORMATION', 'BOOLEAN'], ['InitiatorName', 'PortNumber', 'AuthInfo', 'Persist'], 'ISDSC_STATUS'), 'SetIScsiInitiatorCHAPSharedSecret': (2, ['ULONG', 'PUCHAR'], ['SharedSecretLength', 'SharedSecret'], 'ISDSC_STATUS'), 'SetIScsiInitiatorRADIUSSharedSecret': (2, ['ULONG', 'PUCHAR'], ['SharedSecretLength', 'SharedSecret'], 'ISDSC_STATUS'), 'SetIScsiInitiatorNodeName': (1, ['PTCHAR'], ['InitiatorNodeName'], 'ISDSC_STATUS'), 'SetIScsiTunnelModeOuterAddress': (5, ['PTCHAR', 'ULONG', 'PTCHAR', 'PTCHAR', 'BOOLEAN'], ['InitiatorName', 'InitiatorPortNumber', 'DestinationAddress', 'OuterModeAddress', 'Persist'], 'ISDSC_STATUS'), 'SetupPersistentIScsiDevices': (0, [], [], 'ISDSC_STATUS')}

dict5_mprapi = {'MprAdminPortEnum': (8, ['RAS_SERVER_HANDLE', 'DWORD', 'HANDLE', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hRasServer', 'dwLevel', 'hConnection', 'lplpbBuffer', 'dwPrefMaxLen', 'lpdwEntriesRead', 'lpdwTotalEntries', 'lpdwResumeHandle'], '[ERROR_CODE]'), 'MprAdminConnectionGetInfo': (4, ['RAS_SERVER_HANDLE', 'DWORD', 'HANDLE', 'LPBYTE*'], ['hRasServer', 'dwLevel', 'hConnection', 'lplpbBuffer'], '[ERROR_CODE]'), 'MprAdminPortGetInfo': (4, ['RAS_SERVER_HANDLE', 'DWORD', 'HANDLE', 'LPBYTE*'], ['hRasServer', 'dwLevel', 'hPort', 'lplpbBuffer'], '[ERROR_CODE]'), 'MprAdminConnectionClearStats': (2, ['RAS_SERVER_HANDLE', 'HANDLE'], ['hRasServer', 'hConnection'], '[ERROR_CODE]'), 'MprAdminPortClearStats': (2, ['RAS_SERVER_HANDLE', 'HANDLE'], ['hRasServer', 'hPort'], '[ERROR_CODE]'), 'MprAdminPortReset': (2, ['RAS_SERVER_HANDLE', 'HANDLE'], ['hRasServer', 'hPort'], '[ERROR_CODE]'), 'MprAdminPortDisconnect': (2, ['RAS_SERVER_HANDLE', 'HANDLE'], ['hRasServer', 'hPort'], '[ERROR_CODE]'), 'MprAdminConnectionRemoveQuarantine': (3, ['HANDLE', 'HANDLE', 'BOOL'], ['hRasServer', 'hRasConnection', 'fIsIpAddress'], '[ERROR_CODE]'), 'MprAdminUserGetInfo': (4, ['CONST WCHAR*', 'CONST WCHAR*', 'DWORD', 'LPBYTE'], ['lpszServer', 'lpszUser', 'dwLevel', 'lpbBuffer'], '[ERROR_CODE]'), 'MprAdminUserSetInfo': (4, ['CONST WCHAR*', 'CONST WCHAR*', 'DWORD', 'CONST LPBYTE'], ['lpszServer', 'lpszUser', 'dwLevel', 'lpbBuffer'], '[ERROR_CODE]'), 'MprAdminSendUserMessage': (3, ['MPR_SERVER_HANDLE', 'HANDLE', 'LPWSTR'], ['hMprServer', 'hConnection', 'lpwszMessage'], '[ERROR_CODE]'), 'MprAdminGetPDCServer': (3, ['CONST WCHAR*', 'CONST WCHAR*', 'LPWSTR'], ['lpszDomain', 'lpszServer', 'lpszPDCServer'], '[ERROR_CODE]'), 'MprAdminIsServiceRunning': (1, ['LPWSTR'], ['lpwsServerName'], 'BOOL'), 'MprAdminServerConnect': (2, ['LPWSTR', 'MPR_SERVER_HANDLE*'], ['lpwsServerName', 'phMprServer'], '[ERROR_CODE]'), 'MprAdminServerDisconnect': (1, ['MPR_SERVER_HANDLE'], ['hMprServer'], 'VOID'), 'MprAdminServerGetCredentials': (3, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE*'], ['hMprServer', 'dwLevel', 'lplpbBuffer'], '[ERROR_CODE]'), 'MprAdminServerSetCredentials': (3, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE'], ['hMprServer', 'dwLevel', 'lpbBuffer'], '[ERROR_CODE]'), 'MprAdminBufferFree': (1, ['LPVOID'], ['pBuffer'], '[ERROR_CODE]'), 'MprAdminGetErrorString': (2, ['DWORD', 'LPWSTR*'], ['dwError', 'lpwsErrorString'], '[ERROR_CODE]'), 'MprAdminServerGetInfo': (3, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE*'], ['hMprServer', 'dwLevel', 'lplpbBuffer'], '[ERROR_CODE]'), 'MprAdminServerSetInfo': (3, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE'], ['hMprServer', 'dwLevel', 'lpbBuffer'], '[ERROR_CODE]'), 'MprAdminEstablishDomainRasServer': (3, ['PWCHAR', 'PWCHAR', 'BOOL'], ['pszDomain', 'pszMachine', 'bEnable'], '[ERROR_CODE]'), 'MprAdminIsDomainRasServer': (3, ['PWCHAR', 'PWCHAR', 'PBOOL'], ['pszDomain', 'pszMachine', 'pbIsRasServer'], '[ERROR_CODE]'), 'MprAdminTransportCreate': (8, ['MPR_SERVER_HANDLE', 'DWORD', 'LPWSTR', 'LPBYTE', 'DWORD', 'LPBYTE', 'DWORD', 'LPWSTR'], ['hMprServer', 'dwTransportId', 'lpwsTransportName', 'pGlobalInfo', 'dwGlobalInfoSize', 'pClientInterfaceInfo', 'dwClientInterfaceInfoSize', 'lpwsDLLPath'], '[ERROR_CODE]'), 'MprAdminTransportSetInfo': (6, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE', 'DWORD', 'LPBYTE', 'DWORD'], ['hMprServer', 'dwTransportId', 'pGlobalInfo', 'dwGlobalInfoSize', 'pClientInterfaceInfo', 'dwClientInterfaceInfoSize'], '[ERROR_CODE]'), 'MprAdminTransportGetInfo': (6, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE*', 'LPDWORD', 'LPBYTE*', 'LPDWORD'], ['hMprServer', 'dwTransportId', 'ppGlobalInfo', 'lpdwGlobalInfoSize', 'ppClientInterfaceInfo', 'lpdwClientInterfaceInfoSize'], '[ERROR_CODE]'), 'MprAdminDeviceEnum': (4, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE*', 'LPDWORD'], ['hMprServer', 'dwLevel', 'lplpbBuffer', 'lpdwTotalEntries'], '[ERROR_CODE]'), 'MprAdminInterfaceGetHandle': (4, ['MPR_SERVER_HANDLE', 'LPWSTR', 'HANDLE*', 'BOOL'], ['hMprServer', 'lpwsInterfaceName', 'phInterface', 'fIncludeClientInterfaces'], '[ERROR_CODE]'), 'MprAdminInterfaceCreate': (4, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE', 'HANDLE*'], ['hMprServer', 'dwLevel', 'lpbBuffer', 'phInterface'], '[ERROR_CODE]'), 'MprAdminInterfaceGetInfo': (4, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'LPBYTE*'], ['hMprServer', 'hInterface', 'dwLevel', 'lplpbBuffer'], '[ERROR_CODE]'), 'MprAdminInterfaceSetInfo': (4, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'LPBYTE'], ['hMprServer', 'hInterface', 'dwLevel', 'lpbBuffer'], '[ERROR_CODE]'), 'MprAdminInterfaceDelete': (2, ['MPR_SERVER_HANDLE', 'HANDLE'], ['hMprServer', 'hInterface'], '[ERROR_CODE]'), 'MprAdminInterfaceDeviceGetInfo': (5, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'DWORD', 'LPBYTE*'], ['hMprServer', 'hInterface', 'dwIndex', 'dwLevel', 'lplpBuffer'], '[ERROR_CODE]'), 'MprAdminInterfaceDeviceSetInfo': (5, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'DWORD', 'LPBYTE'], ['hMprServer', 'hInterface', 'dwIndex', 'dwLevel', 'lplpBuffer'], '[ERROR_CODE]'), 'MprAdminInterfaceTransportRemove': (3, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD'], ['hMprServer', 'hInterface', 'dwTransportId'], '[ERROR_CODE]'), 'MprAdminInterfaceTransportAdd': (5, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'LPBYTE', 'DWORD'], ['hMprServer', 'hInterface', 'dwTransportId', 'pInterfaceInfo', 'dwInterfaceInfoSize'], '[ERROR_CODE]'), 'MprAdminInterfaceTransportGetInfo': (5, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'LPBYTE*', 'LPDWORD'], ['hMprServer', 'hInterface', 'dwTransportId', 'ppInterfaceInfo', 'lpdwpInterfaceInfoSize'], '[ERROR_CODE]'), 'MprAdminInterfaceTransportSetInfo': (5, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'LPBYTE', 'DWORD'], ['hMprServer', 'hInterface', 'dwTransportId', 'pInterfaceInfo', 'dwInterfaceInfoSize'], '[ERROR_CODE]'), 'MprAdminInterfaceEnum': (7, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hMprServer', 'dwLevel', 'lplpbBuffer', 'dwPrefMaxLen', 'lpdwEntriesRead', 'lpdwTotalEntries', 'lpdwResumeHandle'], '[ERROR_CODE]'), 'MprSetupIpInIpInterfaceFriendlyNameEnum': (3, ['PWCHAR', 'LPBYTE*', 'LPDWORD'], ['pwszMachineName', 'lplpBuffer', 'lpdwEntriesRead'], '[ERROR_CODE]'), 'MprSetupIpInIpInterfaceFriendlyNameFree': (1, ['LPVOID'], ['lpBuffer'], '[ERROR_CODE]'), 'MprSetupIpInIpInterfaceFriendlyNameCreate': (2, ['PWCHAR', 'PMPR_IPINIP_INTERFACE_0'], ['pwszMachineName', 'pNameInformation'], '[ERROR_CODE]'), 'MprSetupIpInIpInterfaceFriendlyNameDelete': (2, ['PWCHAR', 'GUID*'], ['pwszMachineName', 'pGuid'], '[ERROR_CODE]'), 'MprAdminInterfaceSetCredentials': (5, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'LPWSTR', 'LPWSTR'], ['lpwsServer', 'lpwsInterfaceName', 'lpwsUserName', 'lpwsDomainName', 'lpwsPassword'], '[ERROR_CODE]'), 'MprAdminInterfaceGetCredentials': (5, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'LPWSTR', 'LPWSTR'], ['lpwsServer', 'lpwsInterfaceName', 'lpwsUserName', 'lpwsPassword', 'lpwsDomainName'], '[ERROR_CODE]'), 'MprAdminInterfaceSetCredentialsEx': (4, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'LPBYTE'], ['hMprServer', 'hInterface', 'dwLevel', 'lpbBuffer'], '[ERROR_CODE]'), 'MprAdminInterfaceGetCredentialsEx': (4, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'LPBYTE*'], ['hMprServer', 'hInterface', 'dwLevel', 'lplpbBuffer'], '[ERROR_CODE]'), 'MprAdminInterfaceConnect': (4, ['MPR_SERVER_HANDLE', 'HANDLE', 'HANDLE', 'BOOL'], ['hMprServer', 'hInterface', 'hEvent', 'fSynchronous'], '[ERROR_CODE]'), 'MprAdminInterfaceDisconnect': (2, ['MPR_SERVER_HANDLE', 'HANDLE'], ['hMprServer', 'hInterface'], '[ERROR_CODE]'), 'MprAdminInterfaceUpdateRoutes': (4, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'HANDLE'], ['hMprServer', 'hInterface', 'dwProtocolId', 'hEvent'], '[ERROR_CODE]'), 'MprAdminInterfaceQueryUpdateResult': (4, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'LPDWORD'], ['hMprServer', 'hInterface', 'dwProtocolId', 'lpdwUpdateResult'], '[ERROR_CODE]'), 'MprAdminInterfaceUpdatePhonebookInfo': (2, ['MPR_SERVER_HANDLE', 'HANDLE'], ['hMprServer', 'hInterface'], '[ERROR_CODE]'), 'MprAdminRegisterConnectionNotification': (2, ['MPR_SERVER_HANDLE', 'HANDLE'], ['hMprServer', 'hEventNotification'], '[ERROR_CODE]'), 'MprAdminDeregisterConnectionNotification': (2, ['MPR_SERVER_HANDLE', 'HANDLE'], ['hMprServer', 'hEventNotification'], '[ERROR_CODE]'), 'MprAdminMIBServerConnect': (2, ['LPWSTR', 'MIB_SERVER_HANDLE*'], ['lpwsServerName', 'phMibServer'], '[ERROR_CODE]'), 'MprAdminMIBServerDisconnect': (1, ['MIB_SERVER_HANDLE'], ['hMibServer'], 'VOID'), 'MprAdminMIBEntryCreate': (5, ['MIB_SERVER_HANDLE', 'DWORD', 'DWORD', 'LPVOID', 'DWORD'], ['hMibServer', 'dwPid', 'dwRoutingPid', 'lpEntry', 'dwEntrySize'], '[ERROR_CODE]'), 'MprAdminMIBEntryDelete': (5, ['MIB_SERVER_HANDLE', 'DWORD', 'DWORD', 'LPVOID', 'DWORD'], ['hMibServer', 'dwProtocolId', 'dwRoutingPid', 'lpEntry', 'dwEntrySize'], '[ERROR_CODE]'), 'MprAdminMIBEntrySet': (5, ['MIB_SERVER_HANDLE', 'DWORD', 'DWORD', 'LPVOID', 'DWORD'], ['hMibServer', 'dwProtocolId', 'dwRoutingPid', 'lpEntry', 'dwEntrySize'], '[ERROR_CODE]'), 'MprAdminMIBEntryGet': (7, ['MIB_SERVER_HANDLE', 'DWORD', 'DWORD', 'LPVOID', 'DWORD', 'LPVOID*', 'LPDWORD'], ['hMibServer', 'dwProtocolId', 'dwRoutingPid', 'lpInEntry', 'dwInEntrySize', 'lplpOutEntry', 'lpOutEntrySize'], '[ERROR_CODE]'), 'MprAdminMIBEntryGetFirst': (7, ['MIB_SERVER_HANDLE', 'DWORD', 'DWORD', 'LPVOID', 'DWORD', 'LPVOID*', 'LPDWORD'], ['hMibServer', 'dwProtocolId', 'dwRoutingPid', 'lpInEntry', 'dwInEntrySize', 'lplpOutEntry', 'lpOutEntrySize'], '[ERROR_CODE]'), 'MprAdminMIBEntryGetNext': (7, ['MIB_SERVER_HANDLE', 'DWORD', 'DWORD', 'LPVOID', 'DWORD', 'LPVOID*', 'LPDWORD'], ['hMibServer', 'dwProtocolId', 'dwRoutingPid', 'lpInEntry', 'dwInEntrySize', 'lplpOutEntry', 'lpOutEntrySize'], '[ERROR_CODE]'), 'MprAdminMIBGetTrapInfo': (7, ['MIB_SERVER_HANDLE', 'DWORD', 'DWORD', 'LPVOID', 'DWORD', 'LPVOID*', 'LPDWORD'], ['hMibServer', 'dwProtocolId', 'dwRoutingPid', 'lpInData', 'dwInDataSize', 'lplpOutData', 'lpOutDataSize'], '[ERROR_CODE]'), 'MprAdminMIBSetTrapInfo': (7, ['DWORD', 'DWORD', 'HANDLE', 'LPVOID', 'DWORD', 'LPVOID*', 'LPDWORD'], ['dwProtocolId', 'dwRoutingPid', 'hEvent', 'lpInData', 'dwInDataSize', 'lplpOutData', 'lpOutDataSize'], '[ERROR_CODE]'), 'MprAdminMIBBufferFree': (1, ['LPVOID'], ['pBuffer'], '[ERROR_CODE]'), 'MprConfigServerInstall': (2, ['DWORD', 'PVOID'], ['dwLevel', 'pBuffer'], '[ERROR_CODE]'), 'MprConfigServerConnect': (2, ['LPWSTR', 'HANDLE*'], ['lpwsServerName', 'phMprConfig'], '[ERROR_CODE]'), 'MprConfigServerDisconnect': (1, ['HANDLE'], ['hMprConfig'], 'VOID'), 'MprConfigServerRefresh': (1, ['HANDLE'], ['hMprConfig'], '[ERROR_CODE]'), 'MprConfigBufferFree': (1, ['LPVOID'], ['pBuffer'], '[ERROR_CODE]'), 'MprConfigServerGetInfo': (3, ['HANDLE', 'DWORD', 'LPBYTE*'], ['hMprConfig', 'dwLevel', 'lplpbBuffer'], '[ERROR_CODE]'), 'MprConfigServerSetInfo': (3, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE'], ['hMprServer', 'dwLevel', 'lpbBuffer'], '[ERROR_CODE]'), 'MprConfigServerBackup': (2, ['HANDLE', 'LPWSTR'], ['hMprConfig', 'lpwsPath'], '[ERROR_CODE]'), 'MprConfigServerRestore': (2, ['HANDLE', 'LPWSTR'], ['hMprConfig', 'lpwsPath'], '[ERROR_CODE]'), 'MprConfigTransportCreate': (9, ['HANDLE', 'DWORD', 'LPWSTR', 'LPBYTE', 'DWORD', 'LPBYTE', 'DWORD', 'LPWSTR', 'HANDLE*'], ['hMprConfig', 'dwTransportId', 'lpwsTransportName', 'pGlobalInfo', 'dwGlobalInfoSize', 'pClientInterfaceInfo', 'dwClientInterfaceInfoSize', 'lpwsDLLPath', 'phRouterTransport'], '[ERROR_CODE]'), 'MprConfigTransportDelete': (2, ['HANDLE', 'HANDLE'], ['hMprConfig', 'hRouterTransport'], '[ERROR_CODE]'), 'MprConfigTransportGetHandle': (3, ['HANDLE', 'DWORD', 'HANDLE*'], ['hMprConfig', 'dwTransportId', 'phRouterTransport'], '[ERROR_CODE]'), 'MprConfigTransportSetInfo': (7, ['HANDLE', 'HANDLE', 'LPBYTE', 'DWORD', 'LPBYTE', 'DWORD', 'LPWSTR'], ['hMprConfig', 'hRouterTransport', 'pGlobalInfo', 'dwGlobalInfoSize', 'pClientInterfaceInfo', 'dwClientInterfaceInfoSize', 'lpwsDLLPath'], '[ERROR_CODE]'), 'MprConfigTransportGetInfo': (7, ['HANDLE', 'HANDLE', 'LPBYTE*', 'LPDWORD', 'LPBYTE*', 'LPDWORD', 'LPWSTR*'], ['hMprConfig', 'hRouterTransport', 'ppGlobalInfo', 'lpdwGlobalInfoSize', 'ppClientInterfaceInfo', 'lpdwClientInterfaceInfoSize', 'lplpwsDLLPath'], '[ERROR_CODE]'), 'MprConfigTransportEnum': (7, ['HANDLE', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hMprConfig', 'dwLevel', 'lplpBuffer', 'dwPrefMaxLen', 'lpdwEntriesRead', 'lpdwTotalEntries', 'lpdwResumeHandle'], '[ERROR_CODE]'), 'MprConfigInterfaceCreate': (4, ['HANDLE', 'DWORD', 'LPBYTE', 'HANDLE*'], ['hMprConfig', 'dwLevel', 'lpbBuffer', 'phRouterInterface'], '[ERROR_CODE]'), 'MprConfigInterfaceDelete': (2, ['HANDLE', 'HANDLE'], ['hMprConfig', 'hRouterInterface'], '[ERROR_CODE]'), 'MprConfigInterfaceGetHandle': (3, ['HANDLE', 'LPWSTR', 'HANDLE*'], ['hMprConfig', 'lpwsInterfaceName', 'phRouterInterface'], '[ERROR_CODE]'), 'MprConfigInterfaceGetInfo': (5, ['HANDLE', 'HANDLE', 'DWORD', 'LPBYTE*', 'LPDWORD'], ['hMprConfig', 'hRouterInterface', 'dwLevel', 'lplpBuffer', 'lpdwBufferSize'], '[ERROR_CODE]'), 'MprConfigInterfaceSetInfo': (4, ['HANDLE', 'HANDLE', 'DWORD', 'LPBYTE'], ['hMprConfig', 'hRouterInterface', 'dwLevel', 'lpbBuffer'], '[ERROR_CODE]'), 'MprConfigInterfaceEnum': (7, ['HANDLE', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hMprConfig', 'dwLevel', 'lplpBuffer', 'dwPrefMaxLen', 'lpdwEntriesRead', 'lpdwTotalEntries', 'lpdwResumeHandle'], '[ERROR_CODE]'), 'MprConfigInterfaceTransportAdd': (7, ['HANDLE', 'HANDLE', 'DWORD', 'LPWSTR', 'LPBYTE', 'DWORD', 'HANDLE*'], ['hMprConfig', 'hRouterInterface', 'dwTransportId', 'lpwsTransportName', 'pInterfaceInfo', 'dwInterfaceInfoSize', 'phRouterIfTransport'], '[ERROR_CODE]'), 'MprConfigInterfaceTransportRemove': (3, ['HANDLE', 'HANDLE', 'HANDLE'], ['hMprConfig', 'hRouterInterface', 'hRouterIfTransport'], '[ERROR_CODE]'), 'MprConfigInterfaceTransportGetHandle': (4, ['HANDLE', 'HANDLE', 'DWORD', 'HANDLE*'], ['hMprConfig', 'hRouterInterface', 'dwTransportId', 'phRouterIfTransport'], '[ERROR_CODE]'), 'MprConfigInterfaceTransportGetInfo': (5, ['HANDLE', 'HANDLE', 'HANDLE', 'LPBYTE*', 'LPDWORD'], ['hMprConfig', 'hRouterInterface', 'hRouterIfTransport', 'ppInterfaceInfo', 'lpdwInterfaceInfoSize'], '[ERROR_CODE]'), 'MprConfigInterfaceTransportSetInfo': (5, ['HANDLE', 'HANDLE', 'HANDLE', 'LPBYTE', 'DWORD'], ['hMprConfig', 'hRouterInterface', 'hRouterIfTransport', 'pInterfaceInfo', 'dwInterfaceInfoSize'], '[ERROR_CODE]'), 'MprConfigInterfaceTransportEnum': (8, ['HANDLE', 'HANDLE', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hMprConfig', 'hRouterInterface', 'dwLevel', 'lplpBuffer', 'dwPrefMaxLen', 'lpdwEntriesRead', 'lpdwTotalEntries', 'lpdwResumeHandle'], '[ERROR_CODE]'), 'MprConfigGetFriendlyName': (4, ['HANDLE', 'PWCHAR', 'PWCHAR', 'DWORD'], ['hMprConfig', 'pszGuidName', 'pszBuffer', 'dwBufferSize'], '[ERROR_CODE]'), 'MprConfigGetGuidName': (4, ['HANDLE', 'PWCHAR', 'PWCHAR', 'DWORD'], ['hMprConfig', 'pszFriendlyName', 'pszBuffer', 'dwBufferSize'], '[ERROR_CODE]'), 'MprConfigFilterGetInfo': (3, ['HANDLE', 'DWORD', 'LPBYTE'], ['hMprConfig', 'dwLevel', 'lpBuffer'], '[ERROR_CODE]'), 'MprConfigFilterSetInfo': (3, ['HANDLE', 'DWORD', 'LPBYTE'], ['hMprConfig', 'dwLevel', 'lpBuffer'], '[ERROR_CODE]'), 'MprInfoCreate': (2, ['DWORD', 'LPVOID*'], ['dwVersion', 'lplpNewHeader'], '[ERROR_CODE]'), 'MprInfoDelete': (1, ['LPVOID'], ['lpHeader'], '[ERROR_CODE]'), 'MprInfoRemoveAll': (2, ['LPVOID', 'LPVOID*'], ['lpHeader', 'lplpNewHeader'], '[ERROR_CODE]'), 'MprInfoDuplicate': (2, ['LPVOID', 'LPVOID*'], ['lpHeader', 'lplpNewHeader'], '[ERROR_CODE]'), 'MprInfoBlockAdd': (6, ['LPVOID', 'DWORD', 'DWORD', 'DWORD', 'LPBYTE', 'LPVOID*'], ['lpHeader', 'dwInfoType', 'dwItemSize', 'dwItemCount', 'lpItemData', 'lplpNewHeader'], '[ERROR_CODE]'), 'MprInfoBlockRemove': (3, ['LPVOID', 'DWORD', 'LPVOID*'], ['lpHeader', 'dwInfoType', 'lplpNewHeader'], '[ERROR_CODE]'), 'MprInfoBlockSet': (6, ['LPVOID', 'DWORD', 'DWORD', 'DWORD', 'LPBYTE', 'LPVOID*'], ['lpHeader', 'dwInfoType', 'dwItemSize', 'dwItemCount', 'lpItemData', 'lplpNewHeader'], '[ERROR_CODE]'), 'MprInfoBlockFind': (5, ['LPVOID', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPBYTE*'], ['lpHeader', 'dwInfoType', 'lpdwItemSize', 'lpdwItemCount', 'lplpItemData'], '[ERROR_CODE]'), 'MprInfoBlockQuerySize': (1, ['LPVOID'], ['lpHeader'], 'DWORD')}

dict5_msi = {'MsiSetInternalUI': (2, ['INSTALLUILEVEL', 'HWND*'], ['dwUILevel', 'phWnd'], 'INSTALLUILEVEL'), 'MsiSetExternalUI': (3, ['INSTALLUI_HANDLER', 'MSIINSTALLLOGMODE', 'LPVOID'], ['puiHandler', 'dwMessageFilter', 'pvContext'], 'INSTALLUI_HANDLER'), 'MsiSetExternalUIRecord': (4, ['PINSTALLUI_HANDLER_RECORD', 'MSIINSTALLLOGMODE', 'LPVOID', 'PINSTALLUI_HANDLER_RECORD'], ['puiHandler', 'dwMessageFilter', 'pvContext', 'ppuiPrevHandler'], '[MSI_ERROR]'), 'MsiEnableLog': (3, ['MSIINSTALLLOGMODE', 'LPCTSTR', 'MSIINSTALLLOGATTRIBUTES'], ['dwLogMode', 'szLogFile', 'dwLogAttributes'], '[MSI_ERROR]'), 'MsiCloseHandle': (1, ['MSIHANDLE'], ['hAny'], '[MSI_ERROR]'), 'MsiCloseAllHandles': (0, [], [], 'UINT'), 'MsiAdvertiseProduct': (4, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LANGID'], ['szPackagePath', 'szScriptfilePath', 'szTransforms', 'lgidLanguage'], '[MSI_ERROR]'), 'MsiAdvertiseProductEx': (6, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LANGID', 'MSIARCHFLAGS', 'MSIADOPTIONS'], ['szPackagePath', 'szScriptfilePath', 'szTransforms', 'lgidLanguage', 'dwPlatform', 'dwOptions'], '[MSI_ERROR]'), 'MsiAdvertiseScript': (4, ['LPCTSTR', 'MSISCRIPTFLAGS', 'PHKEY', 'BOOL'], ['szScriptFile', 'dwFlags', 'phRegData', 'fRemoveItems'], '[MSI_ERROR]'), 'MsiInstallProduct': (2, ['LPCTSTR', 'LPCTSTR'], ['szPackagePath', 'szCommandLine'], '[MSI_ERROR]'), 'MsiConfigureProduct': (3, ['LPCTSTR', 'MSIINSTALLLEVEL', 'INSTALLSTATE'], ['szProduct', 'iInstallLevel', 'eInstallState'], '[MSI_ERROR]'), 'MsiConfigureProductEx': (4, ['LPCTSTR', 'MSIINSTALLLEVEL', 'INSTALLSTATE', 'LPCTSTR'], ['szProduct', 'iInstallLevel', 'eInstallState', 'szCommandLine'], '[MSI_ERROR]'), 'MsiReinstallProduct': (2, ['LPCTSTR', 'MSIREINSTALLMODE'], ['szProduct', 'dwReinstallMode'], '[MSI_ERROR]'), 'MsiConfigureFeature': (3, ['LPCTSTR', 'LPCTSTR', 'INSTALLSTATE'], ['szProduct', 'szFeature', 'eInstallState'], '[MSI_ERROR]'), 'MsiReinstallFeature': (3, ['LPCTSTR', 'LPCTSTR', 'MSIREINSTALLMODE'], ['szProduct', 'szFeature', 'dwReinstallMode'], '[MSI_ERROR]'), 'MsiInstallMissingComponent': (3, ['LPCTSTR', 'LPCTSTR', 'INSTALLSTATE'], ['szProduct', 'szComponent', 'eInstallState'], '[MSI_ERROR]'), 'MsiInstallMissingFile': (2, ['LPCTSTR', 'LPCTSTR'], ['szProduct', 'szFile'], '[MSI_ERROR]'), 'MsiNotifySidChange': (2, ['LPCTSTR', 'LPCTSTR'], ['szOldSid', 'szNewSid'], '[MSI_ERROR]'), 'MsiProcessAdvertiseScript': (5, ['LPCTSTR', 'LPCTSTR', 'HKEY', 'BOOL', 'BOOL'], ['szScriptFile', 'szIconFolder', 'hRegData', 'fShortcuts', 'fRemoveItems'], '[MSI_ERROR]'), 'MsiSourceListAddSource': (4, ['LPCTSTR', 'LPCTSTR', 'DWORD', 'LPCTSTR'], ['szProduct', 'szUserName', 'dwReserved', 'szSource'], '[MSI_ERROR]'), 'MsiSourceListAddSourceEx': (6, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'MSISOURCETYPE', 'LPCTSTR', 'DWORD'], ['szProductCodeOrPatchCode', 'szUserSid', 'dwContext', 'dwOptions', 'szSource', 'dwIndex'], '[MSI_ERROR]'), 'MsiSourceListClearSource': (5, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'MSISOURCETYPE', 'LPCTSTR'], ['szProductCodeOrPatchCode', 'szUserSid', 'dwContext', 'dwOptions', 'szSource'], '[MSI_ERROR]'), 'MsiSourceListClearAll': (3, ['LPCTSTR', 'LPCTSTR', 'DWORD'], ['szProduct', 'szUserName', 'dwReserved'], '[MSI_ERROR]'), 'MsiSourceListClearAllEx': (4, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'MSISOURCETYPE'], ['szProductCodeOrPatchCode', 'szUserSid', 'dwContext', 'dwOptions'], '[MSI_ERROR]'), 'MsiSourceListForceResolution': (3, ['LPCTSTR', 'LPCTSTR', 'DWORD'], ['szProduct', 'szUserName', 'dwReserved'], '[MSI_ERROR]'), 'MsiSourceListForceResolutionEx': (4, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'MSICODE'], ['szProductCodeOrPatchCode', 'szUserSid', 'dwContext', 'dwOptions'], '[MSI_ERROR]'), 'MsiSourceListGetInfo': (7, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'MSICODE', 'LPCTSTR', 'LPTSTR', 'LPDWORD'], ['szProductCodeOrPatchCode', 'szUserSid', 'dwContext', 'dwOptions', 'szProperty', 'szValue', 'pcchValue'], '[MSI_ERROR]'), 'MsiSourceListSetInfo': (6, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'MSISOURCETYPE', 'LPCTSTR', 'LPCTSTR'], ['szProductCodeOrPatchCode', 'szUserSid', 'dwContext', 'dwOptions', 'szProperty', 'szValue'], '[MSI_ERROR]'), 'MsiSourceListEnumMediaDisks': (10, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'MSICODE', 'DWORD', 'LPWORD', 'LPTSTR', 'LPDWORD', 'LPTSTR', 'LPDWORD'], ['szProductCodeOrPatchCode', 'szUserSID', 'dwContext', 'dwOptions', 'dwIndex', 'pdwDiskId', 'szVolumeLabel', 'pcchVolumeLabel', 'szDiskPrompt', 'pcchDiskPrompt'], '[MSI_ERROR]'), 'MsiSourceListAddMediaDisk': (7, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'MSICODE', 'DWORD', 'LPCTSTR', 'LPCTSTR'], ['szProductCodeOrPatchCode', 'szUserSid', 'dwContext', 'dwOptions', 'dwDiskId', 'szVolumeLabel', 'szDiskPrompt'], '[MSI_ERROR]'), 'MsiSourceListClearMediaDisk': (5, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'MSICODE', 'DWORD'], ['szProductCodeOrPatchCode', 'szUserSid', 'dwContext', 'dwOptions', 'dwDiskID'], '[MSI_ERROR]'), 'MsiSourceListEnumSources': (7, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'MSISOURCETYPE', 'DWORD', 'LPTSTR', 'LPDWORD'], ['szProductCodeOrPatchCode', 'szUserSid', 'dwContext', 'dwOptions', 'dwIndex', 'szSource', 'pcchSource'], '[MSI_ERROR]'), 'MsiProvideAssembly': (6, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLMODE', 'MSIASSEMBLYINFO', 'LPTSTR', 'DWORD*'], ['szAssemblyName', 'szAppContext', 'dwInstallMode', 'dwAssemblyInfo', 'lpPathBuf', 'pcchPathBuf'], '[MSI_ERROR]'), 'MsiProvideComponent': (6, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'MSIINSTALLMODE', 'LPTSTR', 'DWORD*'], ['szProduct', 'szFeature', 'szComponent', 'dwInstallMode', 'lpPathBuf', 'pcchPathBuf'], '[MSI_ERROR]'), 'MsiProvideQualifiedComponent': (5, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLMODE', 'LPTSTR', 'DWORD*'], ['szComponent', 'szQualifier', 'dwInstallMode', 'lpPathBuf', 'pcchPathBuf'], '[MSI_ERROR]'), 'MsiProvideQualifiedComponentEx': (8, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLMODE', 'LPTSTR', 'DWORD', 'DWORD', 'LPTSTR', 'DWORD*'], ['szComponent', 'szQualifier', 'dwInstallMode', 'szProduct', 'dwUnused1', 'dwUnused2', 'lpPathBuf', 'pcchPathBuf'], '[MSI_ERROR]'), 'MsiGetComponentPath': (4, ['LPCTSTR', 'LPCTSTR', 'LPTSTR', 'DWORD*'], ['szProduct', 'szComponent', 'lpPathBuf', 'pcchBuf'], 'INSTALLSTATE'), 'MsiGetComponentPathEx': (6, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'LPTSTR', 'LPDWORD'], ['szProductCode', 'szComponentCode', 'szUserSid', 'dwContext', 'szPathBuf', 'pcchBuf'], 'INSTALLSTATE'), 'MsiLocateComponent': (3, ['LPCTSTR', 'LPTSTR', 'DWORD*'], ['szComponent', 'lpPathBuf', 'pcchBuf'], 'INSTALLSTATE'), 'MsiQueryComponentState': (5, ['LPTSTR', 'LPTSTR', 'MSIINSTALLCONTEXT', 'LPCTSTR', 'INSTALLSTATE*'], ['szProductCode', 'szUserSid', 'dwContext', 'szComponent', 'pdwState'], '[MSI_ERROR]'), 'MsiCollectUserInfo': (1, ['LPCTSTR'], ['szProduct'], '[MSI_ERROR]'), 'MsiUseFeature': (2, ['LPCTSTR', 'LPCTSTR'], ['szProduct', 'szFeature'], 'INSTALLSTATE'), 'MsiUseFeatureEx': (4, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLMODE', 'DWORD'], ['szProduct', 'szFeature', 'dwInstallMode', 'dwReserved'], 'INSTALLSTATE'), 'MsiGetProductCode': (2, ['LPCTSTR', 'LPTSTR'], ['szComponent', 'lpProductBuf'], '[MSI_ERROR]'), 'MsiEnumProducts': (2, ['DWORD', 'LPTSTR'], ['iProductIndex', 'lpProductBuf'], '[MSI_ERROR]'), 'MsiEnumProductsEx': (8, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'DWORD', 'TCHAR 39', 'MSIINSTALLCONTEXT*', 'LPTSTR', 'LPDWORD'], ['szProductCode', 'szUserSid', 'dwContext', 'dwIndex', 'szInstalledProductCode', 'pdwInstalledContext', 'szSid', 'pcchSid'], '[MSI_ERROR]'), 'MsiEnumRelatedProducts': (4, ['LPCTSTR', 'DWORD', 'DWORD', 'LPTSTR'], ['lpUpgradeCode', 'dwReserved', 'iProductIndex', 'lpProductBuf'], '[MSI_ERROR]'), 'MsiEnumFeatures': (4, ['LPCTSTR', 'DWORD', 'LPTSTR', 'LPTSTR'], ['szProduct', 'iFeatureIndex', 'lpFeatureBuf', 'lpParentBuf'], '[MSI_ERROR]'), 'MsiEnumComponents': (2, ['DWORD', 'LPTSTR'], ['iComponentIndex', 'lpComponentBuf'], '[MSI_ERROR]'), 'MsiEnumComponentsEx': (7, ['LPCTSTR', 'MSIINSTALLCONTEXT', 'DWORD', 'TCHAR 39', 'MSIINSTALLCONTEXT*', 'LPTSTR', 'LPDWORD'], ['szUserSid', 'dwContext', 'dwIndex', 'szInstalledComponentCode', 'pdwInstalledContext', 'szSid', 'pcchSid'], '[MSI_ERROR]'), 'MsiEnumClients': (3, ['LPCTSTR', 'DWORD', 'LPTSTR'], ['szComponent', 'iProductIndex', 'lpProductBuf'], '[MSI_ERROR]'), 'MsiEnumClientsEx': (8, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'DWORD', 'TCHAR 39', 'MSIINSTALLCONTEXT*', 'LPTSTR', 'LPDWORD'], ['szComponent', 'szUserSid', 'dwContext', 'dwProductIndex', 'szProductBuf', 'pdwInstalledContext', 'szSid', 'pcchSid'], '[MSI_ERROR]'), 'MsiEnumComponentQualifiers': (6, ['LPTSTR', 'DWORD', 'LPTSTR', 'DWORD*', 'LPTSTR', 'DWORD*'], ['szComponent', 'iIndex', 'lpQualifierBuf', 'pcchQualifierBuf', 'lpApplicationDataBuf', 'pcchApplicationDataBuf'], '[MSI_ERROR]'), 'MsiQueryFeatureState': (2, ['LPCTSTR', 'LPCTSTR'], ['szProduct', 'szFeature'], 'INSTALLSTATE'), 'MsiQueryFeatureStateEx': (5, ['LPTSTR', 'LPTSTR', 'MSIINSTALLCONTEXT', 'LPCTSTR', 'INSTALLSTATE*'], ['szProductCode', 'szUserSid', 'dwContext', 'szFeature', 'pdwState'], '[MSI_ERROR]'), 'MsiQueryProductState': (1, ['LPCTSTR'], ['szProduct'], 'INSTALLSTATE'), 'MsiGetFeatureUsage': (4, ['LPCTSTR', 'LPCTSTR', 'DWORD*', 'WORD*'], ['szProduct', 'szFeature', 'pdwUseCount', 'pwDateUsed'], '[MSI_ERROR]'), 'MsiGetProductInfo': (4, ['LPCTSTR', 'LPCTSTR', 'LPTSTR', 'DWORD*'], ['szProduct', 'szProperty', 'lpValueBuf', 'pcchValueBuf'], '[MSI_ERROR]'), 'MsiGetProductInfoEx': (6, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'LPCTSTR', 'LPTSTR', 'LPDWORD'], ['szProductCode', 'szUserSid', 'dwContext', 'szProperty', 'lpValue', 'pcchValue'], '[MSI_ERROR]'), 'MsiGetUserInfo': (7, ['LPCTSTR', 'LPTSTR', 'DWORD*', 'LPTSTR', 'DWORD*', 'LPTSTR', 'DWORD*'], ['szProduct', 'lpUserNameBuf', 'pcchUserNameBuf', 'lpOrgNameBuf', 'pcchOrgNameBuf', 'lpSerialBuf', 'pcchSerialBuf'], 'USERINFOSTATE'), 'MsiOpenProduct': (2, ['LPCTSTR', 'MSIHANDLE*'], ['szProduct', 'hProduct'], '[MSI_ERROR]'), 'MsiOpenPackage': (2, ['LPCTSTR', 'MSIHANDLE*'], ['szPackagePath', 'hProduct'], '[MSI_ERROR]'), 'MsiOpenPackageEx': (3, ['LPCTSTR', 'MSIOPENPACKAGEFLAGS', 'MSIHANDLE*'], ['szPackagePath', 'dwOptions', 'hProduct'], '[MSI_ERROR]'), 'MsiIsProductElevated': (2, ['LPCTSTR', 'BOOL*'], ['szProductCode', 'pfElevated'], '[MSI_ERROR]'), 'MsiGetProductInfoFromScript': (8, ['LPCTSTR', 'LPTSTR', 'LANGID*', 'DWORD*', 'LPTSTR', 'DWORD*', 'LPTSTR', 'DWORD*'], ['szScriptFile', 'lpProductBuf39', 'plgidLanguage', 'pdwVersion', 'lpNameBuf', 'pcchNameBuf', 'lpPackageBuf', 'pcchPackageBuf'], '[MSI_ERROR]'), 'MsiGetProductProperty': (4, ['MSIHANDLE', 'LPCTSTR', 'LPTSTR', 'DWORD*'], ['hProduct', 'szProperty', 'lpValueBuf', 'pcchValueBuf'], '[MSI_ERROR]'), 'MsiGetShortcutTarget': (4, ['LPCTSTR', 'LPTSTR', 'LPTSTR', 'LPTSTR'], ['szShortcutTarget', 'szProductCode', 'szFeatureId', 'szComponentCode'], '[MSI_ERROR]'), 'MsiGetFeatureInfo': (7, ['MSIHANDLE', 'LPCTSTR', 'MSIINSTALLFEATUREATTR*', 'LPTSTR', 'LPDWORD', 'LPTSTR', 'LPDWORD'], ['hProduct', 'szFeature', 'lpAttributes', 'lpTitleBuf', 'pcchTitleBuf', 'lpHelpBuf', 'pcchHelpBuf'], '[MSI_ERROR]'), 'MsiVerifyPackage': (1, ['LPCTSTR'], ['szPackagePath'], '[MSI_ERROR]'), 'MsiApplyPatch': (4, ['LPCTSTR', 'LPCTSTR', 'INSTALLTYPE', 'LPCTSTR'], ['szPatchPackage', 'szInstallPackage', 'eInstallType', 'szCommandLine'], '[MSI_ERROR]'), 'MsiEnumPatches': (5, ['LPCTSTR', 'DWORD', 'LPTSTR', 'LPTSTR', 'DWORD*'], ['szProduct', 'iPatchIndex', 'lpPatchBuf', 'lpTransformsBuf', 'pcchTransformsBuf'], '[MSI_ERROR]'), 'MsiGetPatchInfo': (4, ['LPCTSTR', 'LPCTSTR', 'LPTSTR', 'DWORD*'], ['szPatch', 'szAttribute', 'lpValueBuf', 'pcchValueBuf'], '[MSI_ERROR]'), 'MsiRemovePatches': (4, ['LPCTSTR', 'LPCTSTR', 'INSTALLTYPE', 'LPCTSTR'], ['szPatchList', 'szProductCode', 'eUninstallType', 'szPropertyList'], '[MSI_ERROR]'), 'MsiDeterminePatchSequence': (5, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'DWORD', 'PMSIPATCHSEQUENCEINFO'], ['szProductCode', 'szUserSid', 'dwContext', 'cPatchInfo', 'pPatchInfo'], '[MSI_ERROR]'), 'MsiApplyMultiplePatches': (3, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR'], ['szPatchPackages', 'szProductCode', 'szPropertiesList'], '[MSI_ERROR]'), 'MsiEnumPatchesEx': (10, ['LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'MSIPATCHSTATE', 'DWORD', 'TCHAR 39', 'TCHAR 39', 'MSIINSTALLCONTEXT*', 'LPTSTR', 'LPDWORD'], ['szProductCode', 'szUserSid', 'dwContext', 'dwFilter', 'dwIndex', 'szPatchCode', 'szTargetProductCode', 'pdwTargetProductContext', 'szTargetUserSid', 'pcchTargetUserSid'], '[MSI_ERROR]'), 'MsiGetPatchFileList': (4, ['LPCTSTR', 'LPCTSTR', 'LPDWORD', 'MSIHANDLE**'], ['szProductCode', 'szPatchList', 'pcFiles', 'pphFileRecords'], '[MSI_ERROR]'), 'MsiGetPatchInfoEx': (7, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'MSIINSTALLCONTEXT', 'LPCTSTR', 'LPTSTR', 'DWORD*'], ['szPatchCode', 'szProductCode', 'szUserSid', 'dwContext', 'szProperty', 'lpValue', 'pcchValue'], '[MSI_ERROR]'), 'MsiExtractPatchXMLData': (4, ['LPCTSTR', 'DWORD', 'LPTSTR', 'DWORD*'], ['szPatchPath', 'dwReserved', 'szXMLData', 'pcchXMLData'], '[MSI_ERROR]'), 'MsiDetermineApplicablePatches': (3, ['LPCTSTR', 'DWORD', 'PMSIPATCHSEQUENCEINFO'], ['szProductPackagePath', 'cPatchInfo', 'pPatchInfo'], '[MSI_ERROR]'), 'MsiGetFileHash': (3, ['LPCTSTR', 'DWORD', 'PMSIFILEHASHINFO'], ['szFilePath', 'dwOptions', 'pHash'], '[MSI_ERROR]'), 'MsiGetFileSignatureInformation': (5, ['LPCTSTR', 'MSIHASHFLAGS', 'PCCERT_CONTEXT*', 'BYTE*', 'DWORD*'], ['szSignedObjectPath', 'dwFlags', 'ppcCertContext', 'pbHashData', 'pcbHashData'], 'HRESULT'), 'MsiGetFileVersion': (5, ['LPCTSTR', 'LPTSTR', 'DWORD*', 'LPTSTR', 'DWORD*'], ['szFilePath', 'lpVersionBuf', 'pcchVersionBuf', 'lpLangBuf', 'pcchLangBuf'], '[MSI_ERROR]'), 'MsiBeginTransaction': (4, ['LPCWSTR', 'MSITRANSACTIONATTRIBUTES', 'MSIHANDLE*', 'HANDLE*'], ['szTransactionName', 'dwTransactionAttributes', 'hTransactionID', 'phChangeOfOwnerEvent'], '[MSI_ERROR]'), 'MsiJoinTransaction': (3, ['MSIHANDLE', 'MSITRANSACTIONATTRIBUTES', 'HANDLE*'], ['hTransactionID', 'dwTransactionAttributes', 'phChangeOfOwnerEvent'], '[MSI_ERROR]'), 'MsiEndTransaction': (1, ['MSITRANSACTIONSTATE'], ['dwTransactionState'], '[MSI_ERROR]'), 'MsiDatabaseCommit': (1, ['MSIHANDLE'], ['hDatabase'], '[MSI_ERROR]'), 'MsiDatabaseGetPrimaryKeys': (3, ['MSIHANDLE', 'LPCTSTR', 'MSIHANDLE*'], ['hDatabase', 'szTableName', 'phRecord'], '[MSI_ERROR]'), 'MsiDatabaseIsTablePersistent': (2, ['MSIHANDLE', 'LPCTSTR'], ['hDatabase', 'szTableName'], 'MSICONDITION'), 'MsiDatabaseOpenView': (3, ['MSIHANDLE', 'LPCTSTR', 'MSIHANDLE*'], ['hDatabase', 'szQuery', 'phView'], '[MSI_ERROR]'), 'MsiGetActiveDatabase': (1, ['MSIHANDLE'], ['hInstall'], 'MSIHANDLE'), 'MsiViewGetColumnInfo': (3, ['MSIHANDLE', 'MSICOLINFO', 'MSIHANDLE*'], ['hView', 'eColumnInfo', 'phRecord'], '[MSI_ERROR]'), 'MsiOpenDatabase': (3, ['LPCTSTR', 'LPCTSTR', 'MSIHANDLE*'], ['szDatabasePath', 'szPersist', 'phDatabase'], '[MSI_ERROR]'), 'MsiViewClose': (1, ['MSIHANDLE'], ['hView'], '[MSI_ERROR]'), 'MsiViewExecute': (2, ['MSIHANDLE', 'MSIHANDLE'], ['hView', 'hRecord'], '[MSI_ERROR]'), 'MsiViewFetch': (2, ['MSIHANDLE', 'MSIHANDLE*'], ['hView', 'phRecord'], '[MSI_ERROR]'), 'MsiViewGetError': (3, ['MSIHANDLE', 'LPTSTR', 'DWORD*'], ['hView', 'szColumnNameBuffer', 'pcchBuf'], 'MSIDBERROR'), 'MsiViewModify': (3, ['MSIHANDLE', 'MSIMODIFY', 'MSIHANDLE'], ['hView', 'eModifyMode', 'hRecord'], '[MSI_ERROR]'), 'MsiCreateTransformSummaryInfo': (5, ['MSIHANDLE', 'MSIHANDLE', 'LPCTSTR', 'MSITRANSFORM_ERROR', 'MSITRANSFORM_VALIDATE'], ['hDatabase', 'hDatabaseReference', 'szTransformFile', 'iErrorConditions', 'iValidation'], '[MSI_ERROR]'), 'MsiDatabaseApplyTransform': (3, ['MSIHANDLE', 'LPCTSTR', 'MSITRANSFORM_ERROR'], ['hDatabase', 'szTransformFile', 'iErrorConditions'], '[MSI_ERROR]'), 'MsiDatabaseExport': (4, ['MSIHANDLE', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR'], ['hDatabase', 'szTableName', 'szFolderPath', 'szFileName'], '[MSI_ERROR]'), 'MsiDatabaseGenerateTransform': (5, ['MSIHANDLE', 'MSIHANDLE', 'LPCTSTR', 'INT', 'INT'], ['hDatabase', 'hDatabaseReference', 'szTransformFile', 'iReserved1', 'iReserved2'], '[MSI_ERROR]'), 'MsiDatabaseImport': (3, ['MSIHANDLE', 'LPCTSTR', 'LPCTSTR'], ['hDatabase', 'szFolderPath', 'szFileName'], '[MSI_ERROR]'), 'MsiDatabaseMerge': (3, ['MSIHANDLE', 'MSIHANDLE', 'LPCTSTR'], ['hDatabase', 'hDatabaseMerge', 'szTableName'], '[MSI_ERROR]'), 'MsiGetDatabaseState': (1, ['MSIHANDLE'], ['hDatabase'], 'MSIDBSTATE'), 'MsiCreateRecord': (1, ['UNSIGNED INT'], ['cParams'], 'MSIHANDLE'), 'MsiFormatRecord': (4, ['MSIHANDLE', 'MSIHANDLE', 'LPTSTR', 'DWORD*'], ['hInstall', 'hRecord', 'szResultBuf', 'pcchResultBuf'], '[MSI_ERROR]'), 'MsiRecordClearData': (1, ['MSIHANDLE'], ['hRecord'], '[MSI_ERROR]'), 'MsiRecordDataSize': (2, ['MSIHANDLE', 'UNSIGNED INT'], ['hRecord', 'iField'], '[MSI_ERROR]'), 'MsiRecordGetFieldCount': (1, ['MSIHANDLE'], ['hRecord'], '[MSI_ERROR]'), 'MsiRecordGetInteger': (2, ['MSIHANDLE', 'UNSIGNED INT'], ['hRecord', 'iField'], 'int'), 'MsiRecordGetString': (4, ['MSIHANDLE', 'UNSIGNED INT', 'LPTSTR', 'DWORD*'], ['hRecord', 'iField', 'szValueBuf', 'pcchValueBuf'], '[MSI_ERROR]'), 'MsiRecordIsNull': (2, ['MSIHANDLE', 'UNSIGNED INT'], ['hRecord', 'iField'], 'BOOL'), 'MsiRecordReadStream': (4, ['MSIHANDLE', 'UINT', 'CHAR*', 'DWORD*'], ['hRecord', 'iField', 'szDataBuf', 'pcbDataBuf'], '[MSI_ERROR]'), 'MsiRecordSetInteger': (3, ['MSIHANDLE', 'UNSIGNED INT', 'INT'], ['hRecord', 'iField', 'iValue'], '[MSI_ERROR]'), 'MsiRecordSetStream': (3, ['MSIHANDLE', 'UINT', 'LPCTSTR'], ['hRecord', 'iField', 'szFilePath'], '[MSI_ERROR]'), 'MsiRecordSetString': (3, ['MSIHANDLE', 'UNSIGNED INT', 'LPCTSTR'], ['hRecord', 'iField', 'szValue'], '[MSI_ERROR]'), 'MsiGetSummaryInformation': (4, ['MSIHANDLE', 'LPCTSTR', 'UINT', 'MSIHANDLE*'], ['hDatabase', 'szDatabasePath', 'uiUpdateCount', 'phSummaryInfo'], '[MSI_ERROR]'), 'MsiSummaryInfoGetProperty': (7, ['MSIHANDLE', 'MSI_PID', 'MSI_DATA_TYPE*', 'INT*', 'FILETIME*', 'LPTSTR', 'DWORD*'], ['hSummaryInfo', 'uiProperty', 'puiDataType', 'piValue', 'pftValue', 'szValueBuf', 'pcchValueBuf'], '[MSI_ERROR]'), 'MsiSummaryInfoGetPropertyCount': (2, ['MSIHANDLE', 'UINT*'], ['hSummaryInfo', 'puiPropertyCount'], '[MSI_ERROR]'), 'MsiSummaryInfoPersist': (1, ['MSIHANDLE'], ['hSummaryInfo'], '[MSI_ERROR]'), 'MsiSummaryInfoSetProperty': (6, ['MSIHANDLE', 'MSI_PID', 'MSI_DATA_TYPE', 'INT', 'FILETIME*', 'LPTSTR'], ['hSummaryInfo', 'uiProperty', 'uiDataType', 'iValue', 'pftValue', 'szValue'], '[MSI_ERROR]'), 'MsiGetLanguage': (1, ['MSIHANDLE'], ['hInstall'], 'LANGID'), 'MsiGetLastErrorRecord': (0, [], [], 'MSIHANDLE'), 'MsiGetMode': (2, ['MSIHANDLE', 'MSIRUNMODE'], ['hInstall', 'iRunMode'], 'BOOL'), 'MsiGetProperty': (4, ['MSIHANDLE', 'LPCTSTR', 'LPTSTR', 'DWORD*'], ['hInstall', 'szName', 'szValueBuf', 'pchValueBuf'], '[MSI_ERROR]'), 'MsiSetProperty': (3, ['MSIHANDLE', 'LPCTSTR', 'LPCTSTR'], ['hInstall', 'szName', 'szValue'], '[MSI_ERROR]'), 'MsiSetMode': (3, ['MSIHANDLE', 'UNSIGNED INT', 'BOOL'], ['hInstall', 'iRunMode', 'fState'], '[MSI_ERROR]'), 'MsiDoAction': (2, ['MSIHANDLE', 'LPCTSTR'], ['hInstall', 'szAction'], '[MSI_ERROR]'), 'MsiEvaluateCondition': (2, ['MSIHANDLE', 'LPCTSTR'], ['hInstall', 'szCondition'], 'MSICONDITION'), 'MsiProcessMessage': (3, ['MSIHANDLE', 'INSTALLMESSAGE', 'MSIHANDLE'], ['hInstall', 'eMessageType', 'hRecord'], 'int'), 'MsiSequence': (3, ['MSIHANDLE', 'LPCTSTR', 'INT'], ['hInstall', 'szTable', 'iSequenceMode'], '[MSI_ERROR]'), 'MsiGetSourcePath': (4, ['MSIHANDLE', 'LPCTSTR', 'LPTSTR', 'DWORD*'], ['hInstall', 'szFolder', 'szPathBuf', 'pcchPathBuf'], '[MSI_ERROR]'), 'MsiGetTargetPath': (4, ['MSIHANDLE', 'LPCTSTR', 'LPTSTR', 'DWORD*'], ['hInstall', 'szFolder', 'szPathBuf', 'pcchPathBuf'], '[MSI_ERROR]'), 'MsiSetTargetPath': (3, ['MSIHANDLE', 'LPCTSTR', 'LPCTSTR'], ['hInstall', 'szFolder', 'szFolderPath'], '[MSI_ERROR]'), 'MsiEnumComponentCosts': (8, ['MSIHANDLE', 'LPCTSTR', 'DWORD', 'INSTALLSTATE', 'LPTSTR', 'DWORD*', 'INT*', 'INT*'], ['hInstall', 'szComponent', 'dwIndex', 'iState', 'lpDriveBuf', 'pcchDriveBuf', 'piCost', 'pTempCost'], '[MSI_ERROR]'), 'MsiGetComponentState': (4, ['MSIHANDLE', 'LPCTSTR', 'INSTALLSTATE*', 'INSTALLSTATE*'], ['hInstall', 'szComponent', 'piInstalled', 'piAction'], '[MSI_ERROR]'), 'MsiGetFeatureCost': (5, ['MSIHANDLE', 'LPCTSTR', 'MSICOSTTREE', 'INSTALLSTATE', 'INT*'], ['hInstall', 'szFeature', 'iCostTree', 'iState', 'piCost'], '[MSI_ERROR]'), 'MsiGetFeatureState': (4, ['MSIHANDLE', 'LPCTSTR', 'INSTALLSTATE*', 'INSTALLSTATE*'], ['hInstall', 'szFeature', 'piInstalled', 'piAction'], '[MSI_ERROR]'), 'MsiGetFeatureValidStates': (3, ['MSIHANDLE', 'LPCTSTR', 'INSTALLSTATE-DWORD*'], ['hInstall', 'szFeature', 'pInstallState'], '[MSI_ERROR]'), 'MsiSetComponentState': (3, ['MSIHANDLE', 'LPCTSTR', 'INSTALLSTATE'], ['hInstall', 'szComponent', 'iState'], '[MSI_ERROR]'), 'MsiSetFeatureAttributes': (3, ['MSIHANDLE', 'LPCTSTR', 'MSIINSTALLFEATUREATTR'], ['hInstall', 'szFeature', 'dwAttributes'], '[MSI_ERROR]'), 'MsiSetFeatureState': (3, ['MSIHANDLE', 'LPCTSTR', 'INSTALLSTATE'], ['hInstall', 'szFeature', 'iState'], '[MSI_ERROR]'), 'MsiSetInstallLevel': (2, ['MSIHANDLE', 'INT'], ['hInstall', 'iInstallLevel'], '[MSI_ERROR]'), 'MsiVerifyDiskSpace': (1, ['MSIHANDLE'], ['hInstall'], '[MSI_ERROR]'), 'MsiEnableUIPreview': (2, ['MSIHANDLE', 'MSIHANDLE*'], ['hDatabase', 'phPreview'], '[MSI_ERROR]'), 'MsiPreviewBillboard': (3, ['MSIHANDLE', 'LPCTSTR', 'LPCTSTR'], ['hPreview', 'szControlName', 'szBillboard'], '[MSI_ERROR]'), 'MsiPreviewDialog': (2, ['MSIHANDLE', 'LPCTSTR'], ['hPreview', 'szDialogName'], '[MSI_ERROR]')}

dict5_msvcrt = {'_memccpy': (4, ['VOID*', 'CONST VOID*', 'INT', 'SIZE_T'], ['dest', 'src', 'c', 'count'], 'void*'), 'memchr': (3, ['CONST VOID*', 'INT', 'SIZE_T'], ['buf', 'c', 'count'], 'void*'), 'memcmp': (3, ['CONST VOID*', 'CONST VOID*', 'SIZE_T'], ['buf1', 'buf2', 'count'], 'int'), 'memcpy': (3, ['VOID*', 'CONST VOID*', 'SIZE_T'], ['dest', 'src', 'count'], 'void*'), 'memcpy_s': (4, ['VOID*', 'SIZE_T', 'CONST VOID*', 'SIZE_T'], ['dest', 'numberOfElements', 'src', 'count'], 'errno_t'), 'wmemcpy_s': (4, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', 'SIZE_T'], ['dest', 'numberOfElements', 'src', 'count'], 'errno_t'), '_memicmp': (3, ['CONST VOID*', 'CONST VOID*', 'SIZE_T'], ['buf1', 'buf2', 'count'], 'int'), '_memicmp_l': (4, ['CONST VOID*', 'CONST VOID*', 'SIZE_T', '_LOCALE_T'], ['buf1', 'buf2', 'count', 'locale'], 'int'), 'memmove': (3, ['VOID*', 'CONST VOID*', 'SIZE_T'], ['dest', 'src', 'count'], 'void*'), 'memmove_s': (4, ['VOID*', 'SIZE_T', 'CONST VOID*', 'SIZE_T'], ['dest', 'numberOfElements', 'src', 'count'], 'errno_t'), 'wmemmove_s': (4, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', 'SIZE_T'], ['dest', 'numberOfElements', 'src', 'count'], 'errno_t'), 'memset': (3, ['VOID*', 'INT', 'SIZE_T'], ['dest', 'c', 'count'], 'void*'), '_swab': (3, ['CHAR*', 'CHAR*', 'INT'], ['src', 'dest', 'n'], 'void'), 'isleadbyte': (1, ['INT'], ['c'], 'int'), '_isleadbyte_l': (2, ['INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbbalnum': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbbalnum_l': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbbalpha': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbbalpha_l': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbbgraph': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbbgraph_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbbkalnum': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbbkalnum_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbbkana': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbbkana_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbbkprint': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbbkprint_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbbkpunct': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbbkpunct_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbblead': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbblead_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbbprint': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbbprint_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbbpunct': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbbpunct_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbbtrail': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbbtrail_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbslead': (2, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*'], ['str', 'current'], 'int'), '_ismbstrail': (2, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*'], ['str', 'current'], 'int'), '_ismbslead_l': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', '_LOCALE_T'], ['str', 'current', 'locale'], 'int'), '_ismbstrail_l': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', '_LOCALE_T'], ['str', 'current', 'locale'], 'int'), '_mbbtype': (2, ['UNSIGNED CHAR', 'INT'], ['c', 'type'], '[byte_type]'), '_mbbtype_l': (3, ['UNSIGNED CHAR', 'INT', '_LOCALE_T'], ['c', 'type', 'locale'], '[byte_type]'), '_mbsbtype': (2, ['CONST UNSIGNED CHAR*', 'SIZE_T'], ['mbstr', 'count'], '[byte_type]'), '_mbsbtype_l': (3, ['CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['mbstr', 'count', 'locale'], '[byte_type]'), 'isalnum': (1, ['INT'], ['c'], 'int'), 'iswalnum': (1, ['WINT_T'], ['c'], 'int'), '_isalnum_l': (2, ['INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_iswalnum_l': (2, ['WINT_T', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbcalnum': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbcalnum_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbcalpha': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbcalpha_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbcdigit': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbcdigit_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), 'isalpha': (1, ['INT'], ['c'], 'int'), 'iswalpha': (1, ['WINT_T'], ['c'], 'int'), '_isalpha_l': (2, ['INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_iswalpha_l': (2, ['WINT_T', '_LOCALE_T'], ['c', 'locale'], 'int'), '__isascii': (1, ['INT'], ['c'], 'int'), 'iswascii': (1, ['WINT_T'], ['c'], 'int'), 'iscntrl': (1, ['INT'], ['c'], 'int'), 'iswcntrl': (1, ['WINT_T'], ['c'], 'int'), '_iscntrl_l': (2, ['INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_iswcntrl_l': (2, ['WINT_T', '_LOCALE_T'], ['c', 'locale'], 'int'), '__iscsym': (1, ['INT'], ['c'], 'int'), '__iswcsym': (1, ['WINT_T'], ['c'], 'int'), '__iscsymf': (1, ['INT'], ['c'], 'int'), '__iswcsymf': (1, ['WINT_T'], ['c'], 'int'), '_iswcsym_l': (2, ['WINT_T', '_LOCALE_T'], ['c', 'locale'], 'int'), '_iswcsymf_l': (2, ['WINT_T', '_LOCALE_T'], ['c', 'locale'], 'int'), 'isdigit': (1, ['INT'], ['c'], 'int'), 'iswdigit': (1, ['WINT_T'], ['c'], 'int'), '_isdigit_l': (2, ['INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_iswdigit_l': (2, ['WINT_T', '_LOCALE_T'], ['c', 'locale'], 'int'), 'isgraph': (1, ['INT'], ['c'], 'int'), 'iswgraph': (1, ['WINT_T'], ['c'], 'int'), '_isgraph_l': (2, ['INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_iswgraph_l': (2, ['WINT_T', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbcgraph': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbcgraph_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbcprint': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbcprint_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbcpunct': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbcpunct_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbcspace': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbcspace_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), 'islower': (1, ['INT'], ['c'], 'int'), 'iswlower': (1, ['WINT_T'], ['c'], 'int'), '_islower_l': (2, ['INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_iswlower_l': (2, ['WINT_T', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbclower': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbclower_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbcupper': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbcupper_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbchira': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbchira_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbckata': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbckata_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbclegal': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbclegal_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbcsymbol': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbcsymbol_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbcl0': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbcl0_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbcl1': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbcl1_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ismbcl2': (1, ['UNSIGNED INT'], ['c'], 'int'), '_ismbcl2_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'int'), 'isprint': (1, ['INT'], ['c'], 'int'), 'iswprint': (1, ['WINT_T'], ['c'], 'int'), '_isprint_l': (2, ['INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_iswprint_l': (2, ['WINT_T', '_LOCALE_T'], ['c', 'locale'], 'int'), 'ispunct': (1, ['INT'], ['c'], 'int'), 'iswpunct': (1, ['WINT_T'], ['c'], 'int'), '_ispunct_l': (2, ['INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_iswpunct_l': (2, ['WINT_T', '_LOCALE_T'], ['c', 'locale'], 'int'), 'isspace': (1, ['INT'], ['c'], 'int'), 'iswspace': (1, ['WINT_T'], ['c'], 'int'), '_isspace_l': (2, ['INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_iswspace_l': (2, ['WINT_T', '_LOCALE_T'], ['c', 'locale'], 'int'), 'isupper': (1, ['INT'], ['c'], 'int'), '_isupper_l': (2, ['INT', '_LOCALE_T'], ['c', 'locale'], 'int'), 'iswupper': (1, ['WINT_T'], ['c'], 'int'), '_iswupper_l': (2, ['WINT_T', '_LOCALE_T'], ['c', 'locale'], 'int'), '_isctype': (2, ['INT', '_CTYPE_T'], ['c', 'mask'], 'int'), '_isctype_l': (3, ['INT', '_CTYPE_T', '_LOCALE_T'], ['c', 'mask', 'locale'], 'int'), 'iswctype': (2, ['WINT_T', 'WCTYPE_T'], ['c', 'mask'], 'int'), 'is_wctype': (2, ['WINT_T', 'WCTYPE_T'], ['c', 'mask'], 'int'), '_iswctype_l': (3, ['WINT_T', 'WCTYPE_T', '_LOCALE_T'], ['c', 'mask', 'locale'], 'int'), 'isxdigit': (1, ['INT'], ['c'], 'int'), 'iswxdigit': (1, ['WINT_T'], ['c'], 'int'), '_isxdigit_l': (2, ['INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_iswxdigit_l': (2, ['WINT_T', '_LOCALE_T'], ['c', 'locale'], 'int'), '_wctype': (1, ['CONST CHAR*'], ['property'], 'wctype_t'), '__pctype_func': (0, [], [], 'const unsigned short*'), '_aligned_free': (1, ['VOID*'], ['memblock'], 'void'), '_aligned_free_dbg': (1, ['VOID*'], ['memblock'], 'void'), '_aligned_malloc': (2, ['SIZE_T', 'SIZE_T'], ['size', 'alignment'], 'void*'), '_aligned_malloc_dbg': (4, ['SIZE_T', 'SIZE_T', 'CONST CHAR*', 'INT'], ['size', 'alignment', 'filename', 'linenumber'], 'void*'), '_aligned_msize': (3, ['VOID*', 'SIZE_T', 'SIZE_T'], ['memblock', 'alignment', 'offset'], 'size_t'), '_aligned_msize_dbg': (3, ['VOID*', 'SIZE_T', 'SIZE_T'], ['memblock', 'alignment', 'offset'], 'size_t'), '_aligned_offset_malloc': (3, ['SIZE_T', 'SIZE_T', 'SIZE_T'], ['size', 'alignment', 'offset'], 'void*'), '_aligned_offset_malloc_dbg': (5, ['SIZE_T', 'SIZE_T', 'SIZE_T', 'CONST CHAR*', 'INT'], ['size', 'alignment', 'offset', 'filename', 'linenumber'], 'void*'), '_aligned_offset_realloc': (4, ['VOID*', 'SIZE_T', 'SIZE_T', 'SIZE_T'], ['memblock', 'size', 'alignment', 'offset'], 'void*'), '_aligned_offset_realloc_dbg': (6, ['VOID*', 'SIZE_T', 'SIZE_T', 'SIZE_T', 'CONST CHAR*', 'INT'], ['memblock', 'size', 'alignment', 'offset', 'filename', 'linenumber'], 'void*'), '_aligned_offset_recalloc': (5, ['VOID*', 'SIZE_T', 'SIZE_T', 'SIZE_T', 'SIZE_T'], ['memblock', 'num', 'size', 'alignment', 'offset'], 'void*'), '_aligned_offset_recalloc_dbg': (7, ['VOID*', 'SIZE_T', 'SIZE_T', 'SIZE_T', 'SIZE_T', 'CONST CHAR*', 'INT'], ['memblock', 'num', 'size', 'alignment', 'offset', 'filename', 'linenumber'], 'void*'), '_aligned_realloc': (3, ['VOID*', 'SIZE_T', 'SIZE_T'], ['memblock', 'size', 'alignment'], 'void*'), '_aligned_realloc_dbg': (5, ['VOID*', 'SIZE_T', 'SIZE_T', 'CONST CHAR*', 'INT'], ['memblock', 'size', 'alignment', 'filename', 'linenumber'], 'void*'), '_aligned_recalloc': (4, ['VOID*', 'SIZE_T', 'SIZE_T', 'SIZE_T'], ['memblock', 'num', 'size', 'alignment'], 'void*'), '_aligned_recalloc_dbg': (6, ['VOID*', 'SIZE_T', 'SIZE_T', 'SIZE_T', 'CONST CHAR*', 'INT'], ['memblock', 'num', 'size', 'alignment', 'filename', 'linenumber'], 'void*'), 'abs': (1, ['INT'], ['n'], 'int'), '_abs64': (1, ['__INT64'], ['n'], '__int64'), '_wtof': (1, ['CONST WCHAR_T*'], ['str'], 'double'), '_wtof_l': (2, ['CONST WCHAR_T*', '_LOCALE_T'], ['str', 'locale'], 'double'), '_wtoi': (1, ['CONST WCHAR_T*'], ['str'], 'int'), '_wtoi_l': (2, ['CONST WCHAR_T*', '_LOCALE_T'], ['str', 'locale'], 'int'), '_wtol': (1, ['CONST WCHAR_T*'], ['str'], 'long'), '_wtol_l': (2, ['CONST WCHAR_T*', '_LOCALE_T'], ['str', 'locale'], 'long'), '_itoa': (3, ['INT', 'CHAR*', 'INT'], ['value', 'str', 'radix'], 'char*'), '_i64toa': (3, ['__INT64', 'CHAR*', 'INT'], ['value', 'str', 'radix'], 'char*'), '_ui64toa': (3, ['UNSIGNED __INT64', 'CHAR*', 'INT'], ['value', 'str', 'radix'], 'char*'), '_itow': (3, ['INT', 'WCHAR_T*', 'INT'], ['value', 'str', 'radix'], 'wchar_t*'), '_i64tow': (3, ['__INT64', 'WCHAR_T*', 'INT'], ['value', 'str', 'radix'], 'wchar_t*'), '_ui64tow': (3, ['UNSIGNED __INT64', 'WCHAR_T*', 'INT'], ['value', 'str', 'radix'], 'wchar_t*'), '_itoa_s': (4, ['INT', 'CHAR*', 'SIZE_T', 'INT'], ['value', 'buffer', 'sizeInCharacters', 'radix'], 'errno_t'), '_i64toa_s': (4, ['__INT64', 'CHAR*', 'SIZE_T', 'INT'], ['value', 'buffer', 'sizeInCharacters', 'radix'], 'errno_t'), '_ui64toa_s': (4, ['UNSIGNED __INT64', 'CHAR*', 'SIZE_T', 'INT'], ['value', 'buffer', 'sizeInCharacters', 'radix'], 'errno_t'), '_itow_s': (4, ['INT', 'WCHAR_T*', 'SIZE_T', 'INT'], ['value', 'buffer', 'sizeInCharacters', 'radix'], 'errno_t'), '_i64tow_s': (4, ['__INT64', 'WCHAR_T*', 'SIZE_T', 'INT'], ['value', 'buffer', 'sizeInCharacters', 'radix'], 'errno_t'), '_ui64tow_s': (4, ['UNSIGNED __INT64', 'WCHAR_T*', 'SIZE_T', 'INT'], ['value', 'buffer', 'sizeInCharacters', 'radix'], 'errno_t'), 'labs': (1, ['LONG'], ['n'], 'long'), '_ltoa': (3, ['LONG', 'CHAR*', 'INT'], ['value', 'str', 'radix'], 'char*'), '_ltow': (3, ['LONG', 'WCHAR_T*', 'INT'], ['value', 'str', 'radix'], 'wchar_t*'), '_ltoa_s': (4, ['LONG', 'CHAR*', 'SIZE_T', 'INT'], ['value', 'str', 'sizeOfstr', 'radix'], 'errno_t'), '_ltow_s': (4, ['LONG', 'WCHAR_T*', 'SIZE_T', 'INT'], ['value', 'str', 'sizeOfstr', 'radix'], 'errno_t'), '_mbbtombc': (1, ['UNSIGNED INT'], ['c'], 'unsigned int'), '_mbbtombc_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'unsigned int'), '_mbcjistojms': (1, ['UNSIGNED INT'], ['c'], 'unsigned int'), '_mbcjistojms_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'unsigned int'), '_mbcjmstojis': (1, ['UNSIGNED INT'], ['c'], 'unsigned int'), '_mbcjmstojis_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'unsigned int'), '_mbctohira': (1, ['UNSIGNED INT'], ['c'], 'unsigned int'), '_mbctohira_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'unsigned int'), '_mbctokata': (1, ['UNSIGNED INT'], ['c'], 'unsigned int'), '_mbctokata_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'unsigned int'), '_mbctombb': (1, ['UNSIGNED INT'], ['c'], 'unsigned int'), '_mbctombb_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'unsigned int'), '__toascii': (1, ['INT'], ['c'], 'int'), 'tolower': (1, ['INT'], ['c'], 'int'), '_tolower': (1, ['INT'], ['c'], 'int'), 'towlower': (1, ['WINT_T'], ['c'], 'int'), '_tolower_l': (2, ['INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_towlower_l': (2, ['WINT_T', '_LOCALE_T'], ['c', 'locale'], 'int'), 'toupper': (1, ['INT'], ['c'], 'int'), '_toupper': (1, ['INT'], ['c'], 'int'), 'towupper': (1, ['WINT_T'], ['c'], 'int'), '_toupper_l': (2, ['INT', '_LOCALE_T'], ['c', 'locale'], 'int'), '_towupper_l': (2, ['WINT_T', '_LOCALE_T'], ['c', 'locale'], 'int'), '_ultoa': (3, ['UNSIGNED LONG', 'CHAR*', 'INT'], ['value', 'str', 'radix'], 'char*'), '_ultow': (3, ['UNSIGNED LONG', 'WCHAR_T*', 'INT'], ['value', 'str', 'radix'], 'wchar_t*'), '_ultoa_s': (4, ['UNSIGNED LONG', 'CHAR*', 'SIZE_T', 'INT'], ['value', 'str', 'sizeOfstr', 'radix'], 'errno_t'), '_ultow_s': (4, ['UNSIGNED LONG', 'WCHAR_T*', 'SIZE_T', 'INT'], ['value', 'str', 'sizeOfstr', 'radix'], 'errno_t'), '_fcvt': (4, ['DOUBLE', 'INT', 'INT*', 'INT*'], ['value', 'count', 'dec', 'sign'], 'char*'), '_fcvt_s': (6, ['CHAR*', 'SIZE_T', 'DOUBLE', 'INT', 'INT*', 'INT*'], ['buffer', 'sizeInBytes', 'value', 'count', 'dec', 'sign'], 'errno_t'), '_gcvt': (3, ['DOUBLE', 'INT', 'CHAR*'], ['value', 'digits', 'buffer'], 'char*'), '_gcvt_s': (4, ['CHAR*', 'SIZE_T', 'DOUBLE', 'INT'], ['buffer', 'sizeInBytes', 'value', 'digits'], 'errno_t'), '_atol_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['str', 'locale'], 'long'), '_atoi_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['str', 'locale'], 'int'), 'atof': (1, ['CONST CHAR*'], ['str'], 'double'), '_atof_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['str', 'locale'], 'double'), '_atoi64_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['str', 'locale'], '__int64'), 'atoi': (1, ['CONST CHAR*'], ['str'], 'int'), '_atoi64': (1, ['CONST CHAR*'], ['str'], '__int64'), 'atol': (1, ['CONST CHAR*'], ['str'], 'long'), '_atodbl': (2, ['_CRT_DOUBLE*', 'CHAR*'], ['value', 'str'], 'int'), '_atodbl_l': (3, ['_CRT_DOUBLE*', 'CHAR*', '_LOCALE_T'], ['value', 'str', 'locale'], 'int'), '_atoldbl': (2, ['_LDOUBLE*', 'CHAR*'], ['value', 'str'], 'int'), '_atoldbl_l': (3, ['_LDOUBLE*', 'CHAR*', '_LOCALE_T'], ['value', 'str', 'locale'], 'int'), '_atoflt': (2, ['_CRT_FLOAT*', 'CHAR*'], ['value', 'str'], 'int'), '_atoflt_l': (3, ['_CRT_FLOAT*', 'CHAR*', '_LOCALE_T'], ['value', 'str', 'locale'], 'int'), '_wtoi64': (1, ['CONST WCHAR_T*'], ['str'], '__int64'), '_wtoi64_l': (2, ['CONST WCHAR_T*', '_LOCALE_T'], ['str', 'locale'], '__int64'), 'strtoul': (3, ['CONST CHAR*', 'CHAR**', 'INT'], ['nptr', 'endptr', 'base'], 'unsigned long'), '_strtoul_l': (4, ['CONST CHAR*', 'CHAR**', 'INT', '_LOCALE_T'], ['nptr', 'endptr', 'base', 'locale'], 'unsigned long'), 'wcstoul': (3, ['CONST WCHAR_T*', 'WCHAR_T**', 'INT'], ['nptr', 'endptr', 'base'], 'unsigned long'), '_wcstoul_l': (4, ['CONST WCHAR_T*', 'WCHAR_T**', 'INT', '_LOCALE_T'], ['nptr', 'endptr', 'base', 'locale'], 'unsigned long'), 'strtod': (2, ['CONST CHAR*', 'CHAR**'], ['nptr', 'endptr'], 'double'), '_strtod_l': (3, ['CONST CHAR*', 'CHAR**', '_LOCALE_T'], ['nptr', 'endptr', 'locale'], 'double'), 'wcstod': (2, ['CONST WCHAR_T*', 'WCHAR_T**'], ['nptr', 'endptr'], 'double'), '_wcstod_l': (3, ['CONST WCHAR_T*', 'WCHAR_T**', '_LOCALE_T'], ['nptr', 'endptr', 'locale'], 'double'), 'strtol': (3, ['CONST CHAR*', 'CHAR**', 'INT'], ['nptr', 'endptr', 'base'], 'long'), 'wcstol': (3, ['CONST WCHAR_T*', 'WCHAR_T**', 'INT'], ['nptr', 'endptr', 'base'], 'long'), '_strtol_l': (4, ['CONST CHAR*', 'CHAR**', 'INT', '_LOCALE_T'], ['nptr', 'endptr', 'base', 'locale'], 'long'), '_wcstol_l': (4, ['CONST WCHAR_T*', 'WCHAR_T**', 'INT', '_LOCALE_T'], ['nptr', 'endptr', 'base', 'locale'], 'long'), 'mbtowc': (3, ['WCHAR_T*', 'CONST CHAR*', 'SIZE_T'], ['wchar', 'mbchar', 'count'], 'int'), '_mbtowc_l': (4, ['WCHAR_T*', 'CONST CHAR*', 'SIZE_T', '_LOCALE_T'], ['wchar', 'mbchar', 'count', 'locale'], 'int'), 'mbstowcs': (3, ['WCHAR_T*', 'CONST CHAR*', 'SIZE_T'], ['wcstr', 'mbstr', 'count'], 'size_t'), '_mbstowcs_l': (4, ['WCHAR_T*', 'CONST CHAR*', 'SIZE_T', '_LOCALE_T'], ['wcstr', 'mbstr', 'count', 'locale'], 'size_t'), 'mbstowcs_s': (5, ['SIZE_T*', 'WCHAR_T*', 'SIZE_T', 'CONST CHAR*', 'SIZE_T'], ['pReturnValue', 'wcstr', 'sizeInWords', 'mbstr', 'count'], 'errno_t'), '_mbstowcs_s_l': (6, ['SIZE_T*', 'WCHAR_T*', 'SIZE_T', 'CONST CHAR*', 'SIZE_T', '_LOCALE_T'], ['pReturnValue', 'wcstr', 'sizeInWords', 'mbstr', 'count', 'locale'], 'errno_t'), 'wcstombs': (3, ['CHAR*', 'CONST WCHAR_T*', 'SIZE_T'], ['mbstr', 'wcstr', 'count'], 'size_t'), '_wcstombs_l': (4, ['CHAR*', 'CONST WCHAR_T*', 'SIZE_T', '_LOCALE_T'], ['mbstr', 'wcstr', 'count', 'locale'], 'size_t'), 'wcstombs_s': (5, ['SIZE_T*', 'CHAR*', 'SIZE_T', 'CONST WCHAR_T*', 'SIZE_T'], ['pReturnValue', 'mbstr', 'sizeInBytes', 'wcstr', 'count'], 'errno_t'), '_wcstombs_s_l': (6, ['SIZE_T*', 'CHAR*', 'SIZE_T', 'CONST WCHAR_T*', 'SIZE_T', '_LOCALE_T'], ['pReturnValue', 'mbstr', 'sizeInBytes', 'wcstr', 'count', 'locale'], 'errno_t'), 'wctomb': (2, ['CHAR*', 'WCHAR_T'], ['mbchar', 'wchar'], 'int'), '_wctomb_l': (3, ['CHAR*', 'WCHAR_T', '_LOCALE_T'], ['mbchar', 'wchar', 'locale'], 'int'), 'wctomb_s': (4, ['INT*', 'CHAR*', 'SIZE_T', 'WCHAR_T'], ['pRetValue', 'mbchar', 'sizeInBytes', 'wchar'], 'errno_t'), '_wctomb_s_l': (5, ['INT*', 'CHAR*', 'SIZE_T', 'WCHAR_T', '_LOCALE_T'], ['pRetValue', 'mbchar', 'sizeInBytes', 'wchar', 'locale'], 'errno_t'), '_mbctoupper_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'unsigned int'), '_mbctoupper': (1, ['UNSIGNED INT'], ['c'], 'unsigned int'), '_mbctolower': (1, ['UNSIGNED INT'], ['c'], 'unsigned int'), '_mbctolower_l': (2, ['UNSIGNED INT', '_LOCALE_T'], ['c', 'locale'], 'unsigned int'), '_ecvt': (4, ['DOUBLE', 'INT', 'INT*', 'INT*'], ['value', 'count', 'dec', 'sign'], 'char*'), '_ecvt_s': (6, ['CHAR*', 'SIZE_T', 'DOUBLE', 'INT', 'INT*', 'INT*'], ['_Buffer', '_SizeInBytes', '_Value', '_Count', '_Dec', '_Sign'], 'errno_t'), 'mbrtowc': (4, ['WCHAR_T*', 'CONST CHAR*', 'SIZE_T', 'MBSTATE_T'], ['wchar', 'mbchar', 'count', 'mbstate'], 'size_t'), 'mbsrtowcs': (4, ['WCHAR_T*', 'CONST CHAR**', 'SIZE_T', 'MBSTATE_T*'], ['wcstr', 'mbstr', 'count', 'mbstate'], 'size_t'), 'mbsrtowcs_s': (6, ['SIZE_T*', 'WCHAR_T*', 'SIZE_T', 'CONST CHAR**', 'SIZE_T', 'MBSTATE_T*'], ['pReturnValue', 'wcstr', 'sizeInWords', 'mbstr', 'count', 'mbstate'], 'errno_t'), '_strtoi64': (3, ['CONST CHAR*', 'CHAR**', 'INT'], ['nptr', 'endptr', 'base'], '__int64'), '_wcstoi64': (3, ['CONST WCHAR_T*', 'WCHAR_T**', 'INT'], ['nptr', 'endptr', 'base'], '__int64'), '_strtoi64_l': (4, ['CONST CHAR*', 'CHAR**', 'INT', '_LOCALE_T'], ['nptr', 'endptr', 'base', 'locale'], '__int64'), '_wcstoi64_l': (4, ['CONST WCHAR_T*', 'WCHAR_T**', 'INT', '_LOCALE_T'], ['nptr', 'endptr', 'base', 'locale'], '__int64'), '_strtoui64': (3, ['CONST CHAR*', 'CHAR**', 'INT'], ['nptr', 'endptr', 'base'], 'unsigned __int64'), '_wcstoui64': (3, ['CONST WCHAR_T*', 'WCHAR_T**', 'INT'], ['nptr', 'endptr', 'base'], 'unsigned __int64'), '_strtoui64_l': (4, ['CONST CHAR*', 'CHAR**', 'INT', '_LOCALE_T'], ['nptr', 'endptr', 'base', 'locale'], 'unsigned __int64'), '_wcstoui64_l': (4, ['CONST WCHAR_T*', 'WCHAR_T**', 'INT', '_LOCALE_T'], ['nptr', 'endptr', 'base', 'locale'], 'unsigned __int64'), 'wcrtomb': (3, ['CHAR*', 'WCHAR_T', 'MBSTATE_T*'], ['mbchar', 'wchar', 'mbstate'], 'size_t'), 'wcrtomb_s': (5, ['SIZE_T*', 'CHAR*', 'SIZE_T', 'WCHAR_T*', 'MBSTATE_T*'], ['pReturnValue', 'mbchar', 'sizeOfmbchar', 'wchar', 'mbstate'], 'errno_t'), 'wcsrtombs': (4, ['CHAR*', 'CONST WCHAR_T**', 'SIZE_T', 'MBSTATE_T*'], ['mbstr', 'wcstr', 'count', 'mbstate'], 'size_t'), 'wcsrtombs_s': (6, ['SIZE_T*', 'CHAR*', 'SIZE_T', 'CONST WCHAR_T**', 'SIZE_T', 'MBSTATE_T*'], ['pReturnValue', 'mbstr', 'sizeInBytes', 'wcstr', 'count', 'mbstate'], 'errno_t'), 'wctob': (1, ['WINT_T'], ['wchar'], 'int'), '_byteswap_ushort': (1, ['UNSIGNED SHORT'], ['val'], 'unsigned short'), '_byteswap_ulong': (1, ['UNSIGNED LONG'], ['val'], 'unsigned long'), '_byteswap_uint64': (1, ['UNSIGNED __INT64'], ['val'], 'unsigned __int64'), 'btowc': (1, ['INT'], ['c'], 'wint_t'), '_CrtCheckMemory': (0, [], [], 'int'), '_CrtDbgBreak': (0, [], [], 'void'), '_CrtDbgReport': (5, ['CRT_REPORT_TYPE', 'CONST CHAR*', 'INT', 'CONST CHAR*', 'CONST CHAR*'], ['reportType', 'filename', 'linenumber', 'moduleName', 'format'], 'int'), '_CrtDbgReportW': (5, ['CRT_REPORT_TYPE', 'CONST WCHAR_T*', 'INT', 'CONST WCHAR_T*', 'CONST WCHAR_T*'], ['reportType', 'filename', 'linenumber', 'moduleName', 'format'], 'int'), '_CrtDoForAllClientObjects': (2, ['VOID*', 'VOID*'], ['pfn', 'context'], 'void'), '_CrtDumpMemoryLeaks': (0, [], [], 'int'), '_CrtIsMemoryBlock': (5, ['CONST VOID*', 'UNSIGNED INT', 'LONG*', 'CHAR**', 'INT*'], ['userData', 'size', 'requestNumber', 'filename', 'linenumber'], 'int'), '_CrtIsValidHeapPointer': (1, ['CONST VOID*'], ['userData'], 'int'), '_CrtIsValidPointer': (3, ['CONST VOID*', 'UNSIGNED INT', 'INT'], ['address', 'size', 'access'], 'int'), '_CrtMemCheckpoint': (1, ['_CRTMEMSTATE*'], ['state'], 'void'), '_CrtMemDifference': (3, ['_CRTMEMSTATE*', 'CONST _CRTMEMSTATE*', 'CONST _CRTMEMSTATE*'], ['stateDiff', 'oldState', 'newState'], 'int'), '_CrtMemDumpAllObjectsSince': (1, ['CONST _CRTMEMSTATE*'], ['state'], 'void'), '_CrtMemDumpStatistics': (1, ['CONST _CRTMEMSTATE*'], ['state'], 'void'), '_CrtReportBlockType': (1, ['CONST VOID*'], ['pBlock'], 'int'), '_CrtSetAllocHook': (1, ['_CRT_ALLOC_HOOK'], ['allocHook'], '_CRT_ALLOC_HOOK'), '_CrtSetBreakAlloc': (1, ['LONG'], ['lBreakAlloc'], 'long'), '_CrtSetDbgFlag': (1, ['CRTDBG_FLAG'], ['newFlag'], 'int'), '_CrtSetDumpClient': (1, ['_CRT_DUMP_CLIENT'], ['dumpClient'], '_CRT_DUMP_CLIENT'), '_CrtSetReportFile': (2, ['CRT_REPORT_TYPE', '_HFILE'], ['reportType', 'reportFile'], '_HFILE'), '_CrtSetReportHook': (1, ['_CRT_REPORT_HOOK'], ['reportHook'], '_CRT_REPORT_HOOK'), '_CrtSetReportHook2': (2, ['CRT_RPTHOOK_MODE', '_CRT_REPORT_HOOK'], ['mode', 'pfnNewHook'], 'int'), '_CrtSetReportHookW2': (2, ['CRT_RPTHOOK_MODE', '_CRT_REPORT_HOOKW'], ['mode', 'pfnNewHook'], 'int'), '_CrtSetReportMode': (2, ['CRT_REPORT_TYPE', 'CRTDBG_MODE'], ['reportType', 'reportMode'], '[CRTDBG_MODE]'), '_CrtGetAllocHook': (0, [], [], '_CRT_ALLOC_HOOK'), '_CrtGetDumpClient': (0, [], [], '_CRT_DUMP_CLIENT'), '_CrtGetReportHook': (0, [], [], '_CRT_REPORT_HOOK'), '_CrtSetDebugFillThreshold': (1, ['SIZE_T'], ['_NewThreshold'], 'size_t'), '_chdir': (1, ['CONST CHAR*'], ['dirname'], 'int'), '_wchdir': (1, ['CONST WCHAR_T*'], ['dirname'], 'int'), '_chdrive': (1, ['INT'], ['drive'], 'int'), '_getcwd': (2, ['CHAR*', 'INT'], ['buffer', 'maxlen'], 'char*'), '_getcwd_dbg': (5, ['CHAR*', 'INT', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['buffer', 'maxlen', 'blockType', 'filename', 'linenumber'], 'char*'), '_wgetcwd': (2, ['WCHAR_T*', 'INT'], ['buffer', 'maxlen'], 'wchar_t*'), '_wgetcwd_dbg': (5, ['WCHAR_T*', 'INT', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['buffer', 'maxlen', 'blockType', 'filename', 'linenumber'], 'wchar_t*'), '_getdcwd': (3, ['INT', 'CHAR*', 'INT'], ['drive', 'buffer', 'maxlen'], 'char*'), '_getdcwd_dbg': (6, ['INT', 'CHAR*', 'INT', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['drive', 'buffer', 'maxlen', 'blockType', 'filename', 'linenumber'], 'char*'), '_wgetdcwd': (3, ['INT', 'WCHAR_T*', 'INT'], ['drive', 'buffer', 'maxlen'], 'wchar_t*'), '_wgetdcwd_dbg': (6, ['INT', 'WCHAR_T*', 'INT', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['drive', 'buffer', 'maxlen', 'blockType', 'filename', 'linenumber'], 'wchar_t*'), '_getdiskfree': (2, ['UNSIGNED', 'STRUCT _DISKFREE_T*'], ['drive', 'driveinfo'], 'errno_t'), '_getdrive': (0, [], [], 'int'), '_getdrives': (0, [], [], 'unsigned long'), '_mkdir': (1, ['CONST CHAR*'], ['dirname'], 'int'), '_wmkdir': (1, ['CONST WCHAR_T*'], ['dirname'], 'int'), '_rmdir': (1, ['CONST CHAR*'], ['dirname'], 'int'), '_wrmdir': (1, ['CONST WCHAR_T*'], ['dirname'], 'int'), '_searchenv': (3, ['CONST CHAR*', 'CONST CHAR*', 'CHAR*'], ['filename', 'varname', 'pathname'], 'void'), '_wsearchenv': (3, ['CONST WCHAR_T*', 'CONST WCHAR_T*', 'WCHAR_T*'], ['filename', 'varname', 'pathname'], 'void'), '_searchenv_s': (4, ['CONST CHAR*', 'CONST CHAR*', 'CHAR*', 'SIZE_T'], ['filename', 'varname', 'pathname', 'numberOfElements'], 'errno_t'), '_wsearchenv_s': (4, ['CONST WCHAR_T*', 'CONST WCHAR_T*', 'WCHAR_T*', 'SIZE_T'], ['filename', 'varname', 'pathname', 'numberOfElements'], 'errno_t'), '_set_error_mode': (1, ['SET_ERROR_MODE'], ['modeval'], '[set_error_mode]'), '_seterrormode': (1, ['SET_ERROR_MODE'], ['mode'], '[set_error_mode]'), '_purecall': (0, [], [], 'void'), '_set_purecall_handler': (1, ['_PURECALL_HANDLER'], ['function'], '_purecall_handler'), '_get_doserrno': (1, ['INT*'], ['pValue'], 'errno_t'), '_get_errno': (1, ['INT*'], ['pValue'], 'errno_t'), '_set_doserrno': (1, ['INT'], ['value'], 'errno_t'), '_set_errno': (1, ['INT'], ['value'], 'errno_t'), '_set_abort_behavior': (2, ['ABORT_FLAG', 'ABORT_FLAG'], ['flags', 'mask'], '[abort_flag]'), '_get_invalid_parameter_handler': (0, [], [], '_invalid_parameter_handler'), '_set_invalid_parameter_handler': (1, ['_INVALID_PARAMETER_HANDLER'], ['pNew'], '_invalid_parameter_handler'), '_amsg_exit': (1, ['INT'], ['rterrnum'], 'void'), '?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z': (1, ['_SE_TRANSLATOR_FUNCTION'], ['seTransFunction'], '_se_translator_function'), '_get_terminate': (0, [], [], 'terminate_function'), '?set_terminate@@YAP6AXXZP6AXXZ@Z': (1, ['TERMINATE_FUNCTION'], ['termFunction'], 'terminate_function'), '_get_unexpected': (0, [], [], 'unexpected_function'), '?set_unexpected@@YAP6AXXZP6AXXZ@Z': (1, ['UNEXPECTED_FUNCTION'], ['unexpFunction'], 'unexpected_function'), '?terminate@@YAXXZ': (0, [], [], 'void'), '?unexpected@@YAXXZ': (0, [], [], 'void'), '__CxxFrameHandler': (4, ['EHEXCEPTIONRECORD*', 'EHREGISTRATIONNODE*', 'VOID*', 'DISPATCHERCONTEXT*'], ['pExcept', 'pRN', 'pContext', 'pDC'], 'EXCEPTION_DISPOSITION'), '_except_handler3': (4, ['PEXCEPTION_RECORD', 'PEXCEPTION_REGISTRATION', 'PCONTEXT', 'PEXCEPTION_REGISTRATION'], ['exception_record', 'registration', 'context', 'dispatcher'], '[disposition_type]'), '__uncaught_exception': (0, [], [], 'bool'), '_XcptFilter': (2, ['XCPT_NUM', 'PEXCEPTION_POINTERS'], ['xcptnum', 'pxcptinfoptrs'], '[xcpt_action]'), '_resetstkoflw': (0, [], [], 'int'), '_abnormal_termination': (0, [], [], 'int'), '_chsize': (2, ['INT', 'LONG'], ['fd', 'size'], 'int'), '_chsize_s': (2, ['INT', '__INT64'], ['fd', 'size'], 'errno_t'), '_filelength': (1, ['INT'], ['fd'], 'long'), '_filelengthi64': (1, ['INT'], ['fd'], '__int64'), '_fstat': (2, ['INT', 'STRUCT _STAT*'], ['fd', 'buffer'], 'int'), '_fstat32': (2, ['INT', 'STRUCT _STAT32*'], ['fd', 'buffer'], 'int'), '_fstat64': (2, ['INT', 'STRUCT _STAT64*'], ['fd', 'buffer'], 'int'), '_fstati64': (2, ['INT', 'STRUCT _STATI64*'], ['fd', 'buffer'], 'int'), '_fstat32i64': (2, ['INT', 'STRUCT _STAT32I64*'], ['fd', 'buffer'], 'int'), '_fstat64i32': (2, ['INT', 'STRUCT _STAT64I32*'], ['fd', 'buffer'], 'int'), '_get_osfhandle': (1, ['INT'], ['fd'], 'intptr_t'), '_isatty': (1, ['INT'], ['fd'], 'int'), '_locking': (3, ['INT', '_LK_MODE', 'LONG'], ['fd', 'mode', 'nbytes'], 'int'), '_open_osfhandle': (2, ['INTPTR_T', 'INT'], ['osfhandle', 'flags'], 'int'), '_access': (2, ['CONST CHAR*', 'INT'], ['path', 'mode'], 'int'), '_waccess': (2, ['CONST WCHAR_T*', 'INT'], ['path', 'mode'], 'int'), '_access_s': (2, ['CONST CHAR*', 'INT'], ['path', 'mode'], 'errno_t'), '_waccess_s': (2, ['CONST WCHAR_T*', 'INT'], ['path', 'mode'], 'errno_t'), '_chmod': (2, ['CONST CHAR*', 'PERM_MODE'], ['filename', 'pmode'], 'int'), '_wchmod': (2, ['CONST WCHAR_T*', 'PERM_MODE'], ['filename', 'pmode'], 'int'), '_fullpath': (3, ['CHAR*', 'CONST CHAR*', 'SIZE_T'], ['absPath', 'relPath', 'maxLength'], 'char*'), '_fullpath_dbg': (6, ['CHAR*', 'CONST CHAR*', 'SIZE_T', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['absPath', 'relPath', 'maxLength', 'blockType', 'filename', 'linenumber'], 'char*'), '_wfullpath': (3, ['WCHAR_T*', 'CONST WCHAR_T*', 'SIZE_T'], ['absPath', 'relPath', 'maxLength'], 'wchar_t*'), '_wfullpath_dbg': (6, ['WCHAR_T*', 'CONST WCHAR_T*', 'SIZE_T', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['absPath', 'relPath', 'maxLength', 'blockType', 'filename', 'linenumber'], 'wchar_t*'), '_makepath': (5, ['CHAR*', 'CONST CHAR*', 'CONST CHAR*', 'CONST CHAR*', 'CONST CHAR*'], ['path', 'drive', 'dir', 'fname', 'ext'], 'void'), '_wmakepath': (5, ['WCHAR_T*', 'CONST WCHAR_T*', 'CONST WCHAR_T*', 'CONST WCHAR_T*', 'CONST WCHAR_T*'], ['path', 'drive', 'dir', 'fname', 'ext'], 'void'), '_makepath_s': (6, ['CHAR*', 'SIZE_T', 'CONST CHAR*', 'CONST CHAR*', 'CONST CHAR*', 'CONST CHAR*'], ['path', 'sizeInBytes', 'drive', 'dir', 'fname', 'ext'], 'errno_t'), '_wmakepath_s': (6, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', 'CONST WCHAR_T*', 'CONST WCHAR_T*', 'CONST WCHAR_T*'], ['path', 'sizeInWords', 'drive', 'dir', 'fname', 'ext'], 'errno_t'), '_mktemp': (1, ['CHAR*'], ['template'], 'char*'), '_wmktemp': (1, ['WCHAR_T*'], ['template'], 'wchar_t*'), '_mktemp_s': (2, ['CHAR*', 'SIZE_T'], ['template', 'sizeInChars'], 'errno_t'), '_wmktemp_s': (2, ['WCHAR_T*', 'SIZE_T'], ['template', 'sizeInChars'], 'errno_t'), 'remove': (1, ['CONST CHAR*'], ['path'], 'int'), '_wremove': (1, ['CONST WCHAR_T*'], ['path'], 'int'), 'rename': (2, ['CONST CHAR*', 'CONST CHAR*'], ['oldname', 'newname'], 'int'), '_wrename': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['oldname', 'newname'], 'int'), '_splitpath': (5, ['CONST CHAR*', 'CHAR*', 'CHAR*', 'CHAR*', 'CHAR*'], ['path', 'drive', 'dir', 'fname', 'ext'], 'void'), '_wsplitpath': (5, ['CONST WCHAR_T*', 'WCHAR_T*', 'WCHAR_T*', 'WCHAR_T*', 'WCHAR_T*'], ['path', 'drive', 'dir', 'fname', 'ext'], 'void'), '_splitpath_s': (9, ['CONST CHAR*', 'CHAR*', 'SIZE_T', 'CHAR*', 'SIZE_T', 'CHAR*', 'SIZE_T', 'CHAR*', 'SIZE_T'], ['path', 'drive', 'driveNumberOfElements', 'dir', 'dirNumberOfElements', 'fname', 'nameNumberOfElements', 'ext', 'extNumberOfElements'], 'errno_t'), '_wsplitpath_s': (9, ['CONST WCHAR_T*', 'WCHAR_T*', 'SIZE_T', 'WCHAR_T*', 'SIZE_T', 'WCHAR_T*', 'SIZE_T', 'WCHAR_T*', 'SIZE_T'], ['path', 'drive', 'driveNumberOfElements', 'dir', 'dirNumberOfElements', 'fname', 'nameNumberOfElements', 'ext', 'extNumberOfElements'], 'errno_t'), '_stat': (2, ['CONST CHAR*', 'STRUCT _STAT*'], ['path', 'buffer'], 'int'), '_stat32': (2, ['CONST CHAR*', 'STRUCT _STAT32*'], ['path', 'buffer'], 'int'), '_stat64': (2, ['CONST CHAR*', 'STRUCT _STAT64*'], ['path', 'buffer'], 'int'), '_stati64': (2, ['CONST CHAR*', 'STRUCT _STATI64*'], ['path', 'buffer'], 'int'), '_stat32i64': (2, ['CONST CHAR*', 'STRUCT _STAT32I64*'], ['path', 'buffer'], 'int'), '_stat64i32': (2, ['CONST CHAR*', 'STRUCT _STAT64I32*'], ['path', 'buffer'], 'int'), '_wstat': (2, ['CONST WCHAR_T*', 'STRUCT _STAT*'], ['path', 'buffer'], 'int'), '_wstat32': (2, ['CONST WCHAR_T*', 'STRUCT _STAT32*'], ['path', 'buffer'], 'int'), '_wstat64': (2, ['CONST WCHAR_T*', 'STRUCT _STAT64*'], ['path', 'buffer'], 'int'), '_wstati64': (2, ['CONST WCHAR_T*', 'STRUCT _STATI64*'], ['path', 'buffer'], 'int'), '_wstat32i64': (2, ['CONST WCHAR_T*', 'STRUCT _STAT32I64*'], ['path', 'buffer'], 'int'), '_wstat64i32': (2, ['CONST WCHAR_T*', 'STRUCT _STAT64I32*'], ['path', 'buffer'], 'int'), '_unlink': (1, ['CONST CHAR*'], ['filename'], 'int'), '_wunlink': (1, ['CONST WCHAR_T*'], ['filename'], 'int'), 'acos': (1, ['DOUBLE'], ['x'], 'double'), 'acosf': (1, ['FLOAT'], ['x'], 'float'), 'asin': (1, ['DOUBLE'], ['x'], 'double'), 'asinf': (1, ['FLOAT'], ['x'], 'float'), 'atan': (1, ['DOUBLE'], ['x'], 'double'), 'atan2': (2, ['DOUBLE', 'DOUBLE'], ['y', 'x'], 'double'), 'atanf': (1, ['FLOAT'], ['x'], 'float'), 'atan2f': (2, ['FLOAT', 'FLOAT'], ['y', 'x'], 'float'), '_cabs': (1, ['STRUCT _COMPLEX'], ['z'], 'double'), 'ceil': (1, ['DOUBLE'], ['x'], 'double'), 'ceilf': (1, ['FLOAT'], ['x'], 'float'), '_chgsign': (1, ['DOUBLE'], ['x'], 'double'), '_chgsignf': (1, ['FLOAT'], ['x'], 'float'), '_clearfp': (0, [], [], '[_SW_FLOAT]'), '_control87': (2, ['CONTROL_BITS', 'CONTROL_MASK'], ['new', 'mask'], 'unsigned int'), '_controlfp': (2, ['CONTROL_BITS', 'CONTROL_MASK'], ['new', 'mask'], 'unsigned int'), '__control87_2': (4, ['CONTROL_BITS', 'CONTROL_MASK', 'UNSIGNED INT*', 'UNSIGNED INT*'], ['new', 'mask', 'x86_cw', 'sse2_cw'], 'int'), '_controlfp_s': (3, ['UNSIGNED INT*', 'CONTROL_BITS', 'CONTROL_MASK'], ['currentControl', 'newControl', 'mask'], 'errno_t'), '_copysign': (2, ['DOUBLE', 'DOUBLE'], ['x', 'y'], 'double'), '_copysignf': (2, ['FLOAT', 'FLOAT'], ['x', 'y'], 'float'), 'cos': (1, ['DOUBLE'], ['x'], 'double'), 'cosf': (1, ['FLOAT'], ['x'], 'float'), 'cosh': (1, ['DOUBLE'], ['x'], 'double'), 'coshf': (1, ['FLOAT'], ['x'], 'float'), 'div': (2, ['INT', 'INT'], ['numer', 'denom'], 'div_t'), 'exp': (1, ['DOUBLE'], ['x'], 'double'), 'expf': (1, ['FLOAT'], ['x'], 'float'), 'fabs': (1, ['DOUBLE'], ['x'], 'double'), '_finite': (1, ['DOUBLE'], ['x'], 'int'), 'floor': (1, ['DOUBLE'], ['x'], 'double'), 'floorf': (1, ['FLOAT'], ['x'], 'float'), 'fmod': (2, ['DOUBLE', 'DOUBLE'], ['x', 'y'], 'double'), 'fmodf': (2, ['FLOAT', 'FLOAT'], ['x', 'y'], 'float'), '_fpclass': (1, ['DOUBLE'], ['x'], '[_FPCLASS]'), '_fpieee_flt': (3, ['UNSIGNED LONG', 'STRUCT _EXCEPTION_POINTERS*', 'VOID*'], ['excCode', 'excInfo', 'handler'], 'int'), '_fpreset': (0, [], [], 'void'), 'frexp': (2, ['DOUBLE', 'INT*'], ['x', 'expptr'], 'double'), '_hypot': (2, ['DOUBLE', 'DOUBLE'], ['x', 'y'], 'double'), '_hypotf': (2, ['FLOAT', 'FLOAT'], ['x', 'y'], 'float'), '_isnan': (1, ['DOUBLE'], ['x'], 'int'), 'ldexp': (2, ['DOUBLE', 'INT'], ['x', 'exp'], 'double'), 'ldiv': (2, ['LONG INT', 'LONG INT'], ['numer', 'denom'], 'ldiv_t'), 'log': (1, ['DOUBLE'], ['x'], 'double'), 'logf': (1, ['FLOAT'], ['x'], 'float'), 'log10': (1, ['DOUBLE'], ['x'], 'double'), 'log10f': (1, ['FLOAT'], ['x'], 'float'), '_logb': (1, ['DOUBLE'], ['x'], 'double'), '_lrotl': (2, ['UNSIGNED LONG', 'INT'], ['value', 'shift'], 'unsigned long'), '_lrotr': (2, ['UNSIGNED LONG', 'INT'], ['value', 'shift'], 'unsigned long'), '_matherr': (1, ['STRUCT _EXCEPTION*'], ['except'], 'int'), '__setusermatherr': (1, ['_HANDLE_MATH_ERROR'], ['pf'], 'void'), 'modf': (2, ['DOUBLE', 'DOUBLE*'], ['x', 'intptr'], 'double'), 'modff': (2, ['FLOAT', 'FLOAT*'], ['x', 'intptr'], 'float'), '_nextafter': (2, ['DOUBLE', 'DOUBLE'], ['x', 'y'], 'double'), 'pow': (2, ['DOUBLE', 'DOUBLE'], ['x', 'y'], 'double'), 'powf': (2, ['FLOAT', 'FLOAT'], ['x', 'y'], 'float'), 'rand': (0, [], [], 'int'), 'rand_s': (1, ['UNSIGNED INT*'], ['randomValue'], 'errno_t'), '_rotl': (2, ['UNSIGNED INT', 'INT'], ['value', 'shift'], 'unsigned int'), '_rotl64': (2, ['UNSIGNED __INT64', 'INT'], ['value', 'shift'], 'unsigned __int64'), '_rotr': (2, ['UNSIGNED INT', 'INT'], ['value', 'shift'], 'unsigned int'), '_rotr64': (2, ['UNSIGNED __INT64', 'INT'], ['value', 'shift'], 'unsigned __int64'), '_scalb': (2, ['DOUBLE', 'LONG'], ['x', 'exp'], 'double'), '_set_controlfp': (2, ['UNSIGNED INT', 'UNSIGNED INT'], ['newControl', 'mask'], 'void'), 'sin': (1, ['DOUBLE'], ['x'], 'double'), 'sinf': (1, ['FLOAT'], ['x'], 'float'), 'sinh': (1, ['DOUBLE'], ['x'], 'double'), 'sinhf': (1, ['FLOAT'], ['x'], 'float'), 'sqrt': (1, ['DOUBLE'], ['x'], 'double'), 'sqrtf': (1, ['FLOAT'], ['x'], 'float'), 'srand': (1, ['UNSIGNED INT'], ['seed'], 'void'), '_statusfp': (0, [], [], 'unsigned int'), 'tan': (1, ['DOUBLE'], ['x'], 'double'), 'tanf': (1, ['FLOAT'], ['x'], 'float'), 'tanh': (1, ['DOUBLE'], ['x'], 'double'), 'tanhf': (1, ['FLOAT'], ['x'], 'float'), '_y0': (1, ['DOUBLE'], ['x'], 'double'), '_y1': (1, ['DOUBLE'], ['x'], 'double'), '_yn': (2, ['INT', 'DOUBLE'], ['n', 'x'], 'double'), '_j0': (1, ['DOUBLE'], ['x'], 'double'), '_j1': (1, ['DOUBLE'], ['x'], 'double'), '_jn': (2, ['INT', 'DOUBLE'], ['n', 'x'], 'double'), '_set_SSE2_enable': (1, ['INT'], ['flag'], 'int'), '_set_fmode': (1, ['FILE_TRANSLATION_MODE'], ['mode'], 'errno_t'), '_get_fmode': (1, ['FILE_TRANSLATION_MODE*'], ['pmode'], 'errno_t'), '_setmode': (2, ['INT', 'FILE_TRANSLATION_MODE'], ['fd', 'mode'], '[file_translation_mode]'), '__p__fmode': (0, [], [], '[file_translation_mode*]'), 'clearerr': (1, ['FILE*'], ['stream'], 'void'), 'clearerr_s': (1, ['FILE*'], ['stream'], 'errno_t'), 'fclose': (1, ['FILE*'], ['stream'], '[RET_EOF]'), '_fcloseall': (0, [], [], '[RET_EOF]'), '_fdopen': (2, ['INT', 'CONST CHAR*'], ['fd', 'mode'], 'FILE*'), '_wfdopen': (2, ['INT', 'CONST WCHAR_T*'], ['fd', 'mode'], 'FILE*'), 'feof': (1, ['FILE*'], ['stream'], 'int'), 'ferror': (1, ['FILE*'], ['stream'], 'int'), 'fflush': (1, ['FILE*'], ['stream'], '[RET_EOF]'), 'fgetc': (1, ['FILE*'], ['stream'], '[RET_EOF]'), 'fgetwc': (1, ['FILE*'], ['stream'], '[RET_WEOF]'), 'fgetpos': (2, ['FILE*', 'FPOS_T*'], ['stream', 'pos'], 'int'), 'fgets': (3, ['CHAR*', 'INT', 'FILE*'], ['str', 'n', 'stream'], 'char*'), 'fgetws': (3, ['WCHAR_T*', 'INT', 'FILE*'], ['str', 'n', 'stream'], 'wchar_t*'), '_fileno': (1, ['FILE*'], ['stream'], 'int'), '_flushall': (0, [], [], 'int'), 'fopen': (2, ['CONST CHAR*', 'CONST CHAR*'], ['filename', 'mode'], 'FILE*'), '_wfopen': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['filename', 'mode'], 'FILE*'), 'fopen_s': (3, ['FILE**', 'CONST CHAR*', 'CONST CHAR*'], ['pFile', 'filename', 'mode'], 'errno_t'), '_wfopen_s': (3, ['FILE**', 'CONST WCHAR_T*', 'CONST WCHAR_T*'], ['pFile', 'filename', 'mode'], 'errno_t'), 'fprintf': (2, ['FILE*', 'CONST CHAR*'], ['stream', 'format'], 'int'), '_fprintf_l': (3, ['FILE*', 'CONST CHAR*', '_LOCALE_T'], ['stream', 'format', 'locale'], 'int'), 'fwprintf': (2, ['FILE*', 'CONST WCHAR_T*'], ['stream', 'format'], 'int'), '_fwprintf_l': (3, ['FILE*', 'CONST WCHAR_T*', '_LOCALE_T'], ['stream', 'format', 'locale'], 'int'), 'fprintf_s': (2, ['FILE*', 'CONST CHAR*'], ['stream', 'format'], 'int'), '_fprintf_s_l': (3, ['FILE*', 'CONST CHAR*', '_LOCALE_T'], ['stream', 'format', 'locale'], 'int'), 'fwprintf_s': (2, ['FILE*', 'CONST WCHAR_T*'], ['stream', 'format'], 'int'), '_fwprintf_s_l': (3, ['FILE*', 'CONST WCHAR_T*', '_LOCALE_T'], ['stream', 'format', 'locale'], 'int'), 'fputc': (2, ['INT', 'FILE*'], ['c', 'stream'], '[RET_EOF]'), 'fputwc': (2, ['WCHAR_T', 'FILE*'], ['c', 'stream'], '[RET_WEOF]'), 'fputs': (2, ['CONST CHAR*', 'FILE*'], ['str', 'stream'], '[RET_EOF]'), 'fputws': (2, ['CONST WCHAR_T*', 'FILE*'], ['str', 'stream'], '[RET_WEOF_INT]'), 'fread': (4, ['VOID*', 'SIZE_T', 'SIZE_T', 'FILE*'], ['buffer', 'size', 'count', 'stream'], 'size_t'), 'freopen': (3, ['CONST CHAR*', 'CONST CHAR*', 'FILE*'], ['path', 'mode', 'stream'], 'FILE*'), '_wfreopen': (3, ['CONST WCHAR_T*', 'CONST WCHAR_T*', 'FILE*'], ['path', 'mode', 'stream'], 'FILE*'), 'freopen_s': (4, ['FILE**', 'CONST CHAR*', 'CONST CHAR*', 'FILE*'], ['pFile', 'path', 'mode', 'stream'], 'errno_t'), '_wfreopen_s': (4, ['FILE**', 'CONST WCHAR_T*', 'CONST WCHAR_T*', 'FILE*'], ['pFile', 'path', 'mode', 'stream'], 'errno_t'), 'fscanf': (2, ['FILE*', 'CONST CHAR*'], ['stream', 'format'], '[RET_EOF]'), '_fscanf_l': (3, ['FILE*', 'CONST CHAR*', '_LOCALE_T'], ['stream', 'format', 'locale'], '[RET_EOF]'), 'fwscanf': (2, ['FILE*', 'CONST WCHAR_T*'], ['stream', 'format'], '[RET_EOF]'), '_fwscanf_l': (3, ['FILE*', 'CONST WCHAR_T*', '_LOCALE_T'], ['stream', 'format', 'locale'], '[RET_EOF]'), 'fscanf_s': (2, ['FILE*', 'CONST CHAR*'], ['stream', 'format'], '[RET_EOF]'), '_fscanf_s_l': (3, ['FILE*', 'CONST CHAR*', '_LOCALE_T'], ['stream', 'format', 'locale'], '[RET_EOF]'), 'fwscanf_s': (2, ['FILE*', 'CONST WCHAR_T*'], ['stream', 'format'], '[RET_EOF]'), '_fwscanf_s_l': (3, ['FILE*', 'CONST WCHAR_T*', '_LOCALE_T'], ['stream', 'format', 'locale'], '[RET_EOF]'), 'fseek': (3, ['FILE*', 'LONG', 'SEEK_TYPE'], ['stream', 'offset', 'origin'], 'int'), '_fseeki64': (3, ['FILE*', '__INT64', 'SEEK_TYPE'], ['stream', 'offset', 'origin'], 'int'), 'fsetpos': (2, ['FILE*', 'CONST FPOS_T*'], ['stream', 'pos'], 'int'), '_fsopen': (3, ['CONST CHAR*', 'CONST CHAR*', 'SHARE_FLAG'], ['filename', 'mode', 'shflag'], 'FILE*'), '_wfsopen': (3, ['CONST WCHAR_T*', 'CONST WCHAR_T*', 'SHARE_FLAG'], ['filename', 'mode', 'shflag'], 'FILE*'), 'ftell': (1, ['FILE*'], ['stream'], 'long'), '_ftelli64': (1, ['FILE*'], ['stream'], '__int64'), 'fwrite': (4, ['CONST VOID*', 'SIZE_T', 'SIZE_T', 'FILE*'], ['buffer', 'size', 'count', 'stream'], 'size_t'), 'getc': (1, ['FILE*'], ['stream'], '[RET_EOF]'), 'getwc': (1, ['FILE*'], ['stream'], '[RET_WEOF]'), '_getmaxstdio': (0, [], [], 'int'), 'gets': (1, ['CHAR*'], ['buffer'], 'char*'), '_getws': (1, ['WCHAR_T*'], ['buffer'], 'wchar_t*'), 'gets_s': (2, ['CHAR*', 'SIZE_T'], ['buffer', 'sizeInCharacters'], 'char*'), '_getws_s': (2, ['WCHAR_T*', 'SIZE_T'], ['buffer', 'sizeInCharacters'], 'wchar_t*'), '_getw': (1, ['FILE*'], ['stream'], '[RET_EOF]'), 'putc': (2, ['INT', 'FILE*'], ['c', 'stream'], '[RET_EOF]'), 'putwc': (2, ['WCHAR_T', 'FILE*'], ['c', 'stream'], '[RET_WEOF]'), 'puts': (1, ['CONST CHAR*'], ['str'], '[RET_EOF]'), '_putws': (1, ['CONST WCHAR_T*'], ['str'], '[RET_WEOF_INT]'), '_putw': (2, ['INT', 'FILE*'], ['binint', 'stream'], '[RET_EOF]'), 'rewind': (1, ['FILE*'], ['stream'], 'void'), '_rmtmp': (0, [], [], 'int'), 'setbuf': (2, ['FILE*', 'CHAR*'], ['stream', 'buffer'], 'void'), '_setmaxstdio': (1, ['INT'], ['newmax'], 'int'), 'setvbuf': (4, ['FILE*', 'CHAR*', 'BUFFER_MODE', 'SIZE_T'], ['stream', 'buffer', 'mode', 'size'], 'int'), '_tempnam': (2, ['CONST CHAR*', 'CONST CHAR*'], ['dir', 'prefix'], 'char*'), '_tempnam_dbg': (5, ['CONST CHAR*', 'CONST CHAR*', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['dir', 'prefix', 'blockType', 'filename', 'linenumber'], 'char*'), '_wtempnam': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['dir', 'prefix'], 'wchar_t*'), '_wtempnam_dbg': (5, ['CONST WCHAR_T*', 'CONST WCHAR_T*', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['dir', 'prefix', 'blockType', 'filename', 'linenumber'], 'wchar_t*'), 'tmpnam': (1, ['CHAR*'], ['str'], 'char*'), '_wtmpnam': (1, ['WCHAR_T*'], ['str'], 'wchar_t*'), 'tmpfile': (0, [], [], 'FILE*'), 'tmpfile_s': (1, ['FILE**'], ['pFilePtr'], 'errno_t'), 'tmpnam_s': (2, ['CHAR*', 'SIZE_T'], ['str', 'sizeInChars'], 'errno_t'), '_wtmpnam_s': (2, ['WCHAR_T*', 'SIZE_T'], ['str', 'sizeInChars'], 'errno_t'), 'ungetc': (2, ['INT', 'FILE*'], ['c', 'stream'], '[RET_EOF]'), 'ungetwc': (2, ['WINT_T', 'FILE*'], ['c', 'stream'], '[RET_WEOF]'), '_vcprintf_s': (2, ['CONST CHAR*', 'VA_LIST'], ['format', 'argptr'], 'int'), '_vcprintf_s_l': (3, ['CONST CHAR*', '_LOCALE_T', 'VA_LIST'], ['format', 'locale', 'argptr'], 'int'), '_vcwprintf_s': (2, ['CONST WCHAR_T*', 'VA_LIST'], ['format', 'argptr'], 'int'), '_vcwprintf_s_l': (3, ['CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['format', 'locale', 'argptr'], 'int'), 'vfprintf_s': (3, ['FILE*', 'CONST CHAR*', 'VA_LIST'], ['stream', 'format', 'argptr'], 'int'), '_vfprintf_s_l': (4, ['FILE*', 'CONST CHAR*', '_LOCALE_T', 'VA_LIST'], ['stream', 'format', 'locale', 'argptr'], 'int'), 'vfwprintf_s': (3, ['FILE*', 'CONST WCHAR_T*', 'VA_LIST'], ['stream', 'format', 'argptr'], 'int'), '_vfwprintf_s_l': (4, ['FILE*', 'CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['stream', 'format', 'locale', 'argptr'], 'int'), 'vprintf_s': (2, ['CONST CHAR*', 'VA_LIST'], ['format', 'argptr'], 'int'), '_vprintf_s_l': (3, ['CONST CHAR*', '_LOCALE_T', 'VA_LIST'], ['format', 'locale', 'argptr'], 'int'), 'vwprintf_s': (2, ['CONST WCHAR_T*', 'VA_LIST'], ['format', 'argptr'], 'int'), '_vwprintf_s_l': (3, ['CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['format', 'locale', 'argptr'], 'int'), 'printf': (1, ['CONST CHAR*'], ['format'], 'int'), '_printf_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['format', 'locale'], 'int'), 'wprintf': (1, ['CONST WCHAR_T*'], ['format'], 'int'), '_wprintf_l': (2, ['CONST WCHAR_T*', '_LOCALE_T'], ['format', 'locale'], 'int'), 'printf_s': (1, ['CONST CHAR*'], ['format'], 'int'), '_printf_s_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['format', 'locale'], 'int'), 'wprintf_s': (1, ['CONST WCHAR_T*'], ['format'], 'int'), '_wprintf_s_l': (2, ['CONST WCHAR_T*', '_LOCALE_T'], ['format', 'locale'], 'int'), 'scanf': (1, ['CONST CHAR*'], ['format'], '[RET_EOF]'), '_scanf_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['format', 'locale'], '[RET_EOF]'), 'wscanf': (1, ['CONST WCHAR_T*'], ['format'], '[RET_EOF]'), '_wscanf_l': (2, ['CONST WCHAR_T*', '_LOCALE_T'], ['format', 'locale'], '[RET_EOF]'), 'scanf_s': (1, ['CONST CHAR*'], ['format'], '[RET_EOF]'), '_scanf_s_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['format', 'locale'], '[RET_EOF]'), 'wscanf_s': (1, ['CONST WCHAR_T*'], ['format'], '[RET_EOF]'), '_wscanf_s_l': (2, ['CONST WCHAR_T*', '_LOCALE_T'], ['format', 'locale'], '[RET_EOF]'), '_vcprintf': (2, ['CONST CHAR*', 'VA_LIST'], ['format', 'argptr'], 'int'), '_vcprintf_l': (3, ['CONST CHAR*', '_LOCALE_T', 'VA_LIST'], ['format', 'locale', 'argptr'], 'int'), '_vcwprintf': (2, ['CONST WCHAR_T*', 'VA_LIST'], ['format', 'argptr'], 'int'), '_vcwprintf_l': (3, ['CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['format', 'locale', 'argptr'], 'int'), '_vcprintf_p': (2, ['CONST CHAR*', 'VA_LIST'], ['format', 'argptr'], 'int'), '_vcprintf_p_l': (3, ['CONST CHAR*', '_LOCALE_T', 'VA_LIST'], ['format', 'locale', 'argptr'], 'int'), '_vcwprintf_p': (2, ['CONST WCHAR_T*', 'VA_LIST'], ['format', 'argptr'], 'int'), '_vcwprintf_p_l': (3, ['CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['format', 'locale', 'argptr'], 'int'), 'vfprintf': (3, ['FILE*', 'CONST CHAR*', 'VA_LIST'], ['stream', 'format', 'argptr'], 'int'), '_vfprintf_l': (4, ['FILE*', 'CONST CHAR*', '_LOCALE_T', 'VA_LIST'], ['stream', 'format', 'locale', 'argptr'], 'int'), 'vfwprintf': (3, ['FILE*', 'CONST WCHAR_T*', 'VA_LIST'], ['stream', 'format', 'argptr'], 'int'), '_vfwprintf_l': (4, ['FILE*', 'CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['stream', 'format', 'locale', 'argptr'], 'int'), '_vfprintf_p': (3, ['FILE*', 'CONST CHAR*', 'VA_LIST'], ['stream', 'format', 'argptr'], 'int'), '_vfprintf_p_l': (4, ['FILE*', 'CONST CHAR*', '_LOCALE_T', 'VA_LIST'], ['stream', 'format', 'locale', 'argptr'], 'int'), '_vfwprintf_p': (3, ['FILE*', 'CONST WCHAR_T*', 'VA_LIST'], ['stream', 'format', 'argptr'], 'int'), '_vfwprintf_p_l': (4, ['FILE*', 'CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['stream', 'format', 'locale', 'argptr'], 'int'), 'vprintf': (2, ['CONST CHAR*', 'VA_LIST'], ['format', 'argptr'], 'int'), '_vprintf_l': (3, ['CONST CHAR*', '_LOCALE_T', 'VA_LIST'], ['format', 'locale', 'argptr'], 'int'), 'vwprintf': (2, ['CONST WCHAR_T*', 'VA_LIST'], ['format', 'argptr'], 'int'), '_vwprintf_l': (3, ['CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['format', 'locale', 'argptr'], 'int'), '_vprintf_p': (2, ['CONST CHAR*', 'VA_LIST'], ['format', 'argptr'], 'int'), '_vprintf_p_l': (3, ['CONST CHAR*', '_LOCALE_T', 'VA_LIST'], ['format', 'locale', 'argptr'], 'int'), '_vwprintf_p': (2, ['CONST WCHAR_T*', 'VA_LIST'], ['format', 'argptr'], 'int'), '_vwprintf_p_l': (3, ['CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['format', 'locale', 'argptr'], 'int'), '_vscprintf': (2, ['CONST CHAR*', 'VA_LIST'], ['format', 'argptr'], 'int'), '_vscprintf_l': (3, ['CONST CHAR*', '_LOCALE_T', 'VA_LIST'], ['format', 'locale', 'argptr'], 'int'), '_vscwprintf': (2, ['CONST WCHAR_T*', 'VA_LIST'], ['format', 'argptr'], 'int'), '_vscwprintf_l': (3, ['CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['format', 'locale', 'argptr'], 'int'), '_vscprintf_p': (2, ['CONST CHAR*', 'VA_LIST'], ['format', 'argptr'], 'int'), '_vscprintf_p_l': (3, ['CONST CHAR*', '_LOCALE_T', 'VA_LIST'], ['format', 'locale', 'argptr'], 'int'), '_vscwprintf_p': (2, ['CONST WCHAR_T*', 'VA_LIST'], ['format', 'argptr'], 'int'), '_vscwprintf_p_l': (3, ['CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['format', 'locale', 'argptr'], 'int'), '_wprintf_p': (1, ['CONST WCHAR_T*'], ['format'], 'int'), '_wprintf_p_l': (2, ['CONST WCHAR_T*', '_LOCALE_T'], ['format', 'locale'], 'int'), '_fprintf_p': (2, ['FILE*', 'CONST CHAR*'], ['stream', 'format'], 'int'), '_fprintf_p_l': (3, ['FILE*', 'CONST CHAR*', '_LOCALE_T'], ['stream', 'format', 'locale'], 'int'), '_fwprintf_p': (2, ['FILE*', 'CONST WCHAR_T*'], ['stream', 'format'], 'int'), '_fwprintf_p_l': (3, ['FILE*', 'CONST WCHAR_T*', '_LOCALE_T'], ['stream', 'format', 'locale'], 'int'), '_printf_p': (1, ['CONST CHAR*'], ['format'], 'int'), '_printf_p_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['format', 'locale'], 'int'), 'putchar': (1, ['INT'], ['c'], '[RET_EOF]'), 'putwchar': (1, ['WCHAR_T'], ['c'], '[RET_WEOF]'), 'getchar': (0, [], [], '[RET_EOF]'), 'getwchar': (0, [], [], '[RET_WEOF]'), '_fgetchar': (0, [], [], '[RET_EOF]'), '_fgetwchar': (0, [], [], '[RET_WEOF]'), '_fputchar': (1, ['INT'], ['c'], '[RET_EOF]'), '_fputwchar': (1, ['WCHAR_T'], ['c'], '[RET_WEOF]'), '_lock_file': (1, ['FILE*'], ['file'], 'void'), '_unlock_file': (1, ['FILE*'], ['file'], 'void'), '_close': (1, ['INT'], ['fd'], 'int'), '_commit': (1, ['INT'], ['fd'], 'int'), '_creat': (2, ['CONST CHAR*', 'PERM_MODE'], ['filename', 'pmode'], 'int'), '_wcreat': (2, ['CONST WCHAR_T*', 'PERM_MODE'], ['filename', 'pmode'], 'int'), '_dup': (1, ['INT'], ['fd'], 'int'), '_dup2': (2, ['INT', 'INT'], ['fd1', 'fd2'], 'int'), '_eof': (1, ['INT'], ['fd'], 'int'), '_lseek': (3, ['INT', 'LONG', 'SEEK_TYPE'], ['fd', 'offset', 'origin'], 'long'), '_lseeki64': (3, ['INT', '__INT64', 'SEEK_TYPE'], ['fd', 'offset', 'origin'], '__int64'), '_open': (3, ['CONST CHAR*', 'OPEN_FLAG', 'PERM_MODE'], ['filename', 'oflag', 'pmode'], 'int'), '_wopen': (3, ['CONST WCHAR_T*', 'OPEN_FLAG', 'PERM_MODE'], ['filename', 'oflag', 'pmode'], 'int'), '_read': (3, ['INT', 'VOID*', 'UNSIGNED INT'], ['fd', 'buffer', 'count'], 'int'), '_sopen': (4, ['CONST CHAR*', 'OPEN_FLAG', 'SHARE_FLAG', 'PERM_MODE'], ['filename', 'oflag', 'shflag', 'pmode'], 'int'), '_wsopen': (4, ['CONST WCHAR_T*', 'OPEN_FLAG', 'SHARE_FLAG', 'PERM_MODE'], ['filename', 'oflag', 'shflag', 'pmode'], 'int'), '_sopen_s': (5, ['INT*', 'CONST CHAR*', 'OPEN_FLAG', 'SHARE_FLAG', 'PERM_MODE'], ['pfh', 'filename', 'oflag', 'shflag', 'pmode'], 'errno_t'), '_wsopen_s': (5, ['INT*', 'CONST WCHAR_T*', 'OPEN_FLAG', 'SHARE_FLAG', 'PERM_MODE'], ['pfh', 'filename', 'oflag', 'shflag', 'pmode'], 'errno_t'), '_tell': (1, ['INT'], ['handle'], 'long'), '_telli64': (1, ['INT'], ['handle'], '__int64'), '_umask': (1, ['PERM_MODE'], ['pmode'], '[perm_mode]'), '_umask_s': (2, ['PERM_MODE', 'PERM_MODE*'], ['mode', 'pOldMode'], 'errno_t'), '_write': (3, ['INT', 'CONST VOID*', 'UNSIGNED INT'], ['fd', 'buffer', 'count'], 'int'), '_cgets': (1, ['CHAR*'], ['buffer'], 'char*'), '_cgetws': (1, ['WCHAR_T*'], ['buffer'], 'wchar_t*'), '_cgets_s': (3, ['CHAR*', 'SIZE_T', 'SIZE_T*'], ['buffer', 'numberOfElements', 'pSizeRead'], 'errno_t'), '_cgetws_s': (2, ['WCHAR_T*', 'SIZE_T*'], ['buffer', 'pSizeRead'], 'errno_t'), '_cprintf': (1, ['CONST CHAR*'], ['format'], 'int'), '_cprintf_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['format', 'locale'], 'int'), '_cwprintf': (1, ['CONST WCHAR*'], ['format'], 'int'), '_cwprintf_l': (2, ['CONST WCHAR*', '_LOCALE_T'], ['format', 'locale'], 'int'), '_cprintf_s': (1, ['CONST CHAR*'], ['format'], 'int'), '_cprintf_s_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['format', 'locale'], 'int'), '_cwprintf_s': (1, ['CONST WCHAR*'], ['format'], 'int'), '_cwprintf_s_l': (2, ['CONST WCHAR*', '_LOCALE_T'], ['format', 'locale'], 'int'), '_cputs': (1, ['CONST CHAR*'], ['str'], 'int'), '_cputws': (1, ['CONST WCHAR_T*'], ['str'], 'int'), '_cscanf': (1, ['CONST CHAR*'], ['format'], '[RET_EOF]'), '_cscanf_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['format', 'locale'], '[RET_EOF]'), '_cwscanf': (1, ['CONST WCHAR_T*'], ['format'], '[RET_EOF]'), '_cwscanf_l': (2, ['CONST WCHAR_T*', '_LOCALE_T'], ['format', 'locale'], '[RET_EOF]'), '_cscanf_s': (1, ['CONST CHAR*'], ['format'], '[RET_EOF]'), '_cscanf_s_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['format', 'locale'], '[RET_EOF]'), '_cwscanf_s': (1, ['CONST WCHAR_T*'], ['format'], '[RET_EOF]'), '_cwscanf_s_l': (2, ['CONST WCHAR_T*', '_LOCALE_T'], ['format', 'locale'], '[RET_EOF]'), '_getch': (0, [], [], 'int'), '_getwch': (0, [], [], 'wint_t'), '_getche': (0, [], [], 'int'), '_getwche': (0, [], [], 'wint_t'), '_inp': (1, ['UNSIGNED SHORT'], ['port'], 'int'), '_inpw': (1, ['UNSIGNED SHORT'], ['port'], 'unsigned short'), '_inpd': (1, ['UNSIGNED SHORT'], ['port'], 'unsigned long'), '_kbhit': (0, [], [], 'int'), '_outp': (2, ['UNSIGNED SHORT', 'INT'], ['port', 'databyte'], 'int'), '_outpw': (2, ['UNSIGNED SHORT', 'UNSIGNED SHORT'], ['port', 'dataword'], 'unsigned short'), '_outpd': (2, ['UNSIGNED SHORT', 'UNSIGNED LONG'], ['port', 'dataword'], 'unsigned long'), '_putch': (1, ['INT'], ['c'], '[RET_EOF]'), '_putwch': (1, ['WCHAR_T'], ['c'], '[RET_WEOF]'), '_ungetch': (1, ['INT'], ['c'], '[RET_EOF]'), '_ungetwch': (1, ['WINT_T'], ['c'], '[RET_WEOF]'), '_cprintf_p': (1, ['CONST CHAR*'], ['format'], 'int'), '_cprintf_p_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['format', 'locale'], 'int'), '_cwprintf_p': (1, ['CONST WCHAR*'], ['format'], 'int'), '_cwprintf_p_l': (2, ['CONST WCHAR*', '_LOCALE_T'], ['format', 'locale'], 'int'), '_fclose_nolock': (1, ['FILE*'], ['stream'], '[RET_EOF]'), '_fflush_nolock': (1, ['FILE*'], ['stream'], '[RET_EOF]'), '_fgetwc_nolock': (1, ['FILE*'], ['stream'], '[RET_WEOF]'), '_fread_nolock': (4, ['VOID*', 'SIZE_T', 'SIZE_T', 'FILE*'], ['buffer', 'size', 'count', 'stream'], 'size_t'), '_fseek_nolock': (3, ['FILE*', 'LONG', 'SEEK_TYPE'], ['stream', 'offset', 'origin'], 'int'), '_fseeki64_nolock': (3, ['FILE*', '__INT64', 'SEEK_TYPE'], ['stream', 'offset', 'origin'], 'int'), '_ftell_nolock': (1, ['FILE*'], ['stream'], 'long'), '_ftelli64_nolock': (1, ['FILE*'], ['stream'], '__int64'), '_fwrite_nolock': (4, ['CONST VOID*', 'SIZE_T', 'SIZE_T', 'FILE*'], ['buffer', 'size', 'count', 'stream'], 'size_t'), '_getc_nolock': (1, ['FILE*'], ['stream'], '[RET_EOF]'), '_getch_nolock': (0, [], [], 'int'), '_getwch_nolock': (0, [], [], 'wint_t'), '_getche_nolock': (0, [], [], 'int'), '_getwche_nolock': (0, [], [], 'wint_t'), '_getdcwd_nolock': (3, ['INT', 'CHAR*', 'INT'], ['drive', 'buffer', 'maxlen'], 'char*'), '_wgetdcwd_nolock': (3, ['INT', 'WCHAR_T*', 'INT'], ['drive', 'buffer', 'maxlen'], 'wchar_t*'), '_putch_nolock': (1, ['INT'], ['c'], '[RET_EOF]'), '_putwch_nolock': (1, ['WCHAR_T'], ['c'], '[RET_WEOF]'), '_ungetc_nolock': (2, ['INT', 'FILE*'], ['c', 'stream'], '[RET_EOF]'), '_ungetwc_nolock': (2, ['WINT_T', 'FILE*'], ['c', 'stream'], '[RET_WEOF]'), '_ungetch_nolock': (1, ['INT'], ['c'], '[RET_EOF]'), '_ungetwch_nolock': (1, ['WINT_T'], ['c'], '[RET_WEOF]'), '_fputwc_nolock': (2, ['WCHAR_T', 'FILE*'], ['c', 'stream'], '[RET_WEOF]'), 'setlocale': (2, ['LOCALE_CATEGORY', 'CONST CHAR*'], ['category', 'locale'], 'char*'), '_wsetlocale': (2, ['LOCALE_CATEGORY', 'CONST WCHAR_T*'], ['category', 'locale'], 'wchar_t*'), '_create_locale': (2, ['LOCALE_CATEGORY', 'CONST CHAR*'], ['category', 'locale'], '_locale_t'), '__create_locale': (2, ['LOCALE_CATEGORY', 'CONST CHAR*'], ['category', 'locale'], '_locale_t'), '_free_locale': (1, ['_LOCALE_T'], ['locale'], 'void'), '__free_locale': (1, ['_LOCALE_T'], ['locale'], 'void'), '_get_current_locale': (0, [], [], '_locale_t'), '__get_current_locale': (0, [], [], '_locale_t'), '_configthreadlocale': (1, ['THREAD_LOCALE_TYPE'], ['type'], '[thread_locale_type]'), 'localeconv': (0, [], [], 'struct lconv*'), '_mbccpy': (2, ['UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*'], ['dest', 'src'], 'void'), '_mbccpy_l': (3, ['UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', '_LOCALE_T'], ['dest', 'src', 'locale'], 'void'), '_mbccpy_s': (4, ['UNSIGNED CHAR*', 'SIZE_T', 'INT*', 'CONST UNSIGNED CHAR*'], ['dest', 'buffSizeInBytes', 'pCopied', 'src'], 'errno_t'), '_mbccpy_s_l': (5, ['UNSIGNED CHAR*', 'SIZE_T', 'INT*', 'CONST UNSIGNED CHAR*', '_LOCALE_T'], ['dest', 'buffSizeInBytes', 'pCopied', 'src', 'locale'], 'errno_t'), '_getmbcp': (0, [], [], 'int'), '_setmbcp': (1, ['_MB_CP_TYPE'], ['codepage'], 'int'), '___mb_cur_max_func': (0, [], [], 'int'), '__mb_cur_max': (0, [], [], 'int'), '___lc_codepage_func': (0, [], [], 'UINT'), '___lc_handle_func': (0, [], [], 'LCID*'), '__crtLCMapStringW': (6, ['LCID', 'LOCALEMAPPINGFLAGS', 'LPCWSTR', 'INT', 'LPWSTR', 'INT'], ['Locale', 'dwMapFlags', 'lpSrcStr', 'cchSrc', 'lpDestStr', 'cchDest'], 'int'), 'calloc': (2, ['SIZE_T', 'SIZE_T'], ['num', 'size'], 'void*'), '??3@YAXPAX@Z': (1, ['VOID*'], ['object'], 'void'), '??3@YAXPEAX@Z': (1, ['VOID*'], ['object'], 'void'), '??_V@YAXPAX@Z': (1, ['VOID*'], ['object'], 'void'), '??_V@YAXPEAX@Z': (1, ['VOID*'], ['object'], 'void'), '_expand': (2, ['VOID*', 'SIZE_T'], ['memblock', 'size'], 'void*'), 'free': (1, ['VOID*'], ['memblock'], 'void'), '_freea': (1, ['VOID*'], ['memblock'], 'void'), '_get_heap_handle': (0, [], [], 'intptr_t'), '_get_sbh_threshold': (0, [], [], 'size_t'), '_heapadd': (2, ['VOID*', 'SIZE_T'], ['memblock', 'size'], 'int'), '_heapchk': (0, [], [], '[HEAP_RESULT]'), '_heapmin': (0, [], [], 'int'), '_heapset': (1, ['UNSIGNED INT'], ['fill'], '[HEAP_RESULT]'), '_heapwalk': (1, ['_HEAPINFO*'], ['entryinfo'], '[HEAP_RESULT]'), 'malloc': (1, ['SIZE_T'], ['size'], 'void*'), '_msize': (1, ['VOID*'], ['memblock'], 'size_t'), '??2@YAPAXI@Z': (1, ['SIZE_T'], ['count'], 'void*'), '??2@YAPEAX_K@Z': (1, ['SIZE_T'], ['count'], 'void*'), '??_U@YAPAXI@Z': (1, ['SIZE_T'], ['count'], 'void*'), '??_U@YAPEAX_K@Z': (1, ['SIZE_T'], ['count'], 'void*'), '?_query_new_handler@@YAP6AHI@ZXZ': (0, [], [], '_PNH'), '?_query_new_mode@@YAHXZ': (0, [], [], 'int'), 'realloc': (2, ['VOID*', 'SIZE_T'], ['memblock', 'size'], 'void*'), '_callnewh': (1, ['SIZE_T'], ['size'], 'int'), '?_set_new_handler@@YAP6AHI@ZP6AHI@Z@Z': (1, ['_PNH'], ['pNewHandler'], '_PNH'), '?_set_new_mode@@YAHH@Z': (1, ['INT'], ['newhandlermode'], 'int'), '_expand_dbg': (5, ['VOID*', 'SIZE_T', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['userData', 'newSize', 'blockType', 'filename', 'linenumber'], 'void*'), '_calloc_dbg': (5, ['SIZE_T', 'SIZE_T', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['num', 'size', 'blockType', 'filename', 'linenumber'], 'void*'), '_free_dbg': (2, ['VOID*', 'DBG_BLOCK_TYPE'], ['userData', 'blockType'], 'void'), '_malloc_dbg': (4, ['SIZE_T', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['size', 'blockType', 'filename', 'linenumber'], 'void*'), '_msize_dbg': (2, ['VOID*', 'DBG_BLOCK_TYPE'], ['userData', 'blockType'], 'size_t'), '_realloc_dbg': (5, ['VOID*', 'SIZE_T', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['userData', 'newSize', 'blockType', 'filename', 'linenumber'], 'void*'), '_recalloc': (2, ['VOID*', 'SIZE_T'], ['memblock', 'size'], 'void*'), '_recalloc_dbg': (6, ['VOID*', 'SIZE_T', 'SIZE_T', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['userData', 'num', 'size', 'blockType', 'filename', 'linenumber'], 'void*'), '_get_amblksiz': (1, ['SIZE_T*'], ['blockSize'], 'errno_t'), '_set_amblksiz': (1, ['SIZE_T'], ['blockSize'], 'errno_t'), '_set_sbh_threshold': (1, ['SIZE_T'], ['size'], 'int'), 'abort': (0, [], [], 'void'), 'atexit': (1, ['VOID*'], ['func'], 'int'), '_beginthread': (3, ['VOID*', 'UNSIGNED', 'VOID*'], ['start_address', 'stack_size', 'arglist'], 'uintptr_t'), '_beginthreadex': (6, ['VOID*', 'UNSIGNED', 'VOID*', 'VOID*', 'THREAD_INITFLAG', 'UNSIGNED*'], ['security', 'stack_size', 'start_address', 'arglist', 'initflag', 'thrdaddr'], 'uintptr_t'), '_cexit': (0, [], [], 'void'), '_c_exit': (0, [], [], 'void'), '_cwait': (3, ['INT*', 'INTPTR_T', 'INT'], ['termstat', 'procHandle', 'action'], 'intptr_t'), '_endthread': (0, [], [], 'void'), '_endthreadex': (1, ['UNSIGNED'], ['retval'], 'void'), '_execl': (2, ['CONST CHAR*', 'CONST CHAR*'], ['cmdname', 'args'], 'intptr_t'), '_wexecl': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['cmdname', 'args'], 'intptr_t'), '_execle': (2, ['CONST CHAR*', 'CONST CHAR*'], ['cmdname', 'args'], 'intptr_t'), '_wexecle': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['cmdname', 'args'], 'intptr_t'), '_execlp': (2, ['CONST CHAR*', 'CONST CHAR*'], ['cmdname', 'args'], 'intptr_t'), '_wexeclp': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['cmdname', 'args'], 'intptr_t'), '_execlpe': (2, ['CONST CHAR*', 'CONST CHAR*'], ['cmdname', 'args'], 'intptr_t'), '_wexeclpe': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['cmdname', 'args'], 'intptr_t'), '_execv': (2, ['CONST CHAR*', 'CONST CHAR**'], ['cmdname', 'argv'], 'intptr_t'), '_wexecv': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T**'], ['cmdname', 'argv'], 'intptr_t'), '_execve': (3, ['CONST CHAR*', 'CONST CHAR**', 'CONST CHAR**'], ['cmdname', 'argv', 'envp'], 'intptr_t'), '_wexecve': (3, ['CONST WCHAR_T*', 'CONST WCHAR_T**', 'CONST WCHAR_T**'], ['cmdname', 'argv', 'envp'], 'intptr_t'), '_execvp': (2, ['CONST CHAR*', 'CONST CHAR**'], ['cmdname', 'argv'], 'intptr_t'), '_wexecvp': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T**'], ['cmdname', 'argv'], 'intptr_t'), '_execvpe': (3, ['CONST CHAR*', 'CONST CHAR**', 'CONST CHAR**'], ['cmdname', 'argv', 'envp'], 'intptr_t'), '_wexecvpe': (3, ['CONST WCHAR_T*', 'CONST WCHAR_T**', 'CONST WCHAR_T**'], ['cmdname', 'argv', 'envp'], 'intptr_t'), 'exit': (1, ['INT'], ['status'], 'void'), '_exit': (1, ['INT'], ['status'], 'void'), 'getenv': (1, ['CONST CHAR*'], ['varname'], 'char*'), '_wgetenv': (1, ['CONST WCHAR_T*'], ['varname'], 'wchar_t*'), 'getenv_s': (4, ['SIZE_T*', 'CHAR*', 'SIZE_T', 'CONST CHAR*'], ['pReturnValue', 'buffer', 'numberOfElements', 'varname'], 'errno_t'), '_wgetenv_s': (4, ['SIZE_T*', 'WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*'], ['pReturnValue', 'buffer', 'numberOfElements', 'varname'], 'errno_t'), '_getpid': (0, [], [], 'int'), '_onexit': (1, ['_ONEXIT_T'], ['function'], '_onexit_t'), '_pclose': (1, ['FILE*'], ['stream'], 'int'), 'perror': (1, ['CONST CHAR*'], ['string'], 'void'), '_wperror': (1, ['CONST WCHAR_T*'], ['string'], 'void'), '_pipe': (3, ['INT*', 'UNSIGNED INT', 'OPEN_FLAG'], ['pfds', 'psize', 'textmode'], 'int'), '_popen': (2, ['CONST CHAR*', 'CONST CHAR*'], ['command', 'mode'], 'FILE*'), '_wpopen': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['command', 'mode'], 'FILE*'), '_putenv': (1, ['CONST CHAR*'], ['envstring'], 'int'), '_wputenv': (1, ['CONST WCHAR_T*'], ['envstring'], 'int'), '_putenv_s': (2, ['CONST CHAR*', 'CONST CHAR*'], ['name', 'value'], 'errno_t'), '_wputenv_s': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['name', 'value'], 'errno_t'), 'raise': (1, ['SIGNAL'], ['sig'], 'int'), 'signal': (2, ['SIGNAL', 'SIGNAL_FUNC'], ['sig', 'func'], '[SIGNAL_FUNC]'), '_spawnl': (3, ['SPAWN_MODE', 'CONST CHAR*', 'CONST CHAR*'], ['mode', 'cmdname', 'args'], 'intptr_t'), '_wspawnl': (3, ['SPAWN_MODE', 'CONST WCHAR_T*', 'CONST WCHAR_T*'], ['mode', 'cmdname', 'args'], 'intptr_t'), '_spawnle': (3, ['SPAWN_MODE', 'CONST CHAR*', 'CONST CHAR*'], ['mode', 'cmdname', 'args'], 'intptr_t'), '_wspawnle': (3, ['SPAWN_MODE', 'CONST WCHAR_T*', 'CONST WCHAR_T*'], ['mode', 'cmdname', 'args'], 'intptr_t'), '_spawnlp': (3, ['SPAWN_MODE', 'CONST CHAR*', 'CONST CHAR*'], ['mode', 'cmdname', 'args'], 'intptr_t'), '_wspawnlp': (3, ['SPAWN_MODE', 'CONST WCHAR_T*', 'CONST WCHAR_T*'], ['mode', 'cmdname', 'args'], 'intptr_t'), '_spawnlpe': (3, ['SPAWN_MODE', 'CONST CHAR*', 'CONST CHAR*'], ['mode', 'cmdname', 'args'], 'intptr_t'), '_wspawnlpe': (3, ['SPAWN_MODE', 'CONST WCHAR_T*', 'CONST WCHAR_T*'], ['mode', 'cmdname', 'args'], 'intptr_t'), '_spawnv': (3, ['SPAWN_MODE', 'CONST CHAR*', 'CONST CHAR**'], ['mode', 'cmdname', 'argv'], 'intptr_t'), '_wspawnv': (3, ['SPAWN_MODE', 'CONST WCHAR_T*', 'CONST WCHAR_T**'], ['mode', 'cmdname', 'argv'], 'intptr_t'), '_spawnve': (4, ['SPAWN_MODE', 'CONST CHAR*', 'CONST CHAR**', 'CONST CHAR**'], ['mode', 'cmdname', 'argv', 'envp'], 'intptr_t'), '_wspawnve': (4, ['SPAWN_MODE', 'CONST WCHAR_T*', 'CONST WCHAR_T**', 'CONST WCHAR_T**'], ['mode', 'cmdname', 'argv', 'envp'], 'intptr_t'), '_spawnvp': (3, ['SPAWN_MODE', 'CONST CHAR*', 'CONST CHAR**'], ['mode', 'cmdname', 'argv'], 'intptr_t'), '_wspawnvp': (3, ['SPAWN_MODE', 'CONST WCHAR_T*', 'CONST WCHAR_T**'], ['mode', 'cmdname', 'argv'], 'intptr_t'), '_spawnvpe': (4, ['SPAWN_MODE', 'CONST CHAR*', 'CONST CHAR**', 'CONST CHAR**'], ['mode', 'cmdname', 'argv', 'envp'], 'intptr_t'), '_wspawnvpe': (4, ['SPAWN_MODE', 'CONST WCHAR_T*', 'CONST WCHAR_T**', 'CONST WCHAR_T**'], ['mode', 'cmdname', 'argv', 'envp'], 'intptr_t'), 'system': (1, ['CONST CHAR*'], ['command'], 'int'), '_wsystem': (1, ['CONST WCHAR_T*'], ['command'], 'int'), '_dupenv_s': (3, ['CHAR**', 'SIZE_T*', 'CONST CHAR*'], ['buffer', 'numberOfElements', 'varname'], 'errno_t'), '_wdupenv_s': (3, ['WCHAR_T**', 'SIZE_T*', 'CONST WCHAR_T*'], ['buffer', 'numberOfElements', 'varname'], 'errno_t'), '_dupenv_s_dbg': (6, ['CHAR**', 'SIZE_T*', 'CONST CHAR*', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['buffer', 'numberOfElements', 'varname', 'blockType', 'filename', 'linenumber'], 'errno_t'), '_wdupenv_s_dbg': (6, ['WCHAR_T**', 'SIZE_T*', 'CONST WCHAR_T*', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['buffer', 'numberOfElements', 'varname', 'blockType', 'filename', 'linenumber'], 'errno_t'), '__getmainargs': (5, ['INT*', 'CHAR***', 'CHAR***', 'INT', '_STARTUPINFO*'], ['_Argc', '_Argv', '_Env', '_DoWildCard', '_StartInfo'], 'int'), '__wgetmainargs': (5, ['INT*', 'WCHAR_T***', 'WCHAR_T***', 'INT', '_STARTUPINFO*'], ['_Argc', '_Argv', '_Env', '_DoWildCard', '_StartInfo'], 'int'), '_get_pgmptr': (1, ['CHAR**'], ['pValue'], 'errno_t'), '_get_wpgmptr': (1, ['WCHAR_T**'], ['pValue'], 'errno_t'), '_get_fileinfo': (1, ['INT*'], ['pFileInfo'], 'errno_t'), '_set_fileinfo': (1, ['INT'], ['value'], 'errno_t'), '__set_app_type': (1, ['C_APP_TYPE'], ['at'], 'void'), '__dllonexit': (3, ['_ONEXIT_T', '_PVFV**', '_PVFV**'], ['func', 'pbegin', 'pend'], '_onexit_t'), '_sleep': (1, ['UNSIGNED LONG'], ['duration'], 'void'), '_loaddll': (1, ['CHAR*'], ['filename'], 'intptr_t'), '_unloaddll': (1, ['INTPTR_T'], ['handle'], 'int'), '_getdllprocaddr': (3, ['INTPTR_T', 'CHAR*', 'INTPTR_T'], ['handle', 'procedureName', 'ordinal'], 'void*'), 'bsearch': (5, ['CONST VOID*', 'CONST VOID*', 'SIZE_T', 'SIZE_T', 'COMPARE_FUNCTION'], ['key', 'base', 'num', 'width', 'compare'], 'void*'), 'bsearch_s': (6, ['CONST VOID*', 'CONST VOID*', 'SIZE_T', 'SIZE_T', 'COMPARE_S_FUNCTION', 'VOID*'], ['key', 'base', 'num', 'width', 'compare', 'context'], 'void*'), '_lfind': (5, ['CONST VOID*', 'CONST VOID*', 'UNSIGNED INT*', 'UNSIGNED INT', 'COMPARE_FUNCTION'], ['key', 'base', 'num', 'width', 'compare'], 'void*'), '_lfind_s': (6, ['CONST VOID*', 'CONST VOID*', 'UNSIGNED INT*', 'SIZE_T', 'COMPARE_S_FUNCTION', 'VOID*'], ['key', 'base', 'num', 'size', 'compare', 'context'], 'void*'), '_lsearch': (5, ['CONST VOID*', 'VOID*', 'UNSIGNED INT*', 'UNSIGNED INT', 'COMPARE_FUNCTION'], ['key', 'base', 'num', 'width', 'compare'], 'void*'), '_lsearch_s': (6, ['CONST VOID*', 'VOID*', 'UNSIGNED INT*', 'SIZE_T', 'COMPARE_S_FUNCTION', 'VOID*'], ['key', 'base', 'num', 'size', 'compare', 'context'], 'void*'), 'qsort': (4, ['VOID*', 'SIZE_T', 'SIZE_T', 'COMPARE_S_FUNCTION'], ['base', 'num', 'width', 'compare'], 'void'), 'qsort_s': (5, ['VOID*', 'SIZE_T', 'SIZE_T', 'COMPARE_S_FUNCTION', 'VOID*'], ['base', 'num', 'width', 'compare', 'context'], 'void'), '_mbsdec': (2, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*'], ['start', 'current'], 'unsigned char*'), '_mbsdec_l': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', '_LOCALE_T'], ['start', 'current', 'locale'], 'unsigned char*'), '_mbsinc': (1, ['CONST UNSIGNED CHAR*'], ['current'], 'unsigned char*'), '_mbsinc_l': (2, ['CONST UNSIGNED CHAR*', '_LOCALE_T'], ['current', 'locale'], 'unsigned char*'), '_mbsnbcat': (3, ['UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T'], ['dest', 'src', 'count'], 'unsigned char*'), '_mbsnbcat_l': (4, ['UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['dest', 'src', 'count', 'locale'], 'unsigned char*'), '_mbsnbcat_s': (4, ['UNSIGNED CHAR*', 'SIZE_T', 'CONST UNSIGNED CHAR*', 'SIZE_T'], ['dest', 'sizeInBytes', 'src', 'count'], 'errno_t'), '_mbsnbcat_s_l': (5, ['UNSIGNED CHAR*', 'SIZE_T', 'CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['dest', 'sizeInBytes', 'src', 'count', 'locale'], 'errno_t'), '_mbsnbcmp': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T'], ['string1', 'string2', 'count'], '[_NLSCMPERROR]'), '_mbsnbcmp_l': (4, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['string1', 'string2', 'count', 'locale'], '[_NLSCMPERROR]'), '_mbsnbcnt': (2, ['CONST UNSIGNED CHAR*', 'SIZE_T'], ['str', 'count'], 'size_t'), '_mbsnbcnt_l': (3, ['CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['str', 'count', 'locale'], 'size_t'), '_mbsnccnt': (2, ['CONST UNSIGNED CHAR*', 'SIZE_T'], ['str', 'count'], 'size_t'), '_mbsnccnt_l': (3, ['CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['str', 'count', 'locale'], 'size_t'), '__strncnt': (2, ['CONST CHAR*', 'SIZE_T'], ['str', 'count'], 'size_t'), '__wcsncnt': (2, ['CONST WCHAR_T*', 'SIZE_T'], ['str', 'count'], 'size_t'), '_mbsnbcpy': (3, ['UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T'], ['strDest', 'strSource', 'count'], 'unsigned char*'), '_mbsnbcpy_l': (4, ['UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['strDest', 'strSource', 'count', 'locale'], 'unsigned char*'), '_mbsnbcpy_s': (4, ['UNSIGNED CHAR*', 'SIZE_T', 'CONST UNSIGNED CHAR*', 'SIZE_T'], ['strDest', 'sizeInBytes', 'strSource', 'count'], 'errno_t'), '_mbsnbcpy_s_l': (5, ['UNSIGNED CHAR*', 'SIZE_T', 'CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['strDest', 'sizeInBytes', 'strSource', 'count', 'locale'], 'errno_t'), '_mbsnbicmp': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T'], ['string1', 'string2', 'count'], '[_NLSCMPERROR]'), '_mbsnbset': (3, ['UNSIGNED CHAR*', 'UNSIGNED INT', 'SIZE_T'], ['str', 'c', 'count'], 'unsigned char*'), '_mbsnbset_l': (4, ['UNSIGNED CHAR*', 'UNSIGNED INT', 'SIZE_T', '_LOCALE_T'], ['str', 'c', 'count', 'locale'], 'unsigned char*'), '_mbsnextc': (1, ['CONST UNSIGNED CHAR*'], ['str'], 'unsigned int'), '_mbsnextc_l': (2, ['CONST UNSIGNED CHAR*', '_LOCALE_T'], ['str', 'locale'], 'unsigned int'), '_mbsninc': (2, ['CONST UNSIGNED CHAR*', 'SIZE_T'], ['str', 'count'], 'unsigned char*'), '_mbsninc_l': (3, ['CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['str', 'count', 'locale'], 'unsigned char*'), '_mbsspnp': (2, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*'], ['str', 'charset'], 'unsigned char*'), '_mbsspnp_l': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', '_LOCALE_T'], ['str', 'charset', 'locale'], 'unsigned char*'), '_scprintf': (1, ['CONST CHAR*'], ['format'], 'int'), '_scprintf_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['format', 'locale'], 'int'), '_scwprintf': (1, ['CONST WCHAR_T*'], ['format'], 'int'), '_scwprintf_l': (2, ['CONST WCHAR_T*', '_LOCALE_T'], ['format', 'locale'], 'int'), '_snscanf': (3, ['CONST CHAR*', 'SIZE_T', 'CONST CHAR*'], ['input', 'length', 'format'], '[RET_EOF]'), '_snscanf_l': (4, ['CONST CHAR*', 'SIZE_T', 'CONST CHAR*', '_LOCALE_T'], ['input', 'length', 'format', 'locale'], '[RET_EOF]'), '_snwscanf': (3, ['CONST WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*'], ['input', 'length', 'format'], '[RET_EOF]'), '_snwscanf_l': (4, ['CONST WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', '_LOCALE_T'], ['input', 'length', 'format', 'locale'], '[RET_EOF]'), 'sscanf': (2, ['CONST CHAR*', 'CONST CHAR*'], ['buffer', 'format'], '[RET_EOF]'), '_sscanf_l': (3, ['CONST CHAR*', 'CONST CHAR*', '_LOCALE_T'], ['buffer', 'format', 'locale'], '[RET_EOF]'), 'swscanf': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['buffer', 'format'], '[RET_EOF]'), '_swscanf_l': (3, ['CONST WCHAR_T*', 'CONST WCHAR_T*', '_LOCALE_T'], ['buffer', 'format', 'locale'], '[RET_EOF]'), 'sprintf': (2, ['CHAR*', 'CONST CHAR*'], ['buffer', 'format'], 'int'), '_sprintf_l': (3, ['CHAR*', 'CONST CHAR*', '_LOCALE_T'], ['buffer', 'format', 'locale'], 'int'), 'swprintf': (3, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*'], ['buffer', 'count', 'format'], 'int'), '_swprintf': (2, ['WCHAR_T*', 'CONST WCHAR_T*'], ['buffer', 'format'], 'int'), '__swprintf_l': (3, ['WCHAR_T*', 'CONST WCHAR_T*', '_LOCALE_T'], ['buffer', 'format', 'locale'], 'int'), '_sprintf_p': (3, ['CHAR*', 'SIZE_T', 'CONST CHAR*'], ['buffer', 'sizeOfBuffer', 'format'], 'int'), '_sprintf_p_l': (4, ['CHAR*', 'SIZE_T', 'CONST CHAR*', '_LOCALE_T'], ['buffer', 'sizeOfBuffer', 'format', 'locale'], 'int'), '_swprintf_p': (3, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*'], ['buffer', 'sizeOfBuffer', 'format'], 'int'), '_swprintf_p_l': (4, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', '_LOCALE_T'], ['buffer', 'sizeOfBuffer', 'format', 'locale'], 'int'), 'strcat': (2, ['CHAR*', 'CONST CHAR*'], ['strDestination', 'strSource'], 'char*'), 'wcscat': (2, ['WCHAR_T*', 'CONST WCHAR_T*'], ['strDestination', 'strSource'], 'wchar_t*'), '_mbscat': (2, ['UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*'], ['strDestination', 'strSource'], 'unsigned char*'), 'strcat_s': (3, ['CHAR*', 'SIZE_T', 'CONST CHAR*'], ['strDestination', 'numberOfElements', 'strSource'], 'errno_t'), 'wcscat_s': (3, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*'], ['strDestination', 'numberOfElements', 'strSource'], 'errno_t'), '_mbscat_s': (3, ['UNSIGNED CHAR*', 'SIZE_T', 'CONST UNSIGNED CHAR*'], ['strDestination', 'numberOfElements', 'strSource'], 'errno_t'), 'strchr': (2, ['CONST CHAR*', 'INT'], ['str', 'c'], 'char*'), 'wcschr': (2, ['CONST WCHAR_T*', 'WCHAR_T'], ['str', 'c'], 'wchar_t*'), '_mbschr': (2, ['CONST UNSIGNED CHAR*', 'UNSIGNED INT'], ['str', 'c'], 'unsigned char*'), '_mbschr_l': (3, ['CONST UNSIGNED CHAR*', 'UNSIGNED INT', '_LOCALE_T'], ['str', 'c', 'locale'], 'unsigned char*'), 'strcmp': (2, ['CONST CHAR*', 'CONST CHAR*'], ['string1', 'string2'], 'int'), 'wcscmp': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['string1', 'string2'], 'int'), '_mbscmp': (2, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*'], ['string1', 'string2'], '[_NLSCMPERROR]'), 'strcpy': (2, ['CHAR*', 'CONST CHAR*'], ['strDestination', 'strSource'], 'char*'), 'wcscpy': (2, ['WCHAR_T*', 'CONST WCHAR_T*'], ['strDestination', 'strSource'], 'wchar_t*'), '_mbscpy': (2, ['UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*'], ['strDestination', 'strSource'], 'unsigned char*'), 'strcpy_s': (3, ['CHAR*', 'SIZE_T', 'CONST CHAR*'], ['strDestination', 'numberOfElements', 'strSource'], 'errno_t'), 'wcscpy_s': (3, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*'], ['strDestination', 'numberOfElements', 'strSource'], 'errno_t'), '_mbscpy_s': (3, ['UNSIGNED CHAR*', 'SIZE_T', 'CONST UNSIGNED CHAR*'], ['strDestination', 'numberOfElements', 'strSource'], 'errno_t'), 'strcspn': (2, ['CONST CHAR*', 'CONST CHAR*'], ['str', 'strCharSet'], 'size_t'), 'wcscspn': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['str', 'strCharSet'], 'size_t'), '_mbscspn': (2, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*'], ['str', 'strCharSet'], 'size_t'), '_mbscspn_l': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', '_LOCALE_T'], ['str', 'strCharSet', 'locale'], 'size_t'), '_strdup': (1, ['CONST CHAR*'], ['strSource'], 'char*'), '_wcsdup': (1, ['CONST WCHAR_T*'], ['strSource'], 'wchar_t*'), '_mbsdup': (1, ['CONST UNSIGNED CHAR*'], ['strSource'], 'unsigned char*'), 'strerror': (1, ['INT'], ['errnum'], 'char*'), '_strerror': (1, ['CONST CHAR*'], ['strErrMsg'], 'char*'), '_wcserror': (1, ['INT'], ['errnum'], 'wchar_t*'), '__wcserror': (1, ['CONST WCHAR_T*'], ['strErrMsg'], 'wchar_t*'), 'strerror_s': (3, ['CHAR*', 'SIZE_T', 'INT'], ['buffer', 'numberOfElements', 'errnum'], 'errno_t'), '_strerror_s': (3, ['CHAR*', 'SIZE_T', 'CONST CHAR*'], ['buffer', 'numberOfElements', 'strErrMsg'], 'errno_t'), '_wcserror_s': (3, ['WCHAR_T*', 'SIZE_T', 'INT'], ['buffer', 'numberOfElements', 'errnum'], 'errno_t'), '__wcserror_s': (3, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*'], ['buffer', 'numberOfElements', 'strErrMsg'], 'errno_t'), 'strnlen': (2, ['CONST CHAR*', 'SIZE_T'], ['str', 'numberOfElements'], 'size_t'), 'wcsnlen': (2, ['CONST WCHAR_T*', 'SIZE_T'], ['str', 'numberOfElements'], 'size_t'), '_mbsnlen': (2, ['CONST UNSIGNED CHAR*', 'SIZE_T'], ['str', 'numberOfElements'], 'size_t'), '_mbsnlen_l': (3, ['CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['str', 'numberOfElements', 'locale'], 'size_t'), '_mbstrnlen': (2, ['CONST CHAR*', 'SIZE_T'], ['str', 'numberOfElements'], 'size_t'), '_mbstrnlen_l': (3, ['CONST CHAR*', 'SIZE_T', '_LOCALE_T'], ['str', 'numberOfElements', 'locale'], 'size_t'), '_strlwr': (1, ['CHAR*'], ['str'], 'char*'), '_wcslwr': (1, ['WCHAR_T*'], ['str'], 'wchar_t*'), '_mbslwr': (1, ['UNSIGNED CHAR*'], ['str'], 'unsigned char*'), '_strlwr_l': (2, ['CHAR*', '_LOCALE_T'], ['str', 'locale'], 'char*'), '_wcslwr_l': (2, ['WCHAR_T*', '_LOCALE_T'], ['str', 'locale'], 'wchar_t*'), '_mbslwr_l': (2, ['UNSIGNED CHAR*', '_LOCALE_T'], ['str', 'locale'], 'unsigned char*'), 'strncat': (3, ['CHAR*', 'CONST CHAR*', 'SIZE_T'], ['strDest', 'strSource', 'count'], 'char*'), 'wcsncat': (3, ['WCHAR_T*', 'CONST WCHAR_T*', 'SIZE_T'], ['strDest', 'strSource', 'count'], 'wchar_t*'), '_mbsncat': (3, ['UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T'], ['strDest', 'strSource', 'count'], 'unsigned char*'), '_mbsncat_l': (4, ['UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['strDest', 'strSource', 'count', 'locale'], 'unsigned char*'), 'strncat_s': (4, ['CHAR*', 'SIZE_T', 'CONST CHAR*', 'SIZE_T'], ['strDest', 'numberOfElements', 'strSource', 'count'], 'errno_t'), 'wcsncat_s': (4, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', 'SIZE_T'], ['strDest', 'numberOfElements', 'strSource', 'count'], 'errno_t'), '_mbsncat_s': (4, ['UNSIGNED CHAR*', 'SIZE_T', 'CONST UNSIGNED CHAR*', 'SIZE_T'], ['strDest', 'numberOfElements', 'strSource', 'count'], 'errno_t'), '_mbsncat_s_l': (5, ['UNSIGNED CHAR*', 'SIZE_T', 'CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['strDest', 'numberOfElements', 'strSource', 'count', 'locale'], 'errno_t'), 'strncmp': (3, ['CONST CHAR*', 'CONST CHAR*', 'SIZE_T'], ['string1', 'string2', 'count'], 'int'), 'wcsncmp': (3, ['CONST WCHAR_T*', 'CONST WCHAR_T*', 'SIZE_T'], ['string1', 'string2', 'count'], 'int'), '_mbsncmp': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T'], ['string1', 'string2', 'count'], '[_NLSCMPERROR]'), '_mbsncmp_l': (4, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['string1', 'string2', 'count', 'locale'], '[_NLSCMPERROR]'), 'strncpy': (3, ['CHAR*', 'CONST CHAR*', 'SIZE_T'], ['strDest', 'strSource', 'count'], 'char*'), 'wcsncpy': (3, ['WCHAR_T*', 'CONST WCHAR_T*', 'SIZE_T'], ['strDest', 'strSource', 'count'], 'wchar_t*'), '_mbsncpy': (3, ['UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T'], ['strDest', 'strSource', 'count'], 'unsigned char*'), '_mbsncpy_l': (4, ['UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['strDest', 'strSource', 'count', 'locale'], 'unsigned char*'), 'strncpy_s': (4, ['CHAR*', 'SIZE_T', 'CONST CHAR*', 'SIZE_T'], ['strDest', 'numberOfElements', 'strSource', 'count'], 'errno_t'), 'wcsncpy_s': (4, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', 'SIZE_T'], ['strDest', 'numberOfElements', 'strSource', 'count'], 'errno_t'), '_mbsncpy_s': (4, ['UNSIGNED CHAR*', 'SIZE_T', 'CONST UNSIGNED CHAR*', 'SIZE_T'], ['strDest', 'numberOfElements', 'strSource', 'count'], 'errno_t'), '_mbsncpy_s_l': (5, ['UNSIGNED CHAR*', 'SIZE_T', 'CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['strDest', 'numberOfElements', 'strSource', 'count', 'locale'], 'errno_t'), '_strnset': (3, ['CHAR*', 'INT', 'SIZE_T'], ['str', 'c', 'count'], 'char*'), '_wcsnset': (3, ['WCHAR_T*', 'WCHAR_T', 'SIZE_T'], ['str', 'c', 'count'], 'wchar_t*'), '_mbsnset': (3, ['UNSIGNED CHAR*', 'UNSIGNED INT', 'SIZE_T'], ['str', 'c', 'count'], 'unsigned char*'), '_mbsnset_l': (4, ['UNSIGNED CHAR*', 'UNSIGNED INT', 'SIZE_T', '_LOCALE_T'], ['str', 'c', 'count', 'locale'], 'unsigned char*'), 'strpbrk': (2, ['CONST CHAR*', 'CONST CHAR*'], ['str', 'strCharSet'], 'char*'), 'wcspbrk': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['str', 'strCharSet'], 'wchar_t*'), '_mbspbrk': (2, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*'], ['str', 'strCharSet'], 'unsigned char*'), '_mbspbrk_l': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', '_LOCALE_T'], ['str', 'strCharSet', 'locale'], 'unsigned char*'), 'strrchr': (2, ['CONST CHAR*', 'INT'], ['str', 'c'], 'char*'), 'wcsrchr': (2, ['CONST WCHAR_T*', 'WCHAR_T'], ['str', 'c'], 'wchar_t*'), '_mbsrchr': (2, ['CONST UNSIGNED CHAR*', 'UNSIGNED INT'], ['str', 'c'], 'unsigned char*'), '_mbsrchr_l': (3, ['CONST UNSIGNED CHAR*', 'UNSIGNED INT', '_LOCALE_T'], ['str', 'c', 'locale'], 'unsigned char*'), '_strrev': (1, ['CHAR*'], ['str'], 'char*'), '_wcsrev': (1, ['WCHAR_T*'], ['str'], 'wchar_t*'), '_mbsrev': (1, ['UNSIGNED CHAR*'], ['str'], 'unsigned char*'), '_mbsrev_l': (2, ['UNSIGNED CHAR*', '_LOCALE_T'], ['str', 'locale'], 'unsigned char*'), '_strset': (2, ['CHAR*', 'INT'], ['str', 'c'], 'char*'), '_wcsset': (2, ['WCHAR_T*', 'WCHAR_T'], ['str', 'c'], 'wchar_t*'), '_mbsset': (2, ['UNSIGNED CHAR*', 'UNSIGNED INT'], ['str', 'c'], 'unsigned char*'), '_mbsset_l': (3, ['UNSIGNED CHAR*', 'UNSIGNED INT', '_LOCALE_T'], ['str', 'c', 'locale'], 'unsigned char*'), 'strspn': (2, ['CONST CHAR*', 'CONST CHAR*'], ['str', 'strCharSet'], 'size_t'), 'wcsspn': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['str', 'strCharSet'], 'size_t'), '_mbsspn': (2, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*'], ['str', 'strCharSet'], 'size_t'), '_mbsspn_l': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', '_LOCALE_T'], ['str', 'strCharSet', 'locale'], 'size_t'), 'strstr': (2, ['CONST CHAR*', 'CONST CHAR*'], ['str', 'strSearch'], 'char*'), 'wcsstr': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['str', 'strSearch'], 'wchar_t*'), '_mbsstr': (2, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*'], ['str', 'strSearch'], 'unsigned char*'), '_mbsstr_l': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', '_LOCALE_T'], ['str', 'strSearch', 'locale'], 'unsigned char*'), 'strtok': (2, ['CHAR*', 'CONST CHAR*'], ['strToken', 'strDelimit'], 'char*'), 'wcstok': (2, ['WCHAR_T*', 'CONST WCHAR_T*'], ['strToken', 'strDelimit'], 'wchar_t*'), '_mbstok': (2, ['UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*'], ['strToken', 'strDelimit'], 'unsigned char*'), '_mbstok_l': (3, ['UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', '_LOCALE_T'], ['strToken', 'strDelimit', 'locale'], 'unsigned char*'), 'strtok_s': (3, ['CHAR*', 'CONST CHAR*', 'CHAR**'], ['strToken', 'strDelimit', 'context'], 'char*'), 'wcstok_s': (3, ['WCHAR_T*', 'CONST WCHAR_T*', 'WCHAR_T**'], ['strToken', 'strDelimit', 'context'], 'wchar_t*'), '_mbstok_s': (3, ['UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'CHAR**'], ['strToken', 'strDelimit', 'context'], 'unsigned char*'), '_mbstok_s_l': (4, ['UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'CHAR**', '_LOCALE_T'], ['strToken', 'strDelimit', 'context', 'locale'], 'unsigned char*'), '_strupr': (1, ['CHAR*'], ['str'], 'char*'), '_wcsupr': (1, ['WCHAR_T*'], ['str'], 'wchar_t*'), '_mbsupr': (1, ['UNSIGNED CHAR*'], ['str'], 'unsigned char*'), '_strupr_l': (2, ['CHAR*', '_LOCALE_T'], ['str', 'locale'], 'char*'), '_wcsupr_l': (2, ['WCHAR_T*', '_LOCALE_T'], ['str', 'locale'], 'wchar_t*'), '_mbsupr_l': (2, ['UNSIGNED CHAR*', '_LOCALE_T'], ['str', 'locale'], 'unsigned char*'), 'vsprintf': (3, ['CHAR*', 'CONST CHAR*', 'VA_LIST'], ['buffer', 'format', 'argptr'], 'int'), '_vsprintf_l': (4, ['CHAR*', 'CONST CHAR*', '_LOCALE_T', 'VA_LIST'], ['buffer', 'format', 'locale', 'argptr'], 'int'), 'vswprintf': (3, ['WCHAR_T*', 'CONST WCHAR_T*', 'VA_LIST'], ['buffer', 'format', 'argptr'], 'int'), '_vswprintf': (3, ['WCHAR_T*', 'CONST WCHAR_T*', 'VA_LIST'], ['buffer', 'format', 'argptr'], 'int'), '_vswprintf_l': (5, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['buffer', 'count', 'format', 'locale', 'argptr'], 'int'), '__vswprintf_l': (4, ['WCHAR_T*', 'CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['buffer', 'format', 'locale', 'argptr'], 'int'), '_vsprintf_p': (4, ['CHAR*', 'SIZE_T', 'CONST CHAR*', 'VA_LIST'], ['buffer', 'sizeInBytes', 'format', 'argptr'], 'int'), '_vsprintf_p_l': (5, ['CHAR*', 'SIZE_T', 'CONST CHAR*', '_LOCALE_T', 'VA_LIST'], ['buffer', 'sizeInBytes', 'format', 'locale', 'argptr'], 'int'), '_vswprintf_p': (4, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', 'VA_LIST'], ['buffer', 'count', 'format', 'argptr'], 'int'), '_vswprintf_p_l': (5, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['buffer', 'count', 'format', 'locale', 'argptr'], 'int'), 'vsnprintf': (4, ['CHAR*', 'SIZE_T', 'CONST CHAR*', 'VA_LIST'], ['buffer', 'count', 'format', 'argptr'], 'int'), '_vsnprintf': (4, ['CHAR*', 'SIZE_T', 'CONST CHAR*', 'VA_LIST'], ['buffer', 'count', 'format', 'argptr'], 'int'), '_vsnprintf_l': (5, ['CHAR*', 'SIZE_T', 'CONST CHAR*', '_LOCALE_T', 'VA_LIST'], ['buffer', 'count', 'format', 'locale', 'argptr'], 'int'), '_vsnwprintf': (4, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', 'VA_LIST'], ['buffer', 'count', 'format', 'argptr'], 'int'), '_vsnwprintf_l': (5, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['buffer', 'count', 'format', 'locale', 'argptr'], 'int'), 'strlen': (1, ['CONST CHAR*'], ['str'], 'size_t'), '_mbslen': (1, ['CONST UNSIGNED CHAR*'], ['str'], 'size_t'), '_mbslen_l': (2, ['CONST UNSIGNED CHAR*', '_LOCALE_T'], ['str', 'locale'], 'size_t'), '_mbstrlen': (1, ['CONST CHAR*'], ['str'], 'size_t'), '_mbstrlen_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['str', 'locale'], 'size_t'), 'wcslen': (1, ['CONST WCHAR_T*'], ['str'], 'size_t'), '_mbclen': (1, ['CONST UNSIGNED CHAR*'], ['c'], 'size_t'), 'mblen': (2, ['CONST CHAR*', 'SIZE_T'], ['mbstr', 'count'], 'int'), '_mblen_l': (3, ['CONST CHAR*', 'SIZE_T', '_LOCALE_T'], ['mbstr', 'count', 'locale'], 'int'), 'strcoll': (2, ['CONST CHAR*', 'CONST CHAR*'], ['string1', 'string2'], '[_NLSCMPERROR]'), 'wcscoll': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['string1', 'string2'], '[_NLSCMPERROR]'), '_mbscoll': (2, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*'], ['string1', 'string2'], '[_NLSCMPERROR]'), '_strcoll_l': (3, ['CONST CHAR*', 'CONST CHAR*', '_LOCALE_T'], ['string1', 'string2', 'locale'], '[_NLSCMPERROR]'), '_wcscoll_l': (3, ['CONST WCHAR_T*', 'CONST WCHAR_T*', '_LOCALE_T'], ['string1', 'string2', 'locale'], '[_NLSCMPERROR]'), '_mbscoll_l': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', '_LOCALE_T'], ['string1', 'string2', 'locale'], '[_NLSCMPERROR]'), '_stricoll': (2, ['CONST CHAR*', 'CONST CHAR*'], ['string1', 'string2'], '[_NLSCMPERROR]'), '_wcsicoll': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['string1', 'string2'], '[_NLSCMPERROR]'), '_mbsicoll': (2, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*'], ['string1', 'string2'], '[_NLSCMPERROR]'), '_stricoll_l': (3, ['CONST CHAR*', 'CONST CHAR*', '_LOCALE_T'], ['string1', 'string2', 'locale'], '[_NLSCMPERROR]'), '_wcsicoll_l': (3, ['CONST WCHAR_T*', 'CONST WCHAR_T*', '_LOCALE_T'], ['string1', 'string2', 'locale'], '[_NLSCMPERROR]'), '_mbsicoll_l': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', '_LOCALE_T'], ['string1', 'string2', 'locale'], '[_NLSCMPERROR]'), '_strncoll': (3, ['CONST CHAR*', 'CONST CHAR*', 'SIZE_T'], ['string1', 'string2', 'count'], '[_NLSCMPERROR]'), '_wcsncoll': (3, ['CONST WCHAR_T*', 'CONST WCHAR_T*', 'SIZE_T'], ['string1', 'string2', 'count'], '[_NLSCMPERROR]'), '_mbsncoll': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T'], ['string1', 'string2', 'count'], '[_NLSCMPERROR]'), '_strncoll_l': (4, ['CONST CHAR*', 'CONST CHAR*', 'SIZE_T', '_LOCALE_T'], ['string1', 'string2', 'count', 'locale'], '[_NLSCMPERROR]'), '_wcsncoll_l': (4, ['CONST WCHAR_T*', 'CONST WCHAR_T*', 'SIZE_T', '_LOCALE_T'], ['string1', 'string2', 'count', 'locale'], '[_NLSCMPERROR]'), '_mbsncoll_l': (4, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['string1', 'string2', 'count', 'locale'], '[_NLSCMPERROR]'), '_strnicoll': (3, ['CONST CHAR*', 'CONST CHAR*', 'SIZE_T'], ['string1', 'string2', 'count'], '[_NLSCMPERROR]'), '_wcsnicoll': (3, ['CONST WCHAR_T*', 'CONST WCHAR_T*', 'SIZE_T'], ['string1', 'string2', 'count'], '[_NLSCMPERROR]'), '_mbsnicoll': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T'], ['string1', 'string2', 'count'], '[_NLSCMPERROR]'), '_strnicoll_l': (4, ['CONST CHAR*', 'CONST CHAR*', 'SIZE_T', '_LOCALE_T'], ['string1', 'string2', 'count', 'locale'], '[_NLSCMPERROR]'), '_wcsnicoll_l': (4, ['CONST WCHAR_T*', 'CONST WCHAR_T*', 'SIZE_T', '_LOCALE_T'], ['string1', 'string2', 'count', 'locale'], '[_NLSCMPERROR]'), '_mbsnicoll_l': (4, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['string1', 'string2', 'count', 'locale'], '[_NLSCMPERROR]'), '_strcmpi': (2, ['CONST CHAR*', 'CONST CHAR*'], ['string1', 'string2'], '[_NLSCMPERROR]'), '_stricmp': (2, ['CONST CHAR*', 'CONST CHAR*'], ['string1', 'string2'], '[_NLSCMPERROR]'), '_wcsicmp': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['string1', 'string2'], '[_NLSCMPERROR]'), '_mbsicmp': (2, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*'], ['string1', 'string2'], '[_NLSCMPERROR]'), '_stricmp_l': (3, ['CONST CHAR*', 'CONST CHAR*', '_LOCALE_T'], ['string1', 'string2', 'locale'], '[_NLSCMPERROR]'), '_wcsicmp_l': (3, ['CONST WCHAR_T*', 'CONST WCHAR_T*', '_LOCALE_T'], ['string1', 'string2', 'locale'], '[_NLSCMPERROR]'), '_mbsicmp_l': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', '_LOCALE_T'], ['string1', 'string2', 'locale'], '[_NLSCMPERROR]'), '_wcsnicmp_l': (4, ['CONST WCHAR_T*', 'CONST WCHAR_T*', 'SIZE_T', '_LOCALE_T'], ['string1', 'string2', 'count', 'locale'], '[_NLSCMPERROR]'), '_mbsnicmp_l': (4, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['string1', 'string2', 'count', 'locale'], '[_NLSCMPERROR]'), '_mbsnicmp': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T'], ['string1', 'string2', 'count'], '[_NLSCMPERROR]'), '_strnicmp_l': (4, ['CONST CHAR*', 'CONST CHAR*', 'SIZE_T', '_LOCALE_T'], ['string1', 'string2', 'count', 'locale'], '[_NLSCMPERROR]'), '_wcsnicmp': (3, ['CONST WCHAR_T*', 'CONST WCHAR_T*', 'SIZE_T'], ['string1', 'string2', 'count'], '[_NLSCMPERROR]'), '_strnicmp': (3, ['CONST CHAR*', 'CONST CHAR*', 'SIZE_T'], ['string1', 'string2', 'count'], '[_NLSCMPERROR]'), '_strupr_s': (2, ['CHAR*', 'SIZE_T'], ['str', 'numberOfElements'], 'errno_t'), '_wcsupr_s': (2, ['WCHAR_T*', 'SIZE_T'], ['str', 'numberOfElements'], 'errno_t'), '_strupr_s_l': (3, ['CHAR*', 'SIZE_T', '_LOCALE_T'], ['str', 'numberOfElements', 'locale'], 'errno_t'), '_wcsupr_s_l': (3, ['WCHAR_T*', 'SIZE_T', '_LOCALE_T'], ['str', 'numberOfElements', 'locale'], 'errno_t'), '_mbsupr_s': (2, ['UNSIGNED CHAR*', 'SIZE_T'], ['str', 'numberOfElements'], 'errno_t'), '_mbsupr_s_l': (3, ['UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['str', 'numberOfElements', 'locale'], 'errno_t'), '_strlwr_s': (2, ['CHAR*', 'SIZE_T'], ['str', 'numberOfElements'], 'errno_t'), '_strlwr_s_l': (3, ['CHAR*', 'SIZE_T', '_LOCALE_T'], ['str', 'numberOfElements', 'locale'], 'errno_t'), '_mbslwr_s': (2, ['UNSIGNED CHAR*', 'SIZE_T'], ['str', 'numberOfElements'], 'errno_t'), '_mbslwr_s_l': (3, ['UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['str', 'numberOfElements', 'locale'], 'errno_t'), '_wcslwr_s': (2, ['WCHAR_T*', 'SIZE_T'], ['str', 'numberOfElements'], 'errno_t'), '_wcslwr_s_l': (3, ['WCHAR_T*', 'SIZE_T', '_LOCALE_T'], ['str', 'numberOfElements', 'locale'], 'errno_t'), '_snscanf_s': (3, ['CONST CHAR*', 'SIZE_T', 'CONST CHAR*'], ['input', 'length', 'format'], '[RET_EOF]'), '_snscanf_s_l': (4, ['CONST CHAR*', 'SIZE_T', 'CONST CHAR*', '_LOCALE_T'], ['input', 'length', 'format', 'locale'], '[RET_EOF]'), '_snwscanf_s': (3, ['CONST WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*'], ['input', 'length', 'format'], '[RET_EOF]'), '_snwscanf_s_l': (4, ['CONST WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', '_LOCALE_T'], ['input', 'length', 'format', 'locale'], '[RET_EOF]'), '_vsnprintf_s': (5, ['CHAR*', 'SIZE_T', 'SIZE_T', 'CONST CHAR*', 'VA_LIST'], ['buffer', 'sizeOfBuffer', 'count', 'format', 'argptr'], 'int'), '_vsnprintf_s_l': (6, ['CHAR*', 'SIZE_T', 'SIZE_T', 'CONST CHAR*', '_LOCALE_T', 'VA_LIST'], ['buffer', 'sizeOfBuffer', 'count', 'format', 'locale', 'argptr'], 'int'), '_vsnwprintf_s': (5, ['WCHAR_T*', 'SIZE_T', 'SIZE_T', 'CONST WCHAR_T*', 'VA_LIST'], ['buffer', 'sizeOfBuffer', 'count', 'format', 'argptr'], 'int'), '_vsnwprintf_s_l': (6, ['WCHAR_T*', 'SIZE_T', 'SIZE_T', 'CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['buffer', 'sizeOfBuffer', 'count', 'format', 'locale', 'argptr'], 'int'), 'swprintf_s': (3, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*'], ['buffer', 'sizeOfBuffer', 'format'], 'int'), '_swprintf_s_l': (4, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', '_LOCALE_T'], ['buffer', 'sizeOfBuffer', 'format', 'locale'], 'int'), '_sprintf_s_l': (4, ['CHAR*', 'SIZE_T', 'CONST CHAR*', '_LOCALE_T'], ['buffer', 'sizeOfBuffer', 'format', 'locale'], 'int'), 'sprintf_s': (3, ['CHAR*', 'SIZE_T', 'CONST CHAR*'], ['buffer', 'sizeOfBuffer', 'format'], 'int'), '_swscanf_s_l': (3, ['CONST WCHAR_T*', 'CONST WCHAR_T*', '_LOCALE_T'], ['buffer', 'format', 'locale'], '[RET_EOF]'), 'swscanf_s': (2, ['CONST WCHAR_T*', 'CONST WCHAR_T*'], ['buffer', 'format'], '[RET_EOF]'), '_sscanf_s_l': (3, ['CONST CHAR*', 'CONST CHAR*', '_LOCALE_T'], ['buffer', 'format', 'locale'], '[RET_EOF]'), 'sscanf_s': (2, ['CONST CHAR*', 'CONST CHAR*'], ['buffer', 'format'], '[RET_EOF]'), 'vswprintf_s': (4, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', 'VA_LIST'], ['buffer', 'numberOfElements', 'format', 'argptr'], 'int'), '_vswprintf_s_l': (5, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', '_LOCALE_T', 'VA_LIST'], ['buffer', 'numberOfElements', 'format', 'locale', 'argptr'], 'int'), '_vsprintf_s_l': (5, ['CHAR*', 'SIZE_T', 'CONST CHAR*', '_LOCALE_T', 'VA_LIST'], ['buffer', 'numberOfElements', 'format', 'locale', 'argptr'], 'int'), 'vsprintf_s': (4, ['CHAR*', 'SIZE_T', 'CONST CHAR*', 'VA_LIST'], ['buffer', 'numberOfElements', 'format', 'argptr'], 'int'), '_strdup_dbg': (4, ['CONST CHAR*', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['strSource', 'blockType', 'filename', 'linenumber'], 'char*'), '_wcsdup_dbg': (4, ['CONST WCHAR_T*', 'DBG_BLOCK_TYPE', 'CONST CHAR*', 'INT'], ['strSource', 'blockType', 'filename', 'linenumber'], 'wchar_t*'), 'strxfrm': (3, ['CHAR*', 'CONST CHAR*', 'SIZE_T'], ['strDest', 'strSource', 'count'], '[size_t_INT_MAX]'), 'wcsxfrm': (3, ['WCHAR_T*', 'CONST WCHAR_T*', 'SIZE_T'], ['strDest', 'strSource', 'count'], '[size_t_INT_MAX]'), '_strxfrm_l': (4, ['CHAR*', 'CONST CHAR*', 'SIZE_T', '_LOCALE_T'], ['strDest', 'strSource', 'count', 'locale'], '[size_t_INT_MAX]'), '_wcsxfrm_l': (4, ['WCHAR_T*', 'CONST WCHAR_T*', 'SIZE_T', '_LOCALE_T'], ['strDest', 'strSource', 'count', 'locale'], '[size_t_INT_MAX]'), 'mbrlen': (3, ['CONST CHAR*', 'SIZE_T', 'MBSTATE_T'], ['str', 'maxSize', 'mbstate'], 'size_t'), '_mbsnbcoll': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T'], ['string1', 'string2', 'count'], '[_NLSCMPERROR]'), '_mbsnbcoll_l': (4, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['string1', 'string2', 'count', 'locale'], '[_NLSCMPERROR]'), '_mbsnbicoll': (3, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T'], ['string1', 'string2', 'count'], '[_NLSCMPERROR]'), '_mbsnbicoll_l': (4, ['CONST UNSIGNED CHAR*', 'CONST UNSIGNED CHAR*', 'SIZE_T', '_LOCALE_T'], ['string1', 'string2', 'count', 'locale'], '[_NLSCMPERROR]'), '_mbsnbset_s': (4, ['UNSIGNED CHAR*', 'SIZE_T', 'UNSIGNED INT', 'SIZE_T'], ['str', 'size', 'c', 'count'], 'errno_t'), '_mbsnbset_s_l': (5, ['UNSIGNED CHAR*', 'SIZE_T', 'UNSIGNED INT', 'SIZE_T', '_LOCALE_T'], ['str', 'size', 'c', 'count', 'locale'], 'errno_t'), '_scprintf_p': (1, ['CONST CHAR*'], ['format'], 'int'), '_scprintf_p_l': (2, ['CONST CHAR*', '_LOCALE_T'], ['format', 'locale'], 'int'), '_scwprintf_p': (1, ['CONST WCHAR_T*'], ['format'], 'int'), '_scwprintf_p_l': (2, ['CONST WCHAR_T*', '_LOCALE_T'], ['format', 'locale'], 'int'), '_snprintf_s': (4, ['CHAR*', 'SIZE_T', 'SIZE_T', 'CONST CHAR*'], ['buffer', 'sizeOfBuffer', 'count', 'format'], 'int'), '_snprintf_s_l': (5, ['CHAR*', 'SIZE_T', 'SIZE_T', 'CONST CHAR*', '_LOCALE_T'], ['buffer', 'sizeOfBuffer', 'count', 'format', 'locale'], 'int'), '_snwprintf_s': (4, ['WCHAR_T*', 'SIZE_T', 'SIZE_T', 'CONST WCHAR_T*'], ['buffer', 'sizeOfBuffer', 'count', 'format'], 'int'), '_snwprintf_s_l': (5, ['WCHAR_T*', 'SIZE_T', 'SIZE_T', 'CONST WCHAR_T*', '_LOCALE_T'], ['buffer', 'sizeOfBuffer', 'count', 'format', 'locale'], 'int'), '_snprintf': (3, ['CHAR*', 'SIZE_T', 'CONST CHAR*'], ['buffer', 'count', 'format'], 'int'), '_snprintf_l': (4, ['CHAR*', 'SIZE_T', 'CONST CHAR*', '_LOCALE_T'], ['buffer', 'count', 'format', 'locale'], 'int'), '_snwprintf': (3, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*'], ['buffer', 'count', 'format'], 'int'), '_snwprintf_l': (4, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', '_LOCALE_T'], ['buffer', 'count', 'format', 'locale'], 'int'), '_strnset_s': (4, ['CHAR*', 'SIZE_T', 'INT', 'SIZE_T'], ['str', 'numberOfElements', 'c', 'count'], 'errno_t'), '_wcsnset_s': (4, ['WCHAR_T*', 'SIZE_T', 'WCHAR_T', 'SIZE_T'], ['str', 'numberOfElements', 'c', 'count'], 'errno_t'), '_mbsnset_s': (4, ['UNSIGNED CHAR*', 'SIZE_T', 'UNSIGNED INT', 'SIZE_T'], ['str', 'numberOfElements', 'c', 'count'], 'errno_t'), '_mbsnset_s_l': (5, ['UNSIGNED CHAR*', 'SIZE_T', 'UNSIGNED INT', 'SIZE_T', '_LOCALE_T'], ['str', 'numberOfElements', 'c', 'count', 'locale'], 'errno_t'), '_strset_s': (3, ['CHAR*', 'SIZE_T', 'INT'], ['str', 'numberOfElements', 'c'], 'errno_t'), '_wcsset_s': (3, ['WCHAR_T*', 'SIZE_T', 'WCHAR_T'], ['str', 'numberOfElements', 'c'], 'errno_t'), '_mbsset_s': (3, ['UNSIGNED CHAR*', 'SIZE_T', 'UNSIGNED INT'], ['str', 'numberOfElements', 'c'], 'errno_t'), '_mbsset_s_l': (4, ['UNSIGNED CHAR*', 'SIZE_T', 'UNSIGNED INT', '_LOCALE_T'], ['str', 'numberOfElements', 'c', 'locale'], 'errno_t'), '_findclose': (1, ['INTPTR_T'], ['handle'], 'int'), '_findfirst': (2, ['CONST CHAR*', 'STRUCT _FINDDATA_T*'], ['filespec', 'fileinfo'], 'intptr_t'), '_findfirst32': (2, ['CONST CHAR*', 'STRUCT _FINDDATA32_T*'], ['filespec', 'fileinfo'], 'intptr_t'), '_findfirst64': (2, ['CONST CHAR*', 'STRUCT __FINDDATA64_T*'], ['filespec', 'fileinfo'], 'intptr_t'), '_findfirsti64': (2, ['CONST CHAR*', 'STRUCT _FINDDATAI64_T*'], ['filespec', 'fileinfo'], 'intptr_t'), '_findfirst32i64': (2, ['CONST CHAR*', 'STRUCT _FINDDATA32I64_T*'], ['filespec', 'fileinfo'], 'intptr_t'), '_findfirst64i32': (2, ['CONST CHAR*', 'STRUCT _FINDDATA64I32_T*'], ['filespec', 'fileinfo'], 'intptr_t'), '_wfindfirst': (2, ['CONST WCHAR_T*', 'STRUCT _WFINDDATA_T*'], ['filespec', 'fileinfo'], 'intptr_t'), '_wfindfirst32': (2, ['CONST WCHAR_T*', 'STRUCT _WFINDDATA32_T*'], ['filespec', 'fileinfo'], 'intptr_t'), '_wfindfirst64': (2, ['CONST WCHAR_T*', 'STRUCT _WFINDDATA64_T*'], ['filespec', 'fileinfo'], 'intptr_t'), '_wfindfirsti64': (2, ['CONST WCHAR_T*', 'STRUCT _WFINDDATAI64_T*'], ['filespec', 'fileinfo'], 'intptr_t'), '_wfindfirst32i64': (2, ['CONST WCHAR_T*', 'STRUCT _WFINDDATA32I64_T*'], ['filespec', 'fileinfo'], 'intptr_t'), '_wfindfirst64i32': (2, ['CONST WCHAR_T*', 'STRUCT _WFINDDATA64I32_T*'], ['filespec', 'fileinfo'], 'intptr_t'), '_findnext': (2, ['INTPTR_T', 'STRUCT _FINDDATA_T*'], ['handle', 'fileinfo'], 'int'), '_findnext32': (2, ['INTPTR_T', 'STRUCT _FINDDATA32_T*'], ['handle', 'fileinfo'], 'int'), '_findnext64': (2, ['INTPTR_T', 'STRUCT __FINDDATA64_T*'], ['handle', 'fileinfo'], 'int'), '_findnexti64': (2, ['INTPTR_T', 'STRUCT _FINDDATAI64_T*'], ['handle', 'fileinfo'], 'int'), '_findnext32i64': (2, ['INTPTR_T', 'STRUCT _FINDDATA32I64_T*'], ['handle', 'fileinfo'], 'int'), '_findnext64i32': (2, ['INTPTR_T', 'STRUCT _FINDDATA64I32_T*'], ['handle', 'fileinfo'], 'int'), '_wfindnext': (2, ['INTPTR_T', 'STRUCT _WFINDDATA_T*'], ['handle', 'fileinfo'], 'int'), '_wfindnext32': (2, ['INTPTR_T', 'STRUCT _WFINDDATA32_T*'], ['handle', 'fileinfo'], 'int'), '_wfindnext64': (2, ['INTPTR_T', 'STRUCT _WFINDDATA64_T*'], ['handle', 'fileinfo'], 'int'), '_wfindnexti64': (2, ['INTPTR_T', 'STRUCT _WFINDDATAI64_T*'], ['handle', 'fileinfo'], 'int'), '_wfindnext32i64': (2, ['INTPTR_T', 'STRUCT _WFINDDATAI64_T*'], ['handle', 'fileinfo'], 'int'), '_wfindnext64i32': (2, ['INTPTR_T', 'STRUCT _WFINDDATA64I32_T*'], ['handle', 'fileinfo'], 'int'), 'asctime': (1, ['CONST STRUCT TM*'], ['timeptr'], 'char*'), '_wasctime': (1, ['CONST STRUCT TM*'], ['timeptr'], 'wchar_t*'), 'asctime_s': (3, ['CHAR*', 'SIZE_T', 'CONST STRUCT TM*'], ['buffer', 'numberOfElements', '_tm'], 'errno_t'), '_wasctime_s': (2, ['WCHAR_T*', 'SIZE_T'], ['buffer', 'numberOfElements'], 'errno_t'), 'clock': (0, [], [], 'clock_t'), 'ctime': (1, ['CONST TIME_T*'], ['timer'], 'char*'), '_ctime32': (1, ['CONST __TIME32_T*'], ['timer'], 'char*'), '_ctime64': (1, ['CONST __TIME64_T*'], ['timer'], 'char*'), '_wctime': (1, ['CONST TIME_T*'], ['timer'], 'wchar_t*'), '_wctime32': (1, ['CONST __TIME32_T*'], ['timer'], 'wchar_t*'), '_wctime64': (1, ['CONST __TIME64_T*'], ['timer'], 'wchar_t*'), '_ctime32_s': (3, ['CHAR*', 'SIZE_T', 'CONST __TIME32_T*'], ['buffer', 'numberOfElements', 'time'], 'errno_t'), '_ctime64_s': (3, ['CHAR*', 'SIZE_T', 'CONST __TIME64_T*'], ['buffer', 'numberOfElements', 'time'], 'errno_t'), '_wctime32_s': (3, ['WCHAR_T*', 'SIZE_T', 'CONST __TIME32_T*'], ['buffer', 'numberOfElements', 'time'], 'errno_t'), '_wctime64_s': (3, ['WCHAR_T*', 'SIZE_T', 'CONST __TIME64_T*'], ['buffer', 'numberOfElements', 'time'], 'errno_t'), '_ftime': (1, ['STRUCT _TIMEB*'], ['timeptr'], 'void'), '_ftime32': (1, ['STRUCT __TIMEB32*'], ['timeptr'], 'void'), '_ftime64': (1, ['STRUCT __TIMEB64*'], ['timeptr'], 'void'), '_ftime32_s': (1, ['STRUCT __TIMEB32*'], ['timeptr'], 'errno_t'), '_ftime64_s': (1, ['STRUCT __TIMEB64*'], ['timeptr'], 'errno_t'), '_futime': (2, ['INT', 'STRUCT _UTIMBUF*'], ['fd', 'filetime'], 'int'), '_futime32': (2, ['INT', 'STRUCT __UTIMBUF32*'], ['fd', 'filetime'], 'int'), '_futime64': (2, ['INT', 'STRUCT __UTIMBUF64*'], ['fd', 'filetime'], 'int'), 'gmtime': (1, ['CONST TIME_T*'], ['timer'], 'struct tm*'), '_gmtime32': (1, ['CONST __TIME32_T*'], ['timer'], 'struct tm*'), '_gmtime64': (1, ['CONST __TIME64_T*'], ['timer'], 'struct tm*'), '_gmtime32_s': (2, ['STRUCT TM*', 'CONST __TIME32_T*'], ['_tm', 'time'], 'errno_t'), '_gmtime64_s': (2, ['STRUCT TM*', 'CONST __TIME64_T*'], ['_tm', 'time'], 'errno_t'), 'localtime': (1, ['CONST TIME_T*'], ['timer'], 'struct tm*'), '_localtime32': (1, ['CONST __TIME32_T*'], ['timer'], 'struct tm*'), '_localtime64': (1, ['CONST __TIME64_T*'], ['timer'], 'struct tm*'), '_localtime32_s': (2, ['STRUCT TM*', 'CONST __TIME32_T*'], ['_tm', 'time'], 'errno_t'), '_localtime64_s': (2, ['STRUCT TM*', 'CONST __TIME64_T*'], ['_tm', 'time'], 'errno_t'), '_mkgmtime': (1, ['STRUCT TM*'], ['timeptr'], 'time_t'), '_mkgmtime32': (1, ['STRUCT TM*'], ['timeptr'], '__time32_t'), '_mkgmtime64': (1, ['STRUCT TM*'], ['timeptr'], '__time64_t'), 'mktime': (1, ['STRUCT TM*'], ['timeptr'], 'time_t'), '_mktime32': (1, ['STRUCT TM*'], ['timeptr'], '__time32_t'), '_mktime64': (1, ['STRUCT TM*'], ['timeptr'], '__time64_t'), '_strdate': (1, ['CHAR*'], ['datestr'], 'char*'), '_wstrdate': (1, ['WCHAR_T*'], ['datestr'], 'wchar_t*'), '_strdate_s': (2, ['CHAR*', 'SIZE_T'], ['buffer', 'numberOfElements'], 'errno_t'), '_wstrdate_s': (2, ['WCHAR_T*', 'SIZE_T'], ['buffer', 'numberOfElements'], 'errno_t'), '_strtime': (1, ['CHAR*'], ['timestr'], 'char*'), '_wstrtime': (1, ['WCHAR_T*'], ['timestr'], 'wchar_t*'), '_strtime_s': (2, ['CHAR*', 'SIZE_T'], ['buffer', 'numberOfElements'], 'errno_t'), '_wstrtime_s': (2, ['WCHAR_T*', 'SIZE_T'], ['buffer', 'numberOfElements'], 'errno_t'), 'time': (1, ['TIME_T*'], ['timer'], 'time_t'), '_time32': (1, ['__TIME32_T*'], ['timer'], '__time32_t'), '_time64': (1, ['__TIME64_T*'], ['timer'], '__time64_t'), '_tzset': (0, [], [], 'void'), '_utime': (2, ['CONST CHAR*', 'STRUCT _UTIMBUF*'], ['filename', 'times'], 'int'), '_utime32': (2, ['CONST CHAR*', 'STRUCT __UTIMBUF32*'], ['filename', 'times'], 'int'), '_utime64': (2, ['CONST CHAR*', 'STRUCT __UTIMBUF64*'], ['filename', 'times'], 'int'), '_wutime': (2, ['CONST WCHAR_T*', 'STRUCT _UTIMBUF*'], ['filename', 'times'], 'int'), '_wutime32': (2, ['CONST WCHAR_T*', 'STRUCT __UTIMBUF32*'], ['filename', 'times'], 'int'), '_wutime64': (2, ['CONST WCHAR_T*', 'STRUCT __UTIMBUF64*'], ['filename', 'times'], 'int'), '_difftime32': (2, ['__TIME32_T', '__TIME32_T'], ['timer1', 'timer0'], 'double'), '_difftime64': (2, ['__TIME64_T', '__TIME64_T'], ['timer1', 'timer0'], 'double'), 'difftime': (2, ['TIME_T', 'TIME_T'], ['timer1', 'timer0'], 'double'), 'strftime': (4, ['CHAR*', 'SIZE_T', 'CONST CHAR*', 'CONST STRUCT TM*'], ['strDest', 'maxsize', 'format', 'timeptr'], 'size_t'), '_strftime_l': (5, ['CHAR*', 'SIZE_T', 'CONST CHAR*', 'CONST STRUCT TM*', '_LOCALE_T'], ['strDest', 'maxsize', 'format', 'timeptr', 'locale'], 'size_t'), 'wcsftime': (4, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', 'CONST STRUCT TM*'], ['strDest', 'maxsize', 'format', 'timeptr'], 'size_t'), '_wcsftime_l': (5, ['WCHAR_T*', 'SIZE_T', 'CONST WCHAR_T*', 'CONST STRUCT TM*', '_LOCALE_T'], ['strDest', 'maxsize', 'format', 'timeptr', 'locale'], 'size_t'), '_get_dstbias': (1, ['INT*'], ['seconds'], 'errno_t'), '_get_daylight': (1, ['INT*'], ['hours'], 'errno_t'), '_get_timezone': (1, ['LONG*'], ['seconds'], 'errno_t'), '_get_tzname': (4, ['SIZE_T*', 'CHAR*', 'SIZE_T', 'INT'], ['pReturnValue', 'timeZoneName', 'sizeInBytes', 'index'], 'errno_t'), '_getsystime': (1, ['STRUCT TM*'], ['_tm'], 'unsigned'), '_setsystime': (2, ['STRUCT TM*', 'UNSIGNED'], ['_tm', 'millisec'], 'unsigned'), '_get_output_format': (0, [], [], '[output_format]'), '_set_output_format': (1, ['OUTPUT_FORMAT'], ['format'], '[output_format]'), '_get_printf_count_output': (0, [], [], 'int'), '_set_printf_count_output': (1, ['INT'], ['enable'], 'int'), '_lock': (1, ['LOCK_NUM'], ['locknum'], 'void'), '_unlock': (1, ['LOCK_NUM'], ['locknum'], 'void'), '_initterm': (2, ['_PVFV*', '_PVFV*'], ['pfbegin', 'pfend'], 'void'), '_initterm_e': (2, ['_PVFV*', '_PVFV*'], ['pfbegin', 'pfend'], 'int'), '__RTDynamicCast': (5, ['PVOID', 'LONG', 'PVOID', 'PVOID', 'BOOL'], ['inptr', 'VfDelta', 'SrcType', 'TargetType', 'isReference'], 'PVOID'), '__p__commode': (0, [], [], 'int*'), '_beep': (2, ['UNSIGNED', 'UNSIGNED'], ['frequency', 'duration'], 'void')}

dict5_odbc32 = {'SQLAllocConnect': (2, ['SQLHENV', 'SQLHDBC*'], ['EnvironmentHandle', 'ConnectionHandle'], 'SQLRETURN'), 'SQLAllocEnv': (1, ['SQLHENV*'], ['EnvironmentHandle'], 'SQLRETURN'), 'SQLAllocHandle': (3, ['SQL_HANDLE_TYPE', 'SQLHANDLE', 'SQLHANDLE*'], ['HandleType', 'InputHandle', 'OutputHandlePtr'], 'SQLRETURN'), 'SQLAllocStmt': (2, ['SQLHDBC', 'SQLHSTMT*'], ['ConnectionHandle', 'StatementHandle'], 'SQLRETURN'), 'SQLBindCol': (6, ['SQLHSTMT', 'SQLUSMALLINT', 'SQLSMALLINT', 'SQLPOINTER', 'SQLLEN', 'SQLLEN*'], ['StatementHandle', 'ColumnNumber', 'TargetType', 'TargetValuePtr', 'BufferLength', 'StrLen_or_Ind'], 'SQLRETURN'), 'SQLBindParam': (8, ['SQLHSTMT', 'SQLUSMALLINT', 'SQLSMALLINT', 'SQLSMALLINT', 'SQLULEN', 'SQLSMALLINT', 'SQLPOINTER', 'SQLLEN*'], ['StatementHandle', 'ParameterNumber', 'ValueType', 'ParameterType', 'LengthPrecision', 'ParameterScale', 'ParameterValue', 'StrLen_or_IndPtr'], 'SQLRETURN'), 'SQLBindParameter': (10, ['SQLHSTMT', 'SQLUSMALLINT', 'SQLSMALLINT', 'SQLSMALLINT', 'SQLSMALLINT', 'SQLULEN', 'SQLSMALLINT', 'SQLPOINTER', 'SQLLEN', 'SQLLEN*'], ['StatementHandle', 'ParameterNumber', 'InputOutputType', 'ValueType', 'ParameterType', 'ColumnSize', 'DecimalDigits', 'ParameterValuePtr', 'BufferLength', 'StrLen_or_IndPtr'], 'SQLRETURN'), 'SQLBrowseConnect': (6, ['SQLHDBC', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLSMALLINT*'], ['ConnectionHandle', 'InConnectionString', 'StringLength1', 'OutConnectionString', 'BufferLength', 'StringLength2Ptr'], 'SQLRETURN'), 'SQLBulkOperations': (2, ['SQLHSTMT', 'SQLUSMALLINT'], ['StatementHandle', 'Operation'], 'SQLRETURN'), 'SQLCancel': (1, ['SQLHSTMT'], ['StatementHandle'], 'SQLRETURN'), 'SQLCancelHandle': (2, ['SQL_HANDLE_TYPE', 'SQLHANDLE'], ['HandleType', 'Handle'], 'SQLRETURN'), 'SQLCloseCursor': (1, ['SQLHSTMT'], ['StatementHandle'], 'SQLRETURN'), 'SQLColAttribute': (7, ['SQLHSTMT', 'SQLUSMALLINT', 'SQLUSMALLINT', 'SQLPOINTER', 'SQLSMALLINT', 'SQLSMALLINT*', 'SQLLEN*'], ['StatementHandle', 'ColumnNumber', 'FieldIdentifier', 'CharacterAttributePtr', 'BufferLength', 'StringLengthPtr', 'NumericAttributePtr'], 'SQLRETURN'), 'SQLColAttributes': (7, ['SQLHSTMT', 'SQLUSMALLINT', 'SQLUSMALLINT', 'SQLPOINTER', 'SQLSMALLINT', 'SQLSMALLINT*', 'SQLLEN*'], ['hstmt', 'icol', 'fDescType', 'rgbDesc', 'cbDescMax', 'pcbDesc', 'pfDesc'], 'SQLRETURN'), 'SQLColumnPrivileges': (9, ['SQLHSTMT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT'], ['StatementHandle', 'CatalogName', 'NameLength1', 'SchemaName', 'NameLength2', 'TableName', 'NameLength3', 'ColumnName', 'NameLength4'], 'SQLRETURN'), 'SQLColumns': (9, ['SQLHSTMT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT'], ['StatementHandle', 'CatalogName', 'NameLength1', 'SchemaName', 'NameLength2', 'TableName', 'NameLength3', 'ColumnName', 'NameLength4'], 'SQLRETURN'), 'SQLCompleteAsync': (3, ['SQLSMALLINT', 'SQLHANDLE', 'RETCODE*'], ['HandleType', 'Handle', 'AsyncRetCodePtr'], 'SQLRETURN'), 'SQLConnect': (7, ['SQLHDBC', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT'], ['ConnectionHandle', 'ServerName', 'NameLength1', 'UserName', 'NameLength2', 'Authentication', 'NameLength3'], 'SQLRETURN'), 'SQLCopyDesc': (2, ['SQLHDESC', 'SQLHDESC'], ['SourceDescHandle', 'TargetDescHandle'], 'SQLRETURN'), 'SQLDataSources': (8, ['SQLHENV', 'SQLUSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLSMALLINT*', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLSMALLINT*'], ['EnvironmentHandle', 'Direction', 'ServerName', 'BufferLength1', 'NameLength1Ptr', 'Description', 'BufferLength2', 'NameLength2Ptr'], 'SQLRETURN'), 'SQLDescribeCol': (9, ['SQLHSTMT', 'SQLUSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLSMALLINT*', 'SQLSMALLINT*', 'SQLULEN*', 'SQLSMALLINT*', 'SQLSMALLINT*'], ['StatementHandle', 'ColumnNumber', 'ColumnName', 'BufferLength', 'NameLengthPtr', 'DataTypePtr', 'ColumnSizePtr', 'DecimalDigitsPtr', 'NullablePtr'], 'SQLRETURN'), 'SQLDescribeParam': (6, ['SQLHSTMT', 'SQLUSMALLINT', 'SQLSMALLINT*', 'SQLULEN*', 'SQLSMALLINT*', 'SQLSMALLINT*'], ['StatementHandle', 'ParameterNumber', 'DataTypePtr', 'ParameterSizePtr', 'DecimalDigitsPtr', 'NullablePtr'], 'SQLRETURN'), 'SQLDisconnect': (1, ['SQLHDBC'], ['ConnectionHandle'], 'SQLRETURN'), 'SQLDriverConnect': (8, ['SQLHDBC', 'SQLHWND', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLSMALLINT*', 'SQL_DRIVER_COMPLETION'], ['ConnectionHandle', 'WindowHandle', 'InConnectionString', 'StringLength1', 'OutConnectionString', 'BufferLength', 'StringLength2Ptr', 'DriverCompletion'], 'SQLRETURN'), 'SQLDrivers': (8, ['SQLHENV', 'SQLUSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLSMALLINT*', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLSMALLINT*'], ['EnvironmentHandle', 'Direction', 'DriverDescription', 'BufferLength1', 'DescriptionLengthPtr', 'DriverAttributes', 'BufferLength2', 'AttributesLengthPtr'], 'SQLRETURN'), 'SQLEndTran': (3, ['SQL_HANDLE_TYPE', 'SQLHANDLE', 'SQL_ENDTRAN_OPTION'], ['HandleType', 'Handle', 'CompletionType'], 'SQLRETURN'), 'SQLError': (8, ['SQLHENV', 'SQLHDBC', 'SQLHSTMT', 'SQLTCHAR*', 'SQLINTEGER*', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLSMALLINT*'], ['EnvironmentHandle', 'ConnectionHandle', 'StatementHandle', 'SQLState', 'NativeError', 'MessageText', 'BufferLength', 'TextLength'], 'SQLRETURN'), 'SQLExecDirect': (3, ['SQLHSTMT', 'SQLTCHAR*', 'SQLINTEGER'], ['StatementHandle', 'StatementText', 'TextLength'], 'SQLRETURN'), 'SQLExecute': (1, ['SQLHSTMT'], ['StatementHandle'], 'SQLRETURN'), 'SQLExtendedFetch': (5, ['SQLHSTMT', 'SQLUSMALLINT', 'SQLLEN', 'SQLULEN*', 'SQLUSMALLINT*'], ['StatementHandle', 'FetchOrientation', 'FetchOffset', 'RowCountPtr', 'RowStatusArray'], 'SQLRETURN'), 'SQLFetch': (1, ['SQLHSTMT'], ['StatementHandle'], 'SQLRETURN'), 'SQLFetchScroll': (3, ['SQLHSTMT', 'SQL_FETCH_TYPE', 'SQLLEN'], ['StatementHandle', 'FetchOrientation', 'FetchOffset'], 'SQLRETURN'), 'SQLForeignKeys': (13, ['SQLHSTMT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT'], ['StatementHandle', 'PKCatalogName', 'NameLength1', 'PKSchemaName', 'NameLength2', 'PKTableName', 'NameLength3', 'FKCatalogName', 'NameLength4', 'FKSchemaName', 'NameLength5', 'FKTableName', 'NameLength6'], 'SQLRETURN'), 'SQLFreeConnect': (1, ['SQLHDBC'], ['ConnectionHandle'], 'SQLRETURN'), 'SQLFreeEnv': (1, ['SQLHENV'], ['EnvironmentHandle'], 'SQLRETURN'), 'SQLFreeHandle': (2, ['SQL_HANDLE_TYPE', 'SQLHANDLE'], ['HandleType', 'Handle'], 'SQLRETURN'), 'SQLFreeStmt': (2, ['SQLHSTMT', 'SQL_FREESTMT_OPTION'], ['StatementHandle', 'Option'], 'SQLRETURN'), 'SQLGetConnectAttr': (5, ['SQLHDBC', 'SQLINTEGER', 'SQLPOINTER', 'SQLINTEGER', 'SQLINTEGER*'], ['ConnectionHandle', 'Attribute', 'ValuePtr', 'BufferLength', 'StringLengthPtr'], 'SQLRETURN'), 'SQLGetConnectOption': (3, ['SQLHDBC', 'SQLUSMALLINT', 'SQLPOINTER'], ['ConnectionHandle', 'Option', 'Value'], 'SQLRETURN'), 'SQLGetCursorName': (4, ['SQLHSTMT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLSMALLINT*'], ['StatementHandle', 'CursorName', 'BufferLength', 'NameLengthPtr'], 'SQLRETURN'), 'SQLGetData': (6, ['SQLHSTMT', 'SQLUSMALLINT', 'SQLSMALLINT', 'SQLPOINTER', 'SQLLEN', 'SQLLEN*'], ['StatementHandle', 'Col_or_Param_Num', 'TargetType', 'TargetValuePtr', 'BufferLength', 'StrLen_or_IndPtr'], 'SQLRETURN'), 'SQLGetDescField': (6, ['SQLHDESC', 'SQLSMALLINT', 'SQLSMALLINT', 'SQLPOINTER', 'SQLINTEGER', 'SQLINTEGER*'], ['DescriptorHandle', 'RecNumber', 'FieldIdentifier', 'ValuePtr', 'BufferLength', 'StringLengthPtr'], 'SQLRETURN'), 'SQLGetDescRec': (11, ['SQLHDESC', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLSMALLINT*', 'SQLSMALLINT*', 'SQLSMALLINT*', 'SQLLEN*', 'SQLSMALLINT*', 'SQLSMALLINT*', 'SQLSMALLINT*'], ['DescriptorHandle', 'RecNumber', 'Name', 'BufferLength', 'StringLengthPtr', 'TypePtr', 'SubTypePtr', 'LengthPtr', 'PrecisionPtr', 'ScalePtr', 'NullablePtr'], 'SQLRETURN'), 'SQLGetDiagField': (7, ['SQL_HANDLE_TYPE', 'SQLHANDLE', 'SQLSMALLINT', 'SQLSMALLINT', 'SQLPOINTER', 'SQLSMALLINT', 'SQLSMALLINT*'], ['HandleType', 'Handle', 'RecNumber', 'DiagIdentifier', 'DiagInfoPtr', 'BufferLength', 'StringLengthPtr'], 'SQLRETURN'), 'SQLGetDiagRec': (8, ['SQL_HANDLE_TYPE', 'SQLHANDLE', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLINTEGER*', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLSMALLINT*'], ['HandleType', 'Handle', 'RecNumber', 'SQLState', 'NativeErrorPtr', 'MessageText', 'BufferLength', 'TextLengthPtr'], 'SQLRETURN'), 'SQLGetEnvAttr': (5, ['SQLHENV', 'SQLINTEGER', 'SQLPOINTER', 'SQLINTEGER', 'SQLINTEGER*'], ['EnvironmentHandle', 'Attribute', 'ValuePtr', 'BufferLength', 'StringLengthPtr'], 'SQLRETURN'), 'SQLGetFunctions': (3, ['SQLHDBC', 'SQLUSMALLINT', 'SQLUSMALLINT*'], ['ConnectionHandle', 'FunctionId', 'SupportedPtr'], 'SQLRETURN'), 'SQLGetInfo': (5, ['SQLHDBC', 'SQLUSMALLINT', 'SQLPOINTER', 'SQLSMALLINT', 'SQLSMALLINT*'], ['ConnectionHandle', 'InfoType', 'InfoValuePtr', 'BufferLength', 'StringLengthPtr'], 'SQLRETURN'), 'SQLGetStmtAttr': (5, ['SQLHSTMT', 'SQLINTEGER', 'SQLPOINTER', 'SQLINTEGER', 'SQLINTEGER*'], ['StatementHandle', 'Attribute', 'ValuePtr', 'BufferLength', 'StringLengthPtr'], 'SQLRETURN'), 'SQLGetStmtOption': (3, ['SQLHSTMT', 'SQLUSMALLINT', 'SQLPOINTER'], ['StatementHandle', 'Option', 'Value'], 'SQLRETURN'), 'SQLGetTypeInfo': (2, ['SQLHSTMT', 'SQLSMALLINT'], ['StatementHandle', 'DataType'], 'SQLRETURN'), 'SQLMoreResults': (1, ['SQLHSTMT'], ['StatementHandle'], 'SQLRETURN'), 'SQLNativeSql': (6, ['SQLHDBC', 'SQLTCHAR*', 'SQLINTEGER', 'SQLTCHAR*', 'SQLINTEGER', 'SQLINTEGER*'], ['ConnectionHandle', 'InStatementText', 'TextLength1', 'OutStatementText', 'BufferLength', 'TextLength2Ptr'], 'SQLRETURN'), 'SQLNumParams': (2, ['SQLHSTMT', 'SQLSMALLINT*'], ['StatementHandle', 'ParameterCountPtr'], 'SQLRETURN'), 'SQLNumResultCols': (2, ['SQLHSTMT', 'SQLSMALLINT*'], ['StatementHandle', 'ColumnCountPtr'], 'SQLRETURN'), 'SQLParamData': (2, ['SQLHSTMT', 'SQLPOINTER*'], ['StatementHandle', 'ValuePtrPtr'], 'SQLRETURN'), 'SQLParamOptions': (3, ['SQLHSTMT', 'SQLULEN', 'SQLULEN*'], ['hstmt', 'crow', 'pirow'], 'SQLRETURN'), 'SQLPrepare': (3, ['SQLHSTMT', 'SQLTCHAR*', 'SQLINTEGER'], ['StatementHandle', 'StatementText', 'TextLength'], 'SQLRETURN'), 'SQLPrimaryKeys': (7, ['SQLHSTMT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT'], ['StatementHandle', 'CatalogName', 'NameLength1', 'SchemaName', 'NameLength2', 'TableName', 'NameLength3'], 'SQLRETURN'), 'SQLProcedureColumns': (9, ['SQLHSTMT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT'], ['StatementHandle', 'CatalogName', 'NameLength1', 'SchemaName', 'NameLength2', 'ProcName', 'NameLength3', 'ColumnName', 'NameLength4'], 'SQLRETURN'), 'SQLProcedures': (7, ['SQLHSTMT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT'], ['StatementHandle', 'CatalogName', 'NameLength1', 'SchemaName', 'NameLength2', 'ProcName', 'NameLength3'], 'SQLRETURN'), 'SQLPutData': (3, ['SQLHSTMT', 'SQLPOINTER', 'SQLLEN'], ['StatementHandle', 'DataPtr', 'StrLen_or_Ind'], 'SQLRETURN'), 'SQLRowCount': (2, ['SQLHSTMT', 'SQLLEN*'], ['StatementHandle', 'RowCountPtr'], 'SQLRETURN'), 'SQLSetConnectAttr': (4, ['SQLHDBC', 'SQLINTEGER', 'SQLPOINTER', 'SQLINTEGER'], ['ConnectionHandle', 'Attribute', 'ValuePtr', 'StringLength'], 'SQLRETURN'), 'SQLSetConnectOption': (3, ['SQLHDBC', 'SQLUSMALLINT', 'SQLULEN'], ['ConnectionHandle', 'Option', 'Value'], 'SQLRETURN'), 'SQLSetCursorName': (3, ['SQLHSTMT', 'SQLTCHAR*', 'SQLSMALLINT'], ['StatementHandle', 'CursorName', 'NameLength'], 'SQLRETURN'), 'SQLSetDescField': (5, ['SQLHDESC', 'SQLSMALLINT', 'SQLSMALLINT', 'SQLPOINTER', 'SQLINTEGER'], ['DescriptorHandle', 'RecNumber', 'FieldIdentifier', 'ValuePtr', 'BufferLength'], 'SQLRETURN'), 'SQLSetDescRec': (10, ['SQLHDESC', 'SQLSMALLINT', 'SQLSMALLINT', 'SQLSMALLINT', 'SQLLEN', 'SQLSMALLINT', 'SQLSMALLINT', 'SQLPOINTER', 'SQLLEN*', 'SQLLEN*'], ['DescriptorHandle', 'RecNumber', 'Type', 'SubType', 'Length', 'Precision', 'Scale', 'DataPtr', 'StringLengthPtr', 'IndicatorPtr'], 'SQLRETURN'), 'SQLSetEnvAttr': (4, ['SQLHENV', 'SQLINTEGER', 'SQLPOINTER', 'SQLINTEGER'], ['EnvironmentHandle', 'Attribute', 'ValuePtr', 'StringLength'], 'SQLRETURN'), 'SQLSetParam': (8, ['SQLHSTMT', 'SQLUSMALLINT', 'SQLSMALLINT', 'SQLSMALLINT', 'SQLULEN', 'SQLSMALLINT', 'SQLPOINTER', 'SQLLEN*'], ['StatementHandle', 'ParameterNumber', 'ValueType', 'ParameterType', 'LengthPrecision', 'ParameterScale', 'ParameterValue', 'StrLen_or_Ind'], 'SQLRETURN'), 'SQLSetPos': (4, ['SQLHSTMT', 'SQLSETPOSIROW', 'SQLUSMALLINT', 'SQLUSMALLINT'], ['StatementHandle', 'RowNumber', 'Operation', 'LockType'], 'SQLRETURN'), 'SQLSetScrollOptions': (4, ['SQLHSTMT', 'SQLUSMALLINT', 'SQLLEN', 'SQLUSMALLINT'], ['hstmt', 'fConcurrency', 'crowKeyset', 'crowRowset'], 'SQLRETURN'), 'SQLSetStmtAttr': (4, ['SQLHSTMT', 'SQLINTEGER', 'SQLPOINTER', 'SQLINTEGER'], ['StatementHandle', 'Attribute', 'ValuePtr', 'StringLength'], 'SQLRETURN'), 'SQLSetStmtOption': (3, ['SQLHSTMT', 'SQLUSMALLINT', 'SQLULEN'], ['StatementHandle', 'Option', 'Value'], 'SQLRETURN'), 'SQLSpecialColumns': (10, ['SQLHSTMT', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLSMALLINT', 'SQLSMALLINT'], ['StatementHandle', 'IdentifierType', 'CatalogName', 'NameLength1', 'SchemaName', 'NameLength2', 'TableName', 'NameLength3', 'Scope', 'Nullable'], 'SQLRETURN'), 'SQLStatistics': (9, ['SQLHSTMT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLUSMALLINT', 'SQLUSMALLINT'], ['StatementHandle', 'CatalogName', 'NameLength1', 'SchemaName', 'NameLength2', 'TableName', 'NameLength3', 'Unique', 'Reserved'], 'SQLRETURN'), 'SQLTablePrivileges': (7, ['SQLHSTMT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT'], ['StatementHandle', 'CatalogName', 'NameLength1', 'SchemaName', 'NameLength2', 'TableName', 'NameLength3'], 'SQLRETURN'), 'SQLTables': (9, ['SQLHSTMT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT', 'SQLTCHAR*', 'SQLSMALLINT'], ['StatementHandle', 'CatalogName', 'NameLength1', 'SchemaName', 'NameLength2', 'TableName', 'NameLength3', 'TableType', 'NameLength4'], 'SQLRETURN'), 'SQLTransact': (3, ['SQLHENV', 'SQLHDBC', 'SQLUSMALLINT'], ['EnvironmentHandle', 'ConnectionHandle', 'CompletionType'], 'SQLRETURN')}

dict5_pdh = {'PdhAddCounter': (4, ['PDH_HQUERY', 'LPCTSTR', 'DWORD_PTR', 'PDH_HCOUNTER*'], ['hQuery', 'szFullCounterPath', 'dwUserData', 'phCounter'], 'PDH_STATUS'), 'PdhAddEnglishCounter': (4, ['PDH_HQUERY', 'LPCTSTR', 'DWORD_PTR', 'PDH_HCOUNTER*'], ['hQuery', 'szFullCounterPath', 'dwUserData', 'phCounter'], 'PDH_STATUS'), 'PdhBindInputDataSource': (2, ['PDH_HLOG*', 'LPCTSTR'], ['phDataSource', 'szLogFileNameList'], 'PDH_STATUS'), 'PdhBrowseCounters': (1, ['PPDH_BROWSE_DLG_CONFIG'], ['pBrowseDlgData'], 'PDH_STATUS'), 'PdhBrowseCountersH': (1, ['PPDH_BROWSE_DLG_CONFIG'], ['pBrowseDlgData'], 'PDH_STATUS'), 'PdhCalculateCounterFromRawValue': (5, ['PDH_HCOUNTER', 'PDHFORMATFLAGS', 'PPDH_RAW_COUNTER', 'PPDH_RAW_COUNTER', 'PPDH_FMT_COUNTERVALUE'], ['hCounter', 'dwFormat', 'rawValue1', 'rawValue2', 'fmtValue'], 'PDH_STATUS'), 'PdhCloseLog': (2, ['PDH_HLOG', 'DWORD'], ['hLog', 'dwFlags'], 'PDH_STATUS'), 'PdhCloseQuery': (1, ['PDH_HQUERY'], ['hQuery'], 'PDH_STATUS'), 'PdhCollectQueryData': (1, ['PDH_HQUERY'], ['hQuery'], 'PDH_STATUS'), 'PdhCollectQueryDataEx': (3, ['PDH_HQUERY', 'DWORD', 'HANDLE'], ['hQuery', 'dwIntervalTime', 'hNewDataEvent'], 'PDH_STATUS'), 'PdhCollectQueryDataWithTime': (2, ['PDH_HQUERY', 'LONGLONG*'], ['hQuery', 'pllTimeStamp'], 'PDH_STATUS'), 'PdhComputeCounterStatistics': (6, ['PDH_HCOUNTER', 'PDHFORMATFLAGS', 'DWORD', 'DWORD', 'PPDH_RAW_COUNTER', 'PPDH_STATISTICS'], ['hCounter', 'dwFormat', 'dwFirstEntry', 'dwNumEntries', 'lpRawValueArray', 'data'], 'PDH_STATUS'), 'PdhConnectMachine': (1, ['LPCTSTR'], ['szMachineName'], 'PDH_STATUS'), 'PdhEnumLogSetNames': (3, ['LPCTSTR', 'LPTSTR', 'LPDWORD'], ['szDataSource', 'mszLogSetNameList', 'pcchBufferLength'], 'PDH_STATUS'), 'PdhEnumMachines': (3, ['LPCTSTR', 'LPTSTR', 'LPDWORD'], ['szDataSource', 'mszMachineNameList', 'pcchBufferLength'], 'PDH_STATUS'), 'PdhEnumMachinesH': (3, ['PDH_HLOG', 'LPTSTR', 'LPDWORD'], ['hDataSource', 'mszMachineNameList', 'pcchBufferLength'], 'PDH_STATUS'), 'PdhEnumObjectItems': (9, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD', 'LPTSTR', 'LPDWORD', 'PERFDETAILLEVEL', 'DWORD'], ['szDataSource', 'szMachineName', 'szObjectName', 'mszCounterList', 'pcchCounterListLength', 'mszInstanceList', 'pcchInstanceListLength', 'dwDetailLevel', 'dwFlags'], 'PDH_STATUS'), 'PdhEnumObjectItemsH': (9, ['PDH_HLOG', 'LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD', 'LPTSTR', 'LPDWORD', 'PERFDETAILLEVEL', 'DWORD'], ['hDataSource', 'szMachineName', 'szObjectName', 'mszCounterList', 'pcchCounterListLength', 'mszInstanceList', 'pcchInstanceListLength', 'dwDetailLevel', 'dwFlags'], 'PDH_STATUS'), 'PdhEnumObjects': (6, ['LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD', 'PERFDETAILLEVEL', 'BOOL'], ['szDataSource', 'szMachineName', 'mszObjectList', 'pcchBufferLength', 'dwDetailLevel', 'bRefresh'], 'PDH_STATUS'), 'PdhEnumObjectsH': (6, ['PDH_HLOG', 'LPCTSTR', 'LPTSTR', 'LPDWORD', 'PERFDETAILLEVEL', 'BOOL'], ['hDataSource', 'szMachineName', 'mszObjectList', 'pcchBufferLength', 'dwDetailLevel', 'bRefresh'], 'PDH_STATUS'), 'PdhExpandCounterPath': (3, ['LPCTSTR', 'LPTSTR', 'LPDWORD'], ['szWildCardPath', 'mszExpandedPathList', 'pcchPathListLength'], 'PDH_STATUS'), 'PdhExpandWildCardPath': (5, ['LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD', 'PDHEXPANDFLAGS'], ['szDataSource', 'szWildCardPath', 'mszExpandedPathList', 'pcchPathListLength', 'dwFlags'], 'PDH_STATUS'), 'PdhExpandWildCardPathH': (5, ['PDH_HLOG', 'LPCTSTR', 'LPTSTR', 'LPDWORD', 'PDHEXPANDFLAGS'], ['hDataSource', 'szWildCardPath', 'mszExpandedPathList', 'pcchPathListLength', 'dwFlags'], 'PDH_STATUS'), 'PdhFormatFromRawValue': (6, ['DWORD', 'PDHFORMATFLAGS', 'LONGLONG*', 'PPDH_RAW_COUNTER', 'PPDH_RAW_COUNTER', 'PPDH_FMT_COUNTERVALUE'], ['dwCounterType', 'dwFormat', 'pTimeBase', 'rawValue1', 'rawValue2', 'fmtValue'], 'PDH_STATUS'), 'PdhGetCounterInfo': (4, ['PDH_HCOUNTER', 'BOOLEAN', 'LPDWORD', 'PPDH_COUNTER_INFO'], ['hCounter', 'bRetrieveExplainText', 'pdwBufferSize', 'lpBuffer'], 'PDH_STATUS'), 'PdhGetCounterTimeBase': (2, ['PDH_HCOUNTER', 'LONGLONG*'], ['hCounter', 'pTimeBase'], 'PDH_STATUS'), 'PdhGetDataSourceTimeRange': (4, ['LPCTSTR', 'LPDWORD', 'PPDH_TIME_INFO', 'LPDWORD'], ['szDataSource', 'pdwNumEntries', 'pInfo', 'pdwBufferSize'], 'PDH_STATUS'), 'PdhGetDataSourceTimeRangeH': (4, ['PDH_HLOG', 'LPDWORD', 'PPDH_TIME_INFO', 'LPDWORD'], ['hDataSource', 'pdwNumEntries', 'pInfo', 'pdwBufferSize'], 'PDH_STATUS'), 'PdhGetDefaultPerfCounter': (5, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD'], ['szDataSource', 'szMachineName', 'szObjectName', 'szDefaultCounterName', 'pcchBufferSize'], 'PDH_STATUS'), 'PdhGetDefaultPerfCounterH': (5, ['PDH_HLOG', 'LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD'], ['hDataSource', 'szMachineName', 'szObjectName', 'szDefaultCounterName', 'pcchBufferSize'], 'PDH_STATUS'), 'PdhGetDefaultPerfObject': (4, ['LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD'], ['szDataSource', 'szMachineName', 'szDefaultObjectName', 'pcchBufferSize'], 'PDH_STATUS'), 'PdhGetDefaultPerfObjectH': (4, ['PDH_HLOG', 'LPCTSTR', 'LPTSTR', 'LPDWORD'], ['hDataSource', 'szMachineName', 'szDefaultObjectName', 'pcchBufferSize'], 'PDH_STATUS'), 'PdhGetDllVersion': (1, ['LPDWORD'], ['lpdwVersion'], 'PDH_STATUS'), 'PdhGetFormattedCounterArray': (5, ['PDH_HCOUNTER', 'PDHFORMATFLAGS', 'LPDWORD', 'LPDWORD', 'PPDH_FMT_COUNTERVALUE_ITEM'], ['hCounter', 'dwFormat', 'lpdwBufferSize', 'lpdwBufferCount', 'ItemBuffer'], 'PDH_STATUS'), 'PdhGetFormattedCounterValue': (4, ['PDH_HCOUNTER', 'PDHFORMATFLAGS', 'LPDWORD', 'PPDH_FMT_COUNTERVALUE'], ['hCounter', 'dwFormat', 'lpdwType', 'pValue'], 'PDH_STATUS'), 'PdhGetLogFileSize': (2, ['PDH_HLOG', 'LONGLONG*'], ['hLog', 'llSize'], 'PDH_STATUS'), 'PdhGetRawCounterArray': (4, ['PDH_HCOUNTER', 'LPDWORD', 'LPDWORD', 'PPDH_RAW_COUNTER_ITEM'], ['hCounter', 'lpdwBufferSize', 'lpdwItemCount', 'ItemBuffer'], 'PDH_STATUS'), 'PdhGetRawCounterValue': (3, ['PDH_HCOUNTER', 'LPDWORD', 'PPDH_RAW_COUNTER'], ['hCounter', 'lpdwType', 'pValue'], 'PDH_STATUS'), 'PdhIsRealTimeQuery': (1, ['PDH_HQUERY'], ['hQuery'], 'BOOL'), 'PdhLookupPerfIndexByName': (3, ['LPCTSTR', 'LPCTSTR', 'LPDWORD'], ['szMachineName', 'szNameBuffer', 'pdwIndex'], 'PDH_STATUS'), 'PdhLookupPerfNameByIndex': (4, ['LPCTSTR', 'DWORD', 'LPTSTR', 'LPDWORD'], ['szMachineName', 'dwNameIndex', 'szNameBuffer', 'pcchNameBufferSize'], 'PDH_STATUS'), 'PdhMakeCounterPath': (4, ['PDH_COUNTER_PATH_ELEMENTS*', 'LPTSTR', 'LPDWORD', 'PDHPATHFLAGS'], ['pCounterPathElements', 'szFullPathBuffer', 'pcchBufferSize', 'dwFlags'], 'PDH_STATUS'), 'PdhOpenLog': (7, ['LPCTSTR', 'PDHOPENLOGFLAGS', 'PDH_LOG_TYPE*', 'PDH_HQUERY', 'DWORD', 'LPCTSTR', 'PDH_HLOG*'], ['szLogFileName', 'dwAccessFlags', 'lpdwLogType', 'hQuery', 'dwMaxSize', 'szUserCaption', 'phLog'], 'PDH_STATUS'), 'PdhOpenQuery': (3, ['LPCTSTR', 'DWORD_PTR', 'PDH_HQUERY*'], ['szDataSource', 'dwUserData', 'phQuery'], 'PDH_STATUS'), 'PdhOpenQueryH': (3, ['PDH_HLOG', 'DWORD_PTR', 'PDH_HQUERY*'], ['hDataSource', 'dwUserData', 'phQuery'], 'PDH_STATUS'), 'PdhParseCounterPath': (4, ['LPCTSTR', 'PDH_COUNTER_PATH_ELEMENTS*', 'LPDWORD', 'DWORD'], ['szFullPathBuffer', 'pCounterPathElements', 'pdwBufferSize', 'dwFlags'], 'PDH_STATUS'), 'PdhParseInstanceName': (6, ['LPCTSTR', 'LPTSTR', 'LPDWORD', 'LPTSTR', 'LPDWORD', 'LPDWORD'], ['szInstanceString', 'szInstanceName', 'pcchInstanceNameLength', 'szParentName', 'pcchParentNameLength', 'lpIndex'], 'PDH_STATUS'), 'PdhReadRawLogRecord': (4, ['PDH_HLOG', 'FILETIME', 'PPDH_RAW_LOG_RECORD', 'LPDWORD'], ['hLog', 'ftRecord', 'pRawLogRecord', 'pdwBufferLength'], 'PDH_STATUS'), 'PdhRemoveCounter': (1, ['PDH_HCOUNTER'], ['hCounter'], 'PDH_STATUS'), 'PdhSelectDataSource': (4, ['HWND', 'DWORD', 'LPTSTR', 'LPDWORD'], ['hWndOwner', 'dwFlags', 'szDataSource', 'pcchBufferLength'], 'PDH_STATUS'), 'PdhSetCounterScaleFactor': (2, ['PDH_HCOUNTER', 'LONG'], ['hCounter', 'lFactor'], 'PDH_STATUS'), 'PdhSetDefaultRealTimeDataSource': (1, ['DWORD'], ['dwDataSourceId'], 'PDH_STATUS'), 'PdhSetQueryTimeRange': (2, ['PDH_HQUERY', 'PPDH_TIME_INFO'], ['hQuery', 'pInfo'], 'PDH_STATUS'), 'PdhUpdateLog': (2, ['PDH_HLOG', 'LPCTSTR'], ['hLog', 'szUserString'], 'PDH_STATUS'), 'PdhUpdateLogFileCatalog': (1, ['PDH_HLOG'], ['hLog'], 'PDH_STATUS'), 'PdhValidatePath': (1, ['LPCTSTR'], ['szFullCounterPath'], 'PDH_STATUS'), 'PdhValidatePathEx': (2, ['PDH_HLOG', 'LPCTSTR'], ['hDataSource', 'szFullPathBuffer'], 'PDH_STATUS')}

dict5_powrprof = {'CallNtPowerInformation': (5, ['POWER_INFORMATION_LEVEL', 'PVOID', 'ULONG', 'PVOID', 'ULONG'], ['InformationLevel', 'lpInputBuffer', 'nInputBufferSize', 'lpOutputBuffer', 'nOutputBufferSize'], 'NTSTATUS'), 'DevicePowerClose': (0, [], [], 'BOOLEAN'), 'DevicePowerEnumDevices': (5, ['ULONG', 'ULONG', 'ULONG', 'PBYTE', 'PULONG'], ['QueryIndex', 'QueryInterpretationFlags', 'QueryFlags', 'pReturnBuffer', 'pBufferSize'], 'BOOLEAN'), 'DevicePowerOpen': (1, ['ULONG'], ['Flags'], 'BOOLEAN'), 'DevicePowerSetDeviceState': (3, ['LPCWSTR', 'DEVICEPOWER_FLAGS', 'PCVOID'], ['DeviceDescription', 'SetFlags', 'SetData'], 'DWORD'), 'GetCurrentPowerPolicies': (2, ['PGLOBAL_POWER_POLICY', 'PPOWER_POLICY'], ['pGlobalPowerPolicy', 'pPowerPolicy'], 'BOOLEAN'), 'PowerCanRestoreIndividualDefaultPowerScheme': (1, ['CONST GUID*'], ['SchemeGuid'], '[ERROR_CODE]'), 'PowerCreatePossibleSetting': (4, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'ULONG'], ['RootSystemPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'PossibleSettingIndex'], '[ERROR_CODE]'), 'PowerCreateSetting': (3, ['HKEY', 'CONST GUID*', 'CONST GUID*'], ['RootSystemPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid'], '[ERROR_CODE]'), 'PowerDeleteScheme': (2, ['HKEY', 'CONST GUID*'], ['RootPowerKey', 'SchemeGuid'], '[ERROR_CODE]'), 'PowerDeterminePlatformRole': (0, [], [], 'POWER_PLATFORM_ROLE'), 'PowerDuplicateScheme': (3, ['HKEY', 'CONST GUID*', 'GUID**'], ['RootPowerKey', 'SourceSchemeGuid', 'DestinationSchemeGuid'], '[ERROR_CODE]'), 'PowerEnumerate': (7, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'POWER_DATA_ACCESSOR', 'ULONG', 'UCHAR*', 'DWORD*'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'AccessFlags', 'Index', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerImportPowerScheme': (3, ['HKEY', 'LPCWSTR', 'GUID**'], ['RootPowerKey', 'ImportFileNamePath', 'DestinationSchemeGuid'], '[ERROR_CODE]'), 'PowerIsSettingRangeDefined': (2, ['CONST GUID*', 'CONST GUID*'], ['SubKeyGuid', 'SettingGuid'], 'BOOLEAN'), 'PowerReadACDefaultIndex': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'LPDWORD'], ['RootPowerKey', 'SchemePersonalityGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'AcDefaultIndex'], '[ERROR_CODE]'), 'PowerReadACValue': (7, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'REGTYPE-PULONG', 'LPBYTE', 'LPDWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Type', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerReadACValueIndex': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'LPDWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'AcValueIndex'], '[ERROR_CODE]'), 'PowerReadDCDefaultIndex': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'LPDWORD'], ['RootPowerKey', 'SchemePersonalityGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'DcDefaultIndex'], '[ERROR_CODE]'), 'PowerReadDCValue': (7, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'REGTYPE-PULONG', 'PUCHAR', 'LPDWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Type', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerReadDCValueIndex': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'LPDWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'DcValueIndex'], '[ERROR_CODE]'), 'PowerReadDescription': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'LPWSTR', 'LPDWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerReadFriendlyName': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'LPWSTR', 'LPDWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerReadIconResourceSpecifier': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'PUCHAR', 'LPDWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerReadPossibleDescription': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'ULONG', 'PUCHAR', 'LPDWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'PossibleSettingIndex', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerReadPossibleFriendlyName': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'ULONG', 'PUCHAR', 'LPDWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'PossibleSettingIndex', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerReadPossibleValue': (7, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'REGTYPE-PULONG', 'ULONG', 'PUCHAR', 'LPDWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Type', 'PossibleSettingIndex', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerReadSettingAttributes': (2, ['CONST GUID*', 'CONST GUID*'], ['SubGroupGuid', 'PowerSettingGuid'], '[ERROR_CODE]'), 'PowerReadValueIncrement': (4, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'LPDWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'ValueIncrement'], '[ERROR_CODE]'), 'PowerReadValueMax': (4, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'LPDWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'ValueMaximum'], '[ERROR_CODE]'), 'PowerReadValueMin': (4, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'LPDWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'ValueMinimum'], '[ERROR_CODE]'), 'PowerReadValueUnitsSpecifier': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'LPWSTR', 'LPDWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerRemovePowerSetting': (2, ['CONST GUID*', 'CONST GUID*'], ['PowerSettingSubKeyGuid', 'PowerSettingGuid'], '[ERROR_CODE]'), 'PowerReplaceDefaultPowerSchemes': (0, [], [], '[ERROR_CODE]'), 'PowerRestoreDefaultPowerSchemes': (0, [], [], '[ERROR_CODE]'), 'PowerRestoreIndividualDefaultPowerScheme': (1, ['CONST GUID*'], ['SchemeGuid'], '[ERROR_CODE]'), 'PowerSetActiveScheme': (2, ['HKEY', 'CONST GUID*'], ['UserRootPowerKey', 'SchemeGuid'], '[ERROR_CODE]'), 'PowerSettingAccessCheck': (2, ['POWER_DATA_ACCESSOR', 'CONST GUID*'], ['AccessFlags', 'PowerGuid'], '[ERROR_CODE]'), 'PowerSettingAccessCheckEx': (3, ['POWER_DATA_ACCESSOR', 'CONST GUID*', 'REGSAM'], ['AccessFlags', 'PowerGuid', 'AccessType'], '[ERROR_CODE]'), 'PowerSettingRegisterNotification': (4, ['LPCGUID', 'DWORD', 'HANDLE', 'PHPOWERNOTIFY'], ['SettingGuid', 'Flags', 'Recipient', 'RegistrationHandle'], '[ERROR_CODE]'), 'PowerSettingUnregisterNotification': (1, ['HPOWERNOTIFY'], ['RegistrationHandle'], '[ERROR_CODE]'), 'PowerWriteACDefaultIndex': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'DWORD'], ['RootSystemPowerKey', 'SchemePersonalityGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'DefaultAcIndex'], '[ERROR_CODE]'), 'PowerWriteACValueIndex': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'DWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'AcValueIndex'], '[ERROR_CODE]'), 'PowerWriteDCDefaultIndex': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'DWORD'], ['RootSystemPowerKey', 'SchemePersonalityGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'DefaultDcIndex'], '[ERROR_CODE]'), 'PowerWriteDCValueIndex': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'DWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'DcValueIndex'], '[ERROR_CODE]'), 'PowerWriteDescription': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'UCHAR*', 'DWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerWriteFriendlyName': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'UCHAR*', 'DWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerWriteIconResourceSpecifier': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'UCHAR*', 'DWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerWritePossibleDescription': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'ULONG', 'UCHAR*', 'DWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'PossibleSettingIndex', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerWritePossibleFriendlyName': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'ULONG', 'UCHAR*', 'DWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'PossibleSettingIndex', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerWritePossibleValue': (7, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'ULONG', 'ULONG', 'UCHAR*', 'DWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Type', 'PossibleSettingIndex', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerWriteSettingAttributes': (3, ['CONST GUID*', 'CONST GUID*', 'DWORD'], ['SubGroupGuid', 'PowerSettingGuid', 'Attributes'], '[ERROR_CODE]'), 'PowerWriteValueIncrement': (4, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'DWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'ValueIncrement'], '[ERROR_CODE]'), 'PowerWriteValueMax': (4, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'DWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'ValueMaximum'], '[ERROR_CODE]'), 'PowerWriteValueMin': (4, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'DWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'ValueMinimum'], '[ERROR_CODE]'), 'PowerWriteValueUnitsSpecifier': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'UCHAR*', 'DWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'CanUserWritePwrScheme': (0, [], [], 'BOOLEAN'), 'DeletePwrScheme': (1, ['UINT'], ['uiIndex'], 'BOOLEAN'), 'EnumPwrSchemes': (2, ['PWRSCHEMESENUMPROC', 'LPARAM'], ['lpfnPwrSchemesEnumProc', 'lParam'], 'BOOLEAN'), 'GetActivePwrScheme': (1, ['PUINT'], ['puiID'], 'BOOLEAN'), 'PowerGetActiveScheme': (2, ['HKEY', 'GUID**'], ['UserRootPowerKey', 'ActivePolicyGuid'], '[ERROR_CODE]'), 'GetPwrDiskSpindownRange': (2, ['PUINT', 'PUINT'], ['RangeMax', 'RangeMin'], 'BOOLEAN'), 'IsPwrHibernateAllowed': (0, [], [], 'BOOLEAN'), 'GetPwrCapabilities': (1, ['PSYSTEM_POWER_CAPABILITIES'], ['lpSystemPowerCapabilities'], 'BOOLEAN'), 'IsPwrShutdownAllowed': (0, [], [], 'BOOLEAN'), 'IsPwrSuspendAllowed': (0, [], [], 'BOOLEAN'), 'ReadGlobalPwrPolicy': (1, ['PGLOBAL_POWER_POLICY'], ['pGlobalPowerPolicy'], 'BOOLEAN'), 'ReadProcessorPwrScheme': (2, ['UINT', 'PMACHINE_PROCESSOR_POWER_POLICY'], ['uiID', 'pMachineProcessorPowerPolicy'], 'BOOLEAN'), 'ReadPwrScheme': (2, ['UINT', 'PPOWER_POLICY'], ['uiID', 'pPowerPolicy'], 'BOOLEAN'), 'SetActivePwrScheme': (3, ['UINT', 'PGLOBAL_POWER_POLICY', 'PPOWER_POLICY'], ['uiID', 'lpGlobalPowerPolicy', 'lpPowerPolicy'], 'BOOLEAN'), 'SetSuspendState': (3, ['BOOLEAN', 'BOOLEAN', 'BOOLEAN'], ['Hibernate', 'ForceCritical', 'DisableWakeEvent'], 'BOOLEAN'), 'WriteGlobalPwrPolicy': (1, ['PGLOBAL_POWER_POLICY'], ['pGlobalPowerPolicy'], 'BOOLEAN'), 'WriteProcessorPwrScheme': (2, ['UINT', 'PMACHINE_PROCESSOR_POWER_POLICY'], ['ID', 'pMachineProcessorPowerPolicy'], 'BOOLEAN'), 'WritePwrScheme': (4, ['PUINT', 'LPWSTR', 'LPWSTR', 'PPOWER_POLICY'], ['puiID', 'lpszName', 'lpszDescription', 'pPowerPolicy'], 'BOOLEAN'), 'PowerDeterminePlatformRoleEx': (1, ['POWER_PLATFORM_ROLE_VERSION'], ['Version'], 'POWER_PLATFORM_ROLE'), 'PowerRegisterSuspendResumeNotification': (3, ['POWER_NOTIFICATION_FLAGS', 'HANDLE', 'PHPOWERNOTIFY'], ['Flags', 'Recipient', 'RegistrationHandle'], '[ERROR_CODE]'), 'PowerUnregisterSuspendResumeNotification': (1, ['HPOWERNOTIFY'], ['RegistrationHandle'], '[ERROR_CODE]')}

dict5_rasapi32 = {'RasClearConnectionStatistics': (1, ['HRASCONN'], ['hRasConn'], '[ERROR_CODE]'), 'RasClearLinkStatistics': (2, ['HRASCONN', 'DWORD'], ['hRasConn', 'dwSubEntry'], '[ERROR_CODE]'), 'RasConnectionNotification': (3, ['HRASCONN', 'HANDLE', 'RASCONNNOTIFYFLAGS'], ['hrasconn', 'hEvent', 'dwFlags'], '[ERROR_CODE]'), 'RasCreatePhonebookEntry': (2, ['HWND', 'LPCTSTR'], ['hwnd', 'lpszPhonebook'], '[ERROR_CODE]'), 'RasDeleteEntry': (2, ['LPCTSTR', 'LPCTSTR'], ['lpszPhonebook', 'lpszEntry'], '[ERROR_CODE]'), 'RasDeleteSubEntry': (3, ['LPCTSTR', 'LPCTSTR', 'DWORD'], ['lpszPhonebook', 'lpszEntry', 'dwSubEntryId'], '[ERROR_CODE]'), 'RasDial': (6, ['LPRASDIALEXTENSIONS', 'LPCTSTR', 'LPRASDIALPARAMS', 'DWORD', 'LPVOID', 'LPHRASCONN'], ['lpRasDialExtensions', 'lpszPhonebook', 'lpRasDialParams', 'dwNotifierType', 'lpvNotifier', 'lphRasConn'], '[ERROR_CODE]'), 'RasEditPhonebookEntry': (3, ['HWND', 'LPCTSTR', 'LPCTSTR'], ['hwnd', 'lpszPhonebook', 'lpszEntryName'], '[ERROR_CODE]'), 'RasEnumAutodialAddresses': (3, ['LPTSTR*', 'LPDWORD', 'LPDWORD'], ['lppAddresses', 'lpdwcbAddresses', 'lpdwcAddresses'], '[ERROR_CODE]'), 'RasEnumConnections': (3, ['LPRASCONN', 'LPDWORD', 'LPDWORD'], ['lprasconn', 'lpcb', 'lpcConnections'], '[ERROR_CODE]'), 'RasEnumDevices': (3, ['LPRASDEVINFO', 'LPDWORD', 'LPDWORD'], ['lpRasDevInfo', 'lpcb', 'lpcDevices'], '[ERROR_CODE]'), 'RasEnumEntries': (5, ['LPCTSTR', 'LPCTSTR', 'LPRASENTRYNAME', 'LPDWORD', 'LPDWORD'], ['reserved', 'lpszPhonebook', 'lprasentryname', 'lpcb', 'lpcEntries'], '[ERROR_CODE]'), 'RasFreeEapUserIdentity': (1, ['LPRASEAPUSERIDENTITY'], ['pRasEapUserIdentity'], 'void'), 'RasGetAutodialAddress': (5, ['LPCTSTR', 'LPDWORD', 'LPRASAUTODIALENTRY', 'LPDWORD', 'LPDWORD'], ['lpszAddress', 'lpdwReserved', 'lpAutoDialEntries', 'lpdwcbAutoDialEntries', 'lpdwcAutoDialEntries'], '[ERROR_CODE]'), 'RasGetAutodialEnable': (2, ['DWORD', 'LPBOOL'], ['dwDialingLocation', 'lpfEnabled'], '[ERROR_CODE]'), 'RasGetAutodialParam': (3, ['DWORD', 'LPVOID', 'LPDWORD'], ['dwKey', 'lpvValue', 'lpdwcbValue'], '[ERROR_CODE]'), 'RasGetConnectionStatistics': (2, ['HRASCONN', 'RAS_STATS*'], ['hRasConn', 'lpStatistics'], '[ERROR_CODE]'), 'RasGetConnectStatus': (2, ['HRASCONN', 'LPRASCONNSTATUS'], ['hrasconn', 'lprasconnstatus'], '[ERROR_CODE]'), 'RasGetCountryInfo': (2, ['LPRASCTRYINFO', 'LPDWORD'], ['lpRasCtryInfo', 'lpdwSize'], '[ERROR_CODE]'), 'RasGetCredentials': (3, ['LPCTSTR', 'LPCTSTR', 'LPRASCREDENTIALS'], ['lpszPhonebook', 'lpszEntry', 'lpCredentials'], '[ERROR_CODE]'), 'RasGetCustomAuthData': (4, ['LPCWSTR', 'LPCWSTR', 'BYTE*', 'DWORD*'], ['pszPhonebook', 'pszEntry', 'pbCustomAuthData', 'pdwSizeofCustomAuthData'], '[ERROR_CODE]'), 'RasGetEapUserData': (5, ['HANDLE', 'LPCTSTR', 'LPCTSTR', 'BYTE*', 'DWORD*'], ['hToken', 'pszPhonebook', 'pszEntry', 'pbEapData', 'pdwSizeofEapData'], '[ERROR_CODE]'), 'RasGetEapUserIdentity': (5, ['LPCSTR', 'LPCSTR', 'DWORD', 'HWND', 'LPRASEAPUSERIDENTITY*'], ['pszPhonebook', 'pszEntry', 'dwFlags', 'hwnd', 'ppRasEapUserIdentity'], '[ERROR_CODE]'), 'RasGetEntryDialParams': (3, ['LPCTSTR', 'LPRASDIALPARAMS', 'LPBOOL'], ['lpszPhonebook', 'lprasdialparams', 'lpfPassword'], '[ERROR_CODE]'), 'RasGetEntryProperties': (6, ['LPCTSTR', 'LPCTSTR', 'LPRASENTRY', 'LPDWORD', 'LPBYTE', 'LPDWORD'], ['lpszPhonebook', 'lpszEntry', 'lpRasEntry', 'lpdwEntryInfoSize', 'lpbDeviceInfo', 'lpdwDeviceInfoSize'], '[ERROR_CODE]'), 'RasGetErrorString': (3, ['UINT', 'LPTSTR', 'DWORD'], ['uErrorValue', 'lpszErrorString', 'cBufSize'], '[ERROR_CODE]'), 'RasGetLinkStatistics': (3, ['HRASCONN', 'DWORD', 'RAS_STATS*'], ['hRasConn', 'dwSubEntry', 'lpStatistics'], '[ERROR_CODE]'), 'RasGetNapStatus': (2, ['HRASCONN', 'LPRASNAPSTATE'], ['hRasConn', 'pNapState'], '[ERROR_CODE]'), 'RasGetProjectionInfo': (4, ['HRASCONN', 'RASPROJECTION', 'LPVOID', 'LPDWORD'], ['hrasconn', 'rasprojection', 'lpprojection', 'lpcb'], '[ERROR_CODE]'), 'RasGetProjectionInfoEx': (3, ['HRASCONN', 'PRAS_PROJECTION_INFO', 'LPDWORD'], ['Hrasconn', 'pRasProjection', 'lpdwSize'], '[ERROR_CODE]'), 'RasGetQuarantineConnectionId': (2, ['HRASCONN', 'CONNECTIONID*'], ['hRasConn', 'lpConnectionId'], '[ERROR_CODE]'), 'RasGetSubEntryHandle': (3, ['HRASCONN', 'DWORD', 'LPHRASCONN'], ['hRasConn', 'dwSubEntry', 'lphRasConn'], '[ERROR_CODE]'), 'RasGetSubEntryProperties': (7, ['LPCTSTR', 'LPCTSTR', 'DWORD', 'LPRASSUBENTRY', 'LPDWORD', 'LPBYTE', 'LPDWORD'], ['lpszPhonebook', 'lpszEntry', 'dwSubEntry', 'lpRasSubEntry', 'lpdwcb', 'lpbDeviceConfig', 'lpcbDeviceConfig'], '[ERROR_CODE]'), 'RasHangUp': (1, ['HRASCONN'], ['hrasconn'], '[ERROR_CODE]'), 'RasInvokeEapUI': (4, ['HRASCONN', 'DWORD', 'LPRASDIALEXTENSIONS', 'HWND'], ['hRasConn', 'dwSubEntry', 'lpExtensions', 'hwnd'], '[ERROR_CODE]'), 'RasRenameEntry': (3, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR'], ['lpszPhonebook', 'lpszOldEntry', 'lpszNewEntry'], '[ERROR_CODE]'), 'RasSetAutodialAddress': (5, ['LPCTSTR', 'DWORD', 'LPRASAUTODIALENTRY', 'DWORD', 'DWORD'], ['lpszAddress', 'dwReserved', 'lpAutoDialEntries', 'dwcbAutoDialEntries', 'dwcAutoDialEntries'], '[ERROR_CODE]'), 'RasSetAutodialEnable': (2, ['DWORD', 'BOOL'], ['dwDialingLocation', 'fEnabled'], '[ERROR_CODE]'), 'RasSetAutodialParam': (3, ['DWORD', 'LPVOID', 'DWORD'], ['dwKey', 'lpvValue', 'dwcbValue'], '[ERROR_CODE]'), 'RasSetCredentials': (4, ['LPCTSTR', 'LPCTSTR', 'LPRASCREDENTIALS', 'BOOL'], ['lpszPhonebook', 'lpszEntry', 'lpCredentials', 'fClearCredentials'], '[ERROR_CODE]'), 'RasSetCustomAuthData': (4, ['LPCWSTR', 'LPCWSTR', 'BYTE*', 'DWORD'], ['pszPhonebook', 'pszEntry', 'pbCustomAuthData', 'dwSizeofCustomAuthData'], '[ERROR_CODE]'), 'RasSetEapUserData': (5, ['HANDLE', 'LPCTSTR', 'LPCTSTR', 'BYTE*', 'DWORD'], ['hToken', 'pszPhonebook', 'pszEntry', 'pbEapData', 'dwSizeofEapData'], '[ERROR_CODE]'), 'RasSetEntryDialParams': (3, ['LPCTSTR', 'LPRASDIALPARAMS', 'BOOL'], ['lpszPhonebook', 'lprasdialparams', 'fRemovePassword'], '[ERROR_CODE]'), 'RasSetEntryProperties': (6, ['LPCTSTR', 'LPCTSTR', 'LPRASENTRY', 'DWORD', 'LPBYTE', 'DWORD'], ['lpszPhonebook', 'lpszEntry', 'lpRasEntry', 'dwEntryInfoSize', 'lpbDeviceInfo', 'dwDeviceInfoSize'], '[ERROR_CODE]'), 'RasSetSubEntryProperties': (7, ['LPCTSTR', 'LPCTSTR', 'DWORD', 'LPRASSUBENTRY', 'DWORD', 'LPBYTE', 'DWORD'], ['lpszPhonebook', 'lpszEntry', 'dwSubEntry', 'lpRasSubEntry', 'dwcbRasSubEntry', 'lpbDeviceConfig', 'dwcbDeviceConfig'], '[ERROR_CODE]'), 'RasUpdateConnection': (2, ['HRASCONN', 'LPRASUPDATECONN'], ['hrasconn', 'lprasupdateconn'], '[ERROR_CODE]'), 'RasValidateEntryName': (2, ['LPCTSTR', 'LPCTSTR'], ['lpszPhonebook', 'lpszEntry'], '[ERROR_CODE]')}

dict5_rpcrt4 = {'DceErrorInqText': (2, ['UNSIGNED LONG', 'RPC_TSTR'], ['StatusToConvert', 'ErrorText'], 'RPC_STATUS'), 'MesBufferHandleReset': (6, ['HANDLE_T', 'MIDL_ES_HANDLE_STYLE', 'MIDL_ES_CODE', 'CHAR**', 'UNSIGNED LONG', 'UNSIGNED LONG*'], ['Handle', 'HandleStyle', 'OpCode', 'ppBuffer', 'BufferSize', 'pEncodedSize'], 'RPC_STATUS'), 'MesDecodeBufferHandleCreate': (3, ['LPVOID|CHAR*', 'UNSIGNED LONG', 'HANDLE_T*'], ['Buffer', 'BufferSize', 'pHandle'], 'RPC_STATUS'), 'MesDecodeIncrementalHandleCreate': (3, ['VOID*', 'MIDL_ES_READ', 'HANDLE_T*'], ['UserState', 'ReadFn', 'pHandle'], 'RPC_STATUS'), 'MesEncodeDynBufferHandleCreate': (3, ['CHAR**', 'UNSIGNED LONG*', 'HANDLE_T*'], ['ppBuffer', 'pEncodedSize', 'pHandle'], 'RPC_STATUS'), 'MesEncodeFixedBufferHandleCreate': (4, ['LPVOID|CHAR*', 'UNSIGNED LONG', 'UNSIGNED LONG*', 'HANDLE_T*'], ['Buffer', 'BufferSize', 'pEncodedSize', 'pHandle'], 'RPC_STATUS'), 'MesEncodeIncrementalHandleCreate': (4, ['VOID*', 'MIDL_ES_ALLOC', 'MIDL_ES_WRITE', 'HANDLE_T*'], ['UserState', 'AllocFn', 'WriteFn', 'pHandle'], 'RPC_STATUS'), 'MesHandleFree': (1, ['HANDLE_T'], ['Handle'], 'RPC_STATUS'), 'MesIncrementalHandleReset': (6, ['HANDLE_T', 'VOID*', 'MIDL_ES_ALLOC', 'MIDL_ES_WRITE', 'MIDL_ES_READ', 'MIDL_ES_CODE'], ['Handle', 'UserState', 'AllocFn', 'WriteFn', 'ReadFn', 'OpCode'], 'RPC_STATUS'), 'MesInqProcEncodingId': (3, ['HANDLE_T', 'PRPC_SYNTAX_IDENTIFIER', 'UNSIGNED LONG*'], ['Handle', 'pInterfaceId', 'pProcNum'], 'RPC_STATUS'), 'RpcAsyncAbortCall': (2, ['PRPC_ASYNC_STATE', 'UNSIGNED LONG'], ['pAsync', 'ExceptionCode'], 'RPC_STATUS'), 'RpcAsyncCancelCall': (2, ['PRPC_ASYNC_STATE', 'BOOL'], ['pAsync', 'fAbortCall'], 'RPC_STATUS'), 'RpcAsyncCompleteCall': (2, ['PRPC_ASYNC_STATE', 'PVOID'], ['pAsync', 'Reply'], 'RPC_STATUS'), 'RpcAsyncGetCallStatus': (1, ['PRPC_ASYNC_STATE'], ['pAsync'], 'RPC_STATUS'), 'RpcAsyncInitializeHandle': (2, ['PRPC_ASYNC_STATE', 'UNSIGNED INT'], ['pAsync', 'Size'], 'RPC_STATUS'), 'RpcAsyncRegisterInfo': (0, [], [], 'void'), 'RpcBindingBind': (3, ['PRPC_ASYNC_STATE', 'RPC_BINDING_HANDLE', 'RPC_IF_HANDLE'], ['pAsync', 'Binding', 'IfSpec'], 'RPC_STATUS'), 'RpcBindingCopy': (2, ['RPC_BINDING_HANDLE', 'RPC_BINDING_HANDLE*'], ['SourceBinding', 'DestinationBinding'], 'RPC_STATUS'), 'RpcBindingCreate': (4, ['RPC_BINDING_HANDLE_TEMPLATE_V1*', 'RPC_BINDING_HANDLE_SECURITY_V1*', 'RPC_BINDING_HANDLE_OPTIONS_V1*', 'RPC_BINDING_HANDLE*'], ['Template', 'Security', 'Options', 'Binding'], 'RPC_STATUS'), 'RpcBindingFree': (1, ['RPC_BINDING_HANDLE*'], ['Binding'], 'RPC_STATUS'), 'RpcBindingFromStringBinding': (2, ['RPC_TSTR', 'RPC_BINDING_HANDLE*'], ['StringBinding', 'Binding'], 'RPC_STATUS'), 'RpcBindingInqAuthClient': (6, ['RPC_BINDING_HANDLE', 'RPC_AUTHZ_HANDLE*', 'RPC_TSTR*', 'RPC_C_AUTHN_LEVEL*', 'RPC_C_AUTHN_SVC*', 'RPC_C_AUTHZ*'], ['ClientBinding', 'Privs', 'ServerPrincName', 'AuthnLevel', 'AuthnSvc', 'AuthzSvc'], 'RPC_STATUS'), 'RpcBindingInqAuthClientEx': (7, ['RPC_BINDING_HANDLE', 'RPC_AUTHZ_HANDLE*', 'RPC_TSTR*', 'RPC_C_AUTHN_LEVEL*', 'RPC_C_AUTHN_SVC*', 'RPC_C_AUTHZ*', 'UNSIGNED LONG'], ['ClientBinding', 'Privs', 'ServerPrincName', 'AuthnLevel', 'AuthnSvc', 'AuthzSvc', 'flags'], 'RPC_STATUS'), 'RpcBindingInqAuthInfo': (6, ['RPC_BINDING_HANDLE', 'RPC_TSTR*', 'RPC_C_AUTHN_LEVEL*', 'RPC_C_AUTHN_SVC*', 'RPC_AUTH_IDENTITY_HANDLE*', 'RPC_C_AUTHZ*'], ['Binding', 'ServerPrincName', 'AuthnLevel', 'AuthnSvc', 'AuthIdentity', 'AuthzSvc'], 'RPC_STATUS'), 'RpcBindingInqAuthInfoEx': (8, ['RPC_BINDING_HANDLE', 'RPC_TSTR', 'RPC_C_AUTHN_LEVEL*', 'RPC_C_AUTHN_SVC*', 'RPC_AUTH_IDENTITY_HANDLE*', 'RPC_C_AUTHZ*', 'UNSIGNED LONG', 'RPC_SECURITY_QOS*'], ['Binding', 'ServerPrincName', 'AuthnLevel', 'AuthnSvc', 'AuthIdentity', 'AuthzSvc', 'RpcQosVersion', 'SecurityQos'], 'RPC_STATUS'), 'RpcBindingInqObject': (2, ['RPC_BINDING_HANDLE', 'UUID*'], ['Binding', 'ObjectUuid'], 'RPC_STATUS'), 'RpcBindingInqOption': (3, ['RPC_BINDING_HANDLE', 'UNSIGNED LONG', 'UNSIGNED LONG*'], ['hBinding', 'Option', 'pOptionValue'], 'RPC_STATUS'), 'RpcBindingReset': (1, ['RPC_BINDING_HANDLE'], ['Binding'], 'RPC_STATUS'), 'RpcBindingServerFromClient': (2, ['RPC_BINDING_HANDLE', 'RPC_BINDING_HANDLE*'], ['ClientBinding', 'ServerBinding'], 'RPC_STATUS'), 'RpcBindingSetAuthInfo': (6, ['RPC_BINDING_HANDLE', 'RPC_TSTR', 'RPC_C_AUTHN_LEVEL', 'RPC_C_AUTHN_SVC', 'RPC_AUTH_IDENTITY_HANDLE', 'UNSIGNED LONG'], ['Binding', 'ServerPrincName', 'AuthnLevel', 'AuthnSvc', 'AuthIdentity', 'AuthzService'], 'RPC_STATUS'), 'RpcBindingSetAuthInfoEx': (7, ['RPC_BINDING_HANDLE', 'RPC_TSTR', 'RPC_C_AUTHN_LEVEL', 'RPC_C_AUTHN_SVC', 'RPC_AUTH_IDENTITY_HANDLE', 'RPC_C_AUTHZ', 'RPC_SECURITY_QOS*'], ['Binding', 'ServerPrincName', 'AuthnLevel', 'AuthnSvc', 'AuthIdentity', 'AuthzSvc', 'SecurityQOS'], 'RPC_STATUS'), 'RpcBindingSetObject': (2, ['RPC_BINDING_HANDLE', 'UUID*'], ['Binding', 'ObjectUuid'], 'RPC_STATUS'), 'RpcBindingSetOption': (3, ['RPC_BINDING_HANDLE', 'BINDINGOPTIONS', 'UNSIGNED LONG'], ['hBinding', 'Option', 'OptionValue'], 'RPC_STATUS'), 'RpcBindingToStringBinding': (2, ['RPC_BINDING_HANDLE', 'RPC_TSTR*'], ['Binding', 'StringBinding'], 'RPC_STATUS'), 'RpcBindingUnbind': (1, ['RPC_BINDING_HANDLE'], ['Binding'], 'RPC_STATUS'), 'RpcBindingVectorFree': (1, ['RPC_BINDING_VECTOR**'], ['BindingVector'], 'RPC_STATUS'), 'RpcCancelThread': (1, ['HANDLE'], ['ThreadHandle'], 'RPC_STATUS'), 'RpcCancelThreadEx': (2, ['HANDLE', 'LONG'], ['ThreadHandle', 'Timeout'], 'RPC_STATUS'), 'RpcCertGeneratePrincipalName': (3, ['PCCERT_CONTEXT', 'DWORD', 'UCHAR**'], ['Context', 'Flags', 'pBuffer'], 'void'), 'RpcEpRegister': (4, ['RPC_IF_HANDLE', 'RPC_BINDING_VECTOR*', 'UUID_VECTOR*', 'RPC_TSTR'], ['IfSpec', 'BindingVector', 'UuidVector', 'Annotation'], 'RPC_STATUS'), 'RpcEpRegisterNoReplace': (4, ['RPC_IF_HANDLE', 'RPC_BINDING_VECTOR*', 'UUID_VECTOR*', 'RPC_TSTR'], ['IfSpec', 'BindingVector', 'UuidVector', 'Annotation'], 'RPC_STATUS'), 'RpcEpResolveBinding': (2, ['RPC_BINDING_HANDLE', 'RPC_IF_HANDLE'], ['Binding', 'IfSpec'], 'RPC_STATUS'), 'RpcEpUnregister': (3, ['RPC_IF_HANDLE', 'RPC_BINDING_VECTOR*', 'UUID_VECTOR*'], ['IfSpec', 'BindingVector', 'UuidVector'], 'RPC_STATUS'), 'RpcErrorAddRecord': (1, ['RPC_EXTENDED_ERROR_INFO*'], ['ErrorInfo'], 'RPC_STATUS'), 'RpcErrorClearInformation': (0, [], [], 'void'), 'RpcErrorEndEnumeration': (1, ['RPC_ERROR_ENUM_HANDLE*'], ['EnumHandle'], 'RPC_STATUS'), 'RpcErrorGetNextRecord': (3, ['RPC_ERROR_ENUM_HANDLE*', 'BOOL', 'RPC_EXTENDED_ERROR_INFO*'], ['EnumHandle', 'CopyStrings', 'ErrorInfo'], 'RPC_STATUS'), 'RpcErrorGetNumberOfRecords': (2, ['RPC_ERROR_ENUM_HANDLE*', 'INT*'], ['EnumHandle', 'Records'], 'RPC_STATUS'), 'RpcErrorLoadErrorInfo': (3, ['PVOID', 'SIZE_T', 'RPC_ERROR_ENUM_HANDLE*'], ['ErrorBlob', 'BlobSize', 'EnumHandle'], 'RPC_STATUS'), 'RpcErrorResetEnumeration': (1, ['RPC_ERROR_ENUM_HANDLE*'], ['EnumHandle'], 'RPC_STATUS'), 'RpcErrorSaveErrorInfo': (3, ['RPC_ERROR_ENUM_HANDLE*', 'PVOID*', 'SIZE_T*'], ['EnumHandle', 'ErrorBlob', 'BlobSize'], 'RPC_STATUS'), 'RpcErrorStartEnumeration': (1, ['RPC_ERROR_ENUM_HANDLE*'], ['EnumHandle'], 'RPC_STATUS'), 'RpcIfIdVectorFree': (1, ['RPC_IF_ID_VECTOR**'], ['IfIdVec'], 'RPC_STATUS'), 'RpcIfInqId': (2, ['RPC_IF_HANDLE', 'RPC_IF_ID*'], ['RpcIfHandle', 'RpcIfId'], 'RPC_STATUS'), 'RpcImpersonateClient': (1, ['RPC_BINDING_HANDLE'], ['BindingHandle'], 'RPC_STATUS'), 'RpcMgmtEnableIdleCleanup': (0, [], [], 'RPC_STATUS'), 'RpcMgmtEpEltInqBegin': (6, ['RPC_BINDING_HANDLE', 'UNSIGNED LONG', 'RPC_IF_ID*', 'UNSIGNED LONG', 'UUID*', 'RPC_EP_INQ_HANDLE*'], ['EpBinding', 'InquiryType', 'IfId', 'VersOption', 'ObjectUuid', 'InquiryContext'], 'RPC_STATUS'), 'RpcMgmtEpEltInqDone': (1, ['RPC_EP_INQ_HANDLE*'], ['InquiryContext'], 'RPC_STATUS'), 'RpcMgmtEpEltInqNext': (5, ['RPC_EP_INQ_HANDLE', 'RPC_IF_ID*', 'RPC_BINDING_HANDLE*', 'UUID*', 'RPC_TSTR*'], ['InquiryContext', 'IfId', 'Binding', 'ObjectUuid', 'Annotation'], 'RPC_STATUS'), 'RpcMgmtEpUnregister': (4, ['RPC_BINDING_HANDLE', 'RPC_IF_ID*', 'RPC_BINDING_HANDLE', 'UUID*'], ['EpBinding', 'IfId', 'Binding', 'ObjectUuid'], 'RPC_STATUS'), 'RpcMgmtInqComTimeout': (2, ['RPC_BINDING_HANDLE', 'UNSIGNED INT*'], ['Binding', 'Timeout'], 'RPC_STATUS'), 'RpcMgmtInqDefaultProtectLevel': (2, ['RPC_C_AUTHN_SVC', 'RPC_C_AUTHN_LEVEL-UNSIGNED-INT*'], ['AuthnSvc', 'AuthnLevel'], 'RPC_STATUS'), 'RpcMgmtInqIfIds': (2, ['RPC_BINDING_HANDLE', 'RPC_IF_ID_VECTOR**'], ['Binding', 'IfIdVector'], 'RPC_STATUS'), 'RpcMgmtInqServerPrincName': (3, ['RPC_BINDING_HANDLE', 'RPC_C_AUTHN_SVC', 'RPC_TSTR*'], ['Binding', 'AuthnSvc', 'ServerPrincName'], 'RPC_STATUS'), 'RpcMgmtInqStats': (2, ['RPC_BINDING_HANDLE', 'RPC_STATS_VECTOR**'], ['Binding', 'Statistics'], 'RPC_STATUS'), 'RpcMgmtIsServerListening': (1, ['RPC_BINDING_HANDLE'], ['Binding'], 'RPC_STATUS'), 'RpcMgmtSetAuthorizationFn': (1, ['RPC_MGMT_AUTHORIZATION_FN'], ['AuthorizationFn'], 'RPC_STATUS'), 'RpcMgmtSetCancelTimeout': (1, ['SIGNED INT'], ['Seconds'], 'RPC_STATUS'), 'RpcMgmtSetComTimeout': (2, ['RPC_BINDING_HANDLE', 'UNSIGNED INT'], ['Binding', 'Timeout'], 'RPC_STATUS'), 'RpcMgmtSetServerStackSize': (1, ['UNSIGNED INT'], ['ThreadStackSize'], 'RPC_STATUS'), 'RpcMgmtStatsVectorFree': (1, ['RPC_STATS_VECTOR**'], ['StatsVector'], 'RPC_STATUS'), 'RpcMgmtStopServerListening': (1, ['RPC_BINDING_HANDLE'], ['Binding'], 'RPC_STATUS'), 'RpcMgmtWaitServerListen': (0, [], [], 'RPC_STATUS'), 'RpcNetworkInqProtseqs': (1, ['RPC_PROTSEQ_VECTOR**'], ['ProtSeqVector'], 'RPC_STATUS'), 'RpcNetworkIsProtseqValid': (1, ['RPC_TSTR'], ['Protseq'], 'RPC_STATUS'), 'RpcNsBindingInqEntryName': (3, ['RPC_BINDING_HANDLE', 'UNSIGNED LONG', 'RPC_TSTR*'], ['Binding', 'EntryNameSyntax', 'EntryName'], 'RPC_STATUS'), 'RpcObjectInqType': (2, ['UUID*', 'UUID*'], ['ObjUuid', 'TypeUuid'], 'RPC_STATUS'), 'RpcObjectSetInqFn': (1, ['RPC_OBJECT_INQ_FN'], ['InquiryFn'], 'RPC_STATUS'), 'RpcObjectSetType': (2, ['UUID*', 'UUID*'], ['ObjUuid', 'TypeUuid'], 'RPC_STATUS'), 'RpcProtseqVectorFree': (1, ['RPC_PROTSEQ_VECTOR**'], ['ProtSeqVector'], 'RPC_STATUS'), 'RpcRevertToSelf': (0, [], [], 'RPC_STATUS'), 'RpcRevertToSelfEx': (1, ['RPC_BINDING_HANDLE'], ['BindingHandle'], 'RPC_STATUS'), 'RpcServerInqBindings': (1, ['RPC_BINDING_VECTOR**'], ['BindingVector'], 'RPC_STATUS'), 'RpcServerInqCallAttributes': (2, ['RPC_BINDING_HANDLE', 'VOID*'], ['ClientBinding', 'RpcCallAttributes'], 'RPC_STATUS'), 'RpcServerInqDefaultPrincName': (2, ['RPC_C_AUTHN_SVC', 'RPC_TSTR*'], ['AuthnSvc', 'PrincName'], 'RPC_STATUS'), 'RpcServerInqBindingHandle': (1, ['RPC_BINDING_HANDLE*'], ['Binding'], 'RPC_STATUS'), 'RpcServerInqIf': (3, ['RPC_IF_HANDLE', 'UUID*', 'RPC_MGR_EPV**'], ['IfSpec', 'MgrTypeUuid', 'MgrEpv'], 'RPC_STATUS'), 'RpcServerListen': (3, ['UNSIGNED INT', 'UNSIGNED INT', 'UNSIGNED INT'], ['MinimumCallThreads', 'MaxCalls', 'DontWait'], 'RPC_STATUS'), 'RpcServerRegisterAuthInfo': (4, ['RPC_TSTR', 'RPC_C_AUTHN_SVC', 'RPC_AUTH_KEY_RETRIEVAL_FN', 'VOID*'], ['ServerPrincName', 'AuthnSvc', 'GetKeyFn', 'Arg'], 'RPC_STATUS'), 'RpcServerRegisterIf': (3, ['RPC_IF_HANDLE', 'UUID*', 'RPC_MGR_EPV*'], ['IfSpec', 'MgrTypeUuid', 'MgrEpv'], 'RPC_STATUS'), 'RpcServerRegisterIf2': (7, ['RPC_IF_HANDLE', 'UUID*', 'RPC_MGR_EPV*', 'INTERFACEREGISTRATIONFLAGS', 'UNSIGNED INT', 'UNSIGNED INT', 'RPC_IF_CALLBACK_FN*'], ['IfSpec', 'MgrTypeUuid', 'MgrEpv', 'Flags', 'MaxCalls', 'MaxRpcSize', 'IfCallbackFn'], 'RPC_STATUS'), 'RpcServerRegisterIfEx': (6, ['RPC_IF_HANDLE', 'UUID*', 'RPC_MGR_EPV*', 'INTERFACEREGISTRATIONFLAGS', 'UNSIGNED INT', 'RPC_IF_CALLBACK_FN*'], ['IfSpec', 'MgrTypeUuid', 'MgrEpv', 'Flags', 'MaxCalls', 'IfCallback'], 'RPC_STATUS'), 'RpcServerSubscribeForNotification': (4, ['RPC_BINDING_HANDLE', 'RPC_NOTIFICATIONS', 'RPC_NOTIFICATION_TYPES', 'RPC_ASYNC_NOTIFICATION_INFO*'], ['Binding', 'Notification', 'NotificationType', 'NotificationInfo'], 'RPC_STATUS'), 'RpcServerTestCancel': (1, ['RPC_BINDING_HANDLE'], ['BindingHandle'], 'RPC_STATUS'), 'RpcServerUnregisterIf': (3, ['RPC_IF_HANDLE', 'UUID*', 'UNSIGNED INT'], ['IfSpec', 'MgrTypeUuid', 'WaitForCallsToComplete'], 'RPC_STATUS'), 'RpcServerUnregisterIfEx': (3, ['RPC_IF_HANDLE', 'UUID*', 'INT'], ['IfSpec', 'MgrTypeUuid', 'RundownContextHandles'], 'RPC_STATUS'), 'RpcServerUnsubscribeForNotification': (3, ['RPC_BINDING_HANDLE', 'RPC_NOTIFICATIONS', 'UNSIGNED LONG*'], ['Binding', 'Notification', 'NotificationsQueued'], 'RPC_STATUS'), 'RpcServerUseAllProtseqs': (2, ['UNSIGNED INT', 'VOID*'], ['MaxCalls', 'SecurityDescriptor'], 'RPC_STATUS'), 'RpcServerUseAllProtseqsEx': (3, ['UNSIGNED INT', 'VOID*', 'PRPC_POLICY'], ['MaxCalls', 'SecurityDescriptor', 'Policy'], 'RPC_STATUS'), 'RpcServerUseAllProtseqsIf': (3, ['UNSIGNED INT', 'RPC_IF_HANDLE', 'VOID*'], ['MaxCalls', 'IfSpec', 'SecurityDescriptor'], 'RPC_STATUS'), 'RpcServerUseAllProtseqsIfEx': (4, ['UNSIGNED INT', 'RPC_IF_HANDLE', 'VOID*', 'PRPC_POLICY'], ['MaxCalls', 'IfSpec', 'SecurityDescriptor', 'Policy'], 'RPC_STATUS'), 'RpcServerUseProtseq': (3, ['RPC_TSTR', 'UNSIGNED INT', 'VOID*'], ['ProtSeq', 'MaxCalls', 'SecurityDescriptor'], 'RPC_STATUS'), 'RpcServerUseProtseqEx': (4, ['RPC_TSTR', 'UNSIGNED INT', 'VOID*', 'PRPC_POLICY'], ['ProtSeq', 'MaxCalls', 'SecurityDescriptor', 'Policy'], 'RPC_STATUS'), 'RpcServerUseProtseqEp': (4, ['RPC_TSTR', 'UNSIGNED INT', 'RPC_TSTR', 'VOID*'], ['Protseq', 'MaxCalls', 'Endpoint', 'SecurityDescriptor'], 'RPC_STATUS'), 'RpcServerUseProtseqEpEx': (5, ['RPC_TSTR', 'UNSIGNED INT', 'RPC_TSTR', 'VOID*', 'PRPC_POLICY'], ['Protseq', 'MaxCalls', 'Endpoint', 'SecurityDescriptor', 'Policy'], 'RPC_STATUS'), 'RpcServerUseProtseqIf': (4, ['RPC_TSTR', 'UNSIGNED INT', 'RPC_IF_HANDLE', 'VOID*'], ['Protseq', 'MaxCalls', 'IfSpec', 'SecurityDescriptor'], 'RPC_STATUS'), 'RpcServerUseProtseqIfEx': (5, ['RPC_TSTR', 'UNSIGNED INT', 'RPC_IF_HANDLE', 'VOID*', 'PRPC_POLICY'], ['Protseq', 'MaxCalls', 'IfSpec', 'SecurityDescriptor', 'Policy'], 'RPC_STATUS'), 'RpcSmAllocate': (2, ['SIZE_T', 'RPC_STATUS*'], ['Size', 'pStatus'], 'void*'), 'RpcSmClientFree': (1, ['VOID*'], ['NodeToFree'], 'RPC_STATUS'), 'RpcSmDestroyClientContext': (1, ['VOID**'], ['ContextHandle'], 'RPC_STATUS'), 'RpcSmDisableAllocate': (0, [], [], 'RPC_STATUS'), 'RpcSmEnableAllocate': (0, [], [], 'RPC_STATUS'), 'RpcSmFree': (1, ['VOID*'], ['NodeToFree'], 'RPC_STATUS'), 'RpcSmGetThreadHandle': (1, ['RPC_STATUS*'], ['pStatus'], 'RPC_SS_THREAD_HANDLE'), 'RpcSmSetClientAllocFree': (2, ['RPC_CLIENT_ALLOC*', 'RPC_CLIENT_FREE*'], ['pfnAllocate', 'pfnFree'], 'RPC_STATUS'), 'RpcSmSetThreadHandle': (1, ['RPC_SS_THREAD_HANDLE'], ['Handle'], 'RPC_STATUS'), 'RpcSmSwapClientAllocFree': (4, ['RPC_CLIENT_ALLOC*', 'RPC_CLIENT_FREE*', 'RPC_CLIENT_ALLOC**', 'RPC_CLIENT_FREE**'], ['pfnAllocate', 'pfnFree', 'pfnOldAllocate', 'pfnOldFree'], 'RPC_STATUS'), 'RpcSsAllocate': (1, ['SIZE_T'], ['Size'], 'void*'), 'RpcSsContextLockExclusive': (2, ['RPC_BINDING_HANDLE', 'PVOID'], ['ServerBindingHandle', 'UserContext'], 'RPC_STATUS'), 'RpcSsContextLockShared': (2, ['RPC_BINDING_HANDLE', 'PVOID'], ['ServerBindingHandle', 'UserContext'], 'RPC_STATUS'), 'RpcSsDestroyClientContext': (1, ['VOID**'], ['ContextHandle'], 'void'), 'RpcSsDisableAllocate': (0, [], [], 'void'), 'RpcSsDontSerializeContext': (0, [], [], 'void'), 'RpcSsEnableAllocate': (0, [], [], 'void'), 'RpcSsFree': (1, ['VOID*'], ['NodeToFree'], 'void'), 'RpcSsGetThreadHandle': (0, [], [], 'RPC_SS_THREAD_HANDLE'), 'RpcSsSetClientAllocFree': (2, ['RPC_CLIENT_ALLOC*', 'RPC_CLIENT_FREE*'], ['pfnAllocate', 'pfnFree'], 'void'), 'RpcSsSetThreadHandle': (1, ['RPC_SS_THREAD_HANDLE'], ['Handle'], 'void'), 'RpcSsSwapClientAllocFree': (4, ['RPC_CLIENT_ALLOC*', 'RPC_CLIENT_FREE*', 'RPC_CLIENT_ALLOC**', 'RPC_CLIENT_FREE**'], ['pfnAllocate', 'pfnFree', 'pfnOldAllocate', 'pfnOldFree'], 'void'), 'RpcStringBindingCompose': (6, ['TCHAR*', 'TCHAR*', 'TCHAR*', 'TCHAR*', 'TCHAR*', 'TCHAR**'], ['ObjUuid', 'ProtSeq', 'NetworkAddr', 'EndPoint', 'Options', 'StringBinding'], 'RPC_STATUS'), 'RpcStringBindingParse': (6, ['TCHAR*', 'TCHAR**', 'TCHAR**', 'TCHAR**', 'TCHAR**', 'TCHAR**'], ['StringBinding', 'ObjectUuid', 'ProtSeq', 'NetworkAddr', 'EndPoint', 'NetworkOptions'], 'RPC_STATUS'), 'RpcStringFree': (1, ['RPC_TSTR*'], ['String'], 'RPC_STATUS'), 'RpcTestCancel': (0, [], [], 'RPC_STATUS'), 'I_RpcBindingInqLocalClientPID': (2, ['RPC_BINDING_HANDLE', 'UNSIGNED LONG*'], ['Binding', 'Pid'], 'RPC_STATUS'), 'RpcFreeAuthorizationContext': (1, ['PVOID*'], ['pAuthzClientContext'], 'RPC_STATUS'), 'RpcGetAuthorizationContextForClient': (8, ['RPC_BINDING_HANDLE', 'BOOL', 'PVOID', 'PLARGE_INTEGER', 'LUID', 'DWORD', 'PVOID', 'PVOID*'], ['ClientBinding', 'ImpersonateOnReturn', 'Reserved1', 'pExpirationTime', 'Reserved2', 'Reserved3', 'Reserved4', 'pAuthzClientContext'], 'RPC_STATUS'), 'RpcServerInterfaceGroupActivate': (1, ['RPC_INTERFACE_GROUP'], ['IfGroup'], 'RPC_STATUS'), 'RpcServerInterfaceGroupClose': (1, ['RPC_INTERFACE_GROUP'], ['IfGroup'], 'RPC_STATUS'), 'RpcServerInterfaceGroupCreate': (8, ['RPC_INTERFACE_TEMPLATE*', 'UNSIGNED LONG', 'RPC_ENDPOINT_TEMPLATE*', 'UNSIGNED LONG', 'UNSIGNED LONG', 'RPC_INTERFACE_GROUP_IDLE_CALLBACK_FN', 'VOID*', 'PRPC_INTERFACE_GROUP'], ['Interfaces', 'NumIfs', 'Endpoints', 'NumEndpoints', 'IdlePeriod', 'IdleCallbackFn', 'IdleCallbackContext', 'IfGroup'], 'RPC_STATUS'), 'RpcServerInterfaceGroupDeactivate': (2, ['RPC_INTERFACE_GROUP', 'UNSIGNED LONG'], ['IfGroup', 'ForceDeactivation'], 'RPC_STATUS'), 'RpcServerInterfaceGroupInqBindings': (2, ['RPC_INTERFACE_GROUP', 'RPC_BINDING_VECTOR**'], ['IfGroup', 'BindingVector'], 'RPC_STATUS'), 'RpcServerRegisterIf3': (8, ['RPC_IF_HANDLE', 'UUID*', 'RPC_MGR_EPV*', 'INTERFACEREGISTRATIONFLAGS', 'UNSIGNED INT', 'UNSIGNED INT', 'RPC_IF_CALLBACK_FN*', 'VOID*'], ['IfSpec', 'MgrTypeUuid', 'MgrEpv', 'Flags', 'MaxCalls', 'MaxRpcSize', 'IfCallback', 'SecurityDescriptor'], 'RPC_STATUS'), 'I_RpcAllocate': (1, ['UNSIGNED INT'], ['Size'], 'void*'), 'I_RpcAsyncAbortCall': (2, ['PRPC_ASYNC_STATE', 'UNSIGNED LONG'], ['pAsync', 'ExceptionCode'], 'RPC_STATUS'), 'I_RpcAsyncSetHandle': (2, ['PRPC_MESSAGE', 'PRPC_ASYNC_STATE'], ['Message', 'pAsync'], 'RPC_STATUS'), 'I_RpcBindingCopy': (2, ['RPC_BINDING_HANDLE', 'RPC_BINDING_HANDLE*'], ['SourceBinding', 'DestinationBinding'], 'RPC_STATUS'), 'I_RpcBindingCreateNP': (4, ['RPC_WSTR', 'RPC_WSTR', 'RPC_WSTR', 'RPC_BINDING_HANDLE*'], ['ServerName', 'ServiceName', 'NetworkOptions', 'Binding'], 'RPC_STATUS'), 'I_RpcBindingHandleToAsyncHandle': (2, ['RPC_BINDING_HANDLE', 'VOID**'], ['Binding', 'AsyncHandle'], 'RPC_STATUS'), 'I_RpcBindingInqDynamicEndpoint': (2, ['RPC_BINDING_HANDLE', 'RPC_TSTR*'], ['Binding', 'DynamicEndpoint'], 'RPC_STATUS'), 'I_RpcBindingInqMarshalledTargetInfo': (3, ['RPC_BINDING_HANDLE', 'UNSIGNED LONG*', 'RPC_CSTR*'], ['Binding', 'MarshalledTargetInfoSize', 'MarshalledTargetInfo'], 'RPC_STATUS'), 'I_RpcBindingInqSecurityContext': (2, ['RPC_BINDING_HANDLE', 'VOID**'], ['Binding', 'SecurityContextHandle'], 'RPC_STATUS'), 'I_RpcBindingInqSecurityContextKeyInfo': (2, ['RPC_BINDING_HANDLE', 'VOID*'], ['Binding', 'KeyInfo'], 'RPC_STATUS'), 'I_RpcBindingInqTransportType': (2, ['RPC_BINDING_HANDLE', 'RPC_TRANSPORT_TYPE*'], ['Binding', 'Type'], 'RPC_STATUS'), 'I_RpcBindingInqWireIdForSnego': (2, ['RPC_BINDING_HANDLE', 'UNSIGNED CHAR*'], ['Binding', 'WireId'], 'RPC_STATUS'), 'I_RpcBindingIsClientLocal': (2, ['RPC_BINDING_HANDLE', 'UNSIGNED INT*'], ['BindingHandle', 'ClientLocalFlag'], 'RPC_STATUS'), 'I_RpcBindingToStaticStringBindingW': (2, ['RPC_BINDING_HANDLE', 'UNSIGNED SHORT**'], ['Binding', 'StringBinding'], 'RPC_STATUS'), 'I_RpcClearMutex': (1, ['I_RPC_MUTEX'], ['Mutex'], 'void'), 'I_RpcConnectionInqSockBuffSize': (2, ['UNSIGNED LONG*', 'UNSIGNED LONG*'], ['RecvBuffSize', 'SendBuffSize'], 'RPC_STATUS'), 'I_RpcConnectionSetSockBuffSize': (2, ['UNSIGNED LONG', 'UNSIGNED LONG'], ['RecvBuffSize', 'SendBuffSize'], 'RPC_STATUS'), 'I_RpcDeleteMutex': (1, ['I_RPC_MUTEX'], ['Mutex'], 'void'), 'I_RpcFree': (1, ['VOID*'], ['Object'], 'void'), 'I_RpcFreeBuffer': (1, ['RPC_MESSAGE*'], ['Message'], 'RPC_STATUS'), 'I_RpcFreePipeBuffer': (1, ['RPC_MESSAGE*'], ['Message'], 'RPC_STATUS'), 'I_RpcGetBuffer': (1, ['RPC_MESSAGE*'], ['Message'], 'RPC_STATUS'), 'I_RpcGetBufferWithObject': (2, ['RPC_MESSAGE*', 'UUID*'], ['Message', 'ObjectUuid'], 'RPC_STATUS'), 'I_RpcGetCurrentCallHandle': (0, [], [], 'RPC_BINDING_HANDLE'), 'I_RpcGetExtendedError': (0, [], [], 'RPC_STATUS'), 'I_RpcIfInqTransferSyntaxes': (4, ['RPC_IF_HANDLE', 'RPC_TRANSFER_SYNTAX*', 'UNSIGNED INT', 'UNSIGNED INT*'], ['RpcIfHandle', 'TransferSyntaxes', 'TransferSyntaxSize', 'TransferSyntaxCount'], 'RPC_STATUS'), 'I_RpcMapWin32Status': (1, ['RPC_STATUS'], ['Status'], 'long'), 'I_RpcMgmtEnableDedicatedThreadPool': (0, [], [], 'RPC_STATUS'), 'I_RpcNegotiateTransferSyntax': (1, ['RPC_MESSAGE*'], ['Message'], 'RPC_STATUS'), 'I_RpcNsBindingSetEntryName': (3, ['RPC_BINDING_HANDLE', 'UNSIGNED LONG', 'RPC_TSTR'], ['Binding', 'EntryNameSyntax', 'EntryName'], 'RPC_STATUS'), 'I_RpcNsInterfaceExported': (3, ['UNSIGNED LONG', 'UNSIGNED SHORT*', 'RPC_SERVER_INTERFACE*'], ['EntryNameSyntax', 'EntryName', 'RpcInterfaceInformation'], 'RPC_STATUS'), 'I_RpcNsInterfaceUnexported': (3, ['UNSIGNED LONG', 'UNSIGNED SHORT*', 'RPC_SERVER_INTERFACE*'], ['EntryNameSyntax', 'EntryName', 'RpcInterfaceInformation'], 'RPC_STATUS'), 'I_RpcOpenClientProcess': (3, ['RPC_BINDING_HANDLE', 'UNSIGNED LONG', 'VOID**'], ['Binding', 'DesiredAccess', 'ClientProcess'], 'RPC_STATUS'), 'I_RpcPauseExecution': (1, ['UNSIGNED LONG'], ['Milliseconds'], 'void'), 'I_RpcReallocPipeBuffer': (2, ['PRPC_MESSAGE', 'UNSIGNED INT'], ['Message', 'NewSize'], 'RPC_STATUS'), 'I_RpcReceive': (2, ['PRPC_MESSAGE', 'UNSIGNED INT'], ['Message', 'Size'], 'RPC_STATUS'), 'I_RpcRecordCalloutFailure': (3, ['RPC_STATUS', 'RDR_CALLOUT_STATE*', 'UNSIGNED SHORT*'], ['RpcStatus', 'CallOutState', 'DllName'], 'void'), 'I_RpcRequestMutex': (1, ['I_RPC_MUTEX*'], ['Mutex'], 'void'), 'I_RpcSend': (1, ['PRPC_MESSAGE'], ['Message'], 'RPC_STATUS'), 'I_RpcSendReceive': (1, ['RPC_MESSAGE*'], ['Message'], 'RPC_STATUS'), 'I_RpcServerCheckClientRestriction': (1, ['RPC_BINDING_HANDLE'], ['Context'], 'RPC_STATUS'), 'I_RpcServerInqAddressChangeFn': (0, [], [], 'RPC_ADDRESS_CHANGE_FN*'), 'I_RpcServerInqLocalConnAddress': (4, ['RPC_BINDING_HANDLE', 'VOID*', 'UNSIGNED LONG*', 'UNSIGNED LONG*'], ['Binding', 'Buffer', 'BufferSize', 'AddressFormat'], 'RPC_STATUS'), 'I_RpcServerInqRemoteConnAddress': (4, ['RPC_BINDING_HANDLE', 'VOID*', 'UNSIGNED LONG*', 'UNSIGNED LONG*'], ['Binding', 'Buffer', 'BufferSize', 'AddressFormat'], 'RPC_STATUS'), 'I_RpcServerInqTransportType': (1, ['RPC_TRANSPORT_TYPE*'], ['Type'], 'RPC_STATUS'), 'I_RpcServerRegisterForwardFunction': (1, ['RPC_FORWARD_FUNCTION*'], ['pForwardFunction'], 'RPC_STATUS'), 'I_RpcServerSetAddressChangeFn': (1, ['RPC_ADDRESS_CHANGE_FN*'], ['pAddressChangeFn'], 'RPC_STATUS'), 'I_RpcServerStartService': (3, ['RPC_WSTR', 'RPC_WSTR', 'RPC_IF_HANDLE'], ['Protseq', 'Endpoint', 'IfSpec'], 'RPC_STATUS'), 'I_RpcServerUseProtseq2': (5, ['RPC_TSTR', 'RPC_TSTR', 'UNSIGNED INT', 'VOID*', 'VOID*'], ['NetworkAddress', 'Protseq', 'MaxCalls', 'SecurityDescriptor', 'Policy'], 'RPC_STATUS'), 'I_RpcServerUseProtseqEp2': (6, ['RPC_TSTR', 'RPC_TSTR', 'UNSIGNED INT', 'RPC_TSTR', 'VOID*', 'VOID*'], ['NetworkAddress', 'Protseq', 'MaxCalls', 'Endpoint', 'SecurityDescriptor', 'Policy'], 'RPC_STATUS'), 'I_RpcSessionStrictContextHandle': (0, [], [], 'void'), 'I_RpcSsDontSerializeContext': (0, [], [], 'void'), 'I_RpcTurnOnEEInfoPropagation': (0, [], [], 'RPC_STATUS'), 'I_UuidCreate': (1, ['UUID*'], ['Uuid'], 'RPC_STATUS'), 'RpcServerCompleteSecurityCallback': (2, ['RPC_BINDING_HANDLE', 'RPC_STATUS'], ['BindingHandle', 'Status'], 'RPC_STATUS'), 'RpcServerYield': (0, [], [], 'void'), 'RpcSsGetContextBinding': (2, ['VOID*', 'RPC_BINDING_HANDLE*'], ['ContextHandle', 'Binding'], 'RPC_STATUS'), 'RpcUserFree': (2, ['HANDLE_T', 'VOID*'], ['AsyncHandle', 'pBuffer'], 'void'), 'UuidCompare': (3, ['UUID*', 'UUID*', 'RPC_STATUS*'], ['Uuid1', 'Uuid2', 'Status'], 'signed int'), 'UuidCreate': (1, ['UUID*'], ['Uuid'], 'RPC_STATUS'), 'UuidCreateSequential': (1, ['UUID*'], ['Uuid'], 'RPC_STATUS'), 'UuidCreateNil': (1, ['UUID*'], ['Nil_Uuid'], 'RPC_STATUS'), 'UuidEqual': (3, ['UUID*', 'UUID*', 'RPC_STATUS*'], ['Uuid1', 'Uuid2', 'Status'], '[BOOL|int]'), 'UuidFromString': (2, ['RPC_TSTR', 'UUID*'], ['StringUuid', 'Uuid'], 'RPC_STATUS'), 'UuidHash': (2, ['UUID*', 'RPC_STATUS*'], ['Uuid', 'Status'], 'unsigned short'), 'UuidIsNil': (2, ['UUID*', 'RPC_STATUS*'], ['Uuid', 'Status'], '[BOOL|int]'), 'UuidToString': (2, ['UUID*', 'RPC_TSTR*'], ['Uuid', 'StringUuid'], 'RPC_STATUS'), 'CStdStubBuffer_AddRef': (1, ['IRPCSTUBBUFFER*'], ['This'], 'ULONG'), 'CStdStubBuffer_Connect': (2, ['IRPCSTUBBUFFER*', 'IUNKNOWN*'], ['This', 'pUnkServer'], 'HRESULT'), 'CStdStubBuffer_CountRefs': (1, ['IRPCSTUBBUFFER*'], ['This'], 'ULONG'), 'CStdStubBuffer_DebugServerQueryInterface': (2, ['IRPCSTUBBUFFER*', 'VOID**'], ['This', 'ppv'], 'HRESULT'), 'CStdStubBuffer_DebugServerRelease': (2, ['IRPCSTUBBUFFER*', 'VOID*'], ['This', 'pv'], 'void'), 'CStdStubBuffer_Disconnect': (1, ['IRPCSTUBBUFFER*'], ['This'], 'void'), 'CStdStubBuffer_Invoke': (3, ['IRPCSTUBBUFFER*', 'RPCOLEMESSAGE*', 'IRPCCHANNELBUFFER*'], ['This', 'pRpcMsg', 'pRpcChannelBuffer'], 'HRESULT'), 'CStdStubBuffer_IsIIDSupported': (2, ['IRPCSTUBBUFFER*', 'REFIID'], ['This', 'riid'], 'IRpcStubBuffer*'), 'CStdStubBuffer_QueryInterface': (3, ['IRPCSTUBBUFFER*', 'REFIID', 'VOID**'], ['This', 'riid', 'ppvObject'], 'HRESULT'), 'IUnknown_AddRef_Proxy': (1, ['IUNKNOWN*'], ['This'], 'ULONG'), 'IUnknown_QueryInterface_Proxy': (3, ['IUNKNOWN*', 'REFIID', 'VOID**'], ['This', 'riid', 'ppvObject'], 'HRESULT'), 'IUnknown_Release_Proxy': (1, ['IUNKNOWN*'], ['This'], 'ULONG'), 'NdrClearOutParameters': (3, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING', 'VOID*'], ['pStubMsg', 'pFormat', 'ArgAddr'], 'void'), 'NdrContextHandleInitialize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'NDR_SCONTEXT'), 'NdrContextHandleSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrContextHandleMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrConvert': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'void'), 'NdrCStdStubBuffer_Release': (2, ['IRPCSTUBBUFFER*', 'IPSFACTORYBUFFER*'], ['This', 'pPSF'], 'ULONG'), 'NdrCStdStubBuffer2_Release': (2, ['IRPCSTUBBUFFER*', 'IPSFACTORYBUFFER*'], ['This', 'pPSF'], 'ULONG'), 'NdrDllCanUnloadNow': (1, ['CSTDPSFACTORYBUFFER*'], ['pPSFactoryBuffer'], 'HRESULT'), 'NdrDllGetClassObject': (6, ['REFCLSID', 'REFIID', 'VOID**', 'CONST PROXYFILEINFO**', 'CONST CLSID*', 'CSTDPSFACTORYBUFFER*'], ['rclsid', 'riid', 'ppv', 'pProxyFileList', 'pclsid', 'pPSFactoryBuffer'], 'HRESULT'), 'NdrDllRegisterProxy': (3, ['HMODULE', 'CONST PROXYFILEINFO**', 'CONST CLSID*'], ['hDll', 'pProxyFileList', 'pclsid'], 'HRESULT'), 'NdrDllUnregisterProxy': (3, ['HMODULE', 'CONST PROXYFILEINFO**', 'CONST CLSID*'], ['hDll', 'pProxyFileList', 'pclsid'], 'HRESULT'), 'NdrOleAllocate': (1, ['SIZE_T'], ['size'], 'void*'), 'NdrOleFree': (1, ['VOID*'], ['NodeToFree'], 'void'), 'NdrPointerBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrPointerFree': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrPointerMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrPointerUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'pMemory', 'pFormat', 'fSkipRefCheck'], 'unsigned char*'), 'NdrProxyErrorHandler': (1, ['DWORD'], ['dwExceptionCode'], 'HRESULT'), 'NdrProxyFreeBuffer': (2, ['VOID*', 'MIDL_STUB_MESSAGE*'], ['This', 'pStubMsg'], 'void'), 'NdrProxyGetBuffer': (2, ['VOID*', 'PMIDL_STUB_MESSAGE'], ['This', 'pStubMsg'], 'void'), 'NdrProxyInitialize': (5, ['VOID*', 'PRPC_MESSAGE', 'PMIDL_STUB_MESSAGE', 'PMIDL_STUB_DESC', 'UNSIGNED INT'], ['This', 'pRpcMsg', 'pStubMsg', 'pStubDescriptor', 'ProcNum'], 'void'), 'NdrProxySendReceive': (2, ['VOID*', 'MIDL_STUB_MESSAGE*'], ['This', 'pStubMsg'], 'void'), 'NdrSimpleTypeMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'UNSIGNED CHAR'], ['pStubMsg', 'pMemory', 'FormatChar'], 'void'), 'NdrSimpleTypeUnmarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'UNSIGNED CHAR'], ['pStubMsg', 'pMemory', 'FormatChar'], 'void'), 'NdrStubForwardingFunction': (4, ['IRPCSTUBBUFFER*', 'IRPCCHANNELBUFFER*', 'PRPC_MESSAGE', 'DWORD*'], ['pThis', 'pChannel', 'pMsg', 'pdwStubPhase'], 'void'), 'NdrStubGetBuffer': (3, ['IRPCSTUBBUFFER*', 'IRPCCHANNELBUFFER*', 'PMIDL_STUB_MESSAGE'], ['This', 'pRpcChannelBuffer', 'pStubMsg'], 'void'), 'NdrStubInitialize': (4, ['PRPC_MESSAGE', 'PMIDL_STUB_MESSAGE', 'PMIDL_STUB_DESC', 'IRPCCHANNELBUFFER*'], ['pRpcMsg', 'pStubMsg', 'pStubDescriptor', 'pRpcChannelBuffer'], 'void'), 'NdrAllocate': (2, ['PMIDL_STUB_MESSAGE', 'SIZE_T'], ['pStubMsg', 'Len'], 'void*'), 'NdrClientContextMarshall': (3, ['PMIDL_STUB_MESSAGE', 'NDR_CCONTEXT', 'INT'], ['pStubMsg', 'ContextHandle', 'fCheck'], 'void'), 'NdrClientContextUnmarshall': (3, ['PMIDL_STUB_MESSAGE', 'NDR_CCONTEXT*', 'RPC_BINDING_HANDLE'], ['pStubMsg', 'pContextHandle', 'BindHandle'], 'void'), 'NdrConvert2': (3, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING', 'LONG'], ['pStubMsg', 'pFormat', 'NumberParams'], 'void'), 'NdrCorrelationFree': (1, ['PMIDL_STUB_MESSAGE'], ['pStubMsg'], 'void'), 'NdrCorrelationInitialize': (4, ['PMIDL_STUB_MESSAGE', 'VOID*', 'UNSIGNED LONG', 'UNSIGNED LONG'], ['pStubMsg', 'pMemory', 'CacheSize', 'flags'], 'void'), 'NdrCorrelationPass': (1, ['PMIDL_STUB_MESSAGE'], ['pStubMsg'], 'void'), 'NdrCreateServerInterfaceFromStub': (2, ['IRPCSTUBBUFFER*', 'RPC_SERVER_INTERFACE*'], ['pStub', 'pServerIf'], 'RPC_STATUS'), 'NdrMapCommAndFaultStatus': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED LONG*', 'UNSIGNED LONG*', 'RPC_STATUS'], ['pStubMsg', 'pCommStatus', 'pFaultStatus', 'Status'], 'RPC_STATUS'), 'NdrMesProcEncodeDecode': (3, ['HANDLE_T', 'CONST MIDL_STUB_DESC*', 'PFORMAT_STRING'], ['Handle', 'pStubDesc', 'pFormatString'], 'void'), 'NdrMesProcEncodeDecode2': (3, ['HANDLE_T', 'CONST MIDL_STUB_DESC*', 'PFORMAT_STRING'], ['Handle', 'pStubDesc', 'pFormatString'], 'CLIENT_CALL_RETURN'), 'NdrMesSimpleTypeAlignSize': (1, ['HANDLE_T'], ['Handle'], 'size_t'), 'NdrMesSimpleTypeDecode': (3, ['HANDLE_T', 'VOID*', 'SHORT'], ['Handle', 'pObject', 'Size'], 'void'), 'NdrMesSimpleTypeEncode': (4, ['HANDLE_T', 'CONST MIDL_STUB_DESC*', 'CONST VOID*', 'SHORT'], ['Handle', 'pStubDesc', 'pObject', 'Size'], 'void'), 'NdrMesTypeAlignSize': (4, ['HANDLE_T', 'CONST MIDL_STUB_DESC*', 'PFORMAT_STRING', 'CONST VOID*'], ['Handle', 'pStubDesc', 'pFormatString', 'pObject'], 'size_t'), 'NdrMesTypeAlignSize2': (5, ['HANDLE_T', 'CONST MIDL_TYPE_PICKLING_INFO*', 'CONST MIDL_STUB_DESC*', 'PFORMAT_STRING', 'CONST VOID*'], ['Handle', 'pPicklingInfo', 'pStubDesc', 'pFormatString', 'pObject'], 'size_t'), 'NdrMesTypeDecode': (4, ['HANDLE_T', 'CONST MIDL_STUB_DESC*', 'PFORMAT_STRING', 'VOID*'], ['Handle', 'pStubDesc', 'pFormatString', 'pObject'], 'void'), 'NdrMesTypeDecode2': (5, ['HANDLE_T', 'CONST MIDL_TYPE_PICKLING_INFO*', 'CONST MIDL_STUB_DESC*', 'PFORMAT_STRING', 'VOID*'], ['Handle', 'pPicklingInfo', 'pStubDesc', 'pFormatString', 'pObject'], 'void'), 'NdrMesTypeEncode': (4, ['HANDLE_T', 'CONST MIDL_STUB_DESC*', 'PFORMAT_STRING', 'CONST VOID*'], ['Handle', 'pStubDesc', 'pFormatString', 'pObject'], 'void'), 'NdrMesTypeEncode2': (5, ['HANDLE_T', 'CONST MIDL_TYPE_PICKLING_INFO*', 'CONST MIDL_STUB_DESC*', 'PFORMAT_STRING', 'CONST VOID*'], ['Handle', 'pPicklingInfo', 'pStubDesc', 'pFormatString', 'pObject'], 'void'), 'NdrMesTypeFree2': (5, ['HANDLE_T', 'CONST MIDL_TYPE_PICKLING_INFO*', 'CONST MIDL_STUB_DESC*', 'PFORMAT_STRING', 'VOID*'], ['Handle', 'pPicklingInfo', 'pStubDesc', 'pFormatString', 'pObject'], 'void'), 'NdrPartialIgnoreClientBufferSize': (2, ['PMIDL_STUB_MESSAGE', 'VOID*'], ['pStubMsg', 'pMemory'], 'void'), 'NdrPartialIgnoreClientMarshall': (2, ['PMIDL_STUB_MESSAGE', 'VOID*'], ['pStubMsg', 'pMemory'], 'void'), 'NdrPartialIgnoreServerInitialize': (3, ['PMIDL_STUB_MESSAGE', 'VOID**', 'PFORMAT_STRING'], ['pStubMsg', 'ppMemory', 'pFormat'], 'void'), 'NdrPartialIgnoreServerUnmarshall': (2, ['PMIDL_STUB_MESSAGE', 'VOID**'], ['pStubMsg', 'ppMemory'], 'void'), 'NdrPointerMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrRangeUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrRpcSmClientAllocate': (1, ['SIZE_T'], ['Size'], 'void*'), 'NdrRpcSmClientFree': (1, ['VOID*'], ['NodeToFree'], 'void'), 'NdrRpcSmSetClientToOsf': (1, ['PMIDL_STUB_MESSAGE'], ['pMessage'], 'void'), 'NdrRpcSsDefaultAllocate': (1, ['SIZE_T'], ['Size'], 'void*'), 'NdrRpcSsDefaultFree': (1, ['VOID*'], ['NodeToFree'], 'void'), 'NdrRpcSsDisableAllocate': (1, ['PMIDL_STUB_MESSAGE'], ['pMessage'], 'void'), 'NdrRpcSsEnableAllocate': (1, ['PMIDL_STUB_MESSAGE'], ['pMessage'], 'void'), 'NdrServerContextMarshall': (3, ['PMIDL_STUB_MESSAGE', 'NDR_SCONTEXT', 'NDR_RUNDOWN'], ['pStubMsg', 'ContextHandle', 'RundownRoutine'], 'void'), 'NdrServerContextNewMarshall': (4, ['PMIDL_STUB_MESSAGE', 'NDR_SCONTEXT', 'NDR_RUNDOWN', 'PFORMAT_STRING'], ['pStubMsg', 'ContextHandle', 'RundownRoutine', 'pFormat'], 'void'), 'NdrServerContextNewUnmarshall': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'NDR_SCONTEXT'), 'NdrServerContextUnmarshall': (1, ['PMIDL_STUB_MESSAGE'], ['pStubMsg'], 'NDR_SCONTEXT'), 'NDRCContextBinding': (1, ['NDR_CCONTEXT'], ['CContext'], 'RPC_BINDING_HANDLE'), 'NDRCContextMarshall': (2, ['NDR_CCONTEXT', 'VOID*'], ['CContext', 'pBuff'], 'void'), 'NDRCContextUnmarshall': (4, ['NDR_CCONTEXT*', 'RPC_BINDING_HANDLE', 'VOID*', 'UNSIGNED LONG'], ['pCContext', 'hBinding', 'pBuff', 'DataRepresentation'], 'void'), 'NDRSContextMarshall': (3, ['NDR_SCONTEXT', 'VOID*', 'NDR_RUNDOWN'], ['CContext', 'pBuff', 'userRunDownIn'], 'void'), 'NDRSContextMarshall2': (6, ['RPC_BINDING_HANDLE', 'NDR_SCONTEXT', 'VOID*', 'NDR_RUNDOWN', 'VOID*', 'UNSIGNED LONG'], ['BindingHandle', 'CContext', 'pBuff', 'userRunDownIn', 'CtxGuard', 'Flags'], 'void'), 'NDRSContextMarshallEx': (4, ['RPC_BINDING_HANDLE', 'NDR_SCONTEXT', 'VOID*', 'NDR_RUNDOWN'], ['BindingHandle', 'CContext', 'pBuff', 'userRunDownIn'], 'void'), 'NDRSContextUnmarshall': (2, ['VOID*', 'UNSIGNED LONG'], ['pBuff', 'DataRepresentation'], 'NDR_SCONTEXT'), 'NDRSContextUnmarshall2': (5, ['RPC_BINDING_HANDLE', 'VOID*', 'UNSIGNED LONG', 'VOID*', 'UNSIGNED LONG'], ['BindingHandle', 'pBuff', 'DataRepresentation', 'CtxGuard', 'Flags'], 'NDR_SCONTEXT'), 'NDRSContextUnmarshallEx': (3, ['RPC_BINDING_HANDLE', 'VOID*', 'UNSIGNED LONG'], ['BindingHandle', 'pBuff', 'DataRepresentation'], 'NDR_SCONTEXT'), 'NdrConformantStringBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrConformantStringMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrConformantStringUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrConformantStringMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrNonConformantStringBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrNonConformantStringMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrNonConformantStringMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrNonConformantStringUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrEncapsulatedUnionBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrEncapsulatedUnionFree': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrEncapsulatedUnionMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrEncapsulatedUnionMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrEncapsulatedUnionUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrNonEncapsulatedUnionBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrNonEncapsulatedUnionFree': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrNonEncapsulatedUnionMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrNonEncapsulatedUnionMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrNonEncapsulatedUnionUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrFixedArrayBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrFixedArrayFree': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrFixedArrayMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrFixedArrayMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrFixedArrayUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrConformantArrayUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['NdrConformantArrayUnmarshall', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrConformantArrayBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrConformantArrayMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrConformantArrayFree': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrConformantArrayMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrComplexArrayBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrComplexArrayMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrComplexArrayUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrComplexArrayFree': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrComplexArrayMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrConformantVaryingArrayBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrConformantVaryingArrayFree': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrConformantVaryingArrayMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrConformantVaryingArrayMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrConformantVaryingArrayUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrVaryingArrayBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrVaryingArrayFree': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrVaryingArrayMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrVaryingArrayMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrVaryingArrayUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrSimpleStructBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrSimpleStructMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrSimpleStructUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrSimpleStructFree': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrSimpleStructMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrComplexStructBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrComplexStructMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrComplexStructUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrComplexStructFree': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrComplexStructMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrConformantVaryingStructBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrConformantVaryingStructFree': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrConformantVaryingStructMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrConformantVaryingStructMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrConformantVaryingStructUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrConformantStructBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrConformantStructFree': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrConformantStructMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrConformantStructMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrConformantStructUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrXmitOrRepAsBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrXmitOrRepAsFree': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrXmitOrRepAsMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrXmitOrRepAsMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrXmitOrRepAsUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrInterfacePointerBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrInterfacePointerFree': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrInterfacePointerMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrInterfacePointerUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrInterfacePointerMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrGetUserMarshalInfo': (3, ['UNSIGNED LONG*', 'UNSIGNED LONG', 'NDR_USER_MARSHAL_INFO*'], ['pFlags', 'InformationLevel', 'pMarshalInfo'], 'RPC_STATUS'), 'NdrUserMarshalBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrUserMarshalFree': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrUserMarshalMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrUserMarshalUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrUserMarshalMemorySize': (2, ['PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pStubMsg', 'pFormat'], 'unsigned long'), 'NdrUserMarshalSimpleTypeConvert': (3, ['UNSIGNED LONG*', 'UNSIGNED CHAR*', 'UNSIGNED CHAR'], ['pFlags', 'pBuffer', 'FormatChar'], 'unsigned char*'), 'NdrByteCountPointerBufferSize': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrByteCountPointerFree': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'void'), 'NdrByteCountPointerMarshall': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'PFORMAT_STRING'], ['pStubMsg', 'pMemory', 'pFormat'], 'unsigned char*'), 'NdrByteCountPointerUnmarshall': (4, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR**', 'PFORMAT_STRING', 'UNSIGNED CHAR'], ['pStubMsg', 'ppMemory', 'pFormat', 'fMustAlloc'], 'unsigned char*'), 'NdrClientInitializeNew': (4, ['PRPC_MESSAGE', 'PMIDL_STUB_MESSAGE', 'PMIDL_STUB_DESC', 'UNSIGNED INT'], ['pRpcMsg', 'pStubMsg', 'pStubDescriptor', 'ProcNum'], 'void'), 'NdrServerInitializeNew': (3, ['PRPC_MESSAGE', 'PMIDL_STUB_MESSAGE', 'PMIDL_STUB_DESC'], ['pRpcMsg', 'pStubMsg', 'pStubDescriptor'], 'unsigned char*'), 'NdrServerInitializePartial': (4, ['PRPC_MESSAGE', 'PMIDL_STUB_MESSAGE', 'PMIDL_STUB_DESC', 'UNSIGNED LONG'], ['pRpcMsg', 'pStubMsg', 'pStubDescriptor', 'RequestedBufferSize'], 'void'), 'NdrClientInitialize': (4, ['PRPC_MESSAGE', 'PMIDL_STUB_MESSAGE', 'PMIDL_STUB_DESC', 'UNSIGNED INT'], ['pRpcMsg', 'pStubMsg', 'pStubDescriptor', 'ProcNum'], 'void'), 'NdrServerInitialize': (3, ['PRPC_MESSAGE', 'PMIDL_STUB_MESSAGE', 'PMIDL_STUB_DESC'], ['pRpcMsg', 'pStubMsg', 'pStubDescriptor'], 'unsigned char*'), 'NdrServerInitializeUnmarshall': (3, ['PMIDL_STUB_MESSAGE', 'PMIDL_STUB_DESC', 'PRPC_MESSAGE'], ['pStubMsg', 'pStubDescriptor', 'pRpcMsg'], 'unsigned char*'), 'NdrServerInitializeMarshall': (2, ['PRPC_MESSAGE', 'PMIDL_STUB_MESSAGE'], ['pRpcMsg', 'pStubMsg'], 'void'), 'NdrGetBuffer': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED LONG', 'RPC_BINDING_HANDLE'], ['pStubMsg', 'BufferLength', 'Handle'], 'unsigned char*'), 'NdrNsGetBuffer': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED LONG', 'RPC_BINDING_HANDLE'], ['pStubMsg', 'BufferLength', 'Handle'], 'unsigned char*'), 'NdrSendReceive': (2, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*'], ['pStubMsg', 'pBufferEnd'], 'unsigned char*'), 'NdrNsSendReceive': (3, ['PMIDL_STUB_MESSAGE', 'UNSIGNED CHAR*', 'RPC_BINDING_HANDLE*'], ['pStubMsg', 'pBufferEnd', 'pAutoHandle'], 'unsigned char*'), 'NdrFreeBuffer': (1, ['PMIDL_STUB_MESSAGE'], ['pStubMsg'], 'void'), 'NdrGetDcomProtocolVersion': (2, ['PMIDL_STUB_MESSAGE', 'RPC_VERSION*'], ['pStubMsg', 'pVersion'], 'RPC_STATUS'), 'NdrClientCall2': (2, ['PMIDL_STUB_DESC', 'PFORMAT_STRING'], ['pStubDescriptor', 'pFormat'], 'CLIENT_CALL_RETURN'), 'NdrClientCall': (2, ['PMIDL_STUB_DESC', 'PFORMAT_STRING'], ['pStubDescriptor', 'pFormat'], 'CLIENT_CALL_RETURN'), 'NdrAsyncClientCall': (2, ['PMIDL_STUB_DESC', 'PFORMAT_STRING'], ['pStubDescriptor', 'pFormat'], 'CLIENT_CALL_RETURN'), 'NdrDcomAsyncClientCall': (2, ['PMIDL_STUB_DESC', 'PFORMAT_STRING'], ['pStubDescriptor', 'pFormat'], 'CLIENT_CALL_RETURN'), 'NdrAsyncServerCall': (1, ['PRPC_MESSAGE'], ['pRpcMsg'], 'void'), 'NdrAsyncStubCall': (4, ['IRPCSTUBBUFFER*', 'IRPCCHANNELBUFFER*', 'PRPC_MESSAGE', 'UNSIGNED LONG*'], ['pThis', 'pChannel', 'pRpcMsg', 'pdwStubPhase'], 'long'), 'NdrDcomAsyncStubCall': (4, ['IRPCSTUBBUFFER*', 'IRPCCHANNELBUFFER*', 'PRPC_MESSAGE', 'UNSIGNED LONG*'], ['pThis', 'pChannel', 'pRpcMsg', 'pdwStubPhase'], 'long'), 'NdrStubCall2': (4, ['IRPCSTUBBUFFER*', 'IRPCCHANNELBUFFER*', 'PRPC_MESSAGE', 'UNSIGNED LONG*'], ['pThis', 'pChannel', 'pRpcMsg', 'pdwStubPhase'], 'long'), 'NdrServerCall2': (1, ['PRPC_MESSAGE'], ['pRpcMsg'], 'void'), 'NdrStubCall': (4, ['IRPCSTUBBUFFER*', 'IRPCCHANNELBUFFER*', 'PRPC_MESSAGE', 'UNSIGNED LONG*'], ['pThis', 'pChannel', 'pRpcMsg', 'pdwStubPhase'], 'long'), 'NdrServerCall': (1, ['PRPC_MESSAGE'], ['pRpcMsg'], 'void'), 'NdrServerUnmarshall': (6, ['IRPCCHANNELBUFFER*', 'PRPC_MESSAGE', 'PMIDL_STUB_MESSAGE', 'PMIDL_STUB_DESC', 'PFORMAT_STRING', 'VOID*'], ['pChannel', 'pRpcMsg', 'pStubMsg', 'pStubDescriptor', 'pFormat', 'pParamList'], 'int'), 'NdrServerMarshall': (4, ['IRPCSTUBBUFFER*', 'IRPCCHANNELBUFFER*', 'PMIDL_STUB_MESSAGE', 'PFORMAT_STRING'], ['pThis', 'pChannel', 'pStubMsg', 'pFormat'], 'void'), 'Ndr64AsyncClientCall': (3, ['MIDL_STUBLESS_PROXY_INFO*', 'UNSIGNED LONG', 'VOID*'], ['pProxyInfo', 'nProcNum', 'pReturnValue'], 'CLIENT_CALL_RETURN'), 'Ndr64AsyncServerCall64': (1, ['PRPC_MESSAGE'], ['pRpcMsg'], 'void'), 'Ndr64AsyncServerCallAll': (1, ['PRPC_MESSAGE'], ['pRpcMsg'], 'void'), 'Ndr64DcomAsyncClientCall': (3, ['MIDL_STUBLESS_PROXY_INFO*', 'UNSIGNED LONG', 'VOID*'], ['pProxyInfo', 'nProcNum', 'pReturnValue'], 'CLIENT_CALL_RETURN'), 'Ndr64DcomAsyncStubCall': (4, ['IRPCSTUBBUFFER*', 'IRPCCHANNELBUFFER*', 'PRPC_MESSAGE', 'UNSIGNED LONG*'], ['pThis', 'pChannel', 'pRpcMsg', 'pdwStubPhase'], 'long'), 'NdrServerCallAll': (1, ['PRPC_MESSAGE'], ['pRpcMsg'], 'void'), 'NdrServerCallNdr64': (1, ['PRPC_MESSAGE'], ['pRpcMsg'], 'void'), 'NdrStubCall3': (4, ['IRPCSTUBBUFFER*', 'IRPCCHANNELBUFFER*', 'PRPC_MESSAGE', 'UNSIGNED LONG*'], ['pThis', 'pChannel', 'pRpcMsg', 'pdwStubPhase'], 'long'), 'NdrFullPointerXlatInit': (2, ['UNSIGNED LONG', 'XLAT_SIDE'], ['NumberOfPointers', 'XlatSide'], 'PFULL_PTR_XLAT_TABLES'), 'NdrFullPointerXlatFree': (1, ['PFULL_PTR_XLAT_TABLES'], ['pXlatTables'], 'void'), 'NdrFullPointerQueryPointer': (4, ['PFULL_PTR_XLAT_TABLES', 'VOID*', 'UNSIGNED CHAR', 'UNSIGNED LONG*'], ['pXlatTables', 'pPointer', 'QueryType', 'pRefId'], 'int'), 'NdrFullPointerQueryRefId': (4, ['PFULL_PTR_XLAT_TABLES', 'UNSIGNED LONG', 'UNSIGNED CHAR', 'VOID**'], ['pXlatTables', 'RefId', 'QueryType', 'ppPointer'], 'int'), 'NdrFullPointerInsertRefId': (3, ['PFULL_PTR_XLAT_TABLES', 'UNSIGNED LONG', 'VOID*'], ['pXlatTables', 'RefId', 'pPointer'], 'void'), 'NdrFullPointerFree': (2, ['PFULL_PTR_XLAT_TABLES', 'VOID*'], ['pXlatTables', 'Pointer'], 'int')}

dict5_usp10 = {'ScriptApplyDigitSubstitution': (3, ['CONST SCRIPT_DIGITSUBSTITUTE*', 'SCRIPT_CONTROL*', 'SCRIPT_STATE*'], ['psds', 'psc', 'pss'], 'HRESULT'), 'ScriptApplyLogicalWidth': (9, ['CONST INT*', 'INT', 'INT', 'CONST WORD*', 'CONST SCRIPT_VISATTR*', 'CONST INT*', 'CONST SCRIPT_ANALYSIS*', 'ABC*', 'INT*'], ['piDx', 'cChars', 'cGlyphs', 'pwLogClust', 'psva', 'piAdvance', 'psa', 'pABC', 'piJustify'], 'HRESULT'), 'ScriptBreak': (4, ['CONST WCHAR*', 'INT', 'CONST SCRIPT_ANALYSIS*', 'SCRIPT_LOGATTR*'], ['pwcChars', 'cChars', 'psa', 'psla'], 'HRESULT'), 'ScriptCacheGetHeight': (3, ['HDC', 'SCRIPT_CACHE*', 'LONG*'], ['hdc', 'psc', 'tmHeight'], 'HRESULT'), 'ScriptCPtoX': (9, ['INT', 'BOOL', 'INT', 'INT', 'CONST WORD*', 'CONST SCRIPT_VISATTR*', 'CONST INT*', 'CONST SCRIPT_ANALYSIS*', 'INT*'], ['iCP', 'fTrailing', 'cChars', 'cGlyphs', 'pwLogClust', 'psva', 'piAdvance', 'psa', 'piX'], 'HRESULT'), 'ScriptFreeCache': (1, ['SCRIPT_CACHE*'], ['psc'], 'HRESULT'), 'ScriptGetCMap': (6, ['HDC', 'SCRIPT_CACHE*', 'CONST WCHAR*', 'INT', 'SGCM_FLAGS', 'WORD*'], ['hdc', 'psc', 'pwcInChars', 'cChars', 'dwFlags', 'pwOutGlyphs'], 'HRESULT'), 'ScriptGetFontAlternateGlyphs': (10, ['HDC', 'SCRIPT_CACHE*', 'SCRIPT_ANALYSIS*', 'OPENTYPE_TAG', 'OPENTYPE_TAG', 'OPENTYPE_TAG', 'WORD', 'INT', 'WORD*', 'INT*'], ['hdc', 'psc', 'psa', 'tagScript', 'tagLangSys', 'tagFeature', 'wGlyphId', 'cMaxAlternates', 'pAlternateGlyphs', 'pcAlternates'], 'HRESULT'), 'ScriptGetFontFeatureTags': (8, ['HDC', 'SCRIPT_CACHE*', 'SCRIPT_ANALYSIS*', 'OPENTYPE_TAG', 'OPENTYPE_TAG', 'INT', 'OPENTYPE_TAG*', 'INT*'], ['hdc', 'psc', 'psa', 'tagScript', 'tagLangSys', 'cMaxTags', 'pFeatureTags', 'pcTags'], 'HRESULT'), 'ScriptGetFontLanguageTags': (7, ['HDC', 'SCRIPT_CACHE*', 'SCRIPT_ANALYSIS*', 'OPENTYPE_TAG', 'INT', 'OPENTYPE_TAG*', 'INT*'], ['hdc', 'psc', 'psa', 'tagScript', 'cMaxTags', 'pLangSysTags', 'pcTags'], 'HRESULT'), 'ScriptGetFontProperties': (3, ['HDC', 'SCRIPT_CACHE*', 'SCRIPT_FONTPROPERTIES*'], ['hdc', 'psc', 'sfp'], 'HRESULT'), 'ScriptGetFontScriptTags': (6, ['HDC', 'SCRIPT_CACHE*', 'SCRIPT_ANALYSIS*', 'INT', 'OPENTYPE_TAG*', 'INT*'], ['hdc', 'psc', 'psa', 'cMaxTags', 'pScriptTags', 'pcTags'], 'HRESULT'), 'ScriptGetGlyphABCWidth': (4, ['HDC', 'SCRIPT_CACHE*', 'WORD', 'ABC*'], ['hdc', 'psc', 'wGlyph', 'pABC'], 'HRESULT'), 'ScriptGetLogicalWidths': (7, ['CONST SCRIPT_ANALYSIS*', 'INT', 'INT', 'CONST INT*', 'CONST WORD*', 'CONST SCRIPT_VISATTR*', 'INT*'], ['psa', 'cChars', 'cGlyphs', 'piGlyphWidth', 'pwLogClust', 'psva', 'piDx'], 'HRESULT'), 'ScriptGetProperties': (2, ['CONST SCRIPT_PROPERTIES***', 'INT*'], ['ppSp', 'piNumScripts'], 'HRESULT'), 'ScriptIsComplex': (3, ['CONST WCHAR*', 'INT', 'SIC_FLAGS'], ['pwcInChars', 'cInChars', 'dwFlags'], 'HRESULT'), 'ScriptItemize': (7, ['CONST WCHAR*', 'INT', 'INT', 'CONST SCRIPT_CONTROL*', 'CONST SCRIPT_STATE*', 'SCRIPT_ITEM*', 'INT*'], ['pwcInChars', 'cInChars', 'cMaxItems', 'psControl', 'psState', 'pItems', 'pcItems'], 'HRESULT'), 'ScriptItemizeOpenType': (8, ['CONST WCHAR*', 'INT', 'INT', 'CONST SCRIPT_CONTROL*', 'CONST SCRIPT_STATE*', 'SCRIPT_ITEM*', 'OPENTYPE_TAG*', 'INT*'], ['pwcInChars', 'cInChars', 'cMaxItems', 'psControl', 'psState', 'pItems', 'pScriptTags', 'pcItems'], 'HRESULT'), 'ScriptJustify': (6, ['CONST SCRIPT_VISATTR*', 'CONST INT*', 'INT', 'INT', 'INT', 'INT*'], ['psva', 'piAdvance', 'cGlyphs', 'iDx', 'iMinKashida', 'piJustify'], 'HRESULT'), 'ScriptLayout': (4, ['INT', 'CONST BYTE*', 'INT*', 'INT*'], ['cRuns', 'pbLevel', 'piVisualToLogical', 'piLogicalToVisual'], 'HRESULT'), 'ScriptPlace': (9, ['HDC', 'SCRIPT_CACHE*', 'CONST WORD*', 'INT', 'CONST SCRIPT_VISATTR*', 'SCRIPT_ANALYSIS*', 'INT*', 'GOFFSET*', 'ABC*'], ['hdc', 'psc', 'pwGlyphs', 'cGlyphs', 'psva', 'psa', 'piAdvance', 'pGoffset', 'pABC'], 'HRESULT'), 'ScriptPlaceOpenType': (18, ['HDC', 'SCRIPT_CACHE*', 'SCRIPT_ANALYSIS*', 'OPENTYPE_TAG', 'OPENTYPE_TAG', 'INT*', 'TEXTRANGE_PROPERTIES**', 'INT', 'CONST WCHAR*', 'WORD*', 'SCRIPT_CHARPROP*', 'INT', 'CONST WORD*', 'CONST SCRIPT_GLYPHPROP*', 'INT', 'INT*', 'GOFFSET*', 'ABC*'], ['hdc', 'psc', 'psa', 'tagScript', 'tagLangSys', 'rcRangeChars', 'rpRangeProperties', 'cRanges', 'pwcChars', 'pwLogClust', 'pCharProps', 'cChars', 'pwGlyphs', 'pGlyphProps', 'cGlyphs', 'piAdvance', 'pGoffset', 'pABC'], 'HRESULT'), 'ScriptPositionSingleGlyph': (12, ['HDC', 'SCRIPT_CACHE*', 'SCRIPT_ANALYSIS*', 'OPENTYPE_TAG', 'OPENTYPE_TAG', 'OPENTYPE_TAG', 'LONG', 'WORD', 'INT', 'GOFFSET', 'INT*', 'GOFFSET*'], ['hdc', 'psc', 'psa', 'tagScript', 'tagLangSys', 'tagFeature', 'lParameter', 'wGlyphId', 'iAdvance', 'Goffset', 'piOutAdvance', 'pOutGoffset'], 'HRESULT'), 'ScriptRecordDigitSubstitution': (2, ['LCID', 'SCRIPT_DIGITSUBSTITUTE*'], ['Locale', 'psds'], 'HRESULT'), 'ScriptShape': (10, ['HDC', 'SCRIPT_CACHE*', 'CONST WCHAR*', 'INT', 'INT', 'SCRIPT_ANALYSIS*', 'WORD*', 'WORD*', 'SCRIPT_VISATTR*', 'INT*'], ['hdc', 'psc', 'pwcChars', 'cChars', 'cMaxGlyphs', 'psa', 'pwOutGlyphs', 'pwLogClust', 'psva', 'pcGlyphs'], 'HRESULT'), 'ScriptShapeOpenType': (16, ['HDC', 'SCRIPT_CACHE*', 'SCRIPT_ANALYSIS*', 'OPENTYPE_TAG', 'OPENTYPE_TAG', 'INT*', 'TEXTRANGE_PROPERTIES**', 'INT', 'CONST WCHAR*', 'INT', 'INT', 'WORD*', 'SCRIPT_CHARPROP*', 'WORD*', 'SCRIPT_GLYPHPROP*', 'INT*'], ['hdc', 'psc', 'psa', 'tagScript', 'tagLangSys', 'rcRangeChars', 'rpRangeProperties', 'cRanges', 'pwcChars', 'cChars', 'cMaxGlyphs', 'pwLogClust', 'pCharProps', 'pwOutGlyphs', 'pOutGlyphProps', 'pcGlyphs'], 'HRESULT'), 'ScriptStringAnalyse': (13, ['HDC', 'CONST VOID*', 'INT', 'INT', 'INT', 'SSA_FLAGS', 'INT', 'SCRIPT_CONTROL*', 'SCRIPT_STATE*', 'CONST INT*', 'SCRIPT_TABDEF*', 'CONST BYTE*', 'SCRIPT_STRING_ANALYSIS*'], ['hdc', 'pString', 'cString', 'cGlyphs', 'iCharset', 'dwFlags', 'iReqWidth', 'psControl', 'psState', 'piDx', 'pTabdef', 'pbInClass', 'pssa'], 'HRESULT'), 'ScriptStringCPtoX': (4, ['SCRIPT_STRING_ANALYSIS', 'INT', 'BOOL', 'INT*'], ['ssa', 'icp', 'fTrailing', 'pX'], 'HRESULT'), 'ScriptStringFree': (1, ['SCRIPT_STRING_ANALYSIS*'], ['pssa'], 'HRESULT'), 'ScriptStringGetLogicalWidths': (2, ['SCRIPT_STRING_ANALYSIS', 'INT*'], ['ssa', 'piDx'], 'HRESULT'), 'ScriptStringGetOrder': (2, ['SCRIPT_STRING_ANALYSIS', 'UINT*'], ['ssa', 'puOrder'], 'HRESULT'), 'ScriptStringOut': (8, ['SCRIPT_STRING_ANALYSIS', 'INT', 'INT', 'EXTTEXTOUTFLAGS', 'CONST RECT*', 'INT', 'INT', 'BOOL'], ['ssa', 'iX', 'iY', 'uOptions', 'prc', 'iMinSel', 'iMaxSel', 'fDisabled'], 'HRESULT'), 'ScriptString_pcOutChars': (1, ['SCRIPT_STRING_ANALYSIS'], ['ssa'], 'const int*'), 'ScriptString_pLogAttr': (1, ['SCRIPT_STRING_ANALYSIS'], ['ssa'], 'const SCRIPT_LOGATTR*'), 'ScriptString_pSize': (1, ['SCRIPT_STRING_ANALYSIS'], ['ssa'], 'const SIZE*'), 'ScriptStringValidate': (1, ['SCRIPT_STRING_ANALYSIS'], ['ssa'], 'HRESULT'), 'ScriptStringXtoCP': (4, ['SCRIPT_STRING_ANALYSIS', 'INT', 'INT*', 'INT*'], ['ssa', 'iX', 'piCh', 'piTrailing'], 'HRESULT'), 'ScriptSubstituteSingleGlyph': (9, ['HDC', 'SCRIPT_CACHE*', 'SCRIPT_ANALYSIS*', 'OPENTYPE_TAG', 'OPENTYPE_TAG', 'OPENTYPE_TAG', 'LONG', 'WORD', 'WORD*'], ['hdc', 'psc', 'psa', 'tagScript', 'tagLangSys', 'tagFeature', 'lParameter', 'wGlyphId', 'pwOutGlyphId'], 'HRESULT'), 'ScriptTextOut': (14, ['CONST HDC', 'SCRIPT_CACHE*', 'INT', 'INT', 'EXTTEXTOUTFLAGS', 'CONST RECT*', 'CONST SCRIPT_ANALYSIS*', 'CONST WCHAR*', 'INT', 'CONST WORD*', 'INT', 'CONST INT*', 'CONST INT*', 'CONST GOFFSET*'], ['hdc', 'psc', 'x', 'y', 'fuOptions', 'lprc', 'psa', 'pwcReserved', 'iReserved', 'pwGlyphs', 'cGlyphs', 'piAdvance', 'piJustify', 'pGoffset'], 'HRESULT'), 'ScriptXtoCP': (9, ['INT', 'INT', 'INT', 'CONST WORD*', 'CONST SCRIPT_VISATTR*', 'CONST INT*', 'CONST SCRIPT_ANALYSIS*', 'INT*', 'INT*'], ['iX', 'cChars', 'cGlyphs', 'pwLogClust', 'psva', 'piAdvance', 'psa', 'piCP', 'piTrailing'], 'HRESULT')}

dict5_virtdisk = {'AddVirtualDiskParent': (2, ['HANDLE', 'PCWSTR'], ['VirtualDiskHandle', 'ParentPath'], '[ERROR_CODE]'), 'AttachVirtualDisk': (6, ['HANDLE', 'PSECURITY_DESCRIPTOR', 'ATTACH_VIRTUAL_DISK_FLAG', 'ULONG', 'PATTACH_VIRTUAL_DISK_PARAMETERS', 'LPOVERLAPPED'], ['VirtualDiskHandle', 'SecurityDescriptor', 'Flags', 'ProviderSpecificFlags', 'Parameters', 'Overlapped'], '[ERROR_CODE]'), 'BreakMirrorVirtualDisk': (1, ['HANDLE'], ['VirtualDiskHandle'], '[ERROR_CODE]'), 'CompactVirtualDisk': (4, ['HANDLE', 'COMPACT_VIRTUAL_DISK_FLAG', 'PCOMPACT_VIRTUAL_DISK_PARAMETERS', 'LPOVERLAPPED'], ['VirtualDiskHandle', 'Flags', 'Parameters', 'Overlapped'], '[ERROR_CODE]'), 'CreateVirtualDisk': (9, ['PVIRTUAL_STORAGE_TYPE', 'PCWSTR', 'VIRTUAL_DISK_ACCESS_MASK', 'PSECURITY_DESCRIPTOR', 'CREATE_VIRTUAL_DISK_FLAG', 'ULONG', 'PCREATE_VIRTUAL_DISK_PARAMETERS', 'LPOVERLAPPED', 'PHANDLE'], ['VirtualStorageType', 'Path', 'VirtualDiskAccessMask', 'SecurityDescriptor', 'Flags', 'ProviderSpecificFlags', 'Parameters', 'Overlapped', 'Handle'], '[ERROR_CODE]'), 'DeleteVirtualDiskMetadata': (2, ['HANDLE', 'LPGUID'], ['VirtualDiskHandle', 'Item'], '[ERROR_CODE]'), 'DetachVirtualDisk': (3, ['HANDLE', 'DETACH_VIRTUAL_DISK_FLAG', 'ULONG'], ['VirtualDiskHandle', 'Flags', 'ProviderSpecificFlags'], '[ERROR_CODE]'), 'EnumerateVirtualDiskMetadata': (3, ['HANDLE', 'PULONG', 'GUID*'], ['VirtualDiskHandle', 'NumberOfItems', 'Items'], '[ERROR_CODE]'), 'ExpandVirtualDisk': (4, ['HANDLE', 'EXPAND_VIRTUAL_DISK_FLAG', 'PEXPAND_VIRTUAL_DISK_PARAMETERS', 'LPOVERLAPPED'], ['VirtualDiskHandle', 'Flags', 'Parameters', 'Overlapped'], '[ERROR_CODE]'), 'GetStorageDependencyInformation': (5, ['HANDLE', 'GET_STORAGE_DEPENDENCY_FLAG', 'ULONG', 'PSTORAGE_DEPENDENCY_INFO', 'PULONG'], ['ObjectHandle', 'Flags', 'StorageDependencyInfoSize', 'StorageDependencyInfo', 'SizeUsed'], '[ERROR_CODE]'), 'GetVirtualDiskInformation': (4, ['HANDLE', 'PULONG', 'PGET_VIRTUAL_DISK_INFO', 'PULONG'], ['VirtualDiskHandle', 'VirtualDiskInfoSize', 'VirtualDiskInfo', 'SizeUsed'], '[ERROR_CODE]'), 'GetVirtualDiskMetadata': (4, ['HANDLE', 'LPGUID', 'PULONG', 'PVOID'], ['VirtualDiskHandle', 'Item', 'MetaDataSize', 'MetaData'], '[ERROR_CODE]'), 'GetVirtualDiskOperationProgress': (3, ['HANDLE', 'LPOVERLAPPED', 'PVIRTUAL_DISK_PROGRESS'], ['VirtualDiskHandle', 'Overlapped', 'Progress'], '[ERROR_CODE]'), 'GetVirtualDiskPhysicalPath': (3, ['HANDLE', 'PULONG', 'PWSTR'], ['VirtualDiskHandle', 'DiskPathSizeInBytes', 'DiskPath'], '[ERROR_CODE]'), 'MergeVirtualDisk': (4, ['HANDLE', 'MERGE_VIRTUAL_DISK_FLAG', 'PMERGE_VIRTUAL_DISK_PARAMETERS', 'LPOVERLAPPED'], ['VirtualDiskHandle', 'Flags', 'Parameters', 'Overlapped'], '[ERROR_CODE]'), 'MirrorVirtualDisk': (4, ['HANDLE', 'MIRROR_VIRTUAL_DISK_FLAG', 'PMIRROR_VIRTUAL_DISK_PARAMETERS', 'LPOVERLAPPED'], ['VirtualDiskHandle', 'Flags', 'Parameters', 'Overlapped'], '[ERROR_CODE]'), 'OpenVirtualDisk': (6, ['PVIRTUAL_STORAGE_TYPE', 'PCWSTR', 'VIRTUAL_DISK_ACCESS_MASK', 'OPEN_VIRTUAL_DISK_FLAG', 'POPEN_VIRTUAL_DISK_PARAMETERS', 'PHANDLE'], ['VirtualStorageType', 'Path', 'VirtualDiskAccessMask', 'Flags', 'Parameters', 'Handle'], '[ERROR_CODE]'), 'ResizeVirtualDisk': (4, ['HANDLE', 'RESIZE_VIRTUAL_DISK_FLAG', 'PRESIZE_VIRTUAL_DISK_PARAMETERS', 'LPOVERLAPPED'], ['VirtualDiskHandle', 'Flags', 'Parameters', 'Overlapped'], '[ERROR_CODE]'), 'SetVirtualDiskInformation': (2, ['HANDLE', 'PSET_VIRTUAL_DISK_INFO'], ['VirtualDiskHandle', 'VirtualDiskInfo'], '[ERROR_CODE]'), 'SetVirtualDiskMetadata': (4, ['HANDLE', 'LPGUID', 'ULONG', 'PVOID'], ['VirtualDiskHandle', 'Item', 'MetaDataSize', 'MetaData'], '[ERROR_CODE]')}

dict5_websocket = {'WebSocketAbortHandle': (1, ['WEB_SOCKET_HANDLE'], ['hWebSocket'], 'VOID'), 'WebSocketBeginClientHandshake': (9, ['WEB_SOCKET_HANDLE', 'PCSTR*', 'ULONG', 'PCSTR*', 'ULONG', 'CONST PWEB_SOCKET_HTTP_HEADER', 'ULONG', 'PWEB_SOCKET_HTTP_HEADER*', 'ULONG*'], ['hWebSocket', 'pszSubprotocols', 'ulSubprotocolCount', 'pszExtensions', 'ulExtensionCount', 'pInitialHeaders', 'ulInitialHeaderCount', 'pAdditionalHeaders', 'pulAdditionalHeaderCount'], 'HRESULT'), 'WebSocketBeginServerHandshake': (8, ['WEB_SOCKET_HANDLE', 'PCSTR', 'PCSTR*', 'ULONG', 'CONST PWEB_SOCKET_HTTP_HEADER', 'ULONG', 'PWEB_SOCKET_HTTP_HEADER*', 'ULONG*'], ['hWebSocket', 'pszSubprotocolSelected', 'pszExtensionSelected', 'ulExtensionSelectedCount', 'pRequestHeaders', 'ulRequestHeaderCount', 'pResponseHeaders', 'pulResponseHeaderCount'], 'HRESULT'), 'WebSocketCompleteAction': (3, ['WEB_SOCKET_HANDLE', 'PVOID', 'ULONG'], ['hWebSocket', 'pvActionContext', 'ulBytesTransferred'], 'VOID'), 'WebSocketCreateClientHandle': (3, ['CONST PWEB_SOCKET_PROPERTY', 'ULONG', 'WEB_SOCKET_HANDLE*'], ['pProperties', 'ulPropertyCount', 'phWebSocket'], 'HRESULT'), 'WebSocketCreateServerHandle': (3, ['CONST PWEB_SOCKET_PROPERTY', 'ULONG', 'WEB_SOCKET_HANDLE*'], ['pProperties', 'ulPropertyCount', 'phWebSocket'], 'HRESULT'), 'WebSocketDeleteHandle': (1, ['WEB_SOCKET_HANDLE'], ['hWebSocket'], 'VOID'), 'WebSocketEndClientHandshake': (6, ['WEB_SOCKET_HANDLE', 'CONST PWEB_SOCKET_HTTP_HEADER', 'ULONG', 'ULONG*', 'ULONG*', 'ULONG*'], ['hWebSocket', 'pResponseHeaders', 'ulReponseHeaderCount', 'pulSelectedExtensions', 'pulSelectedExtensionCount', 'pulSelectedSubprotocol'], 'HRESULT'), 'WebSocketEndServerHandshake': (1, ['WEB_SOCKET_HANDLE'], ['hWebSocket'], 'HRESULT'), 'WebSocketGetAction': (8, ['WEB_SOCKET_HANDLE', 'WEB_SOCKET_ACTION_QUEUE', 'WEB_SOCKET_BUFFER*', 'ULONG*', 'WEB_SOCKET_ACTION*', 'WEB_SOCKET_BUFFER_TYPE*', 'PVOID*', 'PVOID*'], ['hWebSocket', 'eActionQueue', 'pDataBuffers', 'pulDataBufferCount', 'pAction', 'pBufferType', 'pvApplicationContext', 'pvActionContext'], 'HRESULT'), 'WebSocketGetGlobalProperty': (3, ['WEB_SOCKET_PROPERTY', 'PVOID', 'ULONG*'], ['eType', 'pvValue', 'ulSize'], 'HRESULT'), 'WebSocketReceive': (3, ['WEB_SOCKET_HANDLE', 'WEB_SOCKET_BUFFER*', 'PVOID'], ['hWebSocket', 'pBuffer', 'pvContext'], 'HRESULT'), 'WebSocketSend': (4, ['WEB_SOCKET_HANDLE', 'WEB_SOCKET_BUFFER_TYPE', 'WEB_SOCKET_BUFFER*', 'PVOID'], ['hWebSocket', 'BufferType', 'pBuffer', 'Context'], 'HRESULT')}

dict5_winbio = {'WinBioAcquireFocus': (0, [], [], 'HRESULT'), 'WinBioAsyncEnumBiometricUnits': (2, ['WINBIO_FRAMEWORK_HANDLE', 'WINBIO_BIOMETRIC_TYPE'], ['FrameworkHandle', 'Factor'], 'HRESULT'), 'WinBioAsyncEnumDatabases': (2, ['WINBIO_FRAMEWORK_HANDLE', 'WINBIO_BIOMETRIC_TYPE'], ['FrameworkHandle', 'Factor'], 'HRESULT'), 'WinBioAsyncEnumServiceProviders': (2, ['WINBIO_FRAMEWORK_HANDLE', 'WINBIO_BIOMETRIC_TYPE'], ['FrameworkHandle', 'Factor'], 'HRESULT'), 'WinBioAsyncMonitorFrameworkChanges': (2, ['WINBIO_FRAMEWORK_HANDLE', 'WINBIO_FRAMEWORK_CHANGE_TYPE'], ['FrameworkHandle', 'ChangeTypes'], 'HRESULT'), 'WinBioAsyncOpenFramework': (7, ['WINBIO_ASYNC_NOTIFICATION_METHOD', 'HWND', 'UINT', 'PWINBIO_ASYNC_COMPLETION_CALLBACK', 'PVOID', 'BOOL', 'WINBIO_FRAMEWORK_HANDLE*'], ['NotificationMethod', 'TargetWindow', 'MessageCode', 'CallbackRoutine', 'UserData', 'AsynchronousOpen', 'FrameworkHandle'], 'HRESULT'), 'WinBioAsyncOpenSession': (13, ['WINBIO_BIOMETRIC_TYPE', 'WINBIO_POOL_TYPE', 'WINBIO_SESSION_FLAGS', 'WINBIO_UNIT_ID*', 'SIZE_T', 'GUID*', 'WINBIO_ASYNC_NOTIFICATION_METHOD', 'HWND', 'UINT', 'PWINBIO_ASYNC_COMPLETION_CALLBACK', 'PVOID', 'BOOL', 'WINBIO_SESSION_HANDLE*'], ['Factor', 'PoolType', 'Flags', 'UnitArray', 'UnitCount', 'DatabaseId', 'NotificationMethod', 'TargetWindow', 'MessageCode', 'CallbackRoutine', 'UserData', 'AsynchronousOpen', 'SessionHandle'], 'HRESULT'), 'WinBioCancel': (1, ['WINBIO_SESSION_HANDLE'], ['SessionHandle'], 'HRESULT'), 'WinBioCaptureSample': (7, ['WINBIO_SESSION_HANDLE', 'WINBIO_BIR_PURPOSE', 'WINBIO_BIR_DATA_FLAGS', 'WINBIO_UNIT_ID*', 'PWINBIO_BIR*', 'SIZE_T*', 'WINBIO_REJECT_DETAIL*'], ['SessionHandle', 'Purpose', 'Flags', 'UnitId', 'Sample', 'SampleSize', 'RejectDetail'], 'HRESULT'), 'WinBioCaptureSampleWithCallback': (5, ['WINBIO_SESSION_HANDLE', 'WINBIO_BIR_PURPOSE', 'WINBIO_BIR_DATA_FLAGS', 'PWINBIO_CAPTURE_CALLBACK', 'PVOID'], ['SessionHandle', 'Purpose', 'Flags', 'CaptureCallback', 'CaptureCallbackContext'], 'HRESULT'), 'WinBioCloseFramework': (1, ['WINBIO_FRAMEWORK_HANDLE'], ['FrameworkHandle'], 'HRESULT'), 'WinBioCloseSession': (1, ['WINBIO_SESSION_HANDLE'], ['SessionHandle'], 'HRESULT'), 'WinBioControlUnit': (10, ['WINBIO_SESSION_HANDLE', 'WINBIO_UNIT_ID', 'WINBIO_COMPONENT', 'ULONG', 'PUCHAR', 'SIZE_T', 'PUCHAR', 'SIZE_T', 'SIZE_T*', 'ULONG*'], ['SessionHandle', 'UnitId', 'Component', 'ControlCode', 'SendBuffer', 'SendBufferSize', 'ReceiveBuffer', 'ReceiveBufferSize', 'ReceiveDataSize', 'OperationStatus'], 'HRESULT'), 'WinBioControlUnitPrivileged': (10, ['WINBIO_SESSION_HANDLE', 'WINBIO_UNIT_ID', 'WINBIO_COMPONENT', 'ULONG', 'PUCHAR', 'SIZE_T', 'PUCHAR', 'SIZE_T', 'SIZE_T*', 'ULONG*'], ['SessionHandle', 'UnitId', 'Component', 'ControlCode', 'SendBuffer', 'SendBufferSize', 'ReceiveBuffer', 'ReceiveBufferSize', 'ReceiveDataSize', 'OperationStatus'], 'HRESULT'), 'WinBioDeleteTemplate': (4, ['WINBIO_SESSION_HANDLE', 'WINBIO_UNIT_ID', 'WINBIO_IDENTITY*', 'WINBIO_BIOMETRIC_SUBTYPE'], ['SessionHandle', 'UnitId', 'Identity', 'SubFactor'], 'HRESULT'), 'WinBioEnrollBegin': (3, ['WINBIO_SESSION_HANDLE', 'WINBIO_BIOMETRIC_SUBTYPE', 'WINBIO_UNIT_ID'], ['SessionHandle', 'SubFactor', 'UnitId'], 'HRESULT'), 'WinBioEnrollCapture': (2, ['WINBIO_SESSION_HANDLE', 'WINBIO_REJECT_DETAIL*'], ['SessionHandle', 'RejectDetail'], 'HRESULT'), 'WinBioEnrollCaptureWithCallback': (3, ['WINBIO_SESSION_HANDLE', 'PWINBIO_ENROLL_CAPTURE_CALLBACK', 'PVOID'], ['SessionHandle', 'EnrollCallback', 'EnrollCallbackContext'], 'HRESULT'), 'WinBioEnrollCommit': (3, ['WINBIO_SESSION_HANDLE', 'WINBIO_IDENTITY*', 'BOOLEAN*'], ['SessionHandle', 'Identity', 'IsNewTemplate'], 'HRESULT'), 'WinBioEnrollDiscard': (1, ['WINBIO_SESSION_HANDLE'], ['SessionHandle'], 'HRESULT'), 'WinBioEnumBiometricUnits': (3, ['WINBIO_BIOMETRIC_TYPE', 'WINBIO_UNIT_SCHEMA**', 'SIZE_T*'], ['Factor', 'UnitSchemaArray', 'UnitCount'], 'HRESULT'), 'WinBioEnumDatabases': (3, ['WINBIO_BIOMETRIC_TYPE', 'WINBIO_STORAGE_SCHEMA**', 'SIZE_T*'], ['Factor', 'StorageSchemaArray', 'StorageCount'], 'HRESULT'), 'WinBioEnumEnrollments': (5, ['WINBIO_SESSION_HANDLE', 'WINBIO_UNIT_ID', 'WINBIO_IDENTITY*', 'WINBIO_BIOMETRIC_SUBTYPE**', 'SIZE_T*'], ['SessionHandle', 'UnitId', 'Identity', 'SubFactorArray', 'SubFactorCount'], 'HRESULT'), 'WinBioEnumServiceProviders': (3, ['WINBIO_BIOMETRIC_TYPE', 'WINBIO_BSP_SCHEMA**', 'SIZE_T*'], ['Factor', 'BspSchemaArray', 'BspCount'], 'HRESULT'), 'WinBioFree': (1, ['PVOID'], ['Address'], 'HRESULT'), 'WinBioGetCredentialState': (3, ['WINBIO_IDENTITY', 'WINBIO_CREDENTIAL_TYPE', 'WINBIO_CREDENTIAL_STATE*'], ['Identity', 'Type', 'CredentialState'], 'HRESULT'), 'WinBioGetDomainLogonSetting': (2, ['BOOLEAN*', 'PWINBIO_SETTING_SOURCE_TYPE'], ['Value', 'Source'], 'HRESULT'), 'WinBioGetEnabledSetting': (2, ['BOOLEAN*', 'PWINBIO_SETTING_SOURCE_TYPE'], ['Value', 'Source'], 'HRESULT'), 'WinBioGetLogonSetting': (2, ['BOOLEAN*', 'PWINBIO_SETTING_SOURCE_TYPE'], ['Value', 'Source'], 'HRESULT'), 'WinBioGetProperty': (8, ['WINBIO_SESSION_HANDLE', 'WINBIO_PROPERTY_TYPE', 'WINBIO_PROPERTY_ID', 'WINBIO_UNIT_ID', 'WINBIO_IDENTITY*', 'WINBIO_BIOMETRIC_SUBTYPE', 'PVOID*', 'SIZE_T*'], ['SessionHandle', 'PropertyType', 'PropertyId', 'UnitId', 'Identity', 'SubFactor', 'PropertyBuffer', 'PropertyBufferSize'], 'HRESULT'), 'WinBioIdentify': (5, ['WINBIO_SESSION_HANDLE', 'WINBIO_UNIT_ID*', 'WINBIO_IDENTITY*', 'WINBIO_BIOMETRIC_SUBTYPE*', 'WINBIO_REJECT_DETAIL*'], ['SessionHandle', 'UnitId', 'Identity', 'SubFactor', 'RejectDetail'], 'HRESULT'), 'WinBioIdentifyWithCallback': (3, ['WINBIO_SESSION_HANDLE', 'PWINBIO_IDENTIFY_CALLBACK', 'PVOID'], ['SessionHandle', 'IdentifyCallback', 'IdentifyCallbackContext'], 'HRESULT'), 'WinBioLocateSensor': (2, ['WINBIO_SESSION_HANDLE', 'WINBIO_UNIT_ID*'], ['SessionHandle', 'UnitId'], 'HRESULT'), 'WinBioLocateSensorWithCallback': (3, ['WINBIO_SESSION_HANDLE', 'PWINBIO_LOCATE_SENSOR_CALLBACK', 'PVOID'], ['SessionHandle', 'LocateCallback', 'LocateCallbackContext'], 'HRESULT'), 'WinBioLockUnit': (2, ['WINBIO_SESSION_HANDLE', 'WINBIO_UNIT_ID'], ['SessionHandle', 'UnitId'], 'HRESULT'), 'WinBioLogonIdentifiedUser': (1, ['WINBIO_SESSION_HANDLE'], ['SessionHandle'], 'HRESULT'), 'WinBioOpenSession': (7, ['WINBIO_BIOMETRIC_TYPE', 'WINBIO_POOL_TYPE', 'WINBIO_SESSION_FLAGS', 'WINBIO_UNIT_ID*', 'SIZE_T', 'GUID*', 'WINBIO_SESSION_HANDLE*'], ['Factor', 'PoolType', 'Flags', 'UnitArray', 'UnitCount', 'DatabaseId', 'SessionHandle'], 'HRESULT'), 'WinBioRegisterEventMonitor': (4, ['WINBIO_SESSION_HANDLE', 'WINBIO_EVENT_TYPE', 'PWINBIO_EVENT_CALLBACK', 'PVOID'], ['SessionHandle', 'EventMask', 'EventCallback', 'EventCallbackContext'], 'HRESULT'), 'WinBioReleaseFocus': (0, [], [], 'HRESULT'), 'WinBioRemoveAllCredentials': (0, [], [], 'HRESULT'), 'WinBioRemoveAllDomainCredentials': (0, [], [], 'HRESULT'), 'WinBioRemoveCredential': (2, ['WINBIO_IDENTITY', 'WINBIO_CREDENTIAL_TYPE'], ['Identity', 'Type'], 'HRESULT'), 'WinBioSetCredential': (4, ['WINBIO_CREDENTIAL_TYPE', 'PUCHAR', 'SIZE_T', 'WINBIO_CREDENTIAL_FORMAT'], ['Type', 'Credential', 'CredentialSize', 'Format'], 'HRESULT'), 'WinBioUnlockUnit': (2, ['WINBIO_SESSION_HANDLE', 'WINBIO_UNIT_ID'], ['SessionHandle', 'UnitId'], 'HRESULT'), 'WinBioUnregisterEventMonitor': (1, ['WINBIO_SESSION_HANDLE'], ['SessionHandle'], 'HRESULT'), 'WinBioVerify': (6, ['WINBIO_SESSION_HANDLE', 'WINBIO_IDENTITY*', 'WINBIO_BIOMETRIC_SUBTYPE', 'WINBIO_UNIT_ID*', 'BOOLEAN*', 'WINBIO_REJECT_DETAIL*'], ['SessionHandle', 'Identity', 'SubFactor', 'UnitId', 'Match', 'RejectDetail'], 'HRESULT'), 'WinBioVerifyWithCallback': (5, ['WINBIO_SESSION_HANDLE', 'WINBIO_IDENTITY*', 'WINBIO_BIOMETRIC_SUBTYPE', 'PWINBIO_VERIFY_CALLBACK', 'PVOID'], ['SessionHandle', 'Identity', 'SubFactor', 'VerifyCallback', 'VerifyCallbackContext'], 'HRESULT'), 'WinBioWait': (1, ['WINBIO_SESSION_HANDLE'], ['SessionHandle'], 'HRESULT')}

dict5_winhttp = {'WinHttpAddRequestHeaders': (4, ['HINTERNET', 'LPCWSTR', 'DWORD', 'WINHTTPADDREQFLAG'], ['hRequest', 'pwszHeaders', 'dwHeadersLength', 'dwModifiers'], 'BOOL'), 'WinHttpCheckPlatform': (0, [], [], 'BOOL'), 'WinHttpCloseHandle': (1, ['HINTERNET'], ['hInternet'], 'BOOL'), 'WinHttpConnect': (4, ['HINTERNET', 'LPCWSTR', 'INTERNET_PORT', 'DWORD'], ['hSession', 'pswzServerName', 'nServerPort', 'dwReserved'], 'HINTERNET'), 'WinHttpCrackUrl': (4, ['LPCWSTR', 'DWORD', 'INTERNETCRACKURLFLAGS', 'LPURL_COMPONENTSW'], ['pwszUrl', 'dwUrlLength', 'dwFlags', 'lpUrlComponents'], 'BOOL'), 'WinHttpCreateProxyResolver': (2, ['HINTERNET', 'HINTERNET*'], ['hSession', 'phResolver'], '[ERROR_CODE]'), 'WinHttpCreateUrl': (4, ['LPURL_COMPONENTSW', 'INTERNETCRACKURLFLAGS', 'LPWSTR', 'LPDWORD'], ['lpUrlComponents', 'dwFlags', 'pwszUrl', 'lpdwUrlLength'], 'BOOL'), 'WinHttpDetectAutoProxyConfigUrl': (2, ['DWORD', 'LPWSTR*'], ['dwAutoDetectFlags', 'ppwszAutoConfigUrl'], 'BOOL'), 'WinHttpFreeProxyResult': (1, ['WINHTTP_PROXY_RESULT*'], ['pProxyResult'], 'VOID'), 'WinHttpGetDefaultProxyConfiguration': (1, ['WINHTTP_PROXY_INFO*'], ['pProxyInfo'], 'BOOL'), 'WinHttpGetIEProxyConfigForCurrentUser': (1, ['WINHTTP_CURRENT_USER_IE_PROXY_CONFIG*'], ['pProxyConfig'], 'BOOL'), 'WinHttpGetProxyForUrl': (4, ['HINTERNET', 'LPCWSTR', 'WINHTTP_AUTOPROXY_OPTIONS*', 'WINHTTP_PROXY_INFO*'], ['hSession', 'lpcwszUrl', 'pAutoProxyOptions', 'pProxyInfo'], 'BOOL'), 'WinHttpGetProxyForUrlEx': (4, ['HINTERNET', 'PCWSTR', 'WINHTTP_AUTOPROXY_OPTIONS*', 'DWORD_PTR'], ['hResolver', 'pcwszUrl', 'pAutoProxyOptions', 'pContext'], '[ERROR_CODE]'), 'WinHttpGetProxyResult': (2, ['HINTERNET', 'WINHTTP_PROXY_RESULT*'], ['hResolver', 'pProxyResult'], '[ERROR_CODE]'), 'WinHttpOpen': (5, ['LPCWSTR', 'HTTPOPENACCESSTYPE', 'LPCWSTR', 'LPCWSTR', 'WINHTTPOPENFLAGS'], ['pwszUserAgent', 'dwAccessType', 'pwszProxyName', 'pwszProxyBypass', 'dwFlags'], 'HINTERNET'), 'WinHttpOpenRequest': (7, ['HINTERNET', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR', 'LPCWSTR*', 'WINHTTPOPENREQUESTFLAGS'], ['hConnect', 'pwszVerb', 'pwszObjectName', 'pwszVersion', 'pwszReferrer', 'ppwszAcceptTypes', 'dwFlags'], 'HINTERNET'), 'WinHttpQueryAuthSchemes': (4, ['HINTERNET', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hRequest', 'lpdwSupportedSchemes', 'lpdwFirstScheme', 'pdwAuthTarget'], 'BOOL'), 'WinHttpQueryDataAvailable': (2, ['HINTERNET', 'LPDWORD'], ['hRequest', 'lpdwNumberOfBytesAvailable'], 'BOOL'), 'WinHttpQueryHeaders': (6, ['HINTERNET', 'WINHTTPQUERYLEVELFLAGS', 'LPCWSTR', 'LPVOID', 'LPDWORD', 'LPDWORD'], ['hRequest', 'dwInfoLevel', 'pwszName', 'lpBuffer', 'lpdwBufferLength', 'lpdwIndex'], 'BOOL'), 'WinHttpQueryOption': (4, ['HINTERNET', 'WINHTTPOPTION', 'LPVOID', 'LPDWORD'], ['hInternet', 'dwOption', 'lpBuffer', 'lpdwBufferLength'], 'BOOL'), 'WinHttpReadData': (4, ['HINTERNET', 'LPVOID', 'DWORD', 'LPDWORD'], ['hRequest', 'lpBuffer', 'dwNumberOfBytesToRead', 'lpdwNumberOfBytesRead'], 'BOOL'), 'WinHttpReceiveResponse': (2, ['HINTERNET', 'LPVOID'], ['hRequest', 'lpReserved'], 'BOOL'), 'WinHttpResetAutoProxy': (2, ['HINTERNET', 'DWORD'], ['hSession', 'dwFlags'], '[ERROR_CODE]'), 'WinHttpSendRequest': (7, ['HINTERNET', 'LPCWSTR', 'DWORD', 'LPVOID', 'DWORD', 'DWORD', 'DWORD_PTR'], ['hRequest', 'pwszHeaders', 'dwHeadersLength', 'lpOptional', 'dwOptionalLength', 'dwTotalLength', 'dwContext'], 'BOOL'), 'WinHttpSetCredentials': (6, ['HINTERNET', 'DWORD', 'DWORD', 'LPCWSTR', 'LPCWSTR', 'LPVOID'], ['hRequest', 'AuthTargets', 'AuthScheme', 'pwszUserName', 'pwszPassword', 'pAuthParams'], 'BOOL'), 'WinHttpSetDefaultProxyConfiguration': (1, ['WINHTTP_PROXY_INFO*'], ['pProxyInfo'], 'BOOL'), 'WinHttpSetOption': (4, ['HINTERNET', 'WINHTTPOPTION', 'LPVOID', 'DWORD'], ['hInternet', 'dwOption', 'lpBuffer', 'dwBufferLength'], 'BOOL'), 'WinHttpSetStatusCallback': (4, ['HINTERNET', 'WINHTTP_STATUS_CALLBACK', 'CALLBACKNOTIFICATIONFLAGS', 'DWORD_PTR'], ['hInternet', 'lpfnInternetCallback', 'dwNotificationFlags', 'dwReserved'], 'WINHTTP_STATUS_CALLBACK'), 'WinHttpSetTimeouts': (5, ['HINTERNET', 'INT', 'INT', 'INT', 'INT'], ['hInternet', 'dwResolveTimeout', 'dwConnectTimeout', 'dwSendTimeout', 'dwReceiveTimeout'], 'BOOL'), 'WinHttpTimeFromSystemTime': (2, ['SYSTEMTIME*', 'LPWSTR'], ['pst', 'pwszTime'], 'BOOL'), 'WinHttpTimeToSystemTime': (2, ['LPCWSTR', 'SYSTEMTIME*'], ['pwszTime', 'pst'], 'BOOL'), 'WinHttpWriteData': (4, ['HINTERNET', 'LPCVOID', 'DWORD', 'LPDWORD'], ['hRequest', 'lpBuffer', 'dwNumberOfBytesToWrite', 'lpdwNumberOfBytesWritten'], 'BOOL'), 'WinHttpWebSocketClose': (4, ['HINTERNET', 'WINHTTP_WEB_SOCKET_CLOSE_STATUS', 'PVOID', 'DWORD'], ['hWebSocket', 'usStatus', 'pvReason', 'dwReasonLength'], '[ERROR_CODE]'), 'WinHttpWebSocketCompleteUpgrade': (2, ['HINTERNET', 'DWORD_PTR'], ['hRequest', 'pContext'], 'HINTERNET'), 'WinHttpWebSocketQueryCloseStatus': (5, ['HINTERNET', 'WINHTTP_WEB_SOCKET_CLOSE_STATUS*', 'PVOID', 'DWORD', 'DWORD*'], ['hWebSocket', 'pusStatus', 'pvReason', 'dwReasonLength', 'pdwReasonLengthConsumed'], '[ERROR_CODE]'), 'WinHttpWebSocketReceive': (5, ['HINTERNET', 'PVOID', 'DWORD', 'DWORD*', 'WINHTTP_WEB_SOCKET_BUFFER_TYPE*'], ['hWebSocket', 'pvBuffer', 'dwBufferLength', 'pdwBytesRead', 'peBufferType'], '[ERROR_CODE]'), 'WinHttpWebSocketSend': (4, ['HINTERNET', 'WINHTTP_WEB_SOCKET_BUFFER_TYPE', 'PVOID', 'DWORD'], ['hWebSocket', 'eBufferType', 'pvBuffer', 'dwBufferLength'], '[ERROR_CODE]'), 'WinHttpWebSocketShutdown': (4, ['HINTERNET', 'WINHTTP_WEB_SOCKET_CLOSE_STATUS', 'PVOID', 'DWORD'], ['hWebSocket', 'usStatus', 'pvReason', 'dwReasonLength'], '[ERROR_CODE]')}

dict5_winspool = {'AddJob': (5, ['HANDLE', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hPrinter', 'Level', 'pData', 'cbBuf', 'pcbNeeded'], 'BOOL'), 'AddMonitor': (3, ['LPTSTR', 'DWORD', 'LPBYTE'], ['pName', 'Level', 'pMonitors'], 'BOOL'), 'AddPrinter': (3, ['LPTSTR*', 'DWORD', 'LPBYTE'], ['pName', 'Level', 'pPrinter'], 'HANDLE'), 'AddPrinterConnection': (1, ['LPTSTR'], ['pName'], 'BOOL'), 'AddPrinterConnection2': (4, ['HWND', 'LPCTSTR', 'DWORD', 'PVOID'], ['hWnd', 'pszName', 'dwLevel', 'pConnectionInfo'], 'BOOL'), 'AddPrinterDriver': (3, ['LPTSTR', 'DWORD', 'LPBYTE'], ['pName', 'Level', 'pDriverInfo'], 'BOOL'), 'AddPrinterDriverEx': (4, ['LPTSTR', 'DWORD', 'LPBYTE', 'DWORD'], ['pName', 'Level', 'pDriverInfo', 'dwFileCopyFlags'], 'BOOL'), 'AddPrintProcessor': (4, ['LPTSTR', 'LPTSTR', 'LPTSTR', 'LPTSTR'], ['pName', 'pEnvironment', 'pPathName', 'pPrintProcessorName'], 'BOOL'), 'AddPrintProvidor': (3, ['LPTSTR', 'DWORD', 'LPBYTE'], ['pName', 'Level', 'pProviderInfo'], 'BOOL'), 'ConfigurePort': (3, ['LPTSTR', 'HWND', 'LPTSTR'], ['pName', 'hWnd', 'pPortName'], 'BOOL'), 'DeleteForm': (2, ['HANDLE', 'LPTSTR'], ['hPrinter', 'pFormName'], 'BOOL'), 'DeleteMonitor': (3, ['LPTSTR', 'LPTSTR', 'LPTSTR'], ['pName', 'pEnvironment', 'pMonitorName'], 'BOOL'), 'DeletePort': (3, ['LPTSTR', 'HWND', 'LPTSTR'], ['pName', 'hWnd', 'pPortName'], 'BOOL'), 'DeletePrinterConnection': (1, ['LPTSTR'], ['pName'], 'BOOL'), 'DeletePrinterData': (2, ['HANDLE', 'LPTSTR'], ['hPrinter', 'pValueName'], '[ERROR_CODE]'), 'DeletePrinterDataEx': (3, ['HANDLE', 'LPCTSTR', 'LPCTSTR'], ['hPrinter', 'pKeyName', 'pValueName'], '[ERROR_CODE]'), 'DeletePrinterDriver': (3, ['LPTSTR', 'LPTSTR', 'LPTSTR'], ['pName', 'pEnvironment', 'pDriverName'], 'BOOL'), 'DeletePrinterDriverEx': (5, ['LPTSTR', 'LPTSTR', 'LPTSTR', 'DWORD', 'DWORD'], ['pName', 'pEnvironment', 'pDriverName', 'dwDeleteFlag', 'dwVersionFlag'], 'BOOL'), 'DeletePrinterKey': (2, ['HANDLE', 'LPCTSTR'], ['hPrinter', 'pKeyName'], '[ERROR_CODE]'), 'DeletePrintProcessor': (3, ['LPTSTR', 'LPTSTR', 'LPTSTR'], ['pName', 'pEnvironment', 'pPrintProcessorName'], 'BOOL'), 'DeletePrintProvidor': (3, ['LPTSTR', 'LPTSTR', 'LPTSTR'], ['pName', 'pEnvironment', 'pPrintProviderName'], 'BOOL'), 'EnumForms': (6, ['HANDLE', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['hPrinter', 'Level', 'pForm', 'cbBuf', 'pcbNeeded', 'pcReturned'], 'BOOL'), 'EnumJobs': (8, ['HANDLE', 'DWORD', 'DWORD', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['hPrinter', 'FirstJob', 'NoJobs', 'Level', 'pJob', 'cbBuf', 'pcbNeeded', 'pcReturned'], 'BOOL'), 'EnumMonitors': (6, ['LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['pName', 'Level', 'pMonitors', 'cbBuf', 'pcbNeeded', 'pcReturned'], 'BOOL'), 'EnumPorts': (6, ['LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['pName', 'Level', 'pPorts', 'cbBuf', 'pcbNeeded', 'pcReturned'], 'BOOL'), 'EnumPrinterData': (9, ['HANDLE', 'DWORD', 'LPTSTR', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hPrinter', 'dwIndex', 'pValueName', 'cbValueName', 'pcbValueName', 'pType', 'pData', 'cbData', 'pcbData'], '[ERROR_CODE]'), 'EnumPrinterDataEx': (6, ['HANDLE', 'LPCTSTR', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['hPrinter', 'pKeyName', 'pEnumValues', 'cbEnumValues', 'pcbEnumValues', 'pnEnumValues'], '[ERROR_CODE]'), 'EnumPrinterDrivers': (7, ['LPTSTR', 'LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['pName', 'pEnvironment', 'Level', 'pDriverInfo', 'cbBuf', 'pcbNeeded', 'pcReturned'], 'BOOL'), 'EnumPrinterKey': (5, ['HANDLE', 'LPCTSTR', 'LPTSTR', 'DWORD', 'LPDWORD'], ['hPrinter', 'pKeyName', 'pSubkey', 'cbSubkey', 'pcbSubkey'], '[ERROR_CODE]'), 'EnumPrinters': (7, ['ENUMPRINTERSFLAGS', 'LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['Flags', 'Name', 'Level', 'pPrinterEnum', 'cbBuf', 'pcbNeeded', 'pcReturned'], 'BOOL'), 'EnumPrintProcessorDatatypes': (7, ['LPTSTR', 'LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['pName', 'pPrintProcessorName', 'Level', 'pDatatypes', 'cbBuf', 'pcbNeeded', 'pcReturned'], 'BOOL'), 'EnumPrintProcessors': (7, ['LPTSTR', 'LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['pName', 'pEnvironment', 'Level', 'pPrintProcessorInfo', 'cbBuf', 'pcbNeeded', 'pcReturned'], 'BOOL'), 'FlushPrinter': (5, ['HANDLE', 'LPVOID', 'DWORD', 'LPDWORD', 'DWORD'], ['hPrinter', 'pBuf', 'cbBuf', 'pcWritten', 'cSleep'], 'BOOL'), 'GetForm': (6, ['HANDLE', 'LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hPrinter', 'pFormName', 'Level', 'pForm', 'cbBuf', 'pcbNeeded'], 'BOOL'), 'GetJob': (6, ['HANDLE', 'DWORD', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hPrinter', 'JobId', 'Level', 'pJob', 'cbBuf', 'pcbNeeded'], 'BOOL'), 'GetPrinter': (5, ['HANDLE', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hPrinter', 'Level', 'pPrinter', 'cbBuf', 'pcbNeeded'], 'BOOL'), 'GetPrinterData': (6, ['HANDLE', 'LPTSTR', 'REGTYPE*', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hPrinter', 'pValueName', 'pType', 'pData', 'nSize', 'pcbNeeded'], '[ERROR_CODE]'), 'GetPrinterDataEx': (7, ['HANDLE', 'LPCTSTR', 'LPCTSTR', 'REGTYPE*', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hPrinter', 'pKeyName', 'pValueName', 'pType', 'pData', 'nSize', 'pcbNeeded'], '[ERROR_CODE]'), 'GetPrinterDriver': (6, ['HANDLE', 'LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hPrinter', 'pEnvironment', 'Level', 'pDriverInfo', 'cbBuf', 'pcbNeeded'], 'BOOL'), 'GetPrinterDriverDirectory': (6, ['LPTSTR', 'LPTSTR', 'DWORD', 'LPWSTR', 'DWORD', 'LPDWORD'], ['pName', 'pEnvironment', 'Level', 'pDriverDirectory', 'cbBuf', 'pcbNeeded'], 'BOOL'), 'GetPrintProcessorDirectory': (6, ['LPTSTR', 'LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD'], ['pName', 'pEnvironment', 'Level', 'pPrintProcessorInfo', 'cbBuf', 'pcbNeeded'], 'BOOL'), 'OpenPrinter': (3, ['LPTSTR', 'LPHANDLE', 'LPPRINTER_DEFAULTS'], ['pPrinterName', 'phPrinter', 'pDefault'], 'BOOL'), 'ResetPrinter': (2, ['HANDLE', 'LPPRINTER_DEFAULTS'], ['hPrinter', 'pDefault'], 'BOOL'), 'StartDocPrinter': (3, ['HANDLE', 'DWORD', 'LPBYTE'], ['hPrinter', 'Level', 'pDocInfo'], 'DWORD'), 'SetForm': (4, ['HANDLE', 'LPTSTR', 'DWORD', 'LPTSTR'], ['hPrinter', 'pFormName', 'Level', 'pForm'], 'BOOL'), 'SetJob': (5, ['HANDLE', 'DWORD', 'DWORD', 'LPBYTE', 'JOBCONTROL'], ['hPrinter', 'JobId', 'Level', 'pJob', 'Command'], 'BOOL'), 'SetPort': (4, ['LPTSTR', 'LPTSTR', 'DWORD', 'LPBYTE'], ['pName', 'pPortName', 'dwLevel', 'pPortInfo'], 'BOOL'), 'SetPrinter': (4, ['HANDLE', 'DWORD', 'LPBYTE', 'PRINTERCONTROL'], ['hPrinter', 'Level', 'pPrinter', 'Command'], 'BOOL'), 'SetPrinterData': (5, ['HANDLE', 'LPTSTR', 'REGTYPE', 'LPBYTE', 'DWORD'], ['hPrinter', 'pValueName', 'Type', 'pData', 'cbData'], '[ERROR_CODE]'), 'SetPrinterDataEx': (6, ['HANDLE', 'LPCTSTR', 'LPCTSTR', 'REGTYPE', 'LPBYTE', 'DWORD'], ['hPrinter', 'pKeyName', 'pValueName', 'Type', 'pData', 'cbData'], '[ERROR_CODE]'), 'DeviceCapabilities': (5, ['LPCTSTR', 'LPCTSTR', 'DEVICECAPABILITY', 'LPTSTR', 'CONST DEVMODE*'], ['pDevice', 'pPort', 'fwCapability', 'pOutput', 'pDevMode'], 'DWORD'), 'CorePrinterDriverInstalled': (6, ['LPCTSTR', 'LPCTSTR', 'GUID', 'FILETIME', 'DWORDLONG', 'BOOL*'], ['pszServer', 'pszEnvironment', 'CoreDriverGUID', 'ftDriverDate', 'dwlDriverVersion', 'pbDriverInstalled'], 'HRESULT'), 'DeletePrinterDriverPackage': (3, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR'], ['pszServer', 'pszInfPath', 'pszEnvironment'], 'HRESULT'), 'GetCorePrinterDrivers': (5, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'DWORD', 'PCORE_PRINTER_DRIVER'], ['pszServer', 'pszEnvironment', 'pszzCoreDriverDependencies', 'cCorePrinterDrivers', 'pCorePrinterDrivers'], 'HRESULT'), 'GetPrinterDriverPackagePath': (7, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPTSTR', 'DWORD', 'LPDWORD'], ['pszServer', 'pszEnvironment', 'pszLanguage', 'pszPackageID', 'pszDriverPackageCab', 'cchDriverPackageCab', 'pcchRequiredSize'], 'HRESULT'), 'InstallPrinterDriverFromPackage': (5, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'DWORD'], ['pszServer', 'pszInfPath', 'pszDriverName', 'pszEnvironment', 'dwFlags'], 'HRESULT'), 'UploadPrinterDriverPackage': (7, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'DWORD', 'HWND', 'LPTSTR', 'PULONG'], ['pszServer', 'pszInfPath', 'pszEnvironment', 'dwFlags', 'hwnd', 'pszDestInfPath', 'pcchDestInfPath'], 'HRESULT'), 'AbortPrinter': (1, ['HANDLE'], ['hPrinter'], 'BOOL'), 'AddForm': (3, ['HANDLE', 'DWORD', 'LPBYTE'], ['hPrinter', 'Level', 'pForm'], 'BOOL'), 'AddPort': (3, ['LPTSTR', 'HWND', 'LPTSTR'], ['pName', 'hWnd', 'pMonitorName'], 'BOOL'), 'AdvancedDocumentProperties': (5, ['HWND', 'HANDLE', 'LPTSTR', 'PDEVMODE', 'PDEVMODE'], ['hWnd', 'hPrinter', 'pDeviceName', 'pDevModeOutput', 'pDevModeInput'], 'LONG'), 'ClosePrinter': (1, ['HANDLE'], ['hPrinter'], 'BOOL'), 'ConnectToPrinterDlg': (2, ['HWND', 'DWORD'], ['hwnd', 'Flags'], 'HANDLE'), 'CreatePrintAsyncNotifyChannel': (6, ['LPCWSTR', 'PRINTASYNCNOTIFICATIONTYPE*', 'PRINTASYNCNOTIFYUSERFILTER', 'PRINTASYNCNOTIFYCONVERSATIONSTYLE', 'IPRINTASYNCNOTIFYCALLBACK*', 'IPRINTASYNCNOTIFYCHANNEL**'], ['pName', 'pSchema', 'filter', 'directionality', 'pCallback', 'ppChannel'], 'HRESULT'), 'DeletePrinter': (1, ['HANDLE'], ['hPrinter'], 'BOOL'), 'DocumentProperties': (6, ['HWND', 'HANDLE', 'LPTSTR', 'PDEVMODE', 'PDEVMODE', 'DOCUMENTMODE'], ['hWnd', 'hPrinter', 'pDeviceName', 'pDevModeOutput', 'pDevModeInput', 'fMode'], 'LONG'), 'EndDocPrinter': (1, ['HANDLE'], ['hPrinter'], 'BOOL'), 'EndPagePrinter': (1, ['HANDLE'], ['hPrinter'], 'BOOL'), 'FindClosePrinterChangeNotification': (1, ['HANDLE'], ['hChange'], 'BOOL'), 'FindFirstPrinterChangeNotification': (4, ['HANDLE', 'PRINTERCHANGEFLAGS', 'DWORD', 'PPRINTER_NOTIFY_OPTIONS'], ['hPrinter', 'fdwFilter', 'fdwOptions', 'pPrinterNotifyOptions'], 'HANDLE'), 'FindNextPrinterChangeNotification': (4, ['HANDLE', 'PRINTERCHANGEFLAGS*', 'PPRINTER_NOTIFY_OPTIONS', 'LPVOID*'], ['hChange', 'pdwChange', 'pPrinterNotifyOptions', 'ppPrinterNotifyInfo'], 'BOOL'), 'FreePrinterNotifyInfo': (1, ['PPRINTER_NOTIFY_INFO'], ['pPrinterNotifyInfo'], 'BOOL'), 'GetDefaultPrinter': (2, ['LPTSTR', 'LPDWORD'], ['pszBuffer', 'pcchBuffer'], 'BOOL'), 'GetPrinterDriver2': (7, ['HWND', 'HANDLE', 'LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hWnd', 'hPrinter', 'pEnvironment', 'Level', 'pDriverInfo', 'cbBuf', 'pcbNeeded'], 'BOOL'), 'OpenPrinter2': (4, ['LPCTSTR', 'LPHANDLE', 'LPPRINTER_DEFAULTS', 'PPRINTER_OPTIONS'], ['pPrinterName', 'phPrinter', 'pDefault', 'pOptions'], 'BOOL'), 'PrinterProperties': (2, ['HWND', 'HANDLE'], ['hWnd', 'hPrinter'], 'BOOL'), 'ReadPrinter': (4, ['HANDLE', 'LPVOID', 'DWORD', 'LPDWORD'], ['hPrinter', 'pBuf', 'cbBuf', 'pNoBytesRead'], 'BOOL'), 'RegisterForPrintAsyncNotifications': (6, ['LPCWSTR', 'PRINTASYNCNOTIFICATIONTYPE*', 'PRINTASYNCNOTIFYUSERFILTER', 'PRINTASYNCNOTIFYCONVERSATIONSTYLE', 'IPRINTASYNCNOTIFYCALLBACK*', 'HANDLE*'], ['pName', 'pSchema', 'filter', 'directionality', 'pCallback', 'pRegistrationHandler'], 'HRESULT'), 'ReportJobProcessingProgress': (4, ['HANDLE', 'ULONG', 'EPRINTXPSJOBOPERATION', 'EPRINTXPSJOBPROGRESS'], ['printerHandle', 'jobId', 'jobOperation', 'jobProgress'], 'HRESULT'), 'ScheduleJob': (2, ['HANDLE', 'DWORD'], ['hPrinter', 'dwJobID'], 'BOOL'), 'SetDefaultPrinter': (1, ['LPCTSTR'], ['pszPrinter'], 'BOOL'), 'StartPagePrinter': (1, ['HANDLE'], ['hPrinter'], 'BOOL'), 'UnRegisterForPrintAsyncNotifications': (1, ['HANDLE'], ['hRegistrationHandler'], 'HRESULT'), 'WritePrinter': (4, ['HANDLE', 'LPVOID', 'DWORD', 'LPDWORD'], ['hPrinter', 'pBuf', 'cbBuf', 'pcWritten'], 'BOOL')}

dict5_wlanapi = {'WlanAllocateMemory': (1, ['DWORD'], ['dwMemorySize'], 'PVOID'), 'WlanCloseHandle': (2, ['HANDLE', 'PVOID'], ['hClientHandle', 'pReserved'], '[ERROR_CODE]'), 'WlanConnect': (4, ['HANDLE', 'CONST GUID*', 'CONST PWLAN_CONNECTION_PARAMETERS', 'PVOID'], ['hClientHandle', 'pInterfaceGuid', 'pConnectionParameters', 'pReserved'], '[ERROR_CODE]'), 'WlanDeleteProfile': (4, ['HANDLE', 'CONST GUID*', 'LPCWSTR', 'PVOID'], ['hClientHandle', 'pInterfaceGuid', 'strProfileName', 'pReserved'], '[ERROR_CODE]'), 'WlanDisconnect': (3, ['HANDLE', 'CONST GUID*', 'PVOID'], ['hClientHandle', 'pInterfaceGuid', 'pReserved'], '[ERROR_CODE]'), 'WlanEnumInterfaces': (3, ['HANDLE', 'PVOID', 'PWLAN_INTERFACE_INFO_LIST*'], ['hClientHandle', 'pReserved', 'ppInterfaceList'], '[ERROR_CODE]'), 'WlanExtractPsdIEDataList': (6, ['HANDLE', 'DWORD', 'CONST PBYTE', 'LPCWSTR', 'PVOID', 'PWLAN_RAW_DATA_LIST*'], ['hClientHandle', 'dwIeDataSize', 'pRawIeData', 'strFormat', 'pReserved', 'ppPsdIEDataList'], '[ERROR_CODE]'), 'WlanFreeMemory': (1, ['PVOID'], ['pMemory'], 'VOID'), 'WlanGetAvailableNetworkList': (5, ['HANDLE', 'CONST GUID*', 'WLANAVAILABLEFLAGS', 'PVOID', 'PWLAN_AVAILABLE_NETWORK_LIST*'], ['hClientHandle', 'pInterfaceGuid', 'dwFlags', 'pReserved', 'ppAvailableNetworkList'], '[ERROR_CODE]'), 'WlanGetFilterList': (4, ['HANDLE', 'WLAN_FILTER_LIST_TYPE', 'PVOID', 'PDOT11_NETWORK_LIST*'], ['hClientHandle', 'wlanFilterListType', 'pReserved', 'ppNetworkList'], '[ERROR_CODE]'), 'WlanGetInterfaceCapability': (4, ['HANDLE', 'CONST GUID*', 'PVOID', 'PWLAN_INTERFACE_CAPABILITY*'], ['hClientHandle', 'pInterfaceGuid', 'pReserved', 'ppCapability'], '[ERROR_CODE]'), 'WlanGetNetworkBssList': (7, ['HANDLE', 'CONST GUID*', 'CONST PDOT11_SSID', 'DOT11_BSS_TYPE', 'BOOL', 'PVOID', 'PWLAN_BSS_LIST*'], ['hClientHandle', 'pInterfaceGuid', 'pDot11Ssid', 'dot11BssType', 'bSecurityEnabled', 'pReserved', 'ppWlanBssList'], '[ERROR_CODE]'), 'WlanGetProfile': (7, ['HANDLE', 'CONST GUID*', 'LPCWSTR', 'PVOID', 'LPWSTR*', 'WLANPROFILEFLAGS*', 'WLANACCESS*'], ['hClientHandle', 'pInterfaceGuid', 'strProfileName', 'pReserved', 'pstrProfileXml', 'pdwFlags', 'pdwGrantedAccess'], '[ERROR_CODE]'), 'WlanGetProfileCustomUserData': (6, ['HANDLE', 'CONST GUID*', 'LPCWSTR', 'PVOID', 'DWORD*', 'PBYTE*'], ['hClientHandle', 'pInterfaceGuid', 'strProfileName', 'pReserved', 'pdwDataSize', 'ppData'], '[ERROR_CODE]'), 'WlanGetProfileList': (4, ['HANDLE', 'CONST GUID*', 'PVOID', 'PWLAN_PROFILE_INFO_LIST*'], ['hClientHandle', 'pInterfaceGuid', 'pReserved', 'ppProfileList'], '[ERROR_CODE]'), 'WlanGetSecuritySettings': (5, ['HANDLE', 'WLAN_SECURABLE_OBJECT', 'PWLAN_OPCODE_VALUE_TYPE', 'LPWSTR*', 'WLANACCESS*'], ['hClientHandle', 'SecurableObject', 'pValueType', 'pstrCurrentSDDL', 'pdwGrantedAccess'], '[ERROR_CODE]'), 'WlanIhvControl': (8, ['HANDLE', 'CONST GUID*', 'WLAN_IHV_CONTROL_TYPE', 'DWORD', 'PVOID', 'DWORD', 'PVOID', 'PDWORD'], ['hClientHandle', 'pInterfaceGuid', 'Type', 'dwInBufferSize', 'pInBuffer', 'dwOutBufferSize', 'pOutBuffer', 'pdwBytesReturned'], '[ERROR_CODE]'), 'WlanOpenHandle': (4, ['DWORD', 'PVOID', 'PDWORD', 'PHANDLE'], ['dwClientVersion', 'pReserved', 'pdwNegotiatedVersion', 'phClientHandle'], '[ERROR_CODE]'), 'WlanQueryAutoConfigParameter': (6, ['HANDLE', 'WLAN_AUTOCONF_OPCODE', 'PVOID', 'PDWORD', 'PVOID', 'PWLAN_OPCODE_VALUE_TYPE'], ['hClientHandle', 'OpCode', 'pReserved', 'pdwDataSize', 'ppData', 'pWlanOpcodeValueType'], '[ERROR_CODE]'), 'WlanQueryInterface': (7, ['HANDLE', 'CONST GUID*', 'WLAN_INTF_OPCODE', 'PVOID', 'PDWORD', 'PVOID*', 'PWLAN_OPCODE_VALUE_TYPE'], ['hClientHandle', 'pInterfaceGuid', 'OpCode', 'pReserved', 'pdwDataSize', 'ppData', 'pWlanOpcodeValueType'], '[ERROR_CODE]'), 'WlanReasonCodeToString': (4, ['DWORD', 'DWORD', 'PWCHAR', 'PVOID'], ['dwReasonCode', 'dwBufferSize', 'pStringBuffer', 'pReserved'], '[ERROR_CODE]'), 'WlanRegisterNotification': (7, ['HANDLE', 'WLANNOTIFICATIONSOURCE', 'BOOL', 'WLAN_NOTIFICATION_CALLBACK', 'PVOID', 'PVOID', 'WLANNOTIFICATIONSOURCE*'], ['hClientHandle', 'dwNotifSource', 'bIgnoreDuplicate', 'funcCallback', 'pCallbackContext', 'pReserved', 'pdwPrevNotifSource'], '[ERROR_CODE]'), 'WlanRenameProfile': (5, ['HANDLE', 'CONST GUID*', 'LPCWSTR', 'LPCWSTR', 'PVOID'], ['hClientHandle', 'pInterfaceGuid', 'strOldProfileName', 'strNewProfileName', 'pReserved'], '[ERROR_CODE]'), 'WlanSaveTemporaryProfile': (7, ['HANDLE', 'CONST GUID*', 'LPCWSTR', 'LPCWSTR', 'WLANPROFILEFLAGS', 'BOOL', 'PVOID'], ['hClientHandle', 'pInterfaceGuid', 'strProfileName', 'strAllUserProfileSecurity', 'dwFlags', 'bOverWrite', 'pReserved'], '[ERROR_CODE]'), 'WlanScan': (5, ['HANDLE', 'CONST GUID*', 'CONST PDOT11_SSID', 'CONST PWLAN_RAW_DATA', 'PVOID'], ['hClientHandle', 'pInterfaceGuid', 'pDot11Ssid', 'pIeData', 'pReserved'], '[ERROR_CODE]'), 'WlanSetAutoConfigParameter': (5, ['HANDLE', 'WLAN_AUTOCONF_OPCODE', 'DWORD', 'CONST PVOID', 'PVOID'], ['hClientHandle', 'OpCode', 'dwDataSize', 'pData', 'pReserved'], '[ERROR_CODE]'), 'WlanSetFilterList': (4, ['HANDLE', 'WLAN_FILTER_LIST_TYPE', 'CONST PDOT11_NETWORK_LIST', 'PVOID'], ['hClientHandle', 'wlanFilterListType', 'pNetworkList', 'pReserved'], '[ERROR_CODE]'), 'WlanSetInterface': (6, ['HANDLE', 'CONST GUID*', 'WLAN_INTF_OPCODE', 'DWORD', 'CONST PVOID', 'PVOID'], ['hClientHandle', 'pInterfaceGuid', 'OpCode', 'dwDataSize', 'pData', 'pReserved'], '[ERROR_CODE]'), 'WlanSetProfile': (8, ['HANDLE', 'CONST GUID*', 'DWORD', 'LPCWSTR', 'LPCWSTR', 'BOOL', 'PVOID', 'DWORD*'], ['hClientHandle', 'pInterfaceGuid', 'dwFlags', 'strProfileXml', 'strAllUserProfileSecurity', 'bOverwrite', 'pReserved', 'pdwReasonCode'], '[ERROR_CODE]'), 'WlanSetProfileCustomUserData': (6, ['HANDLE', 'CONST GUID*', 'LPCWSTR', 'DWORD', 'CONST PBYTE', 'PVOID'], ['hClientHandle', 'pInterfaceGuid', 'strProfileName', 'dwDataSize', 'pData', 'pReserved'], '[ERROR_CODE]'), 'WlanSetProfileEapUserData': (8, ['HANDLE', 'CONST GUID*', 'LPCWSTR', 'EAP_METHOD_TYPE', 'DWORD', 'DWORD', 'CONST LPBYTE', 'PVOID'], ['hClientHandle', 'pInterfaceGuid', 'strProfileName', 'eapType', 'dwFlags', 'dwEapUserDataSize', 'pbEapUserData', 'pReserved'], '[ERROR_CODE]'), 'WlanSetProfileEapXmlUserData': (6, ['HANDLE', 'CONST GUID*', 'LPCWSTR', 'DWORD', 'LPCWSTR', 'PVOID'], ['hClientHandle', 'pInterfaceGuid', 'strProfileName', 'dwFlags', 'strEapXmlUserData', 'pReserved'], '[ERROR_CODE]'), 'WlanSetProfileList': (5, ['HANDLE', 'CONST GUID*', 'DWORD', 'LPCWSTR*', 'PVOID'], ['hClientHandle', 'pInterfaceGuid', 'dwItems', 'strProfileNames', 'pReserved'], '[ERROR_CODE]'), 'WlanSetProfilePosition': (5, ['HANDLE', 'CONST GUID*', 'LPCWSTR', 'DWORD', 'PVOID'], ['hClientHandle', 'pInterfaceGuid', 'strProfileName', 'dwPosition', 'pReserved'], '[ERROR_CODE]'), 'WlanSetPsdIEDataList': (4, ['HANDLE', 'LPCWSTR', 'CONST PWLAN_RAW_DATA_LIST', 'PVOID'], ['hClientHandle', 'strFormat', 'pPsdIEDataList', 'pReserved'], '[ERROR_CODE]'), 'WlanSetSecuritySettings': (3, ['HANDLE', 'WLAN_SECURABLE_OBJECT', 'LPCWSTR'], ['hClientHandle', 'SecurableObject', 'strModifiedSDDL'], '[ERROR_CODE]'), 'WFDCancelOpenSession': (1, ['PHANDLE'], ['hSessionHandle'], '[ERROR_CODE]'), 'WFDCloseHandle': (1, ['HANDLE'], ['hClientHandle'], '[ERROR_CODE]'), 'WFDCloseSession': (1, ['PHANDLE'], ['hSessionHandle'], '[ERROR_CODE]'), 'WFDOpenHandle': (3, ['DWORD', 'PDWORD', 'PHANDLE'], ['dwClientVersion', 'pdwNegotiatedVersion', 'phClientHandle'], '[ERROR_CODE]'), 'WFDOpenLegacySession': (4, ['HANDLE', 'PDOT11_MAC_ADDRESS', 'HANDLE', 'GUID'], ['hClientHandle', 'pLegacyMacAddress', 'phSessionHandle', 'pGuidSessionInterface'], '[ERROR_CODE]'), 'WFDStartOpenSession': (5, ['HANDLE', 'PDOT11_MAC_ADDRESS', 'PVOID', 'WFD_OPEN_SESSION_COMPLETE_CALLBACK', 'PHANDLE'], ['hClientHandle', 'pDeviceAddress', 'pvContext', 'pfnCallback', 'phSessionHandle'], '[ERROR_CODE]'), 'WFDUpdateDeviceVisibility': (1, ['PDOT11_MAC_ADDRESS'], ['pDeviceAddress'], '[ERROR_CODE]'), 'WlanHostedNetworkForceStart': (3, ['HANDLE', 'PWLAN_HOSTED_NETWORK_REASON', 'PVOID'], ['hClientHandle', 'pFailReason', 'pvReserved'], '[ERROR_CODE]'), 'WlanHostedNetworkForceStop': (3, ['HANDLE', 'PWLAN_HOSTED_NETWORK_REASON', 'PVOID'], ['hClientHandle', 'pFailReason', 'pvReserved'], '[ERROR_CODE]'), 'WlanHostedNetworkInitSettings': (3, ['HANDLE', 'PWLAN_HOSTED_NETWORK_REASON', 'PVOID'], ['hClientHandle', 'pFailReason', 'pvReserved'], '[ERROR_CODE]'), 'WlanHostedNetworkQueryProperty': (6, ['HANDLE', 'WLAN_HOSTED_NETWORK_OPCODE', 'PDWORD', 'PVOID*', 'PWLAN_OPCODE_VALUE_TYPE*', 'PVOID'], ['hClientHandle', 'OpCode', 'pdwDataSize', 'ppvData', 'pWlanOpcodeValueType', 'pvReserved'], '[ERROR_CODE]'), 'WlanHostedNetworkQuerySecondaryKey': (7, ['HANDLE', 'DWORD', 'PUCHAR*', 'PBOOL', 'PBOOL', 'PWLAN_HOSTED_NETWORK_REASON', 'PVOID'], ['hClientHandle', 'pdwKeyLength', 'ppucKeyData', 'pbIsPassPhrase', 'pbPersistent', 'pFailReason', 'pvReserved'], '[ERROR_CODE]'), 'WlanHostedNetworkQueryStatus': (3, ['HANDLE', 'PWLAN_HOSTED_NETWORK_STATUS*', 'PVOID'], ['hClientHandle', 'ppWlanHostedNetworkStatus', 'pvReserved'], '[ERROR_CODE]'), 'WlanHostedNetworkRefreshSecuritySettings': (3, ['HANDLE', 'PWLAN_HOSTED_NETWORK_REASON', 'PVOID'], ['hClientHandle', 'pFailReason', 'pvReserved'], '[ERROR_CODE]'), 'WlanHostedNetworkSetProperty': (6, ['HANDLE', 'WLAN_HOSTED_NETWORK_OPCODE', 'DWORD', 'PVOID', 'PWLAN_HOSTED_NETWORK_REASON', 'PVOID'], ['hClientHandle', 'OpCode', 'dwDataSize', 'pvData', 'pFailReason', 'pvReserved'], '[ERROR_CODE]'), 'WlanHostedNetworkSetSecondaryKey': (7, ['HANDLE', 'DWORD', 'PUCHAR', 'BOOL', 'BOOL', 'PWLAN_HOSTED_NETWORK_REASON', 'PVOID'], ['hClientHandle', 'dwKeyLength', 'pucKeyData', 'bIsPassPhrase', 'bPersistent', 'pFailReason', 'pvReserved'], '[ERROR_CODE]'), 'WlanHostedNetworkStartUsing': (3, ['HANDLE', 'PWLAN_HOSTED_NETWORK_REASON', 'PVOID'], ['hClientHandle', 'pFailReason', 'pvReserved'], '[ERROR_CODE]'), 'WlanHostedNetworkStopUsing': (3, ['HANDLE', 'PWLAN_HOSTED_NETWORK_REASON', 'PVOID'], ['hClientHandle', 'pFailReason', 'pvReserved'], '[ERROR_CODE]'), 'WlanRegisterVirtualStationNotification': (3, ['HANDLE', 'BOOL', 'PVOID'], ['hClientHandle', 'bRegister', 'pvReserved'], '[ERROR_CODE]')}

dict5_wldap32 = {'cldap_open': (2, ['PTSTR', 'ULONG'], ['HostName', 'PortNumber'], 'LDAP*'), 'ldap_open': (2, ['PTSTR', 'ULONG'], ['HostName', 'PortNumber'], 'LDAP*'), 'ldap_bind': (4, ['LDAP*', 'PTSTR', 'PTCHAR', 'ULONG'], ['ld', 'dn', 'cred', 'method'], 'ULONG'), 'ldap_bind_s': (4, ['LDAP*', 'PTSTR', 'PTCHAR', 'ULONG'], ['ld', 'dn', 'cred', 'method'], 'LDAP_RETCODE'), 'ldap_simple_bind': (3, ['LDAP*', 'PTSTR', 'PTSTR'], ['ld', 'dn', 'passwd'], 'ULONG'), 'ldap_simple_bind_s': (3, ['LDAP*', 'PTSTR', 'PTSTR'], ['ld', 'dn', 'passwd'], 'LDAP_RETCODE'), 'ldap_sasl_bind': (7, ['LDAP*', 'CONST PCHAR', 'CONST PCHAR', 'CONST BERVAL*', 'PLDAPCONTROL*', 'PLDAPCONTROL*', 'INT*'], ['ExternalHandle', 'DistName', 'AuthMechanism', 'cred', 'ServerCtrls', 'ClientCtrls', 'MessageNumber'], 'LDAP_RETCODE'), 'ldap_sasl_bind_s': (7, ['LDAP*', 'CONST PCHAR', 'CONST PCHAR', 'CONST BERVAL*', 'PLDAPCONTROL*', 'PLDAPCONTROL*', 'PBERVAL*'], ['ExternalHandle', 'DistName', 'AuthMechanism', 'cred', 'ServerCtrls', 'ClientCtrls', 'ServerData'], 'LDAP_RETCODE'), 'ldap_connect': (2, ['LDAP*', 'LDAP_TIMEVAL*'], ['ld', 'timeout'], 'LDAP_RETCODE'), 'ldap_init': (2, ['PTSTR', 'ULONG'], ['HostName', 'PortNumber'], 'LDAP*'), 'ldap_sslinit': (3, ['PTSTR', 'ULONG', 'INT'], ['HostName', 'PortNumber', 'secure'], 'LDAP*'), 'ldap_get_option': (3, ['LDAP*', 'INT', 'VOID*'], ['ld', 'option', 'outvalue'], 'LDAP_RETCODE'), 'ldap_set_option': (3, ['LDAP*', 'INT', 'VOID*'], ['ld', 'option', 'invalue'], 'LDAP_RETCODE'), 'ldap_abandon': (2, ['LDAP*', 'ULONG'], ['ld', 'msgid'], 'ULONG'), 'ldap_unbind': (1, ['LDAP*'], ['ld'], 'LDAP_RETCODE'), 'ldap_unbind_s': (1, ['LDAP*'], ['ld'], 'LDAP_RETCODE'), 'ldap_add': (3, ['LDAP*', 'PTSTR', 'LDAPMOD* '], ['ld', 'dn', 'attrs'], 'ULONG'), 'ldap_add_ext': (6, ['LDAP*', 'PTSTR', 'LDAPMOD* ', 'PLDAPCONTROL*', 'PLDAPCONTROL*', 'ULONG*'], ['ld', 'dn', 'attrs', 'ServerControls', 'ClientControls', 'MessageNumber'], 'LDAP_RETCODE'), 'ldap_add_s': (3, ['LDAP*', 'PTSTR', 'LDAPMOD* '], ['ld', 'dn', 'attrs'], 'LDAP_RETCODE'), 'ldap_add_ext_s': (5, ['LDAP*', 'PTSTR', 'LDAPMOD* ', 'PLDAPCONTROL*', 'PLDAPCONTROL*'], ['ld', 'dn', 'attrs', 'ServerControls', 'ClientControls'], 'LDAP_RETCODE'), 'ldap_compare': (4, ['LDAP*', 'PTSTR', 'PTSTR', 'PTSTR'], ['ld', 'dn', 'attr', 'value'], 'ULONG'), 'ldap_compare_ext': (8, ['LDAP*', 'PTSTR', 'PTSTR', 'PTSTR', 'STRUCT BERVAL*', 'PLDAPCONTROL*', 'PLDAPCONTROL*', 'ULONG*'], ['ld', 'dn', 'Attr', 'Value', 'Data', 'ServerControls', 'ClientControls', 'MessageNumber'], 'LDAP_RETCODE'), 'ldap_compare_s': (4, ['LDAP*', 'PTSTR', 'PTSTR', 'PTSTR'], ['ld', 'dn', 'attr', 'value'], 'LDAP_RETCODE'), 'ldap_compare_ext_s': (7, ['LDAP*', 'PTSTR', 'PTSTR', 'PTSTR', 'STRUCT BERVAL*', 'PLDAPCONTROL*', 'PLDAPCONTROL*'], ['ld', 'dn', 'Attr', 'Value', 'Data', 'ServerControls', 'ClientControls'], 'LDAP_RETCODE'), 'ldap_delete': (2, ['LDAP*', 'PTSTR'], ['ld', 'dn'], 'ULONG'), 'ldap_delete_ext': (5, ['LDAP*', 'PTSTR', 'PLDAPCONTROL*', 'PLDAPCONTROL*', 'ULONG*'], ['ld', 'dn', 'ServerControls', 'ClientControls', 'MessageNumber'], 'LDAP_RETCODE'), 'ldap_delete_s': (2, ['LDAP*', 'PTSTR'], ['ld', 'dn'], 'LDAP_RETCODE'), 'ldap_delete_ext_s': (4, ['LDAP*', 'PTSTR', 'PLDAPCONTROL*', 'PLDAPCONTROL*'], ['ld', 'dn', 'ServerControls', 'ClientControls'], 'LDAP_RETCODE'), 'ldap_extended_operation_s': (7, ['LDAP*', 'PSTR', 'STRUCT BERVAL*', 'PLDAPCONTROL*', 'PLDAPCONTROL*', 'PCHAR*', 'STRUCT BERVAL**'], ['ld', 'Oid', 'Data', 'ServerControls', 'ClientControls', 'ReturnedOid', 'ReturnedData'], 'LDAP_RETCODE'), 'ldap_extended_operation': (6, ['LDAP*', 'PTSTR', 'STRUCT BERVAL*', 'PLDAPCONTROL*', 'PLDAPCONTROL*', 'ULONG*'], ['ld', 'Oid', 'Data', 'ServerControls', 'ClientControls', 'MessageNumber'], 'LDAP_RETCODE'), 'ldap_close_extended_op': (2, ['LDAP*', 'ULONG'], ['ld', 'MessageNumber'], 'LDAP_RETCODE'), 'ldap_modify': (3, ['LDAP*', 'PTSTR', 'LDAPMOD* '], ['ld', 'dn', 'mods'], 'ULONG'), 'ldap_modify_ext': (6, ['LDAP*', 'PTSTR', 'LDAPMOD* ', 'PLDAPCONTROL*', 'PLDAPCONTROL*', 'ULONG*'], ['ld', 'dn', 'mods', 'ServerControls', 'ClientControls', 'MessageNumber'], 'LDAP_RETCODE'), 'ldap_modify_s': (3, ['LDAP*', 'PTSTR', 'LDAPMOD* '], ['ld', 'dn', 'mods'], 'LDAP_RETCODE'), 'ldap_modify_ext_s': (5, ['LDAP*', 'PTSTR', 'LDAPMOD* ', 'PLDAPCONTROL*', 'PLDAPCONTROL*'], ['ld', 'dn', 'mods', 'ServerControls', 'ClientControls'], 'LDAP_RETCODE'), 'ldap_check_filter': (2, ['LDAP*', 'PWCHAR'], ['ld', 'SearchFilter'], 'LDAP_RETCODE'), 'ldap_count_entries': (2, ['LDAP*', 'LDAPMESSAGE*'], ['ld', 'res'], 'ULONG'), 'ldap_count_references': (2, ['LDAP*', 'LDAPMESSAGE*'], ['ld', 'res'], 'ULONG'), 'ldap_count_values': (1, ['PTCHAR*'], ['vals'], 'ULONG'), 'ldap_count_values_len': (1, ['STRUCT BERVAL**'], ['vals'], 'ULONG'), 'ldap_create_page_control': (5, ['PLDAP', 'ULONG', 'STRUCT BERVAL*', 'UCHAR', 'PLDAPCONTROL*'], ['ExternalHandle', 'PageSize', 'Cookie', 'IsCritical', 'Control'], 'LDAP_RETCODE'), 'ldap_create_sort_control': (4, ['PLDAP', 'PLDAPSORTKEY*', 'UCHAR', 'PLDAPCONTROL*'], ['ExternalHandle', 'SortKeys', 'IsCritical', 'Control'], 'LDAP_RETCODE'), 'ldap_create_vlv_control': (4, ['LDAP*', 'LDAPVLVINFO*', 'CHAR', 'LDAPCONTROL**'], ['ld', 'Vlvinfop', 'IsCritical', 'ctrlp'], '[LDAP_RETCODE_INT]'), 'ldap_encode_sort_control': (4, ['PLDAP', 'PLDAPSORTKEY*', 'PLDAPCONTROL', 'BOOLEAN'], ['ExternalHandle', 'SortKeys', 'Control', 'IsCritical'], 'LDAP_RETCODE'), 'ldap_escape_filter_element': (4, ['PTCHAR', 'ULONG', 'PCHAR', 'ULONG'], ['sourceFilterElement', 'sourceLength', 'destFilterElement', 'destLength'], 'LDAP_RETCODE'), 'ldap_first_attribute': (3, ['LDAP*', 'LDAPMESSAGE*', 'BERELEMENT**'], ['ld', 'entry', 'ptr'], 'PTCHAR'), 'ldap_next_attribute': (3, ['LDAP*', 'LDAPMESSAGE*', 'BERELEMENT*'], ['ld', 'entry', 'ptr'], 'PTCHAR'), 'ldap_first_entry': (2, ['LDAP*', 'LDAPMESSAGE*'], ['ld', 'res'], 'LDAPMessage*'), 'ldap_next_entry': (2, ['LDAP*', 'LDAPMESSAGE*'], ['ld', 'entry'], 'LDAPMessage*'), 'ldap_first_reference': (2, ['LDAP*', 'LDAPMESSAGE*'], ['ld', 'res'], 'LDAPMessage*'), 'ldap_next_reference': (2, ['LDAP*', 'LDAPMESSAGE*'], ['ld', 'entry'], 'LDAPMessage*'), 'ldap_get_next_page': (4, ['PLDAP', 'PLDAPSEARCH', 'ULONG', 'ULONG*'], ['ExternalHandle', 'SearchHandle', 'PageSize', 'MessageNumber'], 'LDAP_RETCODE'), 'ldap_get_next_page_s': (6, ['PLDAP', 'PLDAPSEARCH', 'STRUCT L_TIMEVAL*', 'ULONG', 'ULONG*', 'LDAPMESSAGE**'], ['ExternalHandle', 'SearchHandle', 'timeout', 'PageSize', 'TotalCount', 'Results'], 'LDAP_RETCODE'), 'ldap_get_paged_count': (4, ['PLDAP', 'PLDAPSEARCH', 'ULONG*', 'PLDAPMESSAGE'], ['ExternalHandle', 'SearchBlock', 'TotalCount', 'Results'], 'LDAP_RETCODE'), 'ldap_get_values': (3, ['LDAP*', 'LDAPMESSAGE*', 'PTSTR'], ['ld', 'entry', 'attr'], 'PTCHAR*'), 'ldap_get_values_len': (3, ['LDAP*', 'LDAPMESSAGE*', 'PTSTR'], ['ExternalHandle', 'Message', 'attr'], 'struct berval**'), 'ldap_parse_extended_result': (5, ['LDAP*', 'LDAPMESSAGE*', 'PCHAR*', 'STRUCT BERVAL**', 'BOOLEAN'], ['Connection', 'ResultMessage', 'ResultOID', 'ResultData', 'Freeit'], 'LDAP_RETCODE'), 'ldap_parse_page_control': (4, ['PLDAP', 'PLDAPCONTROL*', 'ULONG*', 'STRUCT BERVAL**'], ['ExternalHandle', 'ServerControls', 'TotalCount', 'Cookie'], 'LDAP_RETCODE'), 'ldap_parse_reference': (3, ['LDAP*', 'LDAPMESSAGE*', 'PTCHAR**'], ['Connection', 'ResultMessage', 'Referrals'], 'LDAP_RETCODE'), 'ldap_parse_result': (8, ['LDAP*', 'LDAPMESSAGE*', 'ULONG*', 'PTCHAR*', 'PTCHAR*', 'PTCHAR**', 'PLDAPCONTROL**', 'BOOLEAN'], ['Connection', 'ResultMessage', 'ReturnCode', 'MatchedDNs', 'ErrorMessage', 'Referrals', 'ServerControls', 'Freeit'], 'LDAP_RETCODE'), 'ldap_parse_sort_control': (4, ['PLDAP', 'PLDAPCONTROL*', 'ULONG*', 'PTCHAR*'], ['ExternalHandle', 'Control', 'Result', 'Attribute'], 'LDAP_RETCODE'), 'ldap_parse_vlv_control': (6, ['LDAP*', 'LDAPCONTROL**', 'UNSIGNED LONG*', 'UNSIGNED LONG*', 'STRUCT BERVAL**', 'INT*'], ['ld', 'ctrls', 'target_posp', 'list_countp', 'contextp', 'errcodep'], '[LDAP_RETCODE_INT]'), 'ldap_result': (5, ['LDAP*', 'ULONG', 'ULONG', 'STRUCT L_TIMEVAL*', 'LDAPMESSAGE**'], ['ld', 'msgid', 'all', 'timeout', 'res'], 'ULONG'), 'ldap_search': (5, ['LDAP*', 'PTCHAR', 'ULONG', 'PTCHAR', 'ULONG'], ['ld', 'base', 'scope', 'filter', 'attrsonly'], 'ULONG'), 'ldap_search_s': (6, ['LDAP*', 'PTCHAR', 'ULONG', 'PTCHAR', 'ULONG', 'LDAPMESSAGE**'], ['ld', 'base', 'scope', 'filter', 'attrsonly', 'res'], 'LDAP_RETCODE'), 'ldap_search_st': (7, ['LDAP*', 'PTCHAR', 'ULONG', 'PTCHAR', 'ULONG', 'STRUCT L_TIMEVAL*', 'LDAPMESSAGE**'], ['ld', 'base', 'scope', 'filter', 'attrsonly', 'timeout', 'res'], 'LDAP_RETCODE'), 'ldap_search_ext': (10, ['LDAP*', 'PTCHAR', 'ULONG', 'PTCHAR', 'ULONG', 'PLDAPCONTROL*', 'PLDAPCONTROL*', 'ULONG', 'ULONG', 'ULONG*'], ['ld', 'base', 'scope', 'filter', 'attrsonly', 'ServerControls', 'ClientControls', 'TimeLimit', 'SizeLimit', 'MessageNumber'], 'LDAP_RETCODE'), 'ldap_search_ext_s': (10, ['LDAP*', 'PTCHAR', 'ULONG', 'PTCHAR', 'ULONG', 'PLDAPCONTROL*', 'PLDAPCONTROL*', 'STRUCT L_TIMEVAL*', 'ULONG', 'LDAPMESSAGE**'], ['ld', 'base', 'scope', 'filter', 'attrsonly', 'ServerControls', 'ClientControls', 'timeout', 'SizeLimit', 'res'], 'LDAP_RETCODE'), 'ldap_search_init_page': (10, ['PLDAP', 'PTCHAR', 'ULONG', 'PTCHAR', 'ULONG', 'PLDAPCONTROL*', 'PLDAPCONTROL*', 'ULONG', 'ULONG', 'PLDAPSORTKEY*'], ['ExternalHandle', 'DistinguishedName', 'ScopeOfSearch', 'SearchFilter', 'AttributesOnly', 'ServerControls', 'ClientControls', 'PageTimeLimit', 'TotalSizeLimit', 'SortKeys'], 'PLDAPSearch'), 'ldap_search_abandon_page': (2, ['PLDAP', 'PLDAPSEARCH'], ['ExternalHandle', 'SearchBlock'], 'LDAP_RETCODE'), 'ldap_err2string': (1, ['ULONG'], ['err'], 'PTCHAR'), 'LdapGetLastError': (0, [], [], 'LDAP_RETCODE'), 'LdapMapErrorToWin32': (1, ['LDAP_RETCODE'], ['LdapError'], '[ERROR_CODE_ULONG]'), 'ldap_result2error': (3, ['LDAP*', 'LDAPMESSAGE*', 'ULONG'], ['ld', 'res', 'freeit'], 'LDAP_RETCODE'), 'ldap_control_free': (1, ['LDAPCONTROL*'], ['Control'], 'LDAP_RETCODE'), 'ldap_controls_free': (1, ['LDAPCONTROL**'], ['Controls'], 'LDAP_RETCODE'), 'ldap_memfree': (1, ['PTCHAR'], ['Block'], 'VOID'), 'ldap_msgfree': (1, ['LDAPMESSAGE*'], ['res'], 'LDAP_RETCODE'), 'ldap_value_free': (1, ['PTCHAR*'], ['vals'], 'LDAP_RETCODE'), 'ldap_value_free_len': (1, ['STRUCT BERVAL**'], ['vals'], 'LDAP_RETCODE'), 'ldap_dn2ufn': (1, ['PTSTR'], ['dn'], 'PTCHAR'), 'ldap_ufn2dn': (2, ['PTCHAR', 'PTCHAR*'], ['ufn', 'pDn'], 'LDAP_RETCODE'), 'ldap_explode_dn': (2, ['PTSTR', 'ULONG'], ['dn', 'notypes'], 'PTCHAR*'), 'ldap_get_dn': (2, ['LDAP*', 'LDAPMESSAGE*'], ['ld', 'entry'], 'PTCHAR'), 'ldap_conn_from_msg': (2, ['LDAP*', 'LDAPMESSAGE*'], ['PrimaryConn', 'res'], 'LDAP*'), 'ldap_modrdn2': (4, ['LDAP*', 'PTCHAR', 'PTCHAR', 'INT'], ['ExternalHandle', 'DistinguishedName', 'NewDistinguishedName', 'DeleteOldRdn'], 'ULONG'), 'ldap_modrdn2_s': (4, ['LDAP*', 'PTCHAR', 'PTCHAR', 'INT'], ['ExternalHandle', 'DistinguishedName', 'NewDistinguishedName', 'DeleteOldRdn'], 'LDAP_RETCODE'), 'ldap_rename_ext': (8, ['LDAP*', 'PTSTR', 'PTSTR', 'PTSTR', 'INT', 'PLDAPCONTROL*', 'PLDAPCONTROL*', 'ULONG*'], ['ld', 'dn', 'NewRDN', 'NewParent', 'DeleteOldRdn', 'ServerControls', 'ClientControls', 'MessageNumber'], 'LDAP_RETCODE'), 'ldap_rename_ext_s': (7, ['LDAP*', 'PTSTR', 'PTSTR', 'PTSTR', 'INT', 'PLDAPCONTROL*', 'PLDAPCONTROL*'], ['ld', 'dn', 'NewRDN', 'NewParent', 'DeleteOldRdn', 'ServerControls', 'ClientControls'], 'LDAP_RETCODE'), 'LdapUnicodeToUTF8': (4, ['LPCWSTR', 'INT', 'LPSTR', 'INT'], ['lpSrcStr', 'cchSrc', 'lpDestStr', 'cchDest'], 'int'), 'LdapUTF8ToUnicode': (4, ['LPCSTR', 'INT', 'LPWSTR', 'INT'], ['lpSrcStr', 'cchSrc', 'lpDestStr', 'cchDest'], 'int'), 'ber_init': (1, ['BERVAL*'], ['pBerVal'], 'BerElement*'), 'ber_free': (2, ['BERELEMENT*', 'INT'], ['pBerElement', 'fbuf'], 'void'), 'ber_bvfree': (1, ['BERVAL*'], ['pBerVal'], 'void'), 'ber_bvecfree': (1, ['PBERVAL*'], ['pBerVal'], 'void'), 'ber_bvdup': (1, ['BERVAL*'], ['pBerVal'], 'BERVAL*'), 'ber_alloc_t': (1, ['INT'], ['options'], 'BerElement*'), 'ber_skip_tag': (2, ['BERELEMENT*', 'ULONG*'], ['pBerElement', 'pLen'], 'ULONG'), 'ber_peek_tag': (2, ['BERELEMENT*', 'ULONG*'], ['pBerElement', 'pLen'], 'ULONG'), 'ber_first_element': (3, ['BERELEMENT*', 'ULONG*', 'CHAR**'], ['pBerElement', 'pLen', 'ppOpaque'], 'ULONG'), 'ber_next_element': (3, ['BERELEMENT*', 'ULONG*', 'CHAR*'], ['pBerElement', 'pLen', 'opaque'], 'ULONG'), 'ber_flatten': (2, ['BERELEMENT*', 'PBERVAL*'], ['pBerElement', 'pBerVal'], 'INT'), 'ber_printf': (2, ['BERELEMENT*', 'PCHAR'], ['pBerElement', 'fmt'], 'INT'), 'ber_scanf': (2, ['BERELEMENT*', 'PCHAR'], ['pBerElement', 'fmt'], 'INT')}

dict5_dbghelp = {'EnumDirTree': (6, ['PROCESSHANDLE', 'PCTSTR', 'PCTSTR', 'PTSTR', 'PENUMDIRTREE_CALLBACK', 'PVOID'], ['hProcess', 'RootPath', 'InputPathName', 'OutputPathBuffer', 'Callback', 'CallbackData'], 'BOOL'), 'ImagehlpApiVersion': (0, [], [], 'LPAPI_VERSION'), 'ImagehlpApiVersionEx': (1, ['LPAPI_VERSION'], ['AppVersion'], 'LPAPI_VERSION'), 'MakeSureDirectoryPathExists': (1, ['PCSTR'], ['DirPath'], 'BOOL'), 'SearchTreeForFile': (3, ['PCTSTR', 'PCTSTR', 'PTSTR'], ['RootPath', 'InputPathName', 'OutputPathBuffer'], 'BOOL'), 'EnumerateLoadedModules': (3, ['PROCESSHANDLE', 'PENUMLOADED_MODULES_CALLBACK', 'PVOID'], ['hProcess', 'EnumLoadedModulesCallback', 'UserContext'], 'BOOL'), 'EnumerateLoadedModules64': (3, ['PROCESSHANDLE', 'PENUMLOADED_MODULES_CALLBACK64', 'PVOID'], ['hProcess', 'EnumLoadedModulesCallback', 'UserContext'], 'BOOL'), 'EnumerateLoadedModulesW64': (3, ['PROCESSHANDLE', 'PENUMLOADED_MODULES_CALLBACKW64', 'PVOID'], ['hProcess', 'EnumLoadedModulesCallback', 'UserContext'], 'BOOL'), 'EnumerateLoadedModulesEx': (3, ['PROCESSHANDLE', 'PENUMLOADED_MODULES_CALLBACK64', 'PVOID'], ['hProcess', 'EnumLoadedModulesCallback', 'UserContext'], 'BOOL'), 'FindDebugInfoFile': (3, ['PCSTR', 'PCSTR', 'PSTR'], ['FileName', 'SymbolPath', 'DebugFilePath'], 'HANDLE'), 'FindDebugInfoFileEx': (5, ['PCTSTR', 'PCTSTR', 'PTSTR', 'PFIND_DEBUG_FILE_CALLBACK', 'PVOID'], ['FileName', 'SymbolPath', 'DebugFilePath', 'Callback', 'CallerData'], 'HANDLE'), 'FindExecutableImage': (3, ['PCSTR', 'PCSTR', 'PSTR'], ['FileName', 'SymbolPath', 'ImageFilePath'], 'HANDLE'), 'FindExecutableImageEx': (5, ['PCTSTR', 'PCTSTR', 'PTSTR', 'PFIND_EXE_FILE_CALLBACK', 'PVOID'], ['FileName', 'SymbolPath', 'ImageFilePath', 'Callback', 'CallerData'], 'HANDLE'), 'StackWalk': (9, ['IMAGE_FILE_MACHINE', 'PROCESSHANDLE', 'THREADHANDLE', 'LPSTACKFRAME', 'PVOID', 'PREAD_PROCESS_MEMORY_ROUTINE', 'PFUNCTION_TABLE_ACCESS_ROUTINE', 'PGET_MODULE_BASE_ROUTINE', 'PTRANSLATE_ADDRESS_ROUTINE'], ['MachineType', 'hProcess', 'hThread', 'StackFrame', 'ContextRecord', 'ReadMemoryRoutine', 'FunctionTableAccessRoutine', 'GetModuleBaseRoutine', 'TranslateAddress'], 'BOOL'), 'StackWalk64': (9, ['IMAGE_FILE_MACHINE', 'PROCESSHANDLE', 'THREADHANDLE', 'LPSTACKFRAME64', 'PVOID', 'PREAD_PROCESS_MEMORY_ROUTINE64', 'PFUNCTION_TABLE_ACCESS_ROUTINE64', 'PGET_MODULE_BASE_ROUTINE64', 'PTRANSLATE_ADDRESS_ROUTINE64'], ['MachineType', 'hProcess', 'hThread', 'StackFrame', 'ContextRecord', 'ReadMemoryRoutine', 'FunctionTableAccessRoutine', 'GetModuleBaseRoutine', 'TranslateAddress'], 'BOOL'), 'SymSetParentWindow': (1, ['HWND'], ['hwnd'], 'BOOL'), 'UnDecorateSymbolName': (4, ['PCTSTR', 'PTSTR', 'DWORD', 'UNDNAME_FLAGS'], ['DecoratedName', 'UnDecoratedName', 'UndecoratedLength', 'Flags'], 'DWORD'), 'GetTimestampForLoadedLibrary': (1, ['HMODULE'], ['ImageBase'], 'DWORD'), 'ImageDirectoryEntryToData': (4, ['PVOID', 'BOOLEAN', 'USHORT', 'PULONG'], ['Base', 'MappedAsImage', 'DirectoryEntry', 'Size'], 'PVOID'), 'ImageDirectoryEntryToDataEx': (5, ['PVOID', 'BOOLEAN', 'USHORT', 'PULONG', 'PIMAGE_SECTION_HEADER*'], ['Base', 'MappedAsImage', 'DirectoryEntry', 'Size', 'FoundHeader'], 'PVOID'), 'ImageNtHeader': (1, ['PVOID'], ['ImageBase'], 'PIMAGE_NT_HEADERS'), 'ImageRvaToSection': (3, ['PIMAGE_NT_HEADERS', 'PVOID', 'ULONG'], ['NtHeaders', 'Base', 'Rva'], 'PIMAGE_SECTION_HEADER'), 'ImageRvaToVa': (4, ['PIMAGE_NT_HEADERS', 'PVOID', 'ULONG', 'PIMAGE_SECTION_HEADER*'], ['NtHeaders', 'Base', 'Rva', 'LastRvaSection'], 'PVOID'), 'SymAddSourceStream': (5, ['PROCESSHANDLE', 'ULONG64', 'PCTSTR', 'PBYTE', 'SIZE_T'], ['hProcess', 'Base', 'StreamFile', 'Buffer', 'Size'], 'BOOL'), 'SymAddSymbol': (6, ['PROCESSHANDLE', 'ULONG64', 'PCTSTR', 'DWORD64', 'DWORD', 'DWORD'], ['hProcess', 'BaseOfDll', 'Name', 'Address', 'Size', 'Flags'], 'BOOL'), 'SymCleanup': (1, ['PROCESSHANDLE'], ['hProcess'], 'BOOL'), 'SymDeleteSymbol': (5, ['PROCESSHANDLE', 'ULONG64', 'PCTSTR', 'DWORD64', 'DWORD'], ['hProcess', 'BaseOfDll', 'Name', 'Address', 'Flags'], 'BOOL'), 'SymEnumLines': (6, ['PROCESSHANDLE', 'ULONG64', 'PCTSTR', 'PCTSTR', 'PSYM_ENUMLINES_CALLBACK', 'PVOID'], ['hProcess', 'Base', 'Obj', 'File', 'EnumLinesCallback', 'UserContext'], 'BOOL'), 'SymEnumProcesses': (2, ['PSYM_ENUMPROCESSES_CALLBACK', 'PVOID'], ['EnumProcessesCallback', 'UserContext'], 'BOOL'), 'SymEnumSourceFiles': (5, ['PROCESSHANDLE', 'ULONG64', 'PCTSTR', 'PSYM_ENUMSOURCEFILES_CALLBACK', 'PVOID'], ['hProcess', 'ModBase', 'Mask', 'EnumSymbolsCallback', 'UserContext'], 'BOOL'), 'SymEnumSourceFileTokens': (3, ['PROCESSHANDLE', 'ULONG64', 'PENUMSOURCEFILETOKENSCALLBACK'], ['hProcess', 'Base', 'Callback'], 'BOOL'), 'SymEnumSourceLines': (8, ['PROCESSHANDLE', 'ULONG64', 'PCTSTR', 'PCTSTR', 'DWORD', 'ESLFLAG', 'PSYM_ENUMLINES_CALLBACK', 'PVOID'], ['hProcess', 'Base', 'Obj', 'File', 'Line', 'Flags', 'EnumLinesCallback', 'UserContext'], 'BOOL'), 'SymEnumSymbols': (5, ['PROCESSHANDLE', 'ULONG64', 'PCTSTR', 'PSYM_ENUMERATESYMBOLS_CALLBACK', 'CONST PVOID'], ['hProcess', 'BaseOfDll', 'Mask', 'EnumSymbolsCallback', 'UserContext'], 'BOOL'), 'SymEnumSymbolsForAddr': (4, ['PROCESSHANDLE', 'DWORD64', 'PSYM_ENUMERATESYMBOLS_CALLBACK', 'PVOID'], ['hProcess', 'Address', 'EnumSymbolsCallback', 'UserContext'], 'BOOL'), 'SymEnumTypes': (4, ['PROCESSHANDLE', 'ULONG64', 'PSYM_ENUMERATESYMBOLS_CALLBACK', 'PVOID'], ['hProcess', 'BaseOfDll', 'EnumSymbolsCallback', 'UserContext'], 'BOOL'), 'SymEnumTypesByName': (5, ['PROCESSHANDLE', 'ULONG64', 'PCSTR', 'PSYM_ENUMERATESYMBOLS_CALLBACK', 'PVOID'], ['hProcess', 'BaseOfDll', 'mask', 'EnumSymbolsCallback', 'UserContext'], 'BOOL'), 'SymFindDebugInfoFile': (5, ['PROCESSHANDLE', 'PCTSTR', 'PTSTR', 'PFIND_DEBUG_FILE_CALLBACK', 'PVOID'], ['hProcess', 'FileName', 'DebugFilePath', 'Callback', 'CallerData'], 'HANDLE'), 'SymFindExecutableImage': (5, ['PROCESSHANDLE', 'PCTSTR', 'PTSTR', 'PFIND_EXE_FILE_CALLBACK', 'PVOID'], ['hProcess', 'FileName', 'ImageFilePath', 'Callback', 'CallerData'], 'HANDLE'), 'SymFindFileInPath': (10, ['PROCESSHANDLE', 'PCTSTR', 'PCTSTR', 'PVOID', 'DWORD', 'DWORD', 'SSRVOPT', 'PTSTR', 'PFINDFILEINPATHCALLBACK', 'PVOID'], ['hProcess', 'SearchPath', 'FileName', 'id', 'two', 'three', 'flags', 'FilePath', 'callback', 'context'], 'BOOL'), 'SymFromAddr': (4, ['PROCESSHANDLE', 'DWORD64', 'PDWORD64', 'PSYMBOL_INFO'], ['hProcess', 'Address', 'Displacement', 'Symbol'], 'BOOL'), 'SymFromIndex': (4, ['PROCESSHANDLE', 'ULONG64', 'DWORD', 'PSYMBOL_INFO'], ['hProcess', 'BaseOfDll', 'Index', 'Symbol'], 'BOOL'), 'SymFromName': (3, ['PROCESSHANDLE', 'PCTSTR', 'PSYMBOL_INFO'], ['hProcess', 'Name', 'Symbol'], 'BOOL'), 'SymFromToken': (4, ['PROCESSHANDLE', 'DWORD64', 'DWORD', 'PSYMBOL_INFO'], ['hProcess', 'Base', 'Token', 'Symbol'], 'BOOL'), 'SymFunctionTableAccess': (2, ['PROCESSHANDLE', 'DWORD'], ['hProcess', 'AddrBase'], 'PVOID'), 'SymFunctionTableAccess64': (2, ['PROCESSHANDLE', 'DWORD64'], ['hProcess', 'AddrBase'], 'PVOID'), 'SymGetFileLineOffsets64': (5, ['PROCESSHANDLE', 'PCSTR', 'PCSTR', 'PDWORD64', 'ULONG'], ['hProcess', 'ModuleName', 'FileName', 'Buffer', 'BufferLines'], 'ULONG'), 'SymGetHomeDirectory': (3, ['DWORD', 'PTSTR', 'SIZE_T'], ['type', 'dir', 'size'], 'PTCHAR'), 'SymGetLineFromAddr': (4, ['PROCESSHANDLE', 'DWORD', 'PDWORD', 'PIMAGEHLP_LINE'], ['hProcess', 'dwAddr', 'pdwDisplacement', 'Line'], 'BOOL'), 'SymGetLineFromAddr64': (4, ['PROCESSHANDLE', 'DWORD64', 'PDWORD', 'PIMAGEHLP_LINE64'], ['hProcess', 'dwAddr', 'pdwDisplacement', 'Line'], 'BOOL'), 'SymGetLineFromAddrW64': (4, ['PROCESSHANDLE', 'DWORD64', 'PDWORD', 'PIMAGEHLP_LINEW64'], ['hProcess', 'dwAddr', 'pdwDisplacement', 'Line'], 'BOOL'), 'SymGetLineFromName': (6, ['PROCESSHANDLE', 'PCSTR', 'PCSTR', 'DWORD', 'PLONG', 'PIMAGEHLP_LINE'], ['hProcess', 'ModuleName', 'FileName', 'dwLineNumber', 'plDisplacement', 'Line'], 'BOOL'), 'SymGetLineFromName64': (6, ['PROCESSHANDLE', 'PCSTR', 'PCSTR', 'DWORD', 'PLONG', 'PIMAGEHLP_LINE64'], ['hProcess', 'ModuleName', 'FileName', 'dwLineNumber', 'lpDisplacement', 'Line'], 'BOOL'), 'SymGetLineFromNameW64': (6, ['PROCESSHANDLE', 'PCWSTR', 'PCWSTR', 'DWORD', 'PLONG', 'PIMAGEHLP_LINEW64'], ['hProcess', 'ModuleName', 'FileName', 'dwLineNumber', 'lpDisplacement', 'Line'], 'BOOL'), 'SymGetLineNext': (2, ['PROCESSHANDLE', 'PIMAGEHLP_LINE'], ['hProcess', 'Line'], 'BOOL'), 'SymGetLineNext64': (2, ['PROCESSHANDLE', 'PIMAGEHLP_LINE64'], ['hProcess', 'Line'], 'BOOL'), 'SymGetLineNextW64': (2, ['PROCESSHANDLE', 'PIMAGEHLP_LINEW64'], ['hProcess', 'Line'], 'BOOL'), 'SymGetLinePrev': (2, ['PROCESSHANDLE', 'PIMAGEHLP_LINE'], ['hProcess', 'Line'], 'BOOL'), 'SymGetLinePrev64': (2, ['PROCESSHANDLE', 'PIMAGEHLP_LINE64'], ['hProcess', 'Line'], 'BOOL'), 'SymGetLinePrevW64': (2, ['PROCESSHANDLE', 'PIMAGEHLP_LINEW64'], ['hProcess', 'Line'], 'BOOL'), 'SymGetModuleBase': (2, ['PROCESSHANDLE', 'DWORD'], ['hProcess', 'dwAddr'], 'DWORD'), 'SymGetModuleBase64': (2, ['PROCESSHANDLE', 'DWORD64'], ['hProcess', 'dwAddr'], 'DWORD64'), 'SymGetModuleInfo': (3, ['PROCESSHANDLE', 'DWORD', 'PIMAGEHLP_MODULE'], ['hProcess', 'dwAddr', 'ModuleInfo'], 'BOOL'), 'SymGetModuleInfo64': (3, ['PROCESSHANDLE', 'DWORD64', 'PIMAGEHLP_MODULE64'], ['hProcess', 'dwAddr', 'ModuleInfo'], 'BOOL'), 'SymGetModuleInfoW64': (3, ['PROCESSHANDLE', 'DWORD64', 'PIMAGEHLP_MODULEW64'], ['hProcess', 'dwAddr', 'ModuleInfo'], 'BOOL'), 'SymGetOmaps': (6, ['PROCESSHANDLE', 'ULONG64', 'POMAP*', 'PDWORD64', 'POMAP*', 'PDWORD64'], ['hProcess', 'BaseOfDll', 'OmapTo', 'cOmapTo', 'OmapFrom', 'cOmapFrom'], 'BOOL'), 'SymGetOptions': (0, [], [], '[SYMOPT_FLAGS]'), 'SymGetScope': (4, ['PROCESSHANDLE', 'ULONG64', 'DWORD', 'PSYMBOL_INFO'], ['hProcess', 'BaseOfDll', 'Index', 'Symbol'], 'BOOL'), 'SymGetSearchPath': (3, ['PROCESSHANDLE', 'PTSTR', 'DWORD'], ['hProcess', 'SearchPath', 'SearchPathLength'], 'BOOL'), 'SymGetSymbolFile': (8, ['PROCESSHANDLE', 'PCTSTR', 'PCTSTR', 'DWORD', 'PTSTR', 'SIZE_T', 'PTSTR', 'SIZE_T'], ['hProcess', 'SymPath', 'ImageFile', 'Type', 'SymbolFile', 'cSymbolFile', 'DbgFile', 'cDbgFile'], 'BOOL'), 'SymGetTypeFromName': (4, ['PROCESSHANDLE', 'ULONG64', 'PCTSTR', 'PSYMBOL_INFO'], ['hProcess', 'BaseOfDll', 'Name', 'Symbol'], 'BOOL'), 'SymGetTypeInfo': (5, ['PROCESSHANDLE', 'DWORD64', 'ULONG', 'IMAGEHLP_SYMBOL_TYPE_INFO', 'PVOID'], ['hProcess', 'ModBase', 'TypeId', 'GetType', 'pInfo'], 'BOOL'), 'SymGetTypeInfoEx': (3, ['PROCESSHANDLE', 'DWORD64', 'PIMAGEHLP_GET_TYPE_INFO_PARAMS'], ['hProcess', 'ModBase', 'Params'], 'BOOL'), 'SymInitialize': (3, ['PROCESSHANDLE', 'PCTSTR', 'BOOL'], ['hProcess', 'UserSearchPath', 'fInvadeProcess'], 'BOOL'), 'SymLoadModule': (6, ['PROCESSHANDLE', 'HANDLE', 'PCSTR', 'PCSTR', 'DWORD', 'DWORD'], ['hProcess', 'hFile', 'ImageName', 'ModuleName', 'BaseOfDll', 'SizeOfDll'], 'DWORD'), 'SymLoadModule64': (6, ['PROCESSHANDLE', 'HANDLE', 'PCSTR', 'PCSTR', 'DWORD64', 'DWORD'], ['hProcess', 'hFile', 'ImageName', 'ModuleName', 'BaseOfDll', 'SizeOfDll'], 'DWORD64'), 'SymLoadModuleEx': (8, ['PROCESSHANDLE', 'HANDLE', 'PCTSTR', 'PCTSTR', 'DWORD64', 'DWORD', 'PMODLOAD_DATA', 'DWORD'], ['hProcess', 'hFile', 'ImageName', 'ModuleName', 'BaseOfDll', 'DllSize', 'Data', 'Flags'], 'DWORD64'), 'SymMatchFileName': (4, ['PCTSTR', 'PCTSTR', 'PTSTR*', 'PTSTR*'], ['FileName', 'Match', 'FileNameStop', 'MatchStop'], 'BOOL'), 'SymMatchString': (3, ['PCTSTR', 'PCTSTR', 'BOOL'], ['string', 'expression', 'fCase'], 'BOOL'), 'SymNext': (2, ['PROCESSHANDLE', 'PSYMBOL_INFO'], ['hProcess', 'Symbol'], 'BOOL'), 'SymPrev': (2, ['PROCESSHANDLE', 'PSYMBOL_INFO'], ['hProcess', 'Symbol'], 'BOOL'), 'SymRefreshModuleList': (1, ['PROCESSHANDLE'], ['hProcess'], 'BOOL'), 'SymRegisterCallback': (3, ['PROCESSHANDLE', 'PSYMBOL_REGISTERED_CALLBACK', 'PVOID'], ['hProcess', 'CallbackFunction', 'UserContext'], 'BOOL'), 'SymRegisterCallback64': (3, ['PROCESSHANDLE', 'PSYMBOL_REGISTERED_CALLBACK64', 'ULONG64'], ['hProcess', 'CallbackFunction', 'UserContext'], 'BOOL'), 'SymRegisterCallbackW64': (3, ['PROCESSHANDLE', 'PSYMBOL_REGISTERED_CALLBACKW64', 'ULONG64'], ['hProcess', 'CallbackFunction', 'UserContext'], 'BOOL'), 'SymRegisterFunctionEntryCallback': (3, ['PROCESSHANDLE', 'PSYMBOL_FUNCENTRY_CALLBACK', 'PVOID'], ['hProcess', 'CallbackFunction', 'UserContext'], 'BOOL'), 'SymRegisterFunctionEntryCallback64': (3, ['PROCESSHANDLE', 'PSYMBOL_FUNCENTRY_CALLBACK64', 'ULONG64'], ['hProcess', 'CallbackFunction', 'UserContext'], 'BOOL'), 'SymSearch': (9, ['PROCESSHANDLE', 'ULONG64', 'DWORD', 'DWORD', 'PCTSTR', 'DWORD64', 'PSYM_ENUMERATESYMBOLS_CALLBACK', 'PVOID', 'SYMSEARCH_FLAGS'], ['hProcess', 'BaseOfDll', 'Index', 'SymTag', 'Mask', 'Address', 'EnumSymbolsCallback', 'UserContext', 'Options'], 'BOOL'), 'SymSetContext': (3, ['PROCESSHANDLE', 'PIMAGEHLP_STACK_FRAME', 'PIMAGEHLP_CONTEXT'], ['hProcess', 'StackFrame', 'Context'], 'BOOL'), 'SymSetHomeDirectory': (2, ['PROCESSHANDLE', 'PCTSTR'], ['hProcess', 'dir'], 'PTCHAR'), 'SymSetOptions': (1, ['SYMOPT_FLAGS'], ['SymOptions'], 'DWORD'), 'SymSetScopeFromAddr': (2, ['PROCESSHANDLE', 'ULONG64'], ['hProcess', 'Address'], 'BOOL'), 'SymSetScopeFromIndex': (3, ['PROCESSHANDLE', 'ULONG64', 'DWORD'], ['hProcess', 'BaseOfDll', 'Index'], 'BOOL'), 'SymEnumerateModules': (3, ['PROCESSHANDLE', 'PSYM_ENUMMODULES_CALLBACK', 'PVOID'], ['hProcess', 'EnumModulesCallback', 'UserContext'], 'BOOL'), 'SymEnumerateModules64': (3, ['PROCESSHANDLE', 'PSYM_ENUMMODULES_CALLBACK64', 'PVOID'], ['hProcess', 'EnumModulesCallback', 'UserContext'], 'BOOL'), 'SymEnumerateModulesW64': (3, ['PROCESSHANDLE', 'PSYM_ENUMMODULES_CALLBACKW64', 'PVOID'], ['hProcess', 'EnumModulesCallback', 'UserContext'], 'BOOL'), 'SymSetSearchPath': (2, ['PROCESSHANDLE', 'PCTSTR'], ['hProcess', 'SearchPath'], 'BOOL'), 'SymUnDName': (3, ['PIMAGEHLP_SYMBOL', 'PSTR', 'DWORD'], ['sym', 'UnDecName', 'UnDecNameLength'], 'BOOL'), 'SymUnDName64': (3, ['PIMAGEHLP_SYMBOL64', 'PSTR', 'DWORD'], ['sym', 'UnDecName', 'UnDecNameLength'], 'BOOL'), 'SymUnloadModule': (2, ['PROCESSHANDLE', 'DWORD'], ['hProcess', 'BaseOfDll'], 'BOOL'), 'SymUnloadModule64': (2, ['PROCESSHANDLE', 'DWORD64'], ['hProcess', 'BaseOfDll'], 'BOOL'), 'SymSrvDeltaName': (5, ['PROCESSHANDLE', 'PCTSTR', 'PCTSTR', 'PCTSTR', 'PCTSTR'], ['hProcess', 'SymPath', 'Type', 'File1', 'File2'], 'PCTSTR'), 'SymSrvGetFileIndexes': (5, ['PCTSTR', 'GUID*', 'DWORD*', 'DWORD*', 'DWORD'], ['File', 'Id', 'Val1', 'Val2', 'Flags'], 'BOOL'), 'SymSrvGetFileIndexInfo': (3, ['PCTSTR', 'PSYMSRV_INDEX_INFO', 'DWORD'], ['File', 'Info', 'Flags'], 'BOOL'), 'SymSrvGetFileIndexString': (6, ['PROCESSHANDLE', 'PCTSTR', 'PCTSTR', 'PTSTR', 'SIZE_T', 'DWORD'], ['hProcess', 'SrvPath', 'File', 'Index', 'Size', 'Flags'], 'BOOL'), 'SymSrvGetSupplement': (4, ['PROCESSHANDLE', 'PCTSTR', 'PCTSTR', 'PCTSTR'], ['hProcess', 'SymPath', 'Node', 'File'], 'PCTSTR'), 'SymSrvIsStore': (2, ['PROCESSHANDLE', 'PCTSTR'], ['hProcess', 'path'], 'BOOL'), 'SymSrvStoreFile': (4, ['PROCESSHANDLE', 'PCTSTR', 'PCTSTR', 'DWORD'], ['hProcess', 'SrvPath', 'File', 'Flags'], 'PCTSTR'), 'SymSrvStoreSupplement': (5, ['PROCESSHANDLE', 'CONST PCTSTR', 'PCTSTR', 'PCTSTR', 'DWORD'], ['hProcess', 'SymPath', 'Node', 'File', 'Flags'], 'PCTSTR'), 'MiniDumpReadDumpStream': (5, ['PVOID', 'ULONG', 'PMINIDUMP_DIRECTORY*', 'PVOID*', 'ULONG*'], ['BaseOfDump', 'StreamNumber', 'Dir', 'StreamPointer', 'StreamSize'], 'BOOL'), 'MiniDumpWriteDump': (7, ['PROCESSHANDLE', 'DWORD', 'HANDLE', 'MINIDUMP_TYPE', 'PMINIDUMP_EXCEPTION_INFORMATION', 'PMINIDUMP_USER_STREAM_INFORMATION', 'PMINIDUMP_CALLBACK_INFORMATION'], ['hProcess', 'ProcessId', 'hFile', 'DumpType', 'ExceptionParam', 'UserStreamParam', 'CallbackParam'], 'BOOL'), 'SymGetSourceFile': (6, ['PROCESSHANDLE', 'ULONG64', 'PCTSTR', 'PCTSTR', 'PTSTR', 'DWORD'], ['hProcess', 'Base', 'Params', 'FileSpec', 'FilePath', 'Size'], 'BOOL'), 'SymGetSourceFileFromToken': (5, ['PROCESSHANDLE', 'PVOID', 'PCTSTR', 'PTSTR', 'DWORD'], ['hProcess', 'Token', 'Params', 'FilePath', 'Size'], 'BOOL'), 'SymGetSourceFileToken': (5, ['PROCESSHANDLE', 'ULONG64', 'PCTSTR', 'PVOID*', 'DWORD*'], ['hProcess', 'Base', 'FileSpec', 'Token', 'Size'], 'BOOL'), 'SymGetSourceVarFromToken': (6, ['PROCESSHANDLE', 'PVOID', 'PCTSTR', 'PCTSTR', 'PTSTR', 'DWORD'], ['hProcess', 'Token', 'Params', 'VarName', 'Value', 'Size'], 'BOOL'), 'MapDebugInformation': (4, ['HANDLE', 'PCSTR', 'PCSTR', 'ULONG'], ['FileHandle', 'FileName', 'SymbolPath', 'ImageBase'], 'PIMAGE_DEBUG_INFORMATION'), 'SymEnumerateSymbols': (4, ['PROCESSHANDLE', 'ULONG', 'PSYM_ENUMSYMBOLS_CALLBACK', 'PVOID'], ['hProcess', 'BaseOfDll', 'EnumSymbolsCallback', 'UserContext'], 'BOOL'), 'SymEnumerateSymbols64': (4, ['PROCESSHANDLE', 'ULONG64', 'PSYM_ENUMSYMBOLS_CALLBACK64', 'PVOID'], ['hProcess', 'BaseOfDll', 'EnumSymbolsCallback', 'UserContext'], 'BOOL'), 'SymEnumerateSymbolsW64': (4, ['PROCESSHANDLE', 'ULONG64', 'PSYM_ENUMSYMBOLS_CALLBACKW64', 'PVOID'], ['hProcess', 'BaseOfDll', 'EnumSymbolsCallback', 'UserContext'], 'BOOL'), 'SymGetSymFromAddr': (4, ['PROCESSHANDLE', 'DWORD', 'PDWORD', 'PIMAGEHLP_SYMBOL'], ['hProcess', 'dwAddr', 'pdwDisplacement', 'Symbol'], 'BOOL'), 'SymGetSymFromAddr64': (4, ['PROCESSHANDLE', 'DWORD64', 'PDWORD64', 'PIMAGEHLP_SYMBOL64'], ['hProcess', 'Address', 'Displacement', 'Symbol'], 'BOOL'), 'SymGetSymFromName': (3, ['PROCESSHANDLE', 'PCSTR', 'PIMAGEHLP_SYMBOL'], ['hProcess', 'Name', 'Symbol'], 'BOOL'), 'SymGetSymFromName64': (3, ['PROCESSHANDLE', 'PCSTR', 'PIMAGEHLP_SYMBOL64'], ['hProcess', 'Name', 'Symbol'], 'BOOL'), 'SymGetSymNext': (2, ['PROCESSHANDLE', 'PIMAGEHLP_SYMBOL'], ['hProcess', 'Symbol'], 'BOOL'), 'SymGetSymNext64': (2, ['PROCESSHANDLE', 'PIMAGEHLP_SYMBOL64'], ['hProcess', 'Symbol'], 'BOOL'), 'SymGetSymPrev': (2, ['PROCESSHANDLE', 'PIMAGEHLP_SYMBOL'], ['hProcess', 'Symbol'], 'BOOL'), 'SymGetSymPrev64': (2, ['PROCESSHANDLE', 'PIMAGEHLP_SYMBOL64'], ['hProcess', 'Symbol'], 'BOOL'), 'UnmapDebugInformation': (1, ['PIMAGE_DEBUG_INFORMATION'], ['DebugInfo'], 'BOOL')}

dict5_winspool = {'AddJob': (5, ['HANDLE', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hPrinter', 'Level', 'pData', 'cbBuf', 'pcbNeeded'], 'BOOL'), 'AddMonitor': (3, ['LPTSTR', 'DWORD', 'LPBYTE'], ['pName', 'Level', 'pMonitors'], 'BOOL'), 'AddPrinter': (3, ['LPTSTR*', 'DWORD', 'LPBYTE'], ['pName', 'Level', 'pPrinter'], 'HANDLE'), 'AddPrinterConnection': (1, ['LPTSTR'], ['pName'], 'BOOL'), 'AddPrinterConnection2': (4, ['HWND', 'LPCTSTR', 'DWORD', 'PVOID'], ['hWnd', 'pszName', 'dwLevel', 'pConnectionInfo'], 'BOOL'), 'AddPrinterDriver': (3, ['LPTSTR', 'DWORD', 'LPBYTE'], ['pName', 'Level', 'pDriverInfo'], 'BOOL'), 'AddPrinterDriverEx': (4, ['LPTSTR', 'DWORD', 'LPBYTE', 'DWORD'], ['pName', 'Level', 'pDriverInfo', 'dwFileCopyFlags'], 'BOOL'), 'AddPrintProcessor': (4, ['LPTSTR', 'LPTSTR', 'LPTSTR', 'LPTSTR'], ['pName', 'pEnvironment', 'pPathName', 'pPrintProcessorName'], 'BOOL'), 'AddPrintProvidor': (3, ['LPTSTR', 'DWORD', 'LPBYTE'], ['pName', 'Level', 'pProviderInfo'], 'BOOL'), 'ConfigurePort': (3, ['LPTSTR', 'HWND', 'LPTSTR'], ['pName', 'hWnd', 'pPortName'], 'BOOL'), 'DeleteForm': (2, ['HANDLE', 'LPTSTR'], ['hPrinter', 'pFormName'], 'BOOL'), 'DeleteMonitor': (3, ['LPTSTR', 'LPTSTR', 'LPTSTR'], ['pName', 'pEnvironment', 'pMonitorName'], 'BOOL'), 'DeletePort': (3, ['LPTSTR', 'HWND', 'LPTSTR'], ['pName', 'hWnd', 'pPortName'], 'BOOL'), 'DeletePrinterConnection': (1, ['LPTSTR'], ['pName'], 'BOOL'), 'DeletePrinterData': (2, ['HANDLE', 'LPTSTR'], ['hPrinter', 'pValueName'], '[ERROR_CODE]'), 'DeletePrinterDataEx': (3, ['HANDLE', 'LPCTSTR', 'LPCTSTR'], ['hPrinter', 'pKeyName', 'pValueName'], '[ERROR_CODE]'), 'DeletePrinterDriver': (3, ['LPTSTR', 'LPTSTR', 'LPTSTR'], ['pName', 'pEnvironment', 'pDriverName'], 'BOOL'), 'DeletePrinterDriverEx': (5, ['LPTSTR', 'LPTSTR', 'LPTSTR', 'DWORD', 'DWORD'], ['pName', 'pEnvironment', 'pDriverName', 'dwDeleteFlag', 'dwVersionFlag'], 'BOOL'), 'DeletePrinterKey': (2, ['HANDLE', 'LPCTSTR'], ['hPrinter', 'pKeyName'], '[ERROR_CODE]'), 'DeletePrintProcessor': (3, ['LPTSTR', 'LPTSTR', 'LPTSTR'], ['pName', 'pEnvironment', 'pPrintProcessorName'], 'BOOL'), 'DeletePrintProvidor': (3, ['LPTSTR', 'LPTSTR', 'LPTSTR'], ['pName', 'pEnvironment', 'pPrintProviderName'], 'BOOL'), 'EnumForms': (6, ['HANDLE', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['hPrinter', 'Level', 'pForm', 'cbBuf', 'pcbNeeded', 'pcReturned'], 'BOOL'), 'EnumJobs': (8, ['HANDLE', 'DWORD', 'DWORD', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['hPrinter', 'FirstJob', 'NoJobs', 'Level', 'pJob', 'cbBuf', 'pcbNeeded', 'pcReturned'], 'BOOL'), 'EnumMonitors': (6, ['LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['pName', 'Level', 'pMonitors', 'cbBuf', 'pcbNeeded', 'pcReturned'], 'BOOL'), 'EnumPorts': (6, ['LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['pName', 'Level', 'pPorts', 'cbBuf', 'pcbNeeded', 'pcReturned'], 'BOOL'), 'EnumPrinterData': (9, ['HANDLE', 'DWORD', 'LPTSTR', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hPrinter', 'dwIndex', 'pValueName', 'cbValueName', 'pcbValueName', 'pType', 'pData', 'cbData', 'pcbData'], '[ERROR_CODE]'), 'EnumPrinterDataEx': (6, ['HANDLE', 'LPCTSTR', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['hPrinter', 'pKeyName', 'pEnumValues', 'cbEnumValues', 'pcbEnumValues', 'pnEnumValues'], '[ERROR_CODE]'), 'EnumPrinterDrivers': (7, ['LPTSTR', 'LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['pName', 'pEnvironment', 'Level', 'pDriverInfo', 'cbBuf', 'pcbNeeded', 'pcReturned'], 'BOOL'), 'EnumPrinterKey': (5, ['HANDLE', 'LPCTSTR', 'LPTSTR', 'DWORD', 'LPDWORD'], ['hPrinter', 'pKeyName', 'pSubkey', 'cbSubkey', 'pcbSubkey'], '[ERROR_CODE]'), 'EnumPrinters': (7, ['ENUMPRINTERSFLAGS', 'LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['Flags', 'Name', 'Level', 'pPrinterEnum', 'cbBuf', 'pcbNeeded', 'pcReturned'], 'BOOL'), 'EnumPrintProcessorDatatypes': (7, ['LPTSTR', 'LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['pName', 'pPrintProcessorName', 'Level', 'pDatatypes', 'cbBuf', 'pcbNeeded', 'pcReturned'], 'BOOL'), 'EnumPrintProcessors': (7, ['LPTSTR', 'LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD', 'LPDWORD'], ['pName', 'pEnvironment', 'Level', 'pPrintProcessorInfo', 'cbBuf', 'pcbNeeded', 'pcReturned'], 'BOOL'), 'FlushPrinter': (5, ['HANDLE', 'LPVOID', 'DWORD', 'LPDWORD', 'DWORD'], ['hPrinter', 'pBuf', 'cbBuf', 'pcWritten', 'cSleep'], 'BOOL'), 'GetForm': (6, ['HANDLE', 'LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hPrinter', 'pFormName', 'Level', 'pForm', 'cbBuf', 'pcbNeeded'], 'BOOL'), 'GetJob': (6, ['HANDLE', 'DWORD', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hPrinter', 'JobId', 'Level', 'pJob', 'cbBuf', 'pcbNeeded'], 'BOOL'), 'GetPrinter': (5, ['HANDLE', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hPrinter', 'Level', 'pPrinter', 'cbBuf', 'pcbNeeded'], 'BOOL'), 'GetPrinterData': (6, ['HANDLE', 'LPTSTR', 'REGTYPE*', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hPrinter', 'pValueName', 'pType', 'pData', 'nSize', 'pcbNeeded'], '[ERROR_CODE]'), 'GetPrinterDataEx': (7, ['HANDLE', 'LPCTSTR', 'LPCTSTR', 'REGTYPE*', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hPrinter', 'pKeyName', 'pValueName', 'pType', 'pData', 'nSize', 'pcbNeeded'], '[ERROR_CODE]'), 'GetPrinterDriver': (6, ['HANDLE', 'LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hPrinter', 'pEnvironment', 'Level', 'pDriverInfo', 'cbBuf', 'pcbNeeded'], 'BOOL'), 'GetPrinterDriverDirectory': (6, ['LPTSTR', 'LPTSTR', 'DWORD', 'LPWSTR', 'DWORD', 'LPDWORD'], ['pName', 'pEnvironment', 'Level', 'pDriverDirectory', 'cbBuf', 'pcbNeeded'], 'BOOL'), 'GetPrintProcessorDirectory': (6, ['LPTSTR', 'LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD'], ['pName', 'pEnvironment', 'Level', 'pPrintProcessorInfo', 'cbBuf', 'pcbNeeded'], 'BOOL'), 'OpenPrinter': (3, ['LPTSTR', 'LPHANDLE', 'LPPRINTER_DEFAULTS'], ['pPrinterName', 'phPrinter', 'pDefault'], 'BOOL'), 'ResetPrinter': (2, ['HANDLE', 'LPPRINTER_DEFAULTS'], ['hPrinter', 'pDefault'], 'BOOL'), 'StartDocPrinter': (3, ['HANDLE', 'DWORD', 'LPBYTE'], ['hPrinter', 'Level', 'pDocInfo'], 'DWORD'), 'SetForm': (4, ['HANDLE', 'LPTSTR', 'DWORD', 'LPTSTR'], ['hPrinter', 'pFormName', 'Level', 'pForm'], 'BOOL'), 'SetJob': (5, ['HANDLE', 'DWORD', 'DWORD', 'LPBYTE', 'JOBCONTROL'], ['hPrinter', 'JobId', 'Level', 'pJob', 'Command'], 'BOOL'), 'SetPort': (4, ['LPTSTR', 'LPTSTR', 'DWORD', 'LPBYTE'], ['pName', 'pPortName', 'dwLevel', 'pPortInfo'], 'BOOL'), 'SetPrinter': (4, ['HANDLE', 'DWORD', 'LPBYTE', 'PRINTERCONTROL'], ['hPrinter', 'Level', 'pPrinter', 'Command'], 'BOOL'), 'SetPrinterData': (5, ['HANDLE', 'LPTSTR', 'REGTYPE', 'LPBYTE', 'DWORD'], ['hPrinter', 'pValueName', 'Type', 'pData', 'cbData'], '[ERROR_CODE]'), 'SetPrinterDataEx': (6, ['HANDLE', 'LPCTSTR', 'LPCTSTR', 'REGTYPE', 'LPBYTE', 'DWORD'], ['hPrinter', 'pKeyName', 'pValueName', 'Type', 'pData', 'cbData'], '[ERROR_CODE]'), 'DeviceCapabilities': (5, ['LPCTSTR', 'LPCTSTR', 'DEVICECAPABILITY', 'LPTSTR', 'CONST DEVMODE*'], ['pDevice', 'pPort', 'fwCapability', 'pOutput', 'pDevMode'], 'DWORD'), 'CorePrinterDriverInstalled': (6, ['LPCTSTR', 'LPCTSTR', 'GUID', 'FILETIME', 'DWORDLONG', 'BOOL*'], ['pszServer', 'pszEnvironment', 'CoreDriverGUID', 'ftDriverDate', 'dwlDriverVersion', 'pbDriverInstalled'], 'HRESULT'), 'DeletePrinterDriverPackage': (3, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR'], ['pszServer', 'pszInfPath', 'pszEnvironment'], 'HRESULT'), 'GetCorePrinterDrivers': (5, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'DWORD', 'PCORE_PRINTER_DRIVER'], ['pszServer', 'pszEnvironment', 'pszzCoreDriverDependencies', 'cCorePrinterDrivers', 'pCorePrinterDrivers'], 'HRESULT'), 'GetPrinterDriverPackagePath': (7, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPTSTR', 'DWORD', 'LPDWORD'], ['pszServer', 'pszEnvironment', 'pszLanguage', 'pszPackageID', 'pszDriverPackageCab', 'cchDriverPackageCab', 'pcchRequiredSize'], 'HRESULT'), 'InstallPrinterDriverFromPackage': (5, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'DWORD'], ['pszServer', 'pszInfPath', 'pszDriverName', 'pszEnvironment', 'dwFlags'], 'HRESULT'), 'UploadPrinterDriverPackage': (7, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'DWORD', 'HWND', 'LPTSTR', 'PULONG'], ['pszServer', 'pszInfPath', 'pszEnvironment', 'dwFlags', 'hwnd', 'pszDestInfPath', 'pcchDestInfPath'], 'HRESULT'), 'AbortPrinter': (1, ['HANDLE'], ['hPrinter'], 'BOOL'), 'AddForm': (3, ['HANDLE', 'DWORD', 'LPBYTE'], ['hPrinter', 'Level', 'pForm'], 'BOOL'), 'AddPort': (3, ['LPTSTR', 'HWND', 'LPTSTR'], ['pName', 'hWnd', 'pMonitorName'], 'BOOL'), 'AdvancedDocumentProperties': (5, ['HWND', 'HANDLE', 'LPTSTR', 'PDEVMODE', 'PDEVMODE'], ['hWnd', 'hPrinter', 'pDeviceName', 'pDevModeOutput', 'pDevModeInput'], 'LONG'), 'ClosePrinter': (1, ['HANDLE'], ['hPrinter'], 'BOOL'), 'ConnectToPrinterDlg': (2, ['HWND', 'DWORD'], ['hwnd', 'Flags'], 'HANDLE'), 'CreatePrintAsyncNotifyChannel': (6, ['LPCWSTR', 'PRINTASYNCNOTIFICATIONTYPE*', 'PRINTASYNCNOTIFYUSERFILTER', 'PRINTASYNCNOTIFYCONVERSATIONSTYLE', 'IPRINTASYNCNOTIFYCALLBACK*', 'IPRINTASYNCNOTIFYCHANNEL**'], ['pName', 'pSchema', 'filter', 'directionality', 'pCallback', 'ppChannel'], 'HRESULT'), 'DeletePrinter': (1, ['HANDLE'], ['hPrinter'], 'BOOL'), 'DocumentProperties': (6, ['HWND', 'HANDLE', 'LPTSTR', 'PDEVMODE', 'PDEVMODE', 'DOCUMENTMODE'], ['hWnd', 'hPrinter', 'pDeviceName', 'pDevModeOutput', 'pDevModeInput', 'fMode'], 'LONG'), 'EndDocPrinter': (1, ['HANDLE'], ['hPrinter'], 'BOOL'), 'EndPagePrinter': (1, ['HANDLE'], ['hPrinter'], 'BOOL'), 'FindClosePrinterChangeNotification': (1, ['HANDLE'], ['hChange'], 'BOOL'), 'FindFirstPrinterChangeNotification': (4, ['HANDLE', 'PRINTERCHANGEFLAGS', 'DWORD', 'PPRINTER_NOTIFY_OPTIONS'], ['hPrinter', 'fdwFilter', 'fdwOptions', 'pPrinterNotifyOptions'], 'HANDLE'), 'FindNextPrinterChangeNotification': (4, ['HANDLE', 'PRINTERCHANGEFLAGS*', 'PPRINTER_NOTIFY_OPTIONS', 'LPVOID*'], ['hChange', 'pdwChange', 'pPrinterNotifyOptions', 'ppPrinterNotifyInfo'], 'BOOL'), 'FreePrinterNotifyInfo': (1, ['PPRINTER_NOTIFY_INFO'], ['pPrinterNotifyInfo'], 'BOOL'), 'GetDefaultPrinter': (2, ['LPTSTR', 'LPDWORD'], ['pszBuffer', 'pcchBuffer'], 'BOOL'), 'GetPrinterDriver2': (7, ['HWND', 'HANDLE', 'LPTSTR', 'DWORD', 'LPBYTE', 'DWORD', 'LPDWORD'], ['hWnd', 'hPrinter', 'pEnvironment', 'Level', 'pDriverInfo', 'cbBuf', 'pcbNeeded'], 'BOOL'), 'OpenPrinter2': (4, ['LPCTSTR', 'LPHANDLE', 'LPPRINTER_DEFAULTS', 'PPRINTER_OPTIONS'], ['pPrinterName', 'phPrinter', 'pDefault', 'pOptions'], 'BOOL'), 'PrinterProperties': (2, ['HWND', 'HANDLE'], ['hWnd', 'hPrinter'], 'BOOL'), 'ReadPrinter': (4, ['HANDLE', 'LPVOID', 'DWORD', 'LPDWORD'], ['hPrinter', 'pBuf', 'cbBuf', 'pNoBytesRead'], 'BOOL'), 'RegisterForPrintAsyncNotifications': (6, ['LPCWSTR', 'PRINTASYNCNOTIFICATIONTYPE*', 'PRINTASYNCNOTIFYUSERFILTER', 'PRINTASYNCNOTIFYCONVERSATIONSTYLE', 'IPRINTASYNCNOTIFYCALLBACK*', 'HANDLE*'], ['pName', 'pSchema', 'filter', 'directionality', 'pCallback', 'pRegistrationHandler'], 'HRESULT'), 'ReportJobProcessingProgress': (4, ['HANDLE', 'ULONG', 'EPRINTXPSJOBOPERATION', 'EPRINTXPSJOBPROGRESS'], ['printerHandle', 'jobId', 'jobOperation', 'jobProgress'], 'HRESULT'), 'ScheduleJob': (2, ['HANDLE', 'DWORD'], ['hPrinter', 'dwJobID'], 'BOOL'), 'SetDefaultPrinter': (1, ['LPCTSTR'], ['pszPrinter'], 'BOOL'), 'StartPagePrinter': (1, ['HANDLE'], ['hPrinter'], 'BOOL'), 'UnRegisterForPrintAsyncNotifications': (1, ['HANDLE'], ['hRegistrationHandler'], 'HRESULT'), 'WritePrinter': (4, ['HANDLE', 'LPVOID', 'DWORD', 'LPDWORD'], ['hPrinter', 'pBuf', 'cbBuf', 'pcWritten'], 'BOOL')}

dict5_pdh = {'PdhAddCounter': (4, ['PDH_HQUERY', 'LPCTSTR', 'DWORD_PTR', 'PDH_HCOUNTER*'], ['hQuery', 'szFullCounterPath', 'dwUserData', 'phCounter'], 'PDH_STATUS'), 'PdhAddEnglishCounter': (4, ['PDH_HQUERY', 'LPCTSTR', 'DWORD_PTR', 'PDH_HCOUNTER*'], ['hQuery', 'szFullCounterPath', 'dwUserData', 'phCounter'], 'PDH_STATUS'), 'PdhBindInputDataSource': (2, ['PDH_HLOG*', 'LPCTSTR'], ['phDataSource', 'szLogFileNameList'], 'PDH_STATUS'), 'PdhBrowseCounters': (1, ['PPDH_BROWSE_DLG_CONFIG'], ['pBrowseDlgData'], 'PDH_STATUS'), 'PdhBrowseCountersH': (1, ['PPDH_BROWSE_DLG_CONFIG'], ['pBrowseDlgData'], 'PDH_STATUS'), 'PdhCalculateCounterFromRawValue': (5, ['PDH_HCOUNTER', 'PDHFORMATFLAGS', 'PPDH_RAW_COUNTER', 'PPDH_RAW_COUNTER', 'PPDH_FMT_COUNTERVALUE'], ['hCounter', 'dwFormat', 'rawValue1', 'rawValue2', 'fmtValue'], 'PDH_STATUS'), 'PdhCloseLog': (2, ['PDH_HLOG', 'DWORD'], ['hLog', 'dwFlags'], 'PDH_STATUS'), 'PdhCloseQuery': (1, ['PDH_HQUERY'], ['hQuery'], 'PDH_STATUS'), 'PdhCollectQueryData': (1, ['PDH_HQUERY'], ['hQuery'], 'PDH_STATUS'), 'PdhCollectQueryDataEx': (3, ['PDH_HQUERY', 'DWORD', 'HANDLE'], ['hQuery', 'dwIntervalTime', 'hNewDataEvent'], 'PDH_STATUS'), 'PdhCollectQueryDataWithTime': (2, ['PDH_HQUERY', 'LONGLONG*'], ['hQuery', 'pllTimeStamp'], 'PDH_STATUS'), 'PdhComputeCounterStatistics': (6, ['PDH_HCOUNTER', 'PDHFORMATFLAGS', 'DWORD', 'DWORD', 'PPDH_RAW_COUNTER', 'PPDH_STATISTICS'], ['hCounter', 'dwFormat', 'dwFirstEntry', 'dwNumEntries', 'lpRawValueArray', 'data'], 'PDH_STATUS'), 'PdhConnectMachine': (1, ['LPCTSTR'], ['szMachineName'], 'PDH_STATUS'), 'PdhEnumLogSetNames': (3, ['LPCTSTR', 'LPTSTR', 'LPDWORD'], ['szDataSource', 'mszLogSetNameList', 'pcchBufferLength'], 'PDH_STATUS'), 'PdhEnumMachines': (3, ['LPCTSTR', 'LPTSTR', 'LPDWORD'], ['szDataSource', 'mszMachineNameList', 'pcchBufferLength'], 'PDH_STATUS'), 'PdhEnumMachinesH': (3, ['PDH_HLOG', 'LPTSTR', 'LPDWORD'], ['hDataSource', 'mszMachineNameList', 'pcchBufferLength'], 'PDH_STATUS'), 'PdhEnumObjectItems': (9, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD', 'LPTSTR', 'LPDWORD', 'PERFDETAILLEVEL', 'DWORD'], ['szDataSource', 'szMachineName', 'szObjectName', 'mszCounterList', 'pcchCounterListLength', 'mszInstanceList', 'pcchInstanceListLength', 'dwDetailLevel', 'dwFlags'], 'PDH_STATUS'), 'PdhEnumObjectItemsH': (9, ['PDH_HLOG', 'LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD', 'LPTSTR', 'LPDWORD', 'PERFDETAILLEVEL', 'DWORD'], ['hDataSource', 'szMachineName', 'szObjectName', 'mszCounterList', 'pcchCounterListLength', 'mszInstanceList', 'pcchInstanceListLength', 'dwDetailLevel', 'dwFlags'], 'PDH_STATUS'), 'PdhEnumObjects': (6, ['LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD', 'PERFDETAILLEVEL', 'BOOL'], ['szDataSource', 'szMachineName', 'mszObjectList', 'pcchBufferLength', 'dwDetailLevel', 'bRefresh'], 'PDH_STATUS'), 'PdhEnumObjectsH': (6, ['PDH_HLOG', 'LPCTSTR', 'LPTSTR', 'LPDWORD', 'PERFDETAILLEVEL', 'BOOL'], ['hDataSource', 'szMachineName', 'mszObjectList', 'pcchBufferLength', 'dwDetailLevel', 'bRefresh'], 'PDH_STATUS'), 'PdhExpandCounterPath': (3, ['LPCTSTR', 'LPTSTR', 'LPDWORD'], ['szWildCardPath', 'mszExpandedPathList', 'pcchPathListLength'], 'PDH_STATUS'), 'PdhExpandWildCardPath': (5, ['LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD', 'PDHEXPANDFLAGS'], ['szDataSource', 'szWildCardPath', 'mszExpandedPathList', 'pcchPathListLength', 'dwFlags'], 'PDH_STATUS'), 'PdhExpandWildCardPathH': (5, ['PDH_HLOG', 'LPCTSTR', 'LPTSTR', 'LPDWORD', 'PDHEXPANDFLAGS'], ['hDataSource', 'szWildCardPath', 'mszExpandedPathList', 'pcchPathListLength', 'dwFlags'], 'PDH_STATUS'), 'PdhFormatFromRawValue': (6, ['DWORD', 'PDHFORMATFLAGS', 'LONGLONG*', 'PPDH_RAW_COUNTER', 'PPDH_RAW_COUNTER', 'PPDH_FMT_COUNTERVALUE'], ['dwCounterType', 'dwFormat', 'pTimeBase', 'rawValue1', 'rawValue2', 'fmtValue'], 'PDH_STATUS'), 'PdhGetCounterInfo': (4, ['PDH_HCOUNTER', 'BOOLEAN', 'LPDWORD', 'PPDH_COUNTER_INFO'], ['hCounter', 'bRetrieveExplainText', 'pdwBufferSize', 'lpBuffer'], 'PDH_STATUS'), 'PdhGetCounterTimeBase': (2, ['PDH_HCOUNTER', 'LONGLONG*'], ['hCounter', 'pTimeBase'], 'PDH_STATUS'), 'PdhGetDataSourceTimeRange': (4, ['LPCTSTR', 'LPDWORD', 'PPDH_TIME_INFO', 'LPDWORD'], ['szDataSource', 'pdwNumEntries', 'pInfo', 'pdwBufferSize'], 'PDH_STATUS'), 'PdhGetDataSourceTimeRangeH': (4, ['PDH_HLOG', 'LPDWORD', 'PPDH_TIME_INFO', 'LPDWORD'], ['hDataSource', 'pdwNumEntries', 'pInfo', 'pdwBufferSize'], 'PDH_STATUS'), 'PdhGetDefaultPerfCounter': (5, ['LPCTSTR', 'LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD'], ['szDataSource', 'szMachineName', 'szObjectName', 'szDefaultCounterName', 'pcchBufferSize'], 'PDH_STATUS'), 'PdhGetDefaultPerfCounterH': (5, ['PDH_HLOG', 'LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD'], ['hDataSource', 'szMachineName', 'szObjectName', 'szDefaultCounterName', 'pcchBufferSize'], 'PDH_STATUS'), 'PdhGetDefaultPerfObject': (4, ['LPCTSTR', 'LPCTSTR', 'LPTSTR', 'LPDWORD'], ['szDataSource', 'szMachineName', 'szDefaultObjectName', 'pcchBufferSize'], 'PDH_STATUS'), 'PdhGetDefaultPerfObjectH': (4, ['PDH_HLOG', 'LPCTSTR', 'LPTSTR', 'LPDWORD'], ['hDataSource', 'szMachineName', 'szDefaultObjectName', 'pcchBufferSize'], 'PDH_STATUS'), 'PdhGetDllVersion': (1, ['LPDWORD'], ['lpdwVersion'], 'PDH_STATUS'), 'PdhGetFormattedCounterArray': (5, ['PDH_HCOUNTER', 'PDHFORMATFLAGS', 'LPDWORD', 'LPDWORD', 'PPDH_FMT_COUNTERVALUE_ITEM'], ['hCounter', 'dwFormat', 'lpdwBufferSize', 'lpdwBufferCount', 'ItemBuffer'], 'PDH_STATUS'), 'PdhGetFormattedCounterValue': (4, ['PDH_HCOUNTER', 'PDHFORMATFLAGS', 'LPDWORD', 'PPDH_FMT_COUNTERVALUE'], ['hCounter', 'dwFormat', 'lpdwType', 'pValue'], 'PDH_STATUS'), 'PdhGetLogFileSize': (2, ['PDH_HLOG', 'LONGLONG*'], ['hLog', 'llSize'], 'PDH_STATUS'), 'PdhGetRawCounterArray': (4, ['PDH_HCOUNTER', 'LPDWORD', 'LPDWORD', 'PPDH_RAW_COUNTER_ITEM'], ['hCounter', 'lpdwBufferSize', 'lpdwItemCount', 'ItemBuffer'], 'PDH_STATUS'), 'PdhGetRawCounterValue': (3, ['PDH_HCOUNTER', 'LPDWORD', 'PPDH_RAW_COUNTER'], ['hCounter', 'lpdwType', 'pValue'], 'PDH_STATUS'), 'PdhIsRealTimeQuery': (1, ['PDH_HQUERY'], ['hQuery'], 'BOOL'), 'PdhLookupPerfIndexByName': (3, ['LPCTSTR', 'LPCTSTR', 'LPDWORD'], ['szMachineName', 'szNameBuffer', 'pdwIndex'], 'PDH_STATUS'), 'PdhLookupPerfNameByIndex': (4, ['LPCTSTR', 'DWORD', 'LPTSTR', 'LPDWORD'], ['szMachineName', 'dwNameIndex', 'szNameBuffer', 'pcchNameBufferSize'], 'PDH_STATUS'), 'PdhMakeCounterPath': (4, ['PDH_COUNTER_PATH_ELEMENTS*', 'LPTSTR', 'LPDWORD', 'PDHPATHFLAGS'], ['pCounterPathElements', 'szFullPathBuffer', 'pcchBufferSize', 'dwFlags'], 'PDH_STATUS'), 'PdhOpenLog': (7, ['LPCTSTR', 'PDHOPENLOGFLAGS', 'PDH_LOG_TYPE*', 'PDH_HQUERY', 'DWORD', 'LPCTSTR', 'PDH_HLOG*'], ['szLogFileName', 'dwAccessFlags', 'lpdwLogType', 'hQuery', 'dwMaxSize', 'szUserCaption', 'phLog'], 'PDH_STATUS'), 'PdhOpenQuery': (3, ['LPCTSTR', 'DWORD_PTR', 'PDH_HQUERY*'], ['szDataSource', 'dwUserData', 'phQuery'], 'PDH_STATUS'), 'PdhOpenQueryH': (3, ['PDH_HLOG', 'DWORD_PTR', 'PDH_HQUERY*'], ['hDataSource', 'dwUserData', 'phQuery'], 'PDH_STATUS'), 'PdhParseCounterPath': (4, ['LPCTSTR', 'PDH_COUNTER_PATH_ELEMENTS*', 'LPDWORD', 'DWORD'], ['szFullPathBuffer', 'pCounterPathElements', 'pdwBufferSize', 'dwFlags'], 'PDH_STATUS'), 'PdhParseInstanceName': (6, ['LPCTSTR', 'LPTSTR', 'LPDWORD', 'LPTSTR', 'LPDWORD', 'LPDWORD'], ['szInstanceString', 'szInstanceName', 'pcchInstanceNameLength', 'szParentName', 'pcchParentNameLength', 'lpIndex'], 'PDH_STATUS'), 'PdhReadRawLogRecord': (4, ['PDH_HLOG', 'FILETIME', 'PPDH_RAW_LOG_RECORD', 'LPDWORD'], ['hLog', 'ftRecord', 'pRawLogRecord', 'pdwBufferLength'], 'PDH_STATUS'), 'PdhRemoveCounter': (1, ['PDH_HCOUNTER'], ['hCounter'], 'PDH_STATUS'), 'PdhSelectDataSource': (4, ['HWND', 'DWORD', 'LPTSTR', 'LPDWORD'], ['hWndOwner', 'dwFlags', 'szDataSource', 'pcchBufferLength'], 'PDH_STATUS'), 'PdhSetCounterScaleFactor': (2, ['PDH_HCOUNTER', 'LONG'], ['hCounter', 'lFactor'], 'PDH_STATUS'), 'PdhSetDefaultRealTimeDataSource': (1, ['DWORD'], ['dwDataSourceId'], 'PDH_STATUS'), 'PdhSetQueryTimeRange': (2, ['PDH_HQUERY', 'PPDH_TIME_INFO'], ['hQuery', 'pInfo'], 'PDH_STATUS'), 'PdhUpdateLog': (2, ['PDH_HLOG', 'LPCTSTR'], ['hLog', 'szUserString'], 'PDH_STATUS'), 'PdhUpdateLogFileCatalog': (1, ['PDH_HLOG'], ['hLog'], 'PDH_STATUS'), 'PdhValidatePath': (1, ['LPCTSTR'], ['szFullCounterPath'], 'PDH_STATUS'), 'PdhValidatePathEx': (2, ['PDH_HLOG', 'LPCTSTR'], ['hDataSource', 'szFullPathBuffer'], 'PDH_STATUS')}

dict5_clfsw32 = {'AlignReservedLog': (4, ['PVOID', 'ULONG', 'LONGLONG ', 'PLONGLONG'], ['pvMarshal', 'cReservedRecords', 'rgcbReservation', 'pcbAlignReservation'], 'BOOL'), 'AllocReservedLog': (3, ['PVOID', 'ULONG', 'PLONGLONG'], ['pvMarshal', 'cReservedRecords', 'pcbAdjustment'], 'BOOL'), 'CloseAndResetLogFile': (1, ['HANDLE'], ['hLog'], 'BOOL'), 'CreateLogFile': (6, ['LPCWSTR', 'ACCESS_MASK', 'FILE_SHARE_MODE', 'LPSECURITY_ATTRIBUTES', 'CREATE_LOG_DISPOSITION', 'CREATE_LOG_FLAGS_ATTRIBUTES'], ['pszLogFileName', 'fDesiredAccess', 'dwShareMode', 'psaLogFile', 'fCreateDisposition', 'fFlagsAndAttributes'], 'HANDLE'), 'DeleteLogByHandle': (1, ['HANDLE'], ['hLog'], 'BOOL'), 'DeleteLogFile': (2, ['LPCWSTR', 'PVOID'], ['pszLogFileName', 'pvReserved'], 'BOOL'), 'DumpLogRecords': (11, ['PWSTR', 'CLFS_RECORD_TYPE', 'PCLFS_LSN', 'PCLFS_LSN', 'PFILE', 'CLFS_PRINT_RECORD_ROUTINE', 'CLFS_BLOCK_ALLOCATION', 'CLFS_BLOCK_DEALLOCATION', 'PVOID', 'ULONG', 'ULONG'], ['pwszLogFileName', 'fRecordType', 'plsnStart', 'plsnEnd', 'pstrmOut', 'pfnPrintRecord', 'pfnAllocBlock', 'pfnFreeBlock', 'pvBlockAllocContext', 'cbBlock', 'cMaxBlocks'], 'BOOL'), 'FlushLogBuffers': (2, ['PVOID', 'LPOVERLAPPED'], ['pvMarshal', 'pOverlapped'], 'BOOL'), 'FlushLogToLsn': (4, ['PVOID', 'PCLFS_LSN', 'PCLFS_LSN', 'LPOVERLAPPED'], ['pvMarshalContext', 'plsnFlush', 'plsnLastFlushed', 'pOverlapped'], 'BOOL'), 'FreeReservedLog': (3, ['PVOID', 'ULONG', 'PLONGLONG'], ['pvMarshal', 'cReservedRecords', 'pcbAdjustment'], 'BOOL'), 'ReserveAndAppendLog': (10, ['PVOID', 'PCLFS_WRITE_ENTRY', 'ULONG', 'PCLFS_LSN', 'PCLFS_LSN', 'ULONG', 'LONGLONG ', 'ULONG', 'PCLFS_LSN', 'LPOVERLAPPED'], ['pvMarshal', 'rgWriteEntries', 'cWriteEntries', 'plsnUndoNext', 'plsnPrevious', 'cReserveRecords', 'rgcbReservation', 'fFlags', 'plsn', 'pOverlapped'], 'BOOL'), 'ReserveAndAppendLogAligned': (11, ['PVOID', 'PCLFS_WRITE_ENTRY', 'ULONG', 'ULONG', 'PCLFS_LSN', 'PCLFS_LSN', 'ULONG', 'LONGLONG ', 'ULONG', 'PCLFS_LSN', 'LPOVERLAPPED'], ['pvMarshal', 'rgWriteEntries', 'cWriteEntries', 'cbEntryAlignment', 'plsnUndoNext', 'plsnPrevious', 'cReserveRecords', 'rgcbReservation', 'fFlags', 'plsn', 'overlapped'], 'BOOL'), 'GetLogFileInformation': (3, ['HANDLE', 'PCLFS_INFORMATION', 'PULONG'], ['hLog', 'pinfoBuffer', 'cbBuffer'], 'BOOL'), 'GetLogIoStatistics': (5, ['HANDLE', 'PVOID', 'ULONG', 'CLFS_IOSTATS_CLASS', 'PULONG'], ['hLog', 'pvStatsBuffer', 'cbStatsBuffer', 'eStatsClass', 'pcbStatsWritten'], 'BOOL'), 'ReadLogRecord': (10, ['PVOID', 'PCLFS_LSN', 'CLFS_CONTEXT_MODE', 'PVOID*', 'PULONG', 'PCLFS_RECORD_TYPE', 'PCLFS_LSN', 'PCLFS_LSN', 'PVOID*', 'LPOVERLAPPED'], ['pvMarshal', 'plsnFirst', 'eContextMode', 'ppvReadBuffer', 'pcbReadBuffer', 'peRecordType', 'plsnUndoNext', 'plsnPrevious', 'ppvReadContext', 'pOverlapped'], 'BOOL'), 'ReadNextLogRecord': (9, ['PVOID', 'PVOID*', 'PULONG', 'PCLFS_RECORD_TYPE', 'PCLFS_LSN', 'PCLFS_LSN', 'PCLFS_LSN', 'PCLFS_LSN', 'LPOVERLAPPED'], ['pvReadContext', 'ppvBuffer', 'pcbBuffer', 'peRecordType', 'plsnUser', 'plsnUndoNext', 'plsnPrevious', 'plsnRecord', 'pOverlapped'], 'BOOL'), 'SetEndOfLog': (3, ['HANDLE', 'PCLFS_LSN', 'LPOVERLAPPED'], ['hLog', 'plsnEnd', 'lpOverlapped'], 'BOOL'), 'TruncateLog': (3, ['PVOID', 'PCLFS_LSN', 'LPOVERLAPPED'], ['pvMarshal', 'plsnEnd', 'lpOverlapped'], 'BOOL'), 'TerminateReadLog': (1, ['PVOID'], ['pvCursorContext'], 'BOOL'), 'GetLogReservationInfo': (4, ['PVOID', 'PULONG', 'PLONGLONG', 'PLONGLONG'], ['pvMarshal', 'pcbRecordNumber', 'pcbUserReservation', 'pcbCommitReservation'], 'BOOL'), 'AddLogContainer': (4, ['HANDLE', 'PULONGLONG', 'LPWSTR', 'LPVOID'], ['hLog', 'pcbContainer', 'pwszContainerPath', 'pReserved'], 'BOOL'), 'AddLogContainerSet': (5, ['HANDLE', 'USHORT', 'PULONGLONG', 'LPWSTR*', 'PVOID'], ['hLog', 'cContainers', 'pcbContainer', 'rgwszContainerPath', 'Reserved'], 'BOOL'), 'CreateLogContainerScanContext': (6, ['HANDLE', 'ULONG', 'ULONG', 'CLFS_SCAN_MODE', 'PCLFS_SCAN_CONTEXT', 'LPOVERLAPPED'], ['hLog', 'cFromContainer', 'cContainers', 'eScanMode', 'pcxScan', 'pOverlapped'], 'BOOL'), 'ScanLogContainers': (3, ['PCLFS_SCAN_CONTEXT', 'CLFS_SCAN_MODE', 'LPVOID'], ['pcxScan', 'eScanMode', 'pReserved'], 'BOOL'), 'GetLogContainerName': (5, ['HANDLE', 'CLFS_CONTAINER_ID', 'LPCWSTR', 'ULONG', 'PULONG'], ['hLog', 'cidLogicalContainer', 'pwstrContainerName', 'cLenContainerName', 'pcActualLenContainerName'], 'BOOL'), 'RemoveLogContainer': (4, ['HANDLE', 'LPWSTR', 'BOOL', 'LPVOID'], ['hLog', 'pwszContainerPath', 'fForce', 'pReserved'], 'BOOL'), 'RemoveLogContainerSet': (5, ['HANDLE', 'USHORT', 'LPWSTR*', 'BOOL', 'LPVOID'], ['hLog', 'cContainers', 'rgwszContainerPath', 'fForce', 'pReserved'], 'BOOL'), 'AdvanceLogBase': (4, ['PVOID', 'PCLFS_LSN', 'ULONG', 'LPOVERLAPPED'], ['pvMarshal', 'plsnBase', 'fFlags', 'pOverlapped'], 'BOOL'), 'ReadLogRestartArea': (6, ['PVOID', 'PVOID*', 'PULONG', 'PCLFS_LSN', 'PVOID*', 'LPOVERLAPPED'], ['pvMarshal', 'ppvRestartBuffer', 'pcbRestartBuffer', 'plsn', 'ppvContext', 'pOverlapped'], 'BOOL'), 'ReadPreviousLogRestartArea': (5, ['PVOID', 'PVOID*', 'PULONG', 'PCLFS_LSN', 'LPOVERLAPPED'], ['pvReadContext', 'ppvRestartBuffer', 'pcbRestartBuffer', 'plsnRestart', 'pOverlapped'], 'BOOL'), 'WriteLogRestartArea': (8, ['PVOID', 'PVOID', 'ULONG', 'PCLFS_LSN', 'ULONG', 'PULONG', 'PCLFS_LSN', 'LPOVERLAPPED'], ['pvMarshal', 'pvRestartBuffer', 'cbRestartBuffer', 'plsnBase', 'fFlags', 'pcbWritten', 'plsnNext', 'pOverlapped'], 'BOOL'), 'GetNextLogArchiveExtent': (4, ['CLFS_LOG_ARCHIVE_CONTEXT', 'CLFS_ARCHIVE_DESCRIPTOR ', 'ULONG', 'PULONG'], ['pvArchiveContext', 'rgadExtent', 'cDescriptors', 'pcDescriptorsReturned'], 'BOOL'), 'PrepareLogArchive': (12, ['HANDLE', 'PWSTR', 'ULONG', 'CONST PCLFS_LSN', 'CONST PCLFS_LSN', 'PULONG', 'PULONGLONG', 'PULONGLONG', 'PCLFS_LSN', 'PCLFS_LSN', 'PCLFS_LSN', 'PCLFS_LOG_ARCHIVE_CONTEXT'], ['hLog', 'pszBaseLogFileName', 'cLen', 'plsnLow', 'plsnHigh', 'pcActualLength', 'poffBaseLogFileData', 'pcbBaseLogFileLength', 'plsnBase', 'plsnLast', 'plsnCurrentArchiveTail', 'ppvArchiveContext'], 'BOOL'), 'ReadLogArchiveMetadata': (5, ['CLFS_LOG_ARCHIVE_CONTEXT', 'ULONG', 'ULONG', 'PBYTE', 'PULONG'], ['pvArchiveContext', 'cbOffset', 'cbBytesToRead', 'pbReadBuffer', 'pcbBytesRead'], 'BOOL'), 'SetLogArchiveMode': (2, ['HANDLE', 'CLFS_LOG_ARCHIVE_MODE'], ['hLog', 'eMode'], 'BOOL'), 'SetLogArchiveTail': (3, ['HANDLE', 'PCLFS_LSN', 'LPVOID'], ['hLog', 'plsnArchiveTail', 'pReserved'], 'BOOL'), 'TerminateLogArchive': (1, ['CLFS_LOG_ARCHIVE_CONTEXT'], ['pvArchiveContext'], 'BOOL'), 'ValidateLog': (4, ['LPCWSTR', 'LPSECURITY_ATTRIBUTES', 'PCLFS_INFORMATION', 'PULONG'], ['pszLogFileName', 'psaLogFile', 'pinfoBuffer', 'pcbBuffer'], 'BOOL'), 'CreateLogMarshallingArea': (8, ['HANDLE', 'CLFS_BLOCK_ALLOCATION', 'CLFS_BLOCK_DEALLOCATION', 'PVOID', 'ULONG', 'ULONG', 'ULONG', 'PVOID*'], ['hLog', 'pfnAllocBuffer', 'pfnFreeBuffer', 'pvBlockAllocContext', 'cbMarshallingBuffer', 'cMaxWriteBuffers', 'cMaxReadBuffers', 'ppvMarshal'], 'BOOL'), 'DeleteLogMarshallingArea': (1, ['PVOID'], ['pvMarshal'], 'BOOL'), 'LsnBlockOffset': (1, ['CONST CLFS_LSN*'], ['plsn'], 'ULONG'), 'LsnContainer': (1, ['CONST CLFS_LSN*'], ['plsn'], 'CLFS_CONTAINER_ID'), 'LsnCreate': (3, ['CLFS_CONTAINER_ID', 'ULONG', 'ULONG'], ['cidContainer', 'offBlock', 'cRecord'], 'CLFS_LSN'), 'LsnEqual': (2, ['CONST CLFS_LSN*', 'CONST CLFS_LSN*'], ['plsn1', 'plsn2'], 'BOOL'), 'LsnGreater': (2, ['CONST CLFS_LSN*', 'CONST CLFS_LSN*'], ['plsn1', 'plsn2'], 'BOOL'), 'LsnLess': (2, ['CONST CLFS_LSN*', 'CONST CLFS_LSN*'], ['plsn1', 'plsn2'], 'BOOL'), 'LsnNull': (1, ['CONST CLFS_LSN*'], ['plsn'], 'BOOL'), 'LsnRecordSequence': (1, ['CONST CLFS_LSN*'], ['plsn'], 'ULONG'), 'LsnDecrement': (1, ['PCLFS_LSN'], ['plsn'], 'CLFS_LSN'), 'LsnIncrement': (1, ['PCLFS_LSN'], ['plsn'], 'CLFS_LSN'), 'LsnInvalid': (1, ['CONST CLFS_LSN*'], ['plsn'], 'BOOL'), 'DeregisterManageableLogClient': (1, ['HANDLE'], ['hLog'], 'BOOL'), 'HandleLogFull': (1, ['HANDLE'], ['hLog'], 'BOOL'), 'InstallLogPolicy': (2, ['HANDLE', 'PCLFS_MGMT_POLICY'], ['hLog', 'pPolicy'], 'BOOL'), 'LogTailAdvanceFailure': (2, ['HANDLE', 'ERROR_CODE'], ['hLog', 'dwReason'], 'BOOL'), 'QueryLogPolicy': (4, ['HANDLE', 'CLFS_MGMT_POLICY_TYPE', 'PCLFS_MGMT_POLICY', 'PULONG'], ['hLog', 'ePolicyType', 'pPolicyBuffer', 'pcbPolicyBuffer'], 'BOOL'), 'ReadLogNotification': (3, ['HANDLE', 'PCLFS_MGMT_NOTIFICATION', 'LPOVERLAPPED'], ['hLog', 'pNotification', 'lpOverlapped'], 'BOOL'), 'RegisterForLogWriteNotification': (3, ['HANDLE', 'ULONG', 'BOOL'], ['hLog', 'cbThreshold', 'fEnable'], 'BOOL'), 'RemoveLogPolicy': (2, ['HANDLE', 'CLFS_MGMT_POLICY_TYPE'], ['hLog', 'ePolicyType'], 'BOOL'), 'RegisterManageableLogClient': (2, ['HANDLE', 'PLOG_MANAGEMENT_CALLBACKS'], ['hLog', 'pCallbacks'], 'BOOL'), 'SetLogFileSizeWithPolicy': (3, ['HANDLE', 'PULONGLONG', 'PULONGLONG'], ['hLog', 'pDesiredSize', 'pResultingSize'], 'BOOL')}

dict5_powrprof = {'CallNtPowerInformation': (5, ['POWER_INFORMATION_LEVEL', 'PVOID', 'ULONG', 'PVOID', 'ULONG'], ['InformationLevel', 'lpInputBuffer', 'nInputBufferSize', 'lpOutputBuffer', 'nOutputBufferSize'], 'NTSTATUS'), 'DevicePowerClose': (0, [], [], 'BOOLEAN'), 'DevicePowerEnumDevices': (5, ['ULONG', 'ULONG', 'ULONG', 'PBYTE', 'PULONG'], ['QueryIndex', 'QueryInterpretationFlags', 'QueryFlags', 'pReturnBuffer', 'pBufferSize'], 'BOOLEAN'), 'DevicePowerOpen': (1, ['ULONG'], ['Flags'], 'BOOLEAN'), 'DevicePowerSetDeviceState': (3, ['LPCWSTR', 'DEVICEPOWER_FLAGS', 'PCVOID'], ['DeviceDescription', 'SetFlags', 'SetData'], 'DWORD'), 'GetCurrentPowerPolicies': (2, ['PGLOBAL_POWER_POLICY', 'PPOWER_POLICY'], ['pGlobalPowerPolicy', 'pPowerPolicy'], 'BOOLEAN'), 'PowerCanRestoreIndividualDefaultPowerScheme': (1, ['CONST GUID*'], ['SchemeGuid'], '[ERROR_CODE]'), 'PowerCreatePossibleSetting': (4, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'ULONG'], ['RootSystemPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'PossibleSettingIndex'], '[ERROR_CODE]'), 'PowerCreateSetting': (3, ['HKEY', 'CONST GUID*', 'CONST GUID*'], ['RootSystemPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid'], '[ERROR_CODE]'), 'PowerDeleteScheme': (2, ['HKEY', 'CONST GUID*'], ['RootPowerKey', 'SchemeGuid'], '[ERROR_CODE]'), 'PowerDeterminePlatformRole': (0, [], [], 'POWER_PLATFORM_ROLE'), 'PowerDuplicateScheme': (3, ['HKEY', 'CONST GUID*', 'GUID**'], ['RootPowerKey', 'SourceSchemeGuid', 'DestinationSchemeGuid'], '[ERROR_CODE]'), 'PowerEnumerate': (7, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'POWER_DATA_ACCESSOR', 'ULONG', 'UCHAR*', 'DWORD*'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'AccessFlags', 'Index', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerImportPowerScheme': (3, ['HKEY', 'LPCWSTR', 'GUID**'], ['RootPowerKey', 'ImportFileNamePath', 'DestinationSchemeGuid'], '[ERROR_CODE]'), 'PowerIsSettingRangeDefined': (2, ['CONST GUID*', 'CONST GUID*'], ['SubKeyGuid', 'SettingGuid'], 'BOOLEAN'), 'PowerReadACDefaultIndex': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'LPDWORD'], ['RootPowerKey', 'SchemePersonalityGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'AcDefaultIndex'], '[ERROR_CODE]'), 'PowerReadACValue': (7, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'REGTYPE-PULONG', 'LPBYTE', 'LPDWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Type', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerReadACValueIndex': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'LPDWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'AcValueIndex'], '[ERROR_CODE]'), 'PowerReadDCDefaultIndex': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'LPDWORD'], ['RootPowerKey', 'SchemePersonalityGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'DcDefaultIndex'], '[ERROR_CODE]'), 'PowerReadDCValue': (7, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'REGTYPE-PULONG', 'PUCHAR', 'LPDWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Type', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerReadDCValueIndex': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'LPDWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'DcValueIndex'], '[ERROR_CODE]'), 'PowerReadDescription': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'LPWSTR', 'LPDWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerReadFriendlyName': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'LPWSTR', 'LPDWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerReadIconResourceSpecifier': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'PUCHAR', 'LPDWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerReadPossibleDescription': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'ULONG', 'PUCHAR', 'LPDWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'PossibleSettingIndex', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerReadPossibleFriendlyName': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'ULONG', 'PUCHAR', 'LPDWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'PossibleSettingIndex', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerReadPossibleValue': (7, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'REGTYPE-PULONG', 'ULONG', 'PUCHAR', 'LPDWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Type', 'PossibleSettingIndex', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerReadSettingAttributes': (2, ['CONST GUID*', 'CONST GUID*'], ['SubGroupGuid', 'PowerSettingGuid'], '[ERROR_CODE]'), 'PowerReadValueIncrement': (4, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'LPDWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'ValueIncrement'], '[ERROR_CODE]'), 'PowerReadValueMax': (4, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'LPDWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'ValueMaximum'], '[ERROR_CODE]'), 'PowerReadValueMin': (4, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'LPDWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'ValueMinimum'], '[ERROR_CODE]'), 'PowerReadValueUnitsSpecifier': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'LPWSTR', 'LPDWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerRemovePowerSetting': (2, ['CONST GUID*', 'CONST GUID*'], ['PowerSettingSubKeyGuid', 'PowerSettingGuid'], '[ERROR_CODE]'), 'PowerReplaceDefaultPowerSchemes': (0, [], [], '[ERROR_CODE]'), 'PowerRestoreDefaultPowerSchemes': (0, [], [], '[ERROR_CODE]'), 'PowerRestoreIndividualDefaultPowerScheme': (1, ['CONST GUID*'], ['SchemeGuid'], '[ERROR_CODE]'), 'PowerSetActiveScheme': (2, ['HKEY', 'CONST GUID*'], ['UserRootPowerKey', 'SchemeGuid'], '[ERROR_CODE]'), 'PowerSettingAccessCheck': (2, ['POWER_DATA_ACCESSOR', 'CONST GUID*'], ['AccessFlags', 'PowerGuid'], '[ERROR_CODE]'), 'PowerSettingAccessCheckEx': (3, ['POWER_DATA_ACCESSOR', 'CONST GUID*', 'REGSAM'], ['AccessFlags', 'PowerGuid', 'AccessType'], '[ERROR_CODE]'), 'PowerSettingRegisterNotification': (4, ['LPCGUID', 'DWORD', 'HANDLE', 'PHPOWERNOTIFY'], ['SettingGuid', 'Flags', 'Recipient', 'RegistrationHandle'], '[ERROR_CODE]'), 'PowerSettingUnregisterNotification': (1, ['HPOWERNOTIFY'], ['RegistrationHandle'], '[ERROR_CODE]'), 'PowerWriteACDefaultIndex': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'DWORD'], ['RootSystemPowerKey', 'SchemePersonalityGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'DefaultAcIndex'], '[ERROR_CODE]'), 'PowerWriteACValueIndex': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'DWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'AcValueIndex'], '[ERROR_CODE]'), 'PowerWriteDCDefaultIndex': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'DWORD'], ['RootSystemPowerKey', 'SchemePersonalityGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'DefaultDcIndex'], '[ERROR_CODE]'), 'PowerWriteDCValueIndex': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'DWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'DcValueIndex'], '[ERROR_CODE]'), 'PowerWriteDescription': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'UCHAR*', 'DWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerWriteFriendlyName': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'UCHAR*', 'DWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerWriteIconResourceSpecifier': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'CONST GUID*', 'UCHAR*', 'DWORD'], ['RootPowerKey', 'SchemeGuid', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerWritePossibleDescription': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'ULONG', 'UCHAR*', 'DWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'PossibleSettingIndex', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerWritePossibleFriendlyName': (6, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'ULONG', 'UCHAR*', 'DWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'PossibleSettingIndex', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerWritePossibleValue': (7, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'ULONG', 'ULONG', 'UCHAR*', 'DWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Type', 'PossibleSettingIndex', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'PowerWriteSettingAttributes': (3, ['CONST GUID*', 'CONST GUID*', 'DWORD'], ['SubGroupGuid', 'PowerSettingGuid', 'Attributes'], '[ERROR_CODE]'), 'PowerWriteValueIncrement': (4, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'DWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'ValueIncrement'], '[ERROR_CODE]'), 'PowerWriteValueMax': (4, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'DWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'ValueMaximum'], '[ERROR_CODE]'), 'PowerWriteValueMin': (4, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'DWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'ValueMinimum'], '[ERROR_CODE]'), 'PowerWriteValueUnitsSpecifier': (5, ['HKEY', 'CONST GUID*', 'CONST GUID*', 'UCHAR*', 'DWORD'], ['RootPowerKey', 'SubGroupOfPowerSettingsGuid', 'PowerSettingGuid', 'Buffer', 'BufferSize'], '[ERROR_CODE]'), 'CanUserWritePwrScheme': (0, [], [], 'BOOLEAN'), 'DeletePwrScheme': (1, ['UINT'], ['uiIndex'], 'BOOLEAN'), 'EnumPwrSchemes': (2, ['PWRSCHEMESENUMPROC', 'LPARAM'], ['lpfnPwrSchemesEnumProc', 'lParam'], 'BOOLEAN'), 'GetActivePwrScheme': (1, ['PUINT'], ['puiID'], 'BOOLEAN'), 'PowerGetActiveScheme': (2, ['HKEY', 'GUID**'], ['UserRootPowerKey', 'ActivePolicyGuid'], '[ERROR_CODE]'), 'GetPwrDiskSpindownRange': (2, ['PUINT', 'PUINT'], ['RangeMax', 'RangeMin'], 'BOOLEAN'), 'IsPwrHibernateAllowed': (0, [], [], 'BOOLEAN'), 'GetPwrCapabilities': (1, ['PSYSTEM_POWER_CAPABILITIES'], ['lpSystemPowerCapabilities'], 'BOOLEAN'), 'IsPwrShutdownAllowed': (0, [], [], 'BOOLEAN'), 'IsPwrSuspendAllowed': (0, [], [], 'BOOLEAN'), 'ReadGlobalPwrPolicy': (1, ['PGLOBAL_POWER_POLICY'], ['pGlobalPowerPolicy'], 'BOOLEAN'), 'ReadProcessorPwrScheme': (2, ['UINT', 'PMACHINE_PROCESSOR_POWER_POLICY'], ['uiID', 'pMachineProcessorPowerPolicy'], 'BOOLEAN'), 'ReadPwrScheme': (2, ['UINT', 'PPOWER_POLICY'], ['uiID', 'pPowerPolicy'], 'BOOLEAN'), 'SetActivePwrScheme': (3, ['UINT', 'PGLOBAL_POWER_POLICY', 'PPOWER_POLICY'], ['uiID', 'lpGlobalPowerPolicy', 'lpPowerPolicy'], 'BOOLEAN'), 'SetSuspendState': (3, ['BOOLEAN', 'BOOLEAN', 'BOOLEAN'], ['Hibernate', 'ForceCritical', 'DisableWakeEvent'], 'BOOLEAN'), 'WriteGlobalPwrPolicy': (1, ['PGLOBAL_POWER_POLICY'], ['pGlobalPowerPolicy'], 'BOOLEAN'), 'WriteProcessorPwrScheme': (2, ['UINT', 'PMACHINE_PROCESSOR_POWER_POLICY'], ['ID', 'pMachineProcessorPowerPolicy'], 'BOOLEAN'), 'WritePwrScheme': (4, ['PUINT', 'LPWSTR', 'LPWSTR', 'PPOWER_POLICY'], ['puiID', 'lpszName', 'lpszDescription', 'pPowerPolicy'], 'BOOLEAN'), 'PowerDeterminePlatformRoleEx': (1, ['POWER_PLATFORM_ROLE_VERSION'], ['Version'], 'POWER_PLATFORM_ROLE'), 'PowerRegisterSuspendResumeNotification': (3, ['POWER_NOTIFICATION_FLAGS', 'HANDLE', 'PHPOWERNOTIFY'], ['Flags', 'Recipient', 'RegistrationHandle'], '[ERROR_CODE]'), 'PowerUnregisterSuspendResumeNotification': (1, ['HPOWERNOTIFY'], ['RegistrationHandle'], '[ERROR_CODE]')}

dict5_mprapi = {'MprAdminPortEnum': (8, ['RAS_SERVER_HANDLE', 'DWORD', 'HANDLE', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hRasServer', 'dwLevel', 'hConnection', 'lplpbBuffer', 'dwPrefMaxLen', 'lpdwEntriesRead', 'lpdwTotalEntries', 'lpdwResumeHandle'], '[ERROR_CODE]'), 'MprAdminConnectionGetInfo': (4, ['RAS_SERVER_HANDLE', 'DWORD', 'HANDLE', 'LPBYTE*'], ['hRasServer', 'dwLevel', 'hConnection', 'lplpbBuffer'], '[ERROR_CODE]'), 'MprAdminPortGetInfo': (4, ['RAS_SERVER_HANDLE', 'DWORD', 'HANDLE', 'LPBYTE*'], ['hRasServer', 'dwLevel', 'hPort', 'lplpbBuffer'], '[ERROR_CODE]'), 'MprAdminConnectionClearStats': (2, ['RAS_SERVER_HANDLE', 'HANDLE'], ['hRasServer', 'hConnection'], '[ERROR_CODE]'), 'MprAdminPortClearStats': (2, ['RAS_SERVER_HANDLE', 'HANDLE'], ['hRasServer', 'hPort'], '[ERROR_CODE]'), 'MprAdminPortReset': (2, ['RAS_SERVER_HANDLE', 'HANDLE'], ['hRasServer', 'hPort'], '[ERROR_CODE]'), 'MprAdminPortDisconnect': (2, ['RAS_SERVER_HANDLE', 'HANDLE'], ['hRasServer', 'hPort'], '[ERROR_CODE]'), 'MprAdminConnectionRemoveQuarantine': (3, ['HANDLE', 'HANDLE', 'BOOL'], ['hRasServer', 'hRasConnection', 'fIsIpAddress'], '[ERROR_CODE]'), 'MprAdminUserGetInfo': (4, ['CONST WCHAR*', 'CONST WCHAR*', 'DWORD', 'LPBYTE'], ['lpszServer', 'lpszUser', 'dwLevel', 'lpbBuffer'], '[ERROR_CODE]'), 'MprAdminUserSetInfo': (4, ['CONST WCHAR*', 'CONST WCHAR*', 'DWORD', 'CONST LPBYTE'], ['lpszServer', 'lpszUser', 'dwLevel', 'lpbBuffer'], '[ERROR_CODE]'), 'MprAdminSendUserMessage': (3, ['MPR_SERVER_HANDLE', 'HANDLE', 'LPWSTR'], ['hMprServer', 'hConnection', 'lpwszMessage'], '[ERROR_CODE]'), 'MprAdminGetPDCServer': (3, ['CONST WCHAR*', 'CONST WCHAR*', 'LPWSTR'], ['lpszDomain', 'lpszServer', 'lpszPDCServer'], '[ERROR_CODE]'), 'MprAdminIsServiceRunning': (1, ['LPWSTR'], ['lpwsServerName'], 'BOOL'), 'MprAdminServerConnect': (2, ['LPWSTR', 'MPR_SERVER_HANDLE*'], ['lpwsServerName', 'phMprServer'], '[ERROR_CODE]'), 'MprAdminServerDisconnect': (1, ['MPR_SERVER_HANDLE'], ['hMprServer'], 'VOID'), 'MprAdminServerGetCredentials': (3, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE*'], ['hMprServer', 'dwLevel', 'lplpbBuffer'], '[ERROR_CODE]'), 'MprAdminServerSetCredentials': (3, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE'], ['hMprServer', 'dwLevel', 'lpbBuffer'], '[ERROR_CODE]'), 'MprAdminBufferFree': (1, ['LPVOID'], ['pBuffer'], '[ERROR_CODE]'), 'MprAdminGetErrorString': (2, ['DWORD', 'LPWSTR*'], ['dwError', 'lpwsErrorString'], '[ERROR_CODE]'), 'MprAdminServerGetInfo': (3, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE*'], ['hMprServer', 'dwLevel', 'lplpbBuffer'], '[ERROR_CODE]'), 'MprAdminServerSetInfo': (3, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE'], ['hMprServer', 'dwLevel', 'lpbBuffer'], '[ERROR_CODE]'), 'MprAdminEstablishDomainRasServer': (3, ['PWCHAR', 'PWCHAR', 'BOOL'], ['pszDomain', 'pszMachine', 'bEnable'], '[ERROR_CODE]'), 'MprAdminIsDomainRasServer': (3, ['PWCHAR', 'PWCHAR', 'PBOOL'], ['pszDomain', 'pszMachine', 'pbIsRasServer'], '[ERROR_CODE]'), 'MprAdminTransportCreate': (8, ['MPR_SERVER_HANDLE', 'DWORD', 'LPWSTR', 'LPBYTE', 'DWORD', 'LPBYTE', 'DWORD', 'LPWSTR'], ['hMprServer', 'dwTransportId', 'lpwsTransportName', 'pGlobalInfo', 'dwGlobalInfoSize', 'pClientInterfaceInfo', 'dwClientInterfaceInfoSize', 'lpwsDLLPath'], '[ERROR_CODE]'), 'MprAdminTransportSetInfo': (6, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE', 'DWORD', 'LPBYTE', 'DWORD'], ['hMprServer', 'dwTransportId', 'pGlobalInfo', 'dwGlobalInfoSize', 'pClientInterfaceInfo', 'dwClientInterfaceInfoSize'], '[ERROR_CODE]'), 'MprAdminTransportGetInfo': (6, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE*', 'LPDWORD', 'LPBYTE*', 'LPDWORD'], ['hMprServer', 'dwTransportId', 'ppGlobalInfo', 'lpdwGlobalInfoSize', 'ppClientInterfaceInfo', 'lpdwClientInterfaceInfoSize'], '[ERROR_CODE]'), 'MprAdminDeviceEnum': (4, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE*', 'LPDWORD'], ['hMprServer', 'dwLevel', 'lplpbBuffer', 'lpdwTotalEntries'], '[ERROR_CODE]'), 'MprAdminInterfaceGetHandle': (4, ['MPR_SERVER_HANDLE', 'LPWSTR', 'HANDLE*', 'BOOL'], ['hMprServer', 'lpwsInterfaceName', 'phInterface', 'fIncludeClientInterfaces'], '[ERROR_CODE]'), 'MprAdminInterfaceCreate': (4, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE', 'HANDLE*'], ['hMprServer', 'dwLevel', 'lpbBuffer', 'phInterface'], '[ERROR_CODE]'), 'MprAdminInterfaceGetInfo': (4, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'LPBYTE*'], ['hMprServer', 'hInterface', 'dwLevel', 'lplpbBuffer'], '[ERROR_CODE]'), 'MprAdminInterfaceSetInfo': (4, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'LPBYTE'], ['hMprServer', 'hInterface', 'dwLevel', 'lpbBuffer'], '[ERROR_CODE]'), 'MprAdminInterfaceDelete': (2, ['MPR_SERVER_HANDLE', 'HANDLE'], ['hMprServer', 'hInterface'], '[ERROR_CODE]'), 'MprAdminInterfaceDeviceGetInfo': (5, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'DWORD', 'LPBYTE*'], ['hMprServer', 'hInterface', 'dwIndex', 'dwLevel', 'lplpBuffer'], '[ERROR_CODE]'), 'MprAdminInterfaceDeviceSetInfo': (5, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'DWORD', 'LPBYTE'], ['hMprServer', 'hInterface', 'dwIndex', 'dwLevel', 'lplpBuffer'], '[ERROR_CODE]'), 'MprAdminInterfaceTransportRemove': (3, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD'], ['hMprServer', 'hInterface', 'dwTransportId'], '[ERROR_CODE]'), 'MprAdminInterfaceTransportAdd': (5, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'LPBYTE', 'DWORD'], ['hMprServer', 'hInterface', 'dwTransportId', 'pInterfaceInfo', 'dwInterfaceInfoSize'], '[ERROR_CODE]'), 'MprAdminInterfaceTransportGetInfo': (5, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'LPBYTE*', 'LPDWORD'], ['hMprServer', 'hInterface', 'dwTransportId', 'ppInterfaceInfo', 'lpdwpInterfaceInfoSize'], '[ERROR_CODE]'), 'MprAdminInterfaceTransportSetInfo': (5, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'LPBYTE', 'DWORD'], ['hMprServer', 'hInterface', 'dwTransportId', 'pInterfaceInfo', 'dwInterfaceInfoSize'], '[ERROR_CODE]'), 'MprAdminInterfaceEnum': (7, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hMprServer', 'dwLevel', 'lplpbBuffer', 'dwPrefMaxLen', 'lpdwEntriesRead', 'lpdwTotalEntries', 'lpdwResumeHandle'], '[ERROR_CODE]'), 'MprSetupIpInIpInterfaceFriendlyNameEnum': (3, ['PWCHAR', 'LPBYTE*', 'LPDWORD'], ['pwszMachineName', 'lplpBuffer', 'lpdwEntriesRead'], '[ERROR_CODE]'), 'MprSetupIpInIpInterfaceFriendlyNameFree': (1, ['LPVOID'], ['lpBuffer'], '[ERROR_CODE]'), 'MprSetupIpInIpInterfaceFriendlyNameCreate': (2, ['PWCHAR', 'PMPR_IPINIP_INTERFACE_0'], ['pwszMachineName', 'pNameInformation'], '[ERROR_CODE]'), 'MprSetupIpInIpInterfaceFriendlyNameDelete': (2, ['PWCHAR', 'GUID*'], ['pwszMachineName', 'pGuid'], '[ERROR_CODE]'), 'MprAdminInterfaceSetCredentials': (5, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'LPWSTR', 'LPWSTR'], ['lpwsServer', 'lpwsInterfaceName', 'lpwsUserName', 'lpwsDomainName', 'lpwsPassword'], '[ERROR_CODE]'), 'MprAdminInterfaceGetCredentials': (5, ['LPWSTR', 'LPWSTR', 'LPWSTR', 'LPWSTR', 'LPWSTR'], ['lpwsServer', 'lpwsInterfaceName', 'lpwsUserName', 'lpwsPassword', 'lpwsDomainName'], '[ERROR_CODE]'), 'MprAdminInterfaceSetCredentialsEx': (4, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'LPBYTE'], ['hMprServer', 'hInterface', 'dwLevel', 'lpbBuffer'], '[ERROR_CODE]'), 'MprAdminInterfaceGetCredentialsEx': (4, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'LPBYTE*'], ['hMprServer', 'hInterface', 'dwLevel', 'lplpbBuffer'], '[ERROR_CODE]'), 'MprAdminInterfaceConnect': (4, ['MPR_SERVER_HANDLE', 'HANDLE', 'HANDLE', 'BOOL'], ['hMprServer', 'hInterface', 'hEvent', 'fSynchronous'], '[ERROR_CODE]'), 'MprAdminInterfaceDisconnect': (2, ['MPR_SERVER_HANDLE', 'HANDLE'], ['hMprServer', 'hInterface'], '[ERROR_CODE]'), 'MprAdminInterfaceUpdateRoutes': (4, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'HANDLE'], ['hMprServer', 'hInterface', 'dwProtocolId', 'hEvent'], '[ERROR_CODE]'), 'MprAdminInterfaceQueryUpdateResult': (4, ['MPR_SERVER_HANDLE', 'HANDLE', 'DWORD', 'LPDWORD'], ['hMprServer', 'hInterface', 'dwProtocolId', 'lpdwUpdateResult'], '[ERROR_CODE]'), 'MprAdminInterfaceUpdatePhonebookInfo': (2, ['MPR_SERVER_HANDLE', 'HANDLE'], ['hMprServer', 'hInterface'], '[ERROR_CODE]'), 'MprAdminRegisterConnectionNotification': (2, ['MPR_SERVER_HANDLE', 'HANDLE'], ['hMprServer', 'hEventNotification'], '[ERROR_CODE]'), 'MprAdminDeregisterConnectionNotification': (2, ['MPR_SERVER_HANDLE', 'HANDLE'], ['hMprServer', 'hEventNotification'], '[ERROR_CODE]'), 'MprAdminMIBServerConnect': (2, ['LPWSTR', 'MIB_SERVER_HANDLE*'], ['lpwsServerName', 'phMibServer'], '[ERROR_CODE]'), 'MprAdminMIBServerDisconnect': (1, ['MIB_SERVER_HANDLE'], ['hMibServer'], 'VOID'), 'MprAdminMIBEntryCreate': (5, ['MIB_SERVER_HANDLE', 'DWORD', 'DWORD', 'LPVOID', 'DWORD'], ['hMibServer', 'dwPid', 'dwRoutingPid', 'lpEntry', 'dwEntrySize'], '[ERROR_CODE]'), 'MprAdminMIBEntryDelete': (5, ['MIB_SERVER_HANDLE', 'DWORD', 'DWORD', 'LPVOID', 'DWORD'], ['hMibServer', 'dwProtocolId', 'dwRoutingPid', 'lpEntry', 'dwEntrySize'], '[ERROR_CODE]'), 'MprAdminMIBEntrySet': (5, ['MIB_SERVER_HANDLE', 'DWORD', 'DWORD', 'LPVOID', 'DWORD'], ['hMibServer', 'dwProtocolId', 'dwRoutingPid', 'lpEntry', 'dwEntrySize'], '[ERROR_CODE]'), 'MprAdminMIBEntryGet': (7, ['MIB_SERVER_HANDLE', 'DWORD', 'DWORD', 'LPVOID', 'DWORD', 'LPVOID*', 'LPDWORD'], ['hMibServer', 'dwProtocolId', 'dwRoutingPid', 'lpInEntry', 'dwInEntrySize', 'lplpOutEntry', 'lpOutEntrySize'], '[ERROR_CODE]'), 'MprAdminMIBEntryGetFirst': (7, ['MIB_SERVER_HANDLE', 'DWORD', 'DWORD', 'LPVOID', 'DWORD', 'LPVOID*', 'LPDWORD'], ['hMibServer', 'dwProtocolId', 'dwRoutingPid', 'lpInEntry', 'dwInEntrySize', 'lplpOutEntry', 'lpOutEntrySize'], '[ERROR_CODE]'), 'MprAdminMIBEntryGetNext': (7, ['MIB_SERVER_HANDLE', 'DWORD', 'DWORD', 'LPVOID', 'DWORD', 'LPVOID*', 'LPDWORD'], ['hMibServer', 'dwProtocolId', 'dwRoutingPid', 'lpInEntry', 'dwInEntrySize', 'lplpOutEntry', 'lpOutEntrySize'], '[ERROR_CODE]'), 'MprAdminMIBGetTrapInfo': (7, ['MIB_SERVER_HANDLE', 'DWORD', 'DWORD', 'LPVOID', 'DWORD', 'LPVOID*', 'LPDWORD'], ['hMibServer', 'dwProtocolId', 'dwRoutingPid', 'lpInData', 'dwInDataSize', 'lplpOutData', 'lpOutDataSize'], '[ERROR_CODE]'), 'MprAdminMIBSetTrapInfo': (7, ['DWORD', 'DWORD', 'HANDLE', 'LPVOID', 'DWORD', 'LPVOID*', 'LPDWORD'], ['dwProtocolId', 'dwRoutingPid', 'hEvent', 'lpInData', 'dwInDataSize', 'lplpOutData', 'lpOutDataSize'], '[ERROR_CODE]'), 'MprAdminMIBBufferFree': (1, ['LPVOID'], ['pBuffer'], '[ERROR_CODE]'), 'MprConfigServerInstall': (2, ['DWORD', 'PVOID'], ['dwLevel', 'pBuffer'], '[ERROR_CODE]'), 'MprConfigServerConnect': (2, ['LPWSTR', 'HANDLE*'], ['lpwsServerName', 'phMprConfig'], '[ERROR_CODE]'), 'MprConfigServerDisconnect': (1, ['HANDLE'], ['hMprConfig'], 'VOID'), 'MprConfigServerRefresh': (1, ['HANDLE'], ['hMprConfig'], '[ERROR_CODE]'), 'MprConfigBufferFree': (1, ['LPVOID'], ['pBuffer'], '[ERROR_CODE]'), 'MprConfigServerGetInfo': (3, ['HANDLE', 'DWORD', 'LPBYTE*'], ['hMprConfig', 'dwLevel', 'lplpbBuffer'], '[ERROR_CODE]'), 'MprConfigServerSetInfo': (3, ['MPR_SERVER_HANDLE', 'DWORD', 'LPBYTE'], ['hMprServer', 'dwLevel', 'lpbBuffer'], '[ERROR_CODE]'), 'MprConfigServerBackup': (2, ['HANDLE', 'LPWSTR'], ['hMprConfig', 'lpwsPath'], '[ERROR_CODE]'), 'MprConfigServerRestore': (2, ['HANDLE', 'LPWSTR'], ['hMprConfig', 'lpwsPath'], '[ERROR_CODE]'), 'MprConfigTransportCreate': (9, ['HANDLE', 'DWORD', 'LPWSTR', 'LPBYTE', 'DWORD', 'LPBYTE', 'DWORD', 'LPWSTR', 'HANDLE*'], ['hMprConfig', 'dwTransportId', 'lpwsTransportName', 'pGlobalInfo', 'dwGlobalInfoSize', 'pClientInterfaceInfo', 'dwClientInterfaceInfoSize', 'lpwsDLLPath', 'phRouterTransport'], '[ERROR_CODE]'), 'MprConfigTransportDelete': (2, ['HANDLE', 'HANDLE'], ['hMprConfig', 'hRouterTransport'], '[ERROR_CODE]'), 'MprConfigTransportGetHandle': (3, ['HANDLE', 'DWORD', 'HANDLE*'], ['hMprConfig', 'dwTransportId', 'phRouterTransport'], '[ERROR_CODE]'), 'MprConfigTransportSetInfo': (7, ['HANDLE', 'HANDLE', 'LPBYTE', 'DWORD', 'LPBYTE', 'DWORD', 'LPWSTR'], ['hMprConfig', 'hRouterTransport', 'pGlobalInfo', 'dwGlobalInfoSize', 'pClientInterfaceInfo', 'dwClientInterfaceInfoSize', 'lpwsDLLPath'], '[ERROR_CODE]'), 'MprConfigTransportGetInfo': (7, ['HANDLE', 'HANDLE', 'LPBYTE*', 'LPDWORD', 'LPBYTE*', 'LPDWORD', 'LPWSTR*'], ['hMprConfig', 'hRouterTransport', 'ppGlobalInfo', 'lpdwGlobalInfoSize', 'ppClientInterfaceInfo', 'lpdwClientInterfaceInfoSize', 'lplpwsDLLPath'], '[ERROR_CODE]'), 'MprConfigTransportEnum': (7, ['HANDLE', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hMprConfig', 'dwLevel', 'lplpBuffer', 'dwPrefMaxLen', 'lpdwEntriesRead', 'lpdwTotalEntries', 'lpdwResumeHandle'], '[ERROR_CODE]'), 'MprConfigInterfaceCreate': (4, ['HANDLE', 'DWORD', 'LPBYTE', 'HANDLE*'], ['hMprConfig', 'dwLevel', 'lpbBuffer', 'phRouterInterface'], '[ERROR_CODE]'), 'MprConfigInterfaceDelete': (2, ['HANDLE', 'HANDLE'], ['hMprConfig', 'hRouterInterface'], '[ERROR_CODE]'), 'MprConfigInterfaceGetHandle': (3, ['HANDLE', 'LPWSTR', 'HANDLE*'], ['hMprConfig', 'lpwsInterfaceName', 'phRouterInterface'], '[ERROR_CODE]'), 'MprConfigInterfaceGetInfo': (5, ['HANDLE', 'HANDLE', 'DWORD', 'LPBYTE*', 'LPDWORD'], ['hMprConfig', 'hRouterInterface', 'dwLevel', 'lplpBuffer', 'lpdwBufferSize'], '[ERROR_CODE]'), 'MprConfigInterfaceSetInfo': (4, ['HANDLE', 'HANDLE', 'DWORD', 'LPBYTE'], ['hMprConfig', 'hRouterInterface', 'dwLevel', 'lpbBuffer'], '[ERROR_CODE]'), 'MprConfigInterfaceEnum': (7, ['HANDLE', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hMprConfig', 'dwLevel', 'lplpBuffer', 'dwPrefMaxLen', 'lpdwEntriesRead', 'lpdwTotalEntries', 'lpdwResumeHandle'], '[ERROR_CODE]'), 'MprConfigInterfaceTransportAdd': (7, ['HANDLE', 'HANDLE', 'DWORD', 'LPWSTR', 'LPBYTE', 'DWORD', 'HANDLE*'], ['hMprConfig', 'hRouterInterface', 'dwTransportId', 'lpwsTransportName', 'pInterfaceInfo', 'dwInterfaceInfoSize', 'phRouterIfTransport'], '[ERROR_CODE]'), 'MprConfigInterfaceTransportRemove': (3, ['HANDLE', 'HANDLE', 'HANDLE'], ['hMprConfig', 'hRouterInterface', 'hRouterIfTransport'], '[ERROR_CODE]'), 'MprConfigInterfaceTransportGetHandle': (4, ['HANDLE', 'HANDLE', 'DWORD', 'HANDLE*'], ['hMprConfig', 'hRouterInterface', 'dwTransportId', 'phRouterIfTransport'], '[ERROR_CODE]'), 'MprConfigInterfaceTransportGetInfo': (5, ['HANDLE', 'HANDLE', 'HANDLE', 'LPBYTE*', 'LPDWORD'], ['hMprConfig', 'hRouterInterface', 'hRouterIfTransport', 'ppInterfaceInfo', 'lpdwInterfaceInfoSize'], '[ERROR_CODE]'), 'MprConfigInterfaceTransportSetInfo': (5, ['HANDLE', 'HANDLE', 'HANDLE', 'LPBYTE', 'DWORD'], ['hMprConfig', 'hRouterInterface', 'hRouterIfTransport', 'pInterfaceInfo', 'dwInterfaceInfoSize'], '[ERROR_CODE]'), 'MprConfigInterfaceTransportEnum': (8, ['HANDLE', 'HANDLE', 'DWORD', 'LPBYTE*', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPDWORD'], ['hMprConfig', 'hRouterInterface', 'dwLevel', 'lplpBuffer', 'dwPrefMaxLen', 'lpdwEntriesRead', 'lpdwTotalEntries', 'lpdwResumeHandle'], '[ERROR_CODE]'), 'MprConfigGetFriendlyName': (4, ['HANDLE', 'PWCHAR', 'PWCHAR', 'DWORD'], ['hMprConfig', 'pszGuidName', 'pszBuffer', 'dwBufferSize'], '[ERROR_CODE]'), 'MprConfigGetGuidName': (4, ['HANDLE', 'PWCHAR', 'PWCHAR', 'DWORD'], ['hMprConfig', 'pszFriendlyName', 'pszBuffer', 'dwBufferSize'], '[ERROR_CODE]'), 'MprConfigFilterGetInfo': (3, ['HANDLE', 'DWORD', 'LPBYTE'], ['hMprConfig', 'dwLevel', 'lpBuffer'], '[ERROR_CODE]'), 'MprConfigFilterSetInfo': (3, ['HANDLE', 'DWORD', 'LPBYTE'], ['hMprConfig', 'dwLevel', 'lpBuffer'], '[ERROR_CODE]'), 'MprInfoCreate': (2, ['DWORD', 'LPVOID*'], ['dwVersion', 'lplpNewHeader'], '[ERROR_CODE]'), 'MprInfoDelete': (1, ['LPVOID'], ['lpHeader'], '[ERROR_CODE]'), 'MprInfoRemoveAll': (2, ['LPVOID', 'LPVOID*'], ['lpHeader', 'lplpNewHeader'], '[ERROR_CODE]'), 'MprInfoDuplicate': (2, ['LPVOID', 'LPVOID*'], ['lpHeader', 'lplpNewHeader'], '[ERROR_CODE]'), 'MprInfoBlockAdd': (6, ['LPVOID', 'DWORD', 'DWORD', 'DWORD', 'LPBYTE', 'LPVOID*'], ['lpHeader', 'dwInfoType', 'dwItemSize', 'dwItemCount', 'lpItemData', 'lplpNewHeader'], '[ERROR_CODE]'), 'MprInfoBlockRemove': (3, ['LPVOID', 'DWORD', 'LPVOID*'], ['lpHeader', 'dwInfoType', 'lplpNewHeader'], '[ERROR_CODE]'), 'MprInfoBlockSet': (6, ['LPVOID', 'DWORD', 'DWORD', 'DWORD', 'LPBYTE', 'LPVOID*'], ['lpHeader', 'dwInfoType', 'dwItemSize', 'dwItemCount', 'lpItemData', 'lplpNewHeader'], '[ERROR_CODE]'), 'MprInfoBlockFind': (5, ['LPVOID', 'DWORD', 'LPDWORD', 'LPDWORD', 'LPBYTE*'], ['lpHeader', 'dwInfoType', 'lpdwItemSize', 'lpdwItemCount', 'lplpItemData'], '[ERROR_CODE]'), 'MprInfoBlockQuerySize': (1, ['LPVOID'], ['lpHeader'], 'DWORD')}

dict5_winbio = {'WinBioAcquireFocus': (0, [], [], 'HRESULT'), 'WinBioAsyncEnumBiometricUnits': (2, ['WINBIO_FRAMEWORK_HANDLE', 'WINBIO_BIOMETRIC_TYPE'], ['FrameworkHandle', 'Factor'], 'HRESULT'), 'WinBioAsyncEnumDatabases': (2, ['WINBIO_FRAMEWORK_HANDLE', 'WINBIO_BIOMETRIC_TYPE'], ['FrameworkHandle', 'Factor'], 'HRESULT'), 'WinBioAsyncEnumServiceProviders': (2, ['WINBIO_FRAMEWORK_HANDLE', 'WINBIO_BIOMETRIC_TYPE'], ['FrameworkHandle', 'Factor'], 'HRESULT'), 'WinBioAsyncMonitorFrameworkChanges': (2, ['WINBIO_FRAMEWORK_HANDLE', 'WINBIO_FRAMEWORK_CHANGE_TYPE'], ['FrameworkHandle', 'ChangeTypes'], 'HRESULT'), 'WinBioAsyncOpenFramework': (7, ['WINBIO_ASYNC_NOTIFICATION_METHOD', 'HWND', 'UINT', 'PWINBIO_ASYNC_COMPLETION_CALLBACK', 'PVOID', 'BOOL', 'WINBIO_FRAMEWORK_HANDLE*'], ['NotificationMethod', 'TargetWindow', 'MessageCode', 'CallbackRoutine', 'UserData', 'AsynchronousOpen', 'FrameworkHandle'], 'HRESULT'), 'WinBioAsyncOpenSession': (13, ['WINBIO_BIOMETRIC_TYPE', 'WINBIO_POOL_TYPE', 'WINBIO_SESSION_FLAGS', 'WINBIO_UNIT_ID*', 'SIZE_T', 'GUID*', 'WINBIO_ASYNC_NOTIFICATION_METHOD', 'HWND', 'UINT', 'PWINBIO_ASYNC_COMPLETION_CALLBACK', 'PVOID', 'BOOL', 'WINBIO_SESSION_HANDLE*'], ['Factor', 'PoolType', 'Flags', 'UnitArray', 'UnitCount', 'DatabaseId', 'NotificationMethod', 'TargetWindow', 'MessageCode', 'CallbackRoutine', 'UserData', 'AsynchronousOpen', 'SessionHandle'], 'HRESULT'), 'WinBioCancel': (1, ['WINBIO_SESSION_HANDLE'], ['SessionHandle'], 'HRESULT'), 'WinBioCaptureSample': (7, ['WINBIO_SESSION_HANDLE', 'WINBIO_BIR_PURPOSE', 'WINBIO_BIR_DATA_FLAGS', 'WINBIO_UNIT_ID*', 'PWINBIO_BIR*', 'SIZE_T*', 'WINBIO_REJECT_DETAIL*'], ['SessionHandle', 'Purpose', 'Flags', 'UnitId', 'Sample', 'SampleSize', 'RejectDetail'], 'HRESULT'), 'WinBioCaptureSampleWithCallback': (5, ['WINBIO_SESSION_HANDLE', 'WINBIO_BIR_PURPOSE', 'WINBIO_BIR_DATA_FLAGS', 'PWINBIO_CAPTURE_CALLBACK', 'PVOID'], ['SessionHandle', 'Purpose', 'Flags', 'CaptureCallback', 'CaptureCallbackContext'], 'HRESULT'), 'WinBioCloseFramework': (1, ['WINBIO_FRAMEWORK_HANDLE'], ['FrameworkHandle'], 'HRESULT'), 'WinBioCloseSession': (1, ['WINBIO_SESSION_HANDLE'], ['SessionHandle'], 'HRESULT'), 'WinBioControlUnit': (10, ['WINBIO_SESSION_HANDLE', 'WINBIO_UNIT_ID', 'WINBIO_COMPONENT', 'ULONG', 'PUCHAR', 'SIZE_T', 'PUCHAR', 'SIZE_T', 'SIZE_T*', 'ULONG*'], ['SessionHandle', 'UnitId', 'Component', 'ControlCode', 'SendBuffer', 'SendBufferSize', 'ReceiveBuffer', 'ReceiveBufferSize', 'ReceiveDataSize', 'OperationStatus'], 'HRESULT'), 'WinBioControlUnitPrivileged': (10, ['WINBIO_SESSION_HANDLE', 'WINBIO_UNIT_ID', 'WINBIO_COMPONENT', 'ULONG', 'PUCHAR', 'SIZE_T', 'PUCHAR', 'SIZE_T', 'SIZE_T*', 'ULONG*'], ['SessionHandle', 'UnitId', 'Component', 'ControlCode', 'SendBuffer', 'SendBufferSize', 'ReceiveBuffer', 'ReceiveBufferSize', 'ReceiveDataSize', 'OperationStatus'], 'HRESULT'), 'WinBioDeleteTemplate': (4, ['WINBIO_SESSION_HANDLE', 'WINBIO_UNIT_ID', 'WINBIO_IDENTITY*', 'WINBIO_BIOMETRIC_SUBTYPE'], ['SessionHandle', 'UnitId', 'Identity', 'SubFactor'], 'HRESULT'), 'WinBioEnrollBegin': (3, ['WINBIO_SESSION_HANDLE', 'WINBIO_BIOMETRIC_SUBTYPE', 'WINBIO_UNIT_ID'], ['SessionHandle', 'SubFactor', 'UnitId'], 'HRESULT'), 'WinBioEnrollCapture': (2, ['WINBIO_SESSION_HANDLE', 'WINBIO_REJECT_DETAIL*'], ['SessionHandle', 'RejectDetail'], 'HRESULT'), 'WinBioEnrollCaptureWithCallback': (3, ['WINBIO_SESSION_HANDLE', 'PWINBIO_ENROLL_CAPTURE_CALLBACK', 'PVOID'], ['SessionHandle', 'EnrollCallback', 'EnrollCallbackContext'], 'HRESULT'), 'WinBioEnrollCommit': (3, ['WINBIO_SESSION_HANDLE', 'WINBIO_IDENTITY*', 'BOOLEAN*'], ['SessionHandle', 'Identity', 'IsNewTemplate'], 'HRESULT'), 'WinBioEnrollDiscard': (1, ['WINBIO_SESSION_HANDLE'], ['SessionHandle'], 'HRESULT'), 'WinBioEnumBiometricUnits': (3, ['WINBIO_BIOMETRIC_TYPE', 'WINBIO_UNIT_SCHEMA**', 'SIZE_T*'], ['Factor', 'UnitSchemaArray', 'UnitCount'], 'HRESULT'), 'WinBioEnumDatabases': (3, ['WINBIO_BIOMETRIC_TYPE', 'WINBIO_STORAGE_SCHEMA**', 'SIZE_T*'], ['Factor', 'StorageSchemaArray', 'StorageCount'], 'HRESULT'), 'WinBioEnumEnrollments': (5, ['WINBIO_SESSION_HANDLE', 'WINBIO_UNIT_ID', 'WINBIO_IDENTITY*', 'WINBIO_BIOMETRIC_SUBTYPE**', 'SIZE_T*'], ['SessionHandle', 'UnitId', 'Identity', 'SubFactorArray', 'SubFactorCount'], 'HRESULT'), 'WinBioEnumServiceProviders': (3, ['WINBIO_BIOMETRIC_TYPE', 'WINBIO_BSP_SCHEMA**', 'SIZE_T*'], ['Factor', 'BspSchemaArray', 'BspCount'], 'HRESULT'), 'WinBioFree': (1, ['PVOID'], ['Address'], 'HRESULT'), 'WinBioGetCredentialState': (3, ['WINBIO_IDENTITY', 'WINBIO_CREDENTIAL_TYPE', 'WINBIO_CREDENTIAL_STATE*'], ['Identity', 'Type', 'CredentialState'], 'HRESULT'), 'WinBioGetDomainLogonSetting': (2, ['BOOLEAN*', 'PWINBIO_SETTING_SOURCE_TYPE'], ['Value', 'Source'], 'HRESULT'), 'WinBioGetEnabledSetting': (2, ['BOOLEAN*', 'PWINBIO_SETTING_SOURCE_TYPE'], ['Value', 'Source'], 'HRESULT'), 'WinBioGetLogonSetting': (2, ['BOOLEAN*', 'PWINBIO_SETTING_SOURCE_TYPE'], ['Value', 'Source'], 'HRESULT'), 'WinBioGetProperty': (8, ['WINBIO_SESSION_HANDLE', 'WINBIO_PROPERTY_TYPE', 'WINBIO_PROPERTY_ID', 'WINBIO_UNIT_ID', 'WINBIO_IDENTITY*', 'WINBIO_BIOMETRIC_SUBTYPE', 'PVOID*', 'SIZE_T*'], ['SessionHandle', 'PropertyType', 'PropertyId', 'UnitId', 'Identity', 'SubFactor', 'PropertyBuffer', 'PropertyBufferSize'], 'HRESULT'), 'WinBioIdentify': (5, ['WINBIO_SESSION_HANDLE', 'WINBIO_UNIT_ID*', 'WINBIO_IDENTITY*', 'WINBIO_BIOMETRIC_SUBTYPE*', 'WINBIO_REJECT_DETAIL*'], ['SessionHandle', 'UnitId', 'Identity', 'SubFactor', 'RejectDetail'], 'HRESULT'), 'WinBioIdentifyWithCallback': (3, ['WINBIO_SESSION_HANDLE', 'PWINBIO_IDENTIFY_CALLBACK', 'PVOID'], ['SessionHandle', 'IdentifyCallback', 'IdentifyCallbackContext'], 'HRESULT'), 'WinBioLocateSensor': (2, ['WINBIO_SESSION_HANDLE', 'WINBIO_UNIT_ID*'], ['SessionHandle', 'UnitId'], 'HRESULT'), 'WinBioLocateSensorWithCallback': (3, ['WINBIO_SESSION_HANDLE', 'PWINBIO_LOCATE_SENSOR_CALLBACK', 'PVOID'], ['SessionHandle', 'LocateCallback', 'LocateCallbackContext'], 'HRESULT'), 'WinBioLockUnit': (2, ['WINBIO_SESSION_HANDLE', 'WINBIO_UNIT_ID'], ['SessionHandle', 'UnitId'], 'HRESULT'), 'WinBioLogonIdentifiedUser': (1, ['WINBIO_SESSION_HANDLE'], ['SessionHandle'], 'HRESULT'), 'WinBioOpenSession': (7, ['WINBIO_BIOMETRIC_TYPE', 'WINBIO_POOL_TYPE', 'WINBIO_SESSION_FLAGS', 'WINBIO_UNIT_ID*', 'SIZE_T', 'GUID*', 'WINBIO_SESSION_HANDLE*'], ['Factor', 'PoolType', 'Flags', 'UnitArray', 'UnitCount', 'DatabaseId', 'SessionHandle'], 'HRESULT'), 'WinBioRegisterEventMonitor': (4, ['WINBIO_SESSION_HANDLE', 'WINBIO_EVENT_TYPE', 'PWINBIO_EVENT_CALLBACK', 'PVOID'], ['SessionHandle', 'EventMask', 'EventCallback', 'EventCallbackContext'], 'HRESULT'), 'WinBioReleaseFocus': (0, [], [], 'HRESULT'), 'WinBioRemoveAllCredentials': (0, [], [], 'HRESULT'), 'WinBioRemoveAllDomainCredentials': (0, [], [], 'HRESULT'), 'WinBioRemoveCredential': (2, ['WINBIO_IDENTITY', 'WINBIO_CREDENTIAL_TYPE'], ['Identity', 'Type'], 'HRESULT'), 'WinBioSetCredential': (4, ['WINBIO_CREDENTIAL_TYPE', 'PUCHAR', 'SIZE_T', 'WINBIO_CREDENTIAL_FORMAT'], ['Type', 'Credential', 'CredentialSize', 'Format'], 'HRESULT'), 'WinBioUnlockUnit': (2, ['WINBIO_SESSION_HANDLE', 'WINBIO_UNIT_ID'], ['SessionHandle', 'UnitId'], 'HRESULT'), 'WinBioUnregisterEventMonitor': (1, ['WINBIO_SESSION_HANDLE'], ['SessionHandle'], 'HRESULT'), 'WinBioVerify': (6, ['WINBIO_SESSION_HANDLE', 'WINBIO_IDENTITY*', 'WINBIO_BIOMETRIC_SUBTYPE', 'WINBIO_UNIT_ID*', 'BOOLEAN*', 'WINBIO_REJECT_DETAIL*'], ['SessionHandle', 'Identity', 'SubFactor', 'UnitId', 'Match', 'RejectDetail'], 'HRESULT'), 'WinBioVerifyWithCallback': (5, ['WINBIO_SESSION_HANDLE', 'WINBIO_IDENTITY*', 'WINBIO_BIOMETRIC_SUBTYPE', 'PWINBIO_VERIFY_CALLBACK', 'PVOID'], ['SessionHandle', 'Identity', 'SubFactor', 'VerifyCallback', 'VerifyCallbackContext'], 'HRESULT'), 'WinBioWait': (1, ['WINBIO_SESSION_HANDLE'], ['SessionHandle'], 'HRESULT')}

dict5_authz = {'AuthzAccessCheck': (9, ['AUTHZACCESSCHECKFLAGS', 'AUTHZ_CLIENT_CONTEXT_HANDLE', 'PAUTHZ_ACCESS_REQUEST', 'AUTHZ_AUDIT_EVENT_HANDLE', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR*', 'DWORD', 'PAUTHZ_ACCESS_REPLY', 'PAUTHZ_ACCESS_CHECK_RESULTS_HANDLE'], ['flags', 'AuthzClientContext', 'pRequest', 'AuditInfo', 'pSecurityDescriptor', 'OptionalSecurityDescriptorArray', 'OptionalSecurityDescriptorCount', 'pReply', 'pAuthzHandle'], 'BOOL'), 'AuthzAddSidsToContext': (6, ['AUTHZ_CLIENT_CONTEXT_HANDLE', 'PSID_AND_ATTRIBUTES', 'DWORD', 'PSID_AND_ATTRIBUTES', 'DWORD', 'PAUTHZ_CLIENT_CONTEXT_HANDLE'], ['OrigClientContext', 'Sids', 'SidCount', 'RestrictedSids', 'RestrictedSidCount', 'pNewClientContext'], 'BOOL'), 'AuthzCachedAccessCheck': (5, ['DWORD', 'AUTHZ_ACCESS_CHECK_RESULTS_HANDLE', 'PAUTHZ_ACCESS_REQUEST', 'AUTHZ_AUDIT_EVENT_HANDLE', 'PAUTHZ_ACCESS_REPLY'], ['Flags', 'AuthzHandle', 'pRequest', 'AuditInfo', 'pReply'], 'BOOL'), 'AuthzEnumerateSecurityEventSources': (4, ['DWORD', 'PAUTHZ_SOURCE_SCHEMA_REGISTRATION', 'PDWORD', 'PDWORD'], ['dwFlags', 'Buffer', 'pdwCount', 'pdwLength'], 'BOOL'), 'AuthzFreeAuditEvent': (1, ['AUTHZ_AUDIT_EVENT_HANDLE'], ['pAuditEventInfo'], 'BOOL'), 'AuthzFreeContext': (1, ['AUTHZ_CLIENT_CONTEXT_HANDLE'], ['AuthzClientContext'], 'BOOL'), 'AuthzFreeHandle': (1, ['AUTHZ_ACCESS_CHECK_RESULTS_HANDLE'], ['AuthzHandle'], 'BOOL'), 'AuthzFreeResourceManager': (1, ['AUTHZ_RESOURCE_MANAGER_HANDLE'], ['AuthzResourceManager'], 'BOOL'), 'AuthzGetInformationFromContext': (5, ['AUTHZ_CLIENT_CONTEXT_HANDLE', 'AUTHZ_CONTEXT_INFORMATION_CLASS', 'DWORD', 'PDWORD', 'PVOID'], ['hAuthzClientContext', 'InfoClass', 'BufferSize', 'pSizeRequired', 'Buffer'], 'BOOL'), 'AuthzInitializeContextFromAuthzContext': (6, ['DWORD', 'AUTHZ_CLIENT_CONTEXT_HANDLE', 'PLARGE_INTEGER', 'LUID', 'PVOID', 'PAUTHZ_CLIENT_CONTEXT_HANDLE'], ['flags', 'AuthzHandle', 'ExpirationTime', 'Identifier', 'DynamicGroupArgs', 'phNewAuthzHandle'], 'BOOL'), 'AuthzInitializeContextFromSid': (7, ['AUTHZINITCONTEXTFLAGS', 'PSID', 'AUTHZ_RESOURCE_MANAGER_HANDLE', 'PLARGE_INTEGER', 'LUID', 'PVOID', 'PAUTHZ_CLIENT_CONTEXT_HANDLE'], ['Flags', 'UserSid', 'hAuthzResourceManager', 'pExpirationTime', 'Identifier', 'DynamicGroupArgs', 'pAuthzClientContext'], 'BOOL'), 'AuthzInitializeContextFromToken': (7, ['DWORD', 'HANDLE', 'AUTHZ_RESOURCE_MANAGER_HANDLE', 'PLARGE_INTEGER', 'LUID', 'PVOID', 'PAUTHZ_CLIENT_CONTEXT_HANDLE'], ['Flags', 'TokenHandle', 'AuthzResourceManager', 'pExpirationTime', 'Identifier', 'DynamicGroupArgs', 'pAuthzClientContext'], 'BOOL'), 'AuthzInitializeObjectAccessAuditEvent': (8, ['DWORD', 'AUTHZ_AUDIT_EVENT_TYPE_HANDLE', 'PWSTR', 'PWSTR', 'PWSTR', 'PWSTR', 'PAUTHZ_AUDIT_EVENT_HANDLE', 'DWORD'], ['Flags', 'hAuditEventType', 'szOperationType', 'szObjectType', 'szObjectName', 'szAdditionalInfo', 'phAuditEvent', 'dwAdditionalParamCount'], 'BOOL'), 'AuthzInitializeObjectAccessAuditEvent2': (9, ['AUTHZ_INITOBJAUDITEVENT_FLAGS', 'AUTHZ_AUDIT_EVENT_TYPE_HANDLE', 'PWSTR', 'PWSTR', 'PWSTR', 'PWSTR', 'PWSTR', 'PAUTHZ_AUDIT_EVENT_HANDLE', 'DWORD'], ['Flags', 'hAuditEventType', 'szOperationType', 'szObjectType', 'szObjectName', 'szAdditionalInfo', 'szAdditionalInfo2', 'phAuditEvent', 'dwAdditionalParameterCount'], 'BOOL'), 'AuthzInitializeRemoteResourceManager': (2, ['PAUTHZ_RPC_INIT_INFO_CLIENT', 'PAUTHZ_RESOURCE_MANAGER_HANDLE'], ['pRpcInitInfo', 'phAuthzResourceManager'], 'BOOL'), 'AuthzInitializeResourceManager': (6, ['AUTHZINITRMFLAGS', 'PFN_AUTHZ_DYNAMIC_ACCESS_CHECK', 'PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS', 'PFN_AUTHZ_FREE_DYNAMIC_GROUPS', 'PCWSTR', 'PAUTHZ_RESOURCE_MANAGER_HANDLE'], ['flags', 'pfnAccessCheck', 'pfnComputeDynamicGroups', 'pfnFreeDynamicGroups', 'ResourceManagerName', 'pAuthzResourceManager'], 'BOOL'), 'AuthzInitializeResourceManagerEx': (3, ['DWORD', 'PVOID', 'PAUTHZ_RESOURCE_MANAGER_HANDLE'], ['Flags', 'pAuthzInitInfo', 'phAuthzResourceManager'], 'BOOL'), 'AuthzOpenObjectAudit': (8, ['DWORD', 'AUTHZ_CLIENT_CONTEXT_HANDLE', 'PAUTHZ_ACCESS_REQUEST', 'AUTHZ_AUDIT_EVENT_HANDLE', 'PSECURITY_DESCRIPTOR', 'PSECURITY_DESCRIPTOR*', 'DWORD', 'PAUTHZ_ACCESS_REPLY'], ['Flags', 'hAuthzClientContext', 'pRequest', 'hAuditEvent', 'pSecurityDescriptor', 'SecurityDescriptorArray', 'SecurityDescriptorCount', 'pReply'], 'BOOL'), 'AuthzRegisterSecurityEventSource': (3, ['DWORD', 'PCWSTR', 'PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE'], ['dwFlags', 'szEventSourceName', 'phEventProvider'], 'BOOL'), 'AuthzReportSecurityEvent': (5, ['APF_TYPE', 'AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE', 'DWORD', 'PSID', 'DWORD'], ['dwFlags', 'hEventProvider', 'dwAuditId', 'pUserSid', 'dwCount'], 'BOOL'), 'AuthzReportSecurityEventFromParams': (5, ['DWORD', 'AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE', 'DWORD', 'PSID', 'PAUDIT_PARAMS'], ['dwFlags', 'hEventProvider', 'dwAuditId', 'pUserSid', 'pParams'], 'BOOL'), 'AuthzInstallSecurityEventSource': (2, ['DWORD', 'PAUTHZ_SOURCE_SCHEMA_REGISTRATION'], ['dwFlags', 'pRegistration'], 'BOOL'), 'AuthzUninstallSecurityEventSource': (2, ['DWORD', 'PCWSTR'], ['dwFlags', 'szEventSourceName'], 'BOOL'), 'AuthzUnregisterSecurityEventSource': (2, ['DWORD', 'PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE'], ['dwFlags', 'phEventProvider'], 'BOOL'), 'AuthzModifySecurityAttributes': (3, ['AUTHZ_CLIENT_CONTEXT_HANDLE', 'PAUTHZ_SECURITY_ATTRIBUTE_OPERATION', 'PAUTHZ_SECURITY_ATTRIBUTES_INFORMATION'], ['AuthzClientContext', 'pOperations', 'pAttributes'], 'BOOL'), 'AuthzFreeCentralAccessPolicyCache': (0, [], [], 'BOOL'), 'AuthzInitializeCompoundContext': (3, ['AUTHZ_CLIENT_CONTEXT_HANDLE', 'AUTHZ_CLIENT_CONTEXT_HANDLE', 'PAUTHZ_CLIENT_CONTEXT_HANDLE'], ['UserContext', 'DeviceContext', 'phCompoundContext'], 'BOOL'), 'AuthzModifyClaims': (4, ['AUTHZ_CLIENT_CONTEXT_HANDLE', 'AUTHZ_CONTEXT_INFORMATION_CLASS', 'PAUTHZ_SECURITY_ATTRIBUTE_OPERATION', 'PAUTHZ_SECURITY_ATTRIBUTES_INFORMATION'], ['hAuthzClientContext', 'ClaimClass', 'pClaimOperations', 'pClaims'], 'BOOL'), 'AuthzModifySids': (4, ['AUTHZ_CLIENT_CONTEXT_HANDLE', 'AUTHZ_CONTEXT_INFORMATION_CLASS', 'PAUTHZ_SID_OPERATION', 'PTOKEN_GROUPS'], ['hAuthzClientContext', 'SidClass', 'pSidOperations', 'pSids'], 'BOOL'), 'AuthzRegisterCapChangeNotification': (3, ['PAUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE', 'LPTHREAD_START_ROUTINE', 'PVOID'], ['phCapChangeSubscription', 'pfnCapChangeCallback', 'pCallbackContext'], 'BOOL'), 'AuthzSetAppContainerInformation': (4, ['AUTHZ_CLIENT_CONTEXT_HANDLE', 'PSID', 'DWORD', 'PSID_AND_ATTRIBUTES'], ['hAuthzClientContext', 'pAppContainerSid', 'CapabilityCount', 'pCapabilitySids'], 'BOOL'), 'AuthzUnregisterCapChangeNotification': (1, ['AUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE'], ['hCapChangeSubscription'], 'BOOL')}

dict5_cryptnet = {'CryptGetObjectUrl': (8, ['LPCSTR', 'LPVOID', 'CRYPTGETOBJECTURLFLAGS', 'PCRYPT_URL_ARRAY', 'DWORD*', 'PCRYPT_URL_INFO', 'DWORD*', 'LPVOID'], ['pszUrlOid', 'pvPara', 'dwFlags', 'pUrlArray', 'pcbUrlArray', 'pUrlInfo', 'pcbUrlInfo', 'pvReserved'], 'BOOL'), 'CryptRetrieveObjectByUrl': (9, ['LPCTSTR', 'LPCSTR', 'CRYPTRETRIEVALFLAGS', 'DWORD', 'LPVOID*', 'HCRYPTASYNC', 'PCRYPT_CREDENTIALS', 'LPVOID', 'PCRYPT_RETRIEVE_AUX_INFO'], ['pszUrl', 'pszObjectOid', 'dwRetrievalFlags', 'dwTimeout', 'ppvObject', 'hAsyncRetrieve', 'pCredentials', 'pvVerify', 'pAuxInfo'], 'BOOL')}

dict5_psapi = {'EmptyWorkingSet': (1, ['PROCESSHANDLE'], ['hProcess'], 'BOOL'), 'EnumDeviceDrivers': (3, ['LPVOID*', 'DWORD', 'LPDWORD'], ['lpImageBase', 'cb', 'lpcbNeeded'], 'BOOL'), 'EnumPageFiles': (2, ['PENUM_PAGE_CALLBACK', 'LPVOID'], ['pCallbackRoutine', 'lpContext'], 'BOOL'), 'EnumProcesses': (3, ['DWORD*', 'DWORD', 'DWORD*'], ['pProcessIds', 'cb', 'pBytesReturned'], 'BOOL'), 'EnumProcessModules': (4, ['PROCESSHANDLE', 'HMODULE*', 'DWORD', 'LPDWORD'], ['hProcess', 'lphModule', 'cb', 'lpcbNeeded'], 'BOOL'), 'EnumProcessModulesEx': (5, ['PROCESSHANDLE', 'HMODULE*', 'DWORD', 'LPDWORD', 'DWORD'], ['hProcess', 'lphModule', 'cb', 'lpcbNeeded', 'dwFilterFlag'], 'BOOL'), 'GetDeviceDriverBaseName': (3, ['LPVOID', 'LPTSTR', 'DWORD'], ['ImageBase', 'lpBaseName', 'nSize'], 'DWORD'), 'GetDeviceDriverFileName': (3, ['LPVOID', 'LPTSTR', 'DWORD'], ['ImageBase', 'lpFilename', 'nSize'], 'DWORD'), 'GetMappedFileName': (4, ['PROCESSHANDLE', 'LPVOID', 'LPTSTR', 'DWORD'], ['hProcess', 'lpv', 'lpFilename', 'nSize'], 'DWORD'), 'GetModuleBaseName': (4, ['PROCESSHANDLE', 'HMODULE', 'LPTSTR', 'DWORD'], ['hProcess', 'hModule', 'lpBaseName', 'nSize'], 'DWORD'), 'GetModuleFileNameEx': (4, ['PROCESSHANDLE', 'HMODULE', 'LPTSTR', 'DWORD'], ['hProcess', 'hModule', 'lpFilename', 'nSize'], 'DWORD'), 'GetModuleInformation': (4, ['PROCESSHANDLE', 'HMODULE', 'LPMODULEINFO', 'DWORD'], ['hProcess', 'hModule', 'lpmodinfo', 'cb'], 'BOOL'), 'GetPerformanceInfo': (2, ['PPERFORMANCE_INFORMATION', 'DWORD'], ['pPerformanceInformation', 'cb'], 'BOOL'), 'GetProcessImageFileName': (3, ['PROCESSHANDLE', 'LPTSTR', 'DWORD'], ['hProcess', 'lpImageFileName', 'nSize'], 'DWORD'), 'GetProcessMemoryInfo': (3, ['HANDLE', 'PPROCESS_MEMORY_COUNTERS', 'DWORD'], ['Process', 'ppsmemCounters', 'cb'], 'BOOL'), 'GetWsChanges': (3, ['PROCESSHANDLE', 'PPSAPI_WS_WATCH_INFORMATION', 'DWORD'], ['hProcess', 'lpWatchInfo', 'cb'], 'BOOL'), 'GetWsChangesEx': (3, ['PROCESSHANDLE', 'PPSAPI_WS_WATCH_INFORMATION_EX', 'DWORD'], ['hProcess', 'lpWatchInfoEx', 'cb'], 'BOOL'), 'InitializeProcessForWsWatch': (1, ['PROCESSHANDLE'], ['hProcess'], 'BOOL'), 'QueryWorkingSet': (3, ['PROCESSHANDLE', 'PVOID', 'DWORD'], ['hProcess', 'pv', 'cb'], 'BOOL'), 'QueryWorkingSetEx': (3, ['PROCESSHANDLE', 'PVOID', 'DWORD'], ['hProcess', 'pv', 'cb'], 'BOOL')}

dict5_sechost = {'LookupAccountNameLocal': (6, ['LPCTSTR', 'PSID', 'LPDWORD', 'LPTSTR', 'LPDWORD', 'PSID_NAME_USE'], ['lpAccountName', 'Sid', 'cbSid', 'ReferencedDomainName', 'cchReferencedDomainName', 'peUse'], 'BOOL'), 'LookupAccountSidLocal': (6, ['PSID', 'LPTSTR', 'LPDWORD', 'LPTSTR', 'LPDWORD', 'PSID_NAME_USE'], ['lpSid', 'lpName', 'cchName', 'lpReferencedDomainName', 'cchReferencedDomainName', 'peUse'], 'BOOL'), 'LsaLookupClose': (1, ['LSA_LOOKUP_HANDLE'], ['ObjectHandle'], 'NTSTATUS'), 'LsaLookupFreeMemory': (1, ['PVOID'], ['Buffer'], 'NTSTATUS'), 'LsaLookupGetDomainInfo': (3, ['LSA_LOOKUP_HANDLE', 'LSA_LOOKUP_DOMAIN_INFO_CLASS', 'PVOID*'], ['PolicyHandle', 'DomainInfoClass', 'DomainInfo'], 'NTSTATUS'), 'LsaLookupOpenLocalPolicy': (3, ['PLSA_OBJECT_ATTRIBUTES', 'ACCESS_MASK', 'PLSA_LOOKUP_HANDLE'], ['ObjectAttributes', 'AccessMask', 'PolicyHandle'], 'NTSTATUS'), 'LsaLookupTranslateNames': (6, ['LSA_LOOKUP_HANDLE', 'ULONG', 'ULONG', 'PLSA_UNICODE_STRING', 'PLSA_REFERENCED_DOMAIN_LIST*', 'PLSA_TRANSLATED_SID2*'], ['PolicyHandle', 'Flags', 'Count', 'Names', 'ReferencedDomains', 'Sids'], 'NTSTATUS'), 'LsaLookupTranslateSids': (5, ['LSA_LOOKUP_HANDLE', 'ULONG', 'PSID*', 'PLSA_REFERENCED_DOMAIN_LIST*', 'PLSA_TRANSLATED_NAME*'], ['PolicyHandle', 'Count', 'Sids', 'ReferencedDomains', 'Names'], 'NTSTATUS')}